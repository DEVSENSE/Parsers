using System;
using System.Text;
using System.Collections.Generic;

// Copyright(c) DEVSENSE s.r.o.
// All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the License); you may not use
// this file except in compliance with the License. You may obtain a copy of the
// License at http://www.apache.org/licenses/LICENSE-2.0
//
// THIS CODE IS PROVIDED ON AN  *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS
// OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY
// IMPLIED WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
// MERCHANTABILITY OR NON-INFRINGEMENT.
//
// See the Apache Version 2.0 License for specific language governing
// permissions and limitations under the License.

using System.Linq;
using System.Runtime.InteropServices;
using Devsense.PHP.Syntax.Ast;
using Devsense.PHP.Text;
using Devsense.PHP.Errors;

using CompleteAlias = System.Tuple<Devsense.PHP.Syntax.QualifiedNameRef, Devsense.PHP.Syntax.NameRef>;
using ContextAlias = System.Tuple<Devsense.PHP.Text.Span, Devsense.PHP.Syntax.QualifiedNameRef, Devsense.PHP.Syntax.NameRef, Devsense.PHP.Syntax.AliasKind>;
using AnonymousClass = System.Tuple<Devsense.PHP.Syntax.Ast.TypeRef, System.Collections.Generic.List<Devsense.PHP.Syntax.Ast.ActualParam>, Devsense.PHP.Text.Span>;
using StringPair = System.Collections.Generic.KeyValuePair<string, string>;


namespace Devsense.PHP.Syntax
{
public enum Tokens {
/// <summary>&quot;throw (T_THROW)&quot;</summary>
T_THROW=352,
PREC_ARROW_FUNCTION=128,
/// <summary>&quot;include (T_INCLUDE)&quot;</summary>
T_INCLUDE=262,
/// <summary>&quot;include_once (T_INCLUDE_ONCE)&quot;</summary>
T_INCLUDE_ONCE=261,
/// <summary>&quot;require (T_REQUIRE)&quot;</summary>
T_REQUIRE=259,
/// <summary>&quot;require_once (T_REQUIRE_ONCE)&quot;</summary>
T_REQUIRE_ONCE=258,
/// <summary>&quot;or (T_LOGICAL_OR)&quot;</summary>
T_LOGICAL_OR=263,
/// <summary>&quot;xor (T_LOGICAL_XOR)&quot;</summary>
T_LOGICAL_XOR=264,
/// <summary>&quot;and (T_LOGICAL_AND)&quot;</summary>
T_LOGICAL_AND=265,
/// <summary>&quot;print (T_PRINT)&quot;</summary>
T_PRINT=266,
/// <summary>&quot;yield (T_YIELD)&quot;</summary>
T_YIELD=267,
/// <summary>&quot;=&gt; (T_DOUBLE_ARROW)&quot;</summary>
T_DOUBLE_ARROW=268,
/// <summary>&quot;yield from (T_YIELD_FROM)&quot;</summary>
T_YIELD_FROM=269,
/// <summary>&quot;+= (T_PLUS_EQUAL)&quot;</summary>
T_PLUS_EQUAL=270,
/// <summary>&quot;-= (T_MINUS_EQUAL)&quot;</summary>
T_MINUS_EQUAL=271,
/// <summary>&quot;*= (T_MUL_EQUAL)&quot;</summary>
T_MUL_EQUAL=279,
/// <summary>&quot;/= (T_DIV_EQUAL)&quot;</summary>
T_DIV_EQUAL=278,
/// <summary>&quot;.= (T_CONCAT_EQUAL)&quot;</summary>
T_CONCAT_EQUAL=277,
/// <summary>&quot;%= (T_MOD_EQUAL)&quot;</summary>
T_MOD_EQUAL=276,
/// <summary>&quot;&amp;= (T_AND_EQUAL)&quot;</summary>
T_AND_EQUAL=275,
/// <summary>&quot;|= (T_OR_EQUAL)&quot;</summary>
T_OR_EQUAL=274,
/// <summary>&quot;^= (T_XOR_EQUAL)&quot;</summary>
T_XOR_EQUAL=273,
/// <summary>&quot;&lt;&lt;= (T_SL_EQUAL)&quot;</summary>
T_SL_EQUAL=272,
/// <summary>&quot;&gt;&gt;= (T_SR_EQUAL)&quot;</summary>
T_SR_EQUAL=280,
/// <summary>&quot;**= (T_POW_EQUAL)&quot;</summary>
T_POW_EQUAL=281,
/// <summary> &quot;??= (T_COALESCE_EQUAL)&quot;</summary>
T_COALESCE_EQUAL=282,
/// <summary>&quot;?? (T_COALESCE)&quot;</summary>
T_COALESCE=283,
/// <summary>&quot;|| (T_BOOLEAN_OR)&quot;</summary>
T_BOOLEAN_OR=284,
/// <summary>&quot;&amp;&amp; (T_BOOLEAN_AND)&quot;</summary>
T_BOOLEAN_AND=285,
/// <summary>&quot;== (T_IS_EQUAL)&quot;</summary>
T_IS_EQUAL=289,
/// <summary>&quot;!= (T_IS_NOT_EQUAL)&quot;</summary>
T_IS_NOT_EQUAL=288,
/// <summary>&quot;=== (T_IS_IDENTICAL)&quot;</summary>
T_IS_IDENTICAL=287,
/// <summary>&quot;!== (T_IS_NOT_IDENTICAL)&quot;</summary>
T_IS_NOT_IDENTICAL=286,
/// <summary>&quot;&lt;=&gt; (T_SPACESHIP)&quot;</summary>
T_SPACESHIP=290,
/// <summary>&quot;&lt;= (T_IS_SMALLER_OR_EQUAL)&quot;</summary>
T_IS_SMALLER_OR_EQUAL=291,
/// <summary>&quot;&gt;= (T_IS_GREATER_OR_EQUAL)&quot;</summary>
T_IS_GREATER_OR_EQUAL=292,
/// <summary>&quot;&lt;&lt; (T_SL)&quot;</summary>
T_SL=293,
/// <summary>&quot;&gt;&gt; (T_SR)&quot;</summary>
T_SR=294,
/// <summary>&quot;instanceof (T_INSTANCEOF)&quot;</summary>
T_INSTANCEOF=295,
/// <summary>&quot;++ (T_INC)&quot;</summary>
T_INC=303,
/// <summary>&quot;-- (T_DEC)&quot;</summary>
T_DEC=302,
/// <summary>&quot;(int) (T_INT_CAST)&quot;</summary>
T_INT_CAST=301,
/// <summary>&quot;(double) (T_DOUBLE_CAST)&quot;</summary>
T_DOUBLE_CAST=300,
/// <summary>&quot; (T_STRING_CAST)&quot;</summary>
T_STRING_CAST=299,
/// <summary>&quot;(array) (T_ARRAY_CAST)&quot;</summary>
T_ARRAY_CAST=298,
/// <summary>&quot;(object) (T_OBJECT_CAST)&quot;</summary>
T_OBJECT_CAST=297,
/// <summary>&quot;(bool) (T_BOOL_CAST)&quot;</summary>
T_BOOL_CAST=296,
/// <summary>&quot;(unset) (T_UNSET_CAST)&quot;</summary>
T_UNSET_CAST=304,
/// <summary>&quot;** (T_POW)&quot;</summary>
T_POW=305,
/// <summary>&quot;new (T_NEW)&quot;</summary>
T_NEW=306,
/// <summary>&quot;clone (T_CLONE)&quot;</summary>
T_CLONE=307,
T_NOELSE=178,
/// <summary>&quot;elseif (T_ELSEIF)&quot;</summary>
T_ELSEIF=308,
/// <summary>&quot;else (T_ELSE)&quot;</summary>
T_ELSE=309,
/// <summary>&quot;endif (T_ENDIF)&quot;</summary>
T_ENDIF=310,
/// <summary>&quot;static (T_STATIC)&quot;</summary>
T_STATIC=353,
/// <summary>&quot;abstract (T_ABSTRACT)&quot;</summary>
T_ABSTRACT=315,
/// <summary>&quot;final (T_FINAL)&quot;</summary>
T_FINAL=314,
/// <summary>&quot;private (T_PRIVATE)&quot;</summary>
T_PRIVATE=313,
/// <summary>&quot;protected (T_PROTECTED)&quot;</summary>
T_PROTECTED=357,
/// <summary>&quot;public (T_PUBLIC)&quot;</summary>
T_PUBLIC=311,
/// <summary>&quot;integer number (T_LNUMBER)&quot;</summary>
T_LNUMBER=317,
/// <summary>&quot;floating-point number (T_DNUMBER)&quot;</summary>
T_DNUMBER=312,
/// <summary>&quot;identifier (T_STRING)&quot;</summary>
T_STRING=319,
/// <summary>&quot;variable (T_VARIABLE)&quot;</summary>
T_VARIABLE=320,
T_INLINE_HTML=321,
/// <summary>&quot;quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)&quot;</summary>
T_ENCAPSED_AND_WHITESPACE=316,
/// <summary>&quot;quoted-string (T_CONSTANT_ENCAPSED_STRING)&quot;</summary>
T_CONSTANT_ENCAPSED_STRING=323,
/// <summary>&quot;variable name (T_STRING_VARNAME)&quot;</summary>
T_STRING_VARNAME=318,
/// <summary>&quot;number (T_NUM_STRING)&quot;</summary>
T_NUM_STRING=325,
/// <summary>&#39;!&#39;</summary>
T_EXCLAM=33,
/// <summary>&#39;&quot;&#39;</summary>
T_DOUBLE_QUOTES=34,
/// <summary>&#39;$&#39;</summary>
T_DOLLAR=36,
/// <summary>&#39;%&#39;</summary>
T_PERCENT=37,
/// <summary>&#39;&amp;&#39;</summary>
T_AMP=38,
/// <summary>&#39;\&#39;&#39;</summary>
T_SINGLE_QUOTES=39,
/// <summary>&#39;(&#39;</summary>
T_LPAREN=40,
/// <summary>&#39;)&#39;</summary>
T_RPAREN=41,
/// <summary>&#39;*&#39;</summary>
T_MUL=42,
/// <summary>&#39;+&#39;</summary>
T_PLUS=43,
/// <summary>&#39;,&#39;</summary>
T_COMMA=44,
/// <summary>&#39;-&#39;</summary>
T_MINUS=45,
/// <summary>&#39;.&#39;</summary>
T_DOT=46,
/// <summary>&#39;/&#39;</summary>
T_SLASH=47,
/// <summary>&#39;:&#39;</summary>
T_COLON=58,
/// <summary>&#39;;&#39;</summary>
T_SEMI=59,
/// <summary>&#39;&lt;&#39;</summary>
T_LT=60,
/// <summary>&#39;=&#39;</summary>
T_EQ=61,
/// <summary>&#39;&gt;&#39;</summary>
T_GT=62,
/// <summary>&#39;?&#39;</summary>
T_QUESTION=63,
/// <summary>&#39;@&#39;</summary>
T_AT=64,
/// <summary>&#39;[&#39;</summary>
T_LBRACKET=91,
/// <summary>&#39;]&#39;</summary>
T_RBRACKET=93,
/// <summary>&#39;^&#39;</summary>
T_CARET=94,
/// <summary>&#39;`&#39;</summary>
T_BACKQUOTE=96,
/// <summary>&#39;{&#39;</summary>
T_LBRACE=123,
/// <summary>&#39;|&#39;</summary>
T_PIPE=124,
/// <summary>&#39;}&#39;</summary>
T_RBRACE=125,
/// <summary>&#39;~&#39;</summary>
T_TILDE=126,
/// <summary>&quot;end of file&quot;</summary>
END=0,
/// <summary>&quot;eval (T_EVAL)&quot;</summary>
T_EVAL=260,
/// <summary>&quot;exit (T_EXIT)&quot;</summary>
T_EXIT=326,
/// <summary>&quot;if (T_IF)&quot;</summary>
T_IF=322,
/// <summary>&quot;echo (T_ECHO)&quot;</summary>
T_ECHO=324,
/// <summary>&quot;do (T_DO)&quot;</summary>
T_DO=329,
/// <summary>&quot;while (T_WHILE)&quot;</summary>
T_WHILE=330,
/// <summary>&quot;endwhile (T_ENDWHILE)&quot;</summary>
T_ENDWHILE=327,
/// <summary>&quot;for (T_FOR)&quot;</summary>
T_FOR=328,
/// <summary>&quot;endfor (T_ENDFOR)&quot;</summary>
T_ENDFOR=333,
/// <summary>&quot;foreach (T_FOREACH)&quot;</summary>
T_FOREACH=334,
/// <summary>&quot;endforeach (T_ENDFOREACH)&quot;</summary>
T_ENDFOREACH=331,
/// <summary>&quot;declare (T_DECLARE)&quot;</summary>
T_DECLARE=332,
/// <summary>&quot;enddeclare (T_ENDDECLARE)&quot;</summary>
T_ENDDECLARE=337,
/// <summary>&quot;as (T_AS)&quot;</summary>
T_AS=338,
/// <summary>&quot;switch (T_SWITCH)&quot;</summary>
T_SWITCH=335,
/// <summary>&quot;endswitch (T_ENDSWITCH)&quot;</summary>
T_ENDSWITCH=336,
/// <summary>&quot;case (T_CASE)&quot;</summary>
T_CASE=341,
/// <summary>&quot;default (T_DEFAULT)&quot;</summary>
T_DEFAULT=342,
/// <summary>&quot;break (T_BREAK)&quot;</summary>
T_BREAK=339,
/// <summary>&quot;continue (T_CONTINUE)&quot;</summary>
T_CONTINUE=340,
/// <summary>&quot;goto (T_GOTO)&quot;</summary>
T_GOTO=345,
/// <summary>&quot;function (T_FUNCTION)&quot;</summary>
T_FUNCTION=346,
/// <summary> &quot;fn (T_FN)&quot;</summary>
T_FN=343,
/// <summary>&quot;const (T_CONST)&quot;</summary>
T_CONST=344,
/// <summary>&quot;return (T_RETURN)&quot;</summary>
T_RETURN=348,
/// <summary>&quot;try (T_TRY)&quot;</summary>
T_TRY=349,
/// <summary>&quot;catch (T_CATCH)&quot;</summary>
T_CATCH=347,
/// <summary>&quot;finally (T_FINALLY)&quot;</summary>
T_FINALLY=351,
/// <summary>&quot;use (T_USE)&quot;</summary>
T_USE=350,
/// <summary>&quot;insteadof (T_INSTEADOF)&quot;</summary>
T_INSTEADOF=354,
/// <summary>&quot;exit_scope (T_GLOBAL)&quot;</summary>
T_GLOBAL=355,
/// <summary>&quot;var (T_VAR)&quot;</summary>
T_VAR=356,
/// <summary>&quot;unset (T_UNSET)&quot;</summary>
T_UNSET=360,
/// <summary>&quot;isset (T_ISSET)&quot;</summary>
T_ISSET=358,
/// <summary>&quot;empty (T_EMPTY)&quot;</summary>
T_EMPTY=359,
/// <summary>&quot;__halt_compiler (T_HALT_COMPILER)&quot;</summary>
T_HALT_COMPILER=363,
/// <summary>&quot;class (T_CLASS)&quot;</summary>
T_CLASS=361,
/// <summary>&quot;trait (T_TRAIT)&quot;</summary>
T_TRAIT=362,
/// <summary>&quot;interface (T_INTERFACE)&quot;</summary>
T_INTERFACE=366,
/// <summary>&quot;extends (T_EXTENDS)&quot;</summary>
T_EXTENDS=364,
/// <summary>&quot;implements (T_IMPLEMENTS)&quot;</summary>
T_IMPLEMENTS=365,
/// <summary>&quot;-&gt; (T_OBJECT_OPERATOR)&quot;</summary>
T_OBJECT_OPERATOR=369,
/// <summary>&quot;list (T_LIST)&quot;</summary>
T_LIST=367,
/// <summary>&quot;array (T_ARRAY)&quot;</summary>
T_ARRAY=368,
/// <summary>&quot;callable (T_CALLABLE)&quot;</summary>
T_CALLABLE=372,
/// <summary>&quot;__LINE__ (T_LINE)&quot;</summary>
T_LINE=370,
/// <summary>&quot;__FILE__ (T_FILE)&quot;</summary>
T_FILE=371,
/// <summary>&quot;__DIR__ (T_DIR)&quot;</summary>
T_DIR=375,
/// <summary>&quot;__CLASS__ (T_CLASS_C)&quot;</summary>
T_CLASS_C=373,
/// <summary>&quot;__TRAIT__ (T_TRAIT_C)&quot;</summary>
T_TRAIT_C=374,
/// <summary>&quot;__METHOD__ (T_METHOD_C)&quot;</summary>
T_METHOD_C=378,
/// <summary>&quot;__FUNCTION__ (T_FUNC_C)&quot;</summary>
T_FUNC_C=376,
/// <summary>&quot;comment (T_COMMENT)&quot;</summary>
T_COMMENT=377,
/// <summary>&quot;doc comment (T_DOC_COMMENT)&quot;</summary>
T_DOC_COMMENT=381,
/// <summary>&quot;open tag (T_OPEN_TAG)&quot;</summary>
T_OPEN_TAG=379,
/// <summary>&quot;open tag with echo (T_OPEN_TAG_WITH_ECHO)&quot;</summary>
T_OPEN_TAG_WITH_ECHO=380,
/// <summary>&quot;close tag (T_CLOSE_TAG)&quot;</summary>
T_CLOSE_TAG=384,
/// <summary>&quot;whitespace (T_WHITESPACE)&quot;</summary>
T_WHITESPACE=382,
/// <summary>&quot;heredoc start (T_START_HEREDOC)&quot;</summary>
T_START_HEREDOC=383,
/// <summary>&quot;heredoc end (T_END_HEREDOC)&quot;</summary>
T_END_HEREDOC=387,
/// <summary>&quot;${ (T_DOLLAR_OPEN_CURLY_BRACES)&quot;</summary>
T_DOLLAR_OPEN_CURLY_BRACES=385,
/// <summary>&quot;{$ (T_CURLY_OPEN)&quot;</summary>
T_CURLY_OPEN=386,
/// <summary>&quot;:: (T_DOUBLE_COLON)&quot;</summary>
T_DOUBLE_COLON=390,
/// <summary>&quot;namespace (T_NAMESPACE)&quot;</summary>
T_NAMESPACE=391,
/// <summary>&quot;__NAMESPACE__ (T_NS_C)&quot;</summary>
T_NS_C=392,
/// <summary>&quot;\\ (T_NS_SEPARATOR)&quot;</summary>
T_NS_SEPARATOR=393,
/// <summary>&quot;... (T_ELLIPSIS)&quot;</summary>
T_ELLIPSIS=394,
/// <summary> type safe declaration</summary>
T_ERROR=257,
EOF=0
};

[StructLayout(LayoutKind.Explicit)]
public partial struct SemanticValueType
{
	// Integer and Offset are both used when generating code for string 
	// with 'inline' variables. Other fields are not combined.
	
	[FieldOffset(0)]		
	public bool Bool;
	[FieldOffset(0)]		
	public int Integer;
	[FieldOffset(0)]
	public double Double;
	[FieldOffset(0)]
	public long Long;
	[FieldOffset(0)]
	public QualifiedNameRef QualifiedNameReference;
	[FieldOffset(0)]
	public AliasKind Kind;
	/// <summary>Token that encapsulates the string literal.</summary>
	[FieldOffset(0)]
	public Tokens QuoteToken;

	[FieldOffset(8)]
	public object Object;

	public TypeRef TypeReference						{ get { return (TypeRef)Object; }					set { Object = value; } }
	public IList<TypeRef> TypeRefList					{ get { return (IList<TypeRef>)Object; }			set { Object = value; } }
	public LangElement Node								{ get { return (LangElement)Object; }				set { Object = value; } }
	public List<LangElement> NodeList					{ get { return (List<LangElement>)Object; }			set { Object = value; } }
	public string String								{ get { return (string)Object; }					set { Object = value; } }
	public StringPair Strings							{ get { return (StringPair)Object; }				set { Object = value; } }
	public List<string> StringList						{ get { return (List<string>)Object; }				set { Object = value; } }
	public CompleteAlias Alias							{ get { return (CompleteAlias)Object; }				set { Object = value; } }
	public List<CompleteAlias> AliasList				{ get { return (List<CompleteAlias>)Object; }		set { Object = value; } }
	public ContextAlias ContextAlias					{ get { return (ContextAlias)Object; }				set { Object = value; } }
	public List<ContextAlias> ContextAliasList			{ get { return (List<ContextAlias>)Object; }		set { Object = value; } }
	public ActualParam Param							{ get { return (ActualParam)Object; }				set { Object = value; } }
	public List<ActualParam> ParamList					{ get { return (List<ActualParam>)Object; }			set { Object = value; } }
	public FormalParam FormalParam						{ get { return (FormalParam)Object; }				set { Object = value; } }
	public List<FormalParam> FormalParamList			{ get { return (List<FormalParam>)Object; }			set { Object = value; } }
	public Item Item									{ get { return (Item)Object; }						set { Object = value; } }
	public List<Item> ItemList							{ get { return (List<Item>)Object; }				set { Object = value; } }
	internal List<IfStatement> IfItemList				{ get { return (List<IfStatement>)Object; }			set { Object = value; } }
	public ForeachVar ForeachVar						{ get { return (ForeachVar)Object; }				set { Object = value; } }
	public AnonymousClass AnonymousClass				{ get { return (AnonymousClass)Object; }			set { Object = value; } }
	public UseBase Use									{ get { return (UseBase)Object; }					set { Object = value; } }
	public List<UseBase> UseList						{ get { return (List<UseBase>)Object; }				set { Object = value; } }
}

public partial class Parser: ShiftReduceParser<SemanticValueType,Span>
{

  protected override string[] NonTerminals { get { return nonTerminals; } }
  private static string[] nonTerminals;

  protected override State[] States { get { return states; } }
  private static readonly State[] states;

  protected override Rule[] Rules { get { return rules; } }
  private static readonly Rule[] rules;


  #region Construction

  static Parser()
  {

    #region states
    states = new State[]
    {
      new State(0, -2, new int[] {-135,1,-137,3}),
      new State(1, new int[] {0,2}),
      new State(2, -1),
      new State(3, -82, new int[] {-84,4}),
      new State(4, new int[] {123,7,330,23,329,31,328,153,335,165,339,179,340,581,348,584,355,587,353,594,324,603,321,610,320,97,36,98,319,613,391,908,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,360,630,334,640,332,650,59,656,349,657,345,673,315,731,314,732,362,734,366,744,363,920,350,924,344,980,0,-3,322,-389,361,-175}, new int[] {-32,5,-33,6,-17,12,-41,611,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,615,-6,465,-34,916,-35,917,-14,678,-13,729,-36,918,-38,919}),
      new State(5, -81),
      new State(6, -88),
      new State(7, -127, new int[] {-87,8}),
      new State(8, new int[] {125,9,123,7,330,23,329,31,328,153,335,165,339,179,340,581,348,584,355,587,353,594,324,603,321,610,320,97,36,98,319,613,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,360,630,334,640,332,650,59,656,349,657,345,673,315,731,314,732,362,734,366,744,363,756,322,-389,361,-175}, new int[] {-81,10,-33,11,-17,12,-41,611,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,615,-6,465,-34,676,-35,677,-14,678,-13,729,-36,733,-38,743}),
      new State(9, -134),
      new State(10, -126),
      new State(11, -128),
      new State(12, new int[] {322,887}, new int[] {-53,13,-54,15,-128,17,-129,894}),
      new State(13, -390, new int[] {-18,14}),
      new State(14, -135),
      new State(15, -390, new int[] {-18,16}),
      new State(16, -136),
      new State(17, new int[] {308,18,309,885,123,-212,330,-212,329,-212,328,-212,335,-212,339,-212,340,-212,348,-212,355,-212,353,-212,324,-212,321,-212,320,-212,36,-212,319,-212,391,-212,393,-212,40,-212,368,-212,91,-212,323,-212,367,-212,307,-212,303,-212,302,-212,43,-212,45,-212,33,-212,126,-212,306,-212,358,-212,359,-212,262,-212,261,-212,260,-212,259,-212,258,-212,301,-212,300,-212,299,-212,298,-212,297,-212,296,-212,304,-212,326,-212,64,-212,317,-212,312,-212,370,-212,371,-212,375,-212,374,-212,378,-212,376,-212,392,-212,373,-212,34,-212,383,-212,96,-212,266,-212,267,-212,269,-212,352,-212,346,-212,343,-212,360,-212,334,-212,332,-212,59,-212,349,-212,345,-212,315,-212,314,-212,362,-212,366,-212,363,-212,350,-212,344,-212,322,-212,361,-212,0,-212,125,-212,341,-212,342,-212,336,-212,337,-212,331,-212,333,-212,327,-212,310,-212}),
      new State(18, new int[] {40,19}),
      new State(19, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,20,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(20, new int[] {41,21,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(21, new int[] {123,7,330,23,329,31,328,153,335,165,339,179,340,581,348,584,355,587,353,594,324,603,321,610,320,97,36,98,319,613,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,360,630,334,640,332,650,59,656,349,657,345,673,322,-389}, new int[] {-33,22,-17,12,-41,611,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(22, -211),
      new State(23, new int[] {40,24}),
      new State(24, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,25,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(25, new int[] {41,26,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(26, -389, new int[] {-17,27}),
      new State(27, new int[] {123,7,330,23,329,31,328,153,335,165,339,179,340,581,348,584,355,587,353,594,324,603,321,610,320,97,36,98,319,613,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,360,630,334,640,332,650,59,656,349,657,345,673,58,881,322,-389}, new int[] {-72,28,-33,30,-17,12,-41,611,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(28, -390, new int[] {-18,29}),
      new State(29, -137),
      new State(30, -208),
      new State(31, -389, new int[] {-17,32}),
      new State(32, new int[] {123,7,330,23,329,31,328,153,335,165,339,179,340,581,348,584,355,587,353,594,324,603,321,610,320,97,36,98,319,613,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,360,630,334,640,332,650,59,656,349,657,345,673,322,-389}, new int[] {-33,33,-17,12,-41,611,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(33, new int[] {330,34}),
      new State(34, new int[] {40,35}),
      new State(35, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,36,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(36, new int[] {41,37,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(37, new int[] {59,38}),
      new State(38, -390, new int[] {-18,39}),
      new State(39, -138),
      new State(40, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,41,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(41, new int[] {284,-328,285,42,263,-328,265,-328,264,-328,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,-328,283,-328,59,-328,41,-328,125,-328,58,-328,93,-328,44,-328,268,-328,338,-328}),
      new State(42, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,43,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(43, new int[] {284,-329,285,-329,263,-329,265,-329,264,-329,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,-329,283,-329,59,-329,41,-329,125,-329,58,-329,93,-329,44,-329,268,-329,338,-329}),
      new State(44, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,45,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(45, new int[] {284,40,285,42,263,-330,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-330,41,-330,125,-330,58,-330,93,-330,44,-330,268,-330,338,-330}),
      new State(46, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,47,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(47, new int[] {284,40,285,42,263,-331,265,-331,264,-331,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-331,41,-331,125,-331,58,-331,93,-331,44,-331,268,-331,338,-331}),
      new State(48, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,49,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(49, new int[] {284,40,285,42,263,-332,265,46,264,-332,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-332,41,-332,125,-332,58,-332,93,-332,44,-332,268,-332,338,-332}),
      new State(50, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,51,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(51, new int[] {284,-333,285,-333,263,-333,265,-333,264,-333,124,-333,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,-333,283,-333,59,-333,41,-333,125,-333,58,-333,93,-333,44,-333,268,-333,338,-333}),
      new State(52, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,53,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(53, new int[] {284,-334,285,-334,263,-334,265,-334,264,-334,124,-334,38,-334,94,-334,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,-334,283,-334,59,-334,41,-334,125,-334,58,-334,93,-334,44,-334,268,-334,338,-334}),
      new State(54, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,55,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(55, new int[] {284,-335,285,-335,263,-335,265,-335,264,-335,124,-335,38,52,94,-335,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,-335,283,-335,59,-335,41,-335,125,-335,58,-335,93,-335,44,-335,268,-335,338,-335}),
      new State(56, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,57,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(57, new int[] {284,-336,285,-336,263,-336,265,-336,264,-336,124,-336,38,-336,94,-336,46,-336,43,-336,45,-336,42,62,305,64,47,66,37,68,293,-336,294,-336,287,-336,286,-336,289,-336,288,-336,60,-336,291,-336,62,-336,292,-336,290,-336,295,92,63,-336,283,-336,59,-336,41,-336,125,-336,58,-336,93,-336,44,-336,268,-336,338,-336}),
      new State(58, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,59,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(59, new int[] {284,-337,285,-337,263,-337,265,-337,264,-337,124,-337,38,-337,94,-337,46,-337,43,-337,45,-337,42,62,305,64,47,66,37,68,293,-337,294,-337,287,-337,286,-337,289,-337,288,-337,60,-337,291,-337,62,-337,292,-337,290,-337,295,92,63,-337,283,-337,59,-337,41,-337,125,-337,58,-337,93,-337,44,-337,268,-337,338,-337}),
      new State(60, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,61,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(61, new int[] {284,-338,285,-338,263,-338,265,-338,264,-338,124,-338,38,-338,94,-338,46,-338,43,-338,45,-338,42,62,305,64,47,66,37,68,293,-338,294,-338,287,-338,286,-338,289,-338,288,-338,60,-338,291,-338,62,-338,292,-338,290,-338,295,92,63,-338,283,-338,59,-338,41,-338,125,-338,58,-338,93,-338,44,-338,268,-338,338,-338}),
      new State(62, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,63,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(63, new int[] {284,-339,285,-339,263,-339,265,-339,264,-339,124,-339,38,-339,94,-339,46,-339,43,-339,45,-339,42,-339,305,64,47,-339,37,-339,293,-339,294,-339,287,-339,286,-339,289,-339,288,-339,60,-339,291,-339,62,-339,292,-339,290,-339,295,92,63,-339,283,-339,59,-339,41,-339,125,-339,58,-339,93,-339,44,-339,268,-339,338,-339}),
      new State(64, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,65,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(65, new int[] {284,-340,285,-340,263,-340,265,-340,264,-340,124,-340,38,-340,94,-340,46,-340,43,-340,45,-340,42,-340,305,64,47,-340,37,-340,293,-340,294,-340,287,-340,286,-340,289,-340,288,-340,60,-340,291,-340,62,-340,292,-340,290,-340,295,-340,63,-340,283,-340,59,-340,41,-340,125,-340,58,-340,93,-340,44,-340,268,-340,338,-340}),
      new State(66, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,67,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(67, new int[] {284,-341,285,-341,263,-341,265,-341,264,-341,124,-341,38,-341,94,-341,46,-341,43,-341,45,-341,42,-341,305,64,47,-341,37,-341,293,-341,294,-341,287,-341,286,-341,289,-341,288,-341,60,-341,291,-341,62,-341,292,-341,290,-341,295,92,63,-341,283,-341,59,-341,41,-341,125,-341,58,-341,93,-341,44,-341,268,-341,338,-341}),
      new State(68, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,69,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(69, new int[] {284,-342,285,-342,263,-342,265,-342,264,-342,124,-342,38,-342,94,-342,46,-342,43,-342,45,-342,42,-342,305,64,47,-342,37,-342,293,-342,294,-342,287,-342,286,-342,289,-342,288,-342,60,-342,291,-342,62,-342,292,-342,290,-342,295,92,63,-342,283,-342,59,-342,41,-342,125,-342,58,-342,93,-342,44,-342,268,-342,338,-342}),
      new State(70, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,71,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(71, new int[] {284,-343,285,-343,263,-343,265,-343,264,-343,124,-343,38,-343,94,-343,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,-343,294,-343,287,-343,286,-343,289,-343,288,-343,60,-343,291,-343,62,-343,292,-343,290,-343,295,92,63,-343,283,-343,59,-343,41,-343,125,-343,58,-343,93,-343,44,-343,268,-343,338,-343}),
      new State(72, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,73,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(73, new int[] {284,-344,285,-344,263,-344,265,-344,264,-344,124,-344,38,-344,94,-344,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,-344,294,-344,287,-344,286,-344,289,-344,288,-344,60,-344,291,-344,62,-344,292,-344,290,-344,295,92,63,-344,283,-344,59,-344,41,-344,125,-344,58,-344,93,-344,44,-344,268,-344,338,-344}),
      new State(74, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,75,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(75, new int[] {284,-349,285,-349,263,-349,265,-349,264,-349,124,-349,38,-349,94,-349,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,-349,283,-349,59,-349,41,-349,125,-349,58,-349,93,-349,44,-349,268,-349,338,-349}),
      new State(76, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,77,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(77, new int[] {284,-350,285,-350,263,-350,265,-350,264,-350,124,-350,38,-350,94,-350,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,-350,283,-350,59,-350,41,-350,125,-350,58,-350,93,-350,44,-350,268,-350,338,-350}),
      new State(78, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,79,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(79, new int[] {284,-351,285,-351,263,-351,265,-351,264,-351,124,-351,38,-351,94,-351,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,-351,283,-351,59,-351,41,-351,125,-351,58,-351,93,-351,44,-351,268,-351,338,-351}),
      new State(80, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,81,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(81, new int[] {284,-352,285,-352,263,-352,265,-352,264,-352,124,-352,38,-352,94,-352,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,-352,283,-352,59,-352,41,-352,125,-352,58,-352,93,-352,44,-352,268,-352,338,-352}),
      new State(82, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,83,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(83, new int[] {284,-353,285,-353,263,-353,265,-353,264,-353,124,-353,38,-353,94,-353,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,-353,286,-353,289,-353,288,-353,60,82,291,84,62,86,292,88,290,-353,295,92,63,-353,283,-353,59,-353,41,-353,125,-353,58,-353,93,-353,44,-353,268,-353,338,-353}),
      new State(84, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,85,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(85, new int[] {284,-354,285,-354,263,-354,265,-354,264,-354,124,-354,38,-354,94,-354,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,-354,286,-354,289,-354,288,-354,60,82,291,84,62,86,292,88,290,-354,295,92,63,-354,283,-354,59,-354,41,-354,125,-354,58,-354,93,-354,44,-354,268,-354,338,-354}),
      new State(86, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,87,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(87, new int[] {284,-355,285,-355,263,-355,265,-355,264,-355,124,-355,38,-355,94,-355,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,-355,286,-355,289,-355,288,-355,60,82,291,84,62,86,292,88,290,-355,295,92,63,-355,283,-355,59,-355,41,-355,125,-355,58,-355,93,-355,44,-355,268,-355,338,-355}),
      new State(88, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,89,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(89, new int[] {284,-356,285,-356,263,-356,265,-356,264,-356,124,-356,38,-356,94,-356,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,-356,286,-356,289,-356,288,-356,60,82,291,84,62,86,292,88,290,-356,295,92,63,-356,283,-356,59,-356,41,-356,125,-356,58,-356,93,-356,44,-356,268,-356,338,-356}),
      new State(90, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,91,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(91, new int[] {284,-357,285,-357,263,-357,265,-357,264,-357,124,-357,38,-357,94,-357,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,-357,283,-357,59,-357,41,-357,125,-357,58,-357,93,-357,44,-357,268,-357,338,-357}),
      new State(92, new int[] {353,296,319,187,391,188,393,191,320,97,36,98}, new int[] {-25,93,-26,94,-19,350,-106,184,-77,351,-47,520}),
      new State(93, -358),
      new State(94, new int[] {390,95,59,-407,284,-407,285,-407,263,-407,265,-407,264,-407,124,-407,38,-407,94,-407,46,-407,43,-407,45,-407,42,-407,305,-407,47,-407,37,-407,293,-407,294,-407,287,-407,286,-407,289,-407,288,-407,60,-407,291,-407,62,-407,292,-407,290,-407,295,-407,63,-407,283,-407,41,-407,125,-407,58,-407,93,-407,44,-407,268,-407,338,-407,40,-407}),
      new State(95, new int[] {320,97,36,98}, new int[] {-47,96}),
      new State(96, -467),
      new State(97, -458),
      new State(98, new int[] {123,99,320,97,36,98}, new int[] {-47,880}),
      new State(99, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,100,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(100, new int[] {125,101,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(101, -459),
      new State(102, new int[] {58,878,320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,103,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(103, new int[] {58,104,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(104, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,105,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(105, new int[] {284,40,285,42,263,-361,265,-361,264,-361,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,-361,283,106,59,-361,41,-361,125,-361,58,-361,93,-361,44,-361,268,-361,338,-361}),
      new State(106, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,107,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(107, new int[] {284,40,285,42,263,-363,265,-363,264,-363,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,-363,283,106,59,-363,41,-363,125,-363,58,-363,93,-363,44,-363,268,-363,338,-363}),
      new State(108, new int[] {61,109,270,850,271,852,279,854,281,856,278,858,277,860,276,862,275,864,274,866,273,868,272,870,280,872,282,874,303,876,302,877,59,-438,284,-438,285,-438,263,-438,265,-438,264,-438,124,-438,38,-438,94,-438,46,-438,43,-438,45,-438,42,-438,305,-438,47,-438,37,-438,293,-438,294,-438,287,-438,286,-438,289,-438,288,-438,60,-438,291,-438,62,-438,292,-438,290,-438,295,-438,63,-438,283,-438,41,-438,125,-438,58,-438,93,-438,44,-438,268,-438,338,-438,91,-443,369,-443,123,-443,390,-443}),
      new State(109, new int[] {38,111,320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,110,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(110, new int[] {284,40,285,42,263,-307,265,-307,264,-307,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-307,41,-307,125,-307,58,-307,93,-307,44,-307,268,-307,338,-307}),
      new State(111, new int[] {320,97,36,98,353,296,319,187,391,188,393,191,40,297,368,283,91,325,323,305,306,345}, new int[] {-42,112,-44,113,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,324,-49,335,-51,310,-78,311}),
      new State(112, new int[] {59,-308,284,-308,285,-308,263,-308,265,-308,264,-308,124,-308,38,-308,94,-308,46,-308,43,-308,45,-308,42,-308,305,-308,47,-308,37,-308,293,-308,294,-308,287,-308,286,-308,289,-308,288,-308,60,-308,291,-308,62,-308,292,-308,290,-308,295,-308,63,-308,283,-308,41,-308,125,-308,58,-308,93,-308,44,-308,268,-308,338,-308,91,-443,369,-443,123,-443,390,-443}),
      new State(113, -309),
      new State(114, new int[] {61,-455,270,-455,271,-455,279,-455,281,-455,278,-455,277,-455,276,-455,275,-455,274,-455,273,-455,272,-455,280,-455,282,-455,303,-455,302,-455,59,-455,284,-455,285,-455,263,-455,265,-455,264,-455,124,-455,38,-455,94,-455,46,-455,43,-455,45,-455,42,-455,305,-455,47,-455,37,-455,293,-455,294,-455,287,-455,286,-455,289,-455,288,-455,60,-455,291,-455,62,-455,292,-455,290,-455,295,-455,63,-455,283,-455,91,-455,369,-455,123,-455,390,-455,41,-455,125,-455,58,-455,93,-455,44,-455,268,-455,338,-455,40,-446}),
      new State(115, -449),
      new State(116, new int[] {91,117,369,844,123,847,390,-442}),
      new State(117, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,93,-440}, new int[] {-60,118,-41,120,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(118, new int[] {93,119}),
      new State(119, -450),
      new State(120, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,93,-441,59,-441,41,-441}),
      new State(121, -456),
      new State(122, new int[] {390,123}),
      new State(123, new int[] {320,97,36,98,319,199,262,202,261,203,260,204,259,205,258,206,263,207,264,208,265,209,295,210,306,211,307,212,326,213,322,214,308,215,309,216,310,217,324,218,329,219,330,220,327,221,328,222,333,223,334,224,331,225,332,226,337,227,338,228,349,229,347,230,351,231,352,232,350,233,354,234,355,235,356,236,360,237,358,238,359,239,340,240,345,241,346,242,344,243,348,244,266,245,267,246,367,247,335,248,336,249,341,250,342,251,339,252,368,253,372,254,364,255,365,256,391,257,362,258,366,259,361,260,373,261,374,262,376,263,378,264,370,265,371,266,375,267,392,268,343,269,353,270,315,271,314,272,313,273,357,274,311,275,123,276}, new int[] {-47,124,-103,125,-2,126,-104,200,-105,201}),
      new State(124, new int[] {61,-461,270,-461,271,-461,279,-461,281,-461,278,-461,277,-461,276,-461,275,-461,274,-461,273,-461,272,-461,280,-461,282,-461,303,-461,302,-461,59,-461,284,-461,285,-461,263,-461,265,-461,264,-461,124,-461,38,-461,94,-461,46,-461,43,-461,45,-461,42,-461,305,-461,47,-461,37,-461,293,-461,294,-461,287,-461,286,-461,289,-461,288,-461,60,-461,291,-461,62,-461,292,-461,290,-461,295,-461,63,-461,283,-461,91,-461,369,-461,123,-461,390,-461,41,-461,125,-461,58,-461,93,-461,44,-461,268,-461,338,-461,40,-471}),
      new State(125, new int[] {91,-436,59,-436,284,-436,285,-436,263,-436,265,-436,264,-436,124,-436,38,-436,94,-436,46,-436,43,-436,45,-436,42,-436,305,-436,47,-436,37,-436,293,-436,294,-436,287,-436,286,-436,289,-436,288,-436,60,-436,291,-436,62,-436,292,-436,290,-436,295,-436,63,-436,283,-436,41,-436,125,-436,58,-436,93,-436,44,-436,268,-436,338,-436,40,-469}),
      new State(126, new int[] {40,128}, new int[] {-116,127}),
      new State(127, -402),
      new State(128, new int[] {41,129,320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,394,841}, new int[] {-117,130,-114,843,-41,135,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(129, -236),
      new State(130, new int[] {44,133,41,-110}, new int[] {-3,131}),
      new State(131, new int[] {41,132}),
      new State(132, -237),
      new State(133, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,394,841,41,-111}, new int[] {-114,134,-41,135,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(134, -239),
      new State(135, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,44,-240,41,-240}),
      new State(136, new int[] {346,464,343,477,390,-405}, new int[] {-83,137,-5,138,-6,465}),
      new State(137, -383),
      new State(138, new int[] {38,505,40,-393}, new int[] {-4,139}),
      new State(139, -388, new int[] {-16,140}),
      new State(140, new int[] {40,141}),
      new State(141, new int[] {368,483,372,484,319,187,391,188,393,191,63,486,38,-224,394,-224,320,-224,41,-219}, new int[] {-120,142,-121,491,-118,504,-23,495,-22,503,-20,480,-19,485,-106,184,-31,488}),
      new State(142, new int[] {41,143}),
      new State(143, new int[] {350,831,58,-395,123,-395}, new int[] {-122,144}),
      new State(144, new int[] {58,478,123,-234}, new int[] {-21,145}),
      new State(145, -391, new int[] {-140,146}),
      new State(146, -389, new int[] {-17,147}),
      new State(147, new int[] {123,148}),
      new State(148, -127, new int[] {-87,149}),
      new State(149, new int[] {125,150,123,7,330,23,329,31,328,153,335,165,339,179,340,581,348,584,355,587,353,594,324,603,321,610,320,97,36,98,319,613,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,360,630,334,640,332,650,59,656,349,657,345,673,315,731,314,732,362,734,366,744,363,756,322,-389,361,-175}, new int[] {-81,10,-33,11,-17,12,-41,611,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,615,-6,465,-34,676,-35,677,-14,678,-13,729,-36,733,-38,743}),
      new State(150, -390, new int[] {-18,151}),
      new State(151, -391, new int[] {-140,152}),
      new State(152, -384),
      new State(153, new int[] {40,154}),
      new State(154, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,59,-297}, new int[] {-89,155,-100,827,-41,830,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(155, new int[] {59,156}),
      new State(156, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,59,-297}, new int[] {-89,157,-100,827,-41,830,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(157, new int[] {59,158}),
      new State(158, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,41,-297}, new int[] {-89,159,-100,827,-41,830,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(159, new int[] {41,160}),
      new State(160, -389, new int[] {-17,161}),
      new State(161, new int[] {123,7,330,23,329,31,328,153,335,165,339,179,340,581,348,584,355,587,353,594,324,603,321,610,320,97,36,98,319,613,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,360,630,334,640,332,650,59,656,349,657,345,673,58,823,322,-389}, new int[] {-70,162,-33,164,-17,12,-41,611,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(162, -390, new int[] {-18,163}),
      new State(163, -139),
      new State(164, -193),
      new State(165, new int[] {40,166}),
      new State(166, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,167,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(167, new int[] {41,168,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(168, -389, new int[] {-17,169}),
      new State(169, new int[] {123,172,58,815}, new int[] {-99,170}),
      new State(170, -390, new int[] {-18,171}),
      new State(171, -140),
      new State(172, new int[] {59,812,125,-203,341,-203,342,-203}, new int[] {-98,173}),
      new State(173, new int[] {125,174,341,175,342,809}),
      new State(174, -199),
      new State(175, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,176,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(176, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,58,807,59,808}, new int[] {-144,177}),
      new State(177, -127, new int[] {-87,178}),
      new State(178, new int[] {123,7,330,23,329,31,328,153,335,165,339,179,340,581,348,584,355,587,353,594,324,603,321,610,320,97,36,98,319,613,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,360,630,334,640,332,650,59,656,349,657,345,673,315,731,314,732,362,734,366,744,363,756,125,-204,341,-204,342,-204,336,-204,322,-389,361,-175}, new int[] {-81,10,-33,11,-17,12,-41,611,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,615,-6,465,-34,676,-35,677,-14,678,-13,729,-36,733,-38,743}),
      new State(179, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,59,-440}, new int[] {-60,180,-41,120,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(180, new int[] {59,181}),
      new State(181, -141),
      new State(182, new int[] {40,128,390,-406,91,-435,59,-435,284,-435,285,-435,263,-435,265,-435,264,-435,124,-435,38,-435,94,-435,46,-435,43,-435,45,-435,42,-435,305,-435,47,-435,37,-435,293,-435,294,-435,287,-435,286,-435,289,-435,288,-435,60,-435,291,-435,62,-435,292,-435,290,-435,295,-435,63,-435,283,-435,41,-435,125,-435,58,-435,93,-435,44,-435,268,-435,338,-435}, new int[] {-116,183}),
      new State(183, -401),
      new State(184, new int[] {393,185,40,-85,390,-85,91,-85,59,-85,284,-85,285,-85,263,-85,265,-85,264,-85,124,-85,38,-85,94,-85,46,-85,43,-85,45,-85,42,-85,305,-85,47,-85,37,-85,293,-85,294,-85,287,-85,286,-85,289,-85,288,-85,60,-85,291,-85,62,-85,292,-85,290,-85,295,-85,63,-85,283,-85,41,-85,125,-85,58,-85,93,-85,44,-85,268,-85,338,-85,394,-85,320,-85,123,-85,365,-85}),
      new State(185, new int[] {319,186}),
      new State(186, -84),
      new State(187, -83),
      new State(188, new int[] {393,189}),
      new State(189, new int[] {319,187}, new int[] {-106,190}),
      new State(190, new int[] {393,185,40,-86,390,-86,91,-86,59,-86,284,-86,285,-86,263,-86,265,-86,264,-86,124,-86,38,-86,94,-86,46,-86,43,-86,45,-86,42,-86,305,-86,47,-86,37,-86,293,-86,294,-86,287,-86,286,-86,289,-86,288,-86,60,-86,291,-86,62,-86,292,-86,290,-86,295,-86,63,-86,283,-86,41,-86,125,-86,58,-86,93,-86,44,-86,268,-86,338,-86,394,-86,320,-86,123,-86,365,-86}),
      new State(191, new int[] {319,187}, new int[] {-106,192}),
      new State(192, new int[] {393,185,40,-87,390,-87,91,-87,59,-87,284,-87,285,-87,263,-87,265,-87,264,-87,124,-87,38,-87,94,-87,46,-87,43,-87,45,-87,42,-87,305,-87,47,-87,37,-87,293,-87,294,-87,287,-87,286,-87,289,-87,288,-87,60,-87,291,-87,62,-87,292,-87,290,-87,295,-87,63,-87,283,-87,41,-87,125,-87,58,-87,93,-87,44,-87,268,-87,338,-87,394,-87,320,-87,123,-87,365,-87}),
      new State(193, new int[] {390,194}),
      new State(194, new int[] {320,97,36,98,319,199,262,202,261,203,260,204,259,205,258,206,263,207,264,208,265,209,295,210,306,211,307,212,326,213,322,214,308,215,309,216,310,217,324,218,329,219,330,220,327,221,328,222,333,223,334,224,331,225,332,226,337,227,338,228,349,229,347,230,351,231,352,232,350,233,354,234,355,235,356,236,360,237,358,238,359,239,340,240,345,241,346,242,344,243,348,244,266,245,267,246,367,247,335,248,336,249,341,250,342,251,339,252,368,253,372,254,364,255,365,256,391,257,362,258,366,259,361,260,373,261,374,262,376,263,378,264,370,265,371,266,375,267,392,268,343,269,353,270,315,271,314,272,313,273,357,274,311,275,123,276}, new int[] {-47,195,-103,196,-2,197,-104,200,-105,201}),
      new State(195, new int[] {61,-462,270,-462,271,-462,279,-462,281,-462,278,-462,277,-462,276,-462,275,-462,274,-462,273,-462,272,-462,280,-462,282,-462,303,-462,302,-462,59,-462,284,-462,285,-462,263,-462,265,-462,264,-462,124,-462,38,-462,94,-462,46,-462,43,-462,45,-462,42,-462,305,-462,47,-462,37,-462,293,-462,294,-462,287,-462,286,-462,289,-462,288,-462,60,-462,291,-462,62,-462,292,-462,290,-462,295,-462,63,-462,283,-462,91,-462,369,-462,123,-462,390,-462,41,-462,125,-462,58,-462,93,-462,44,-462,268,-462,338,-462,40,-471}),
      new State(196, new int[] {91,-437,59,-437,284,-437,285,-437,263,-437,265,-437,264,-437,124,-437,38,-437,94,-437,46,-437,43,-437,45,-437,42,-437,305,-437,47,-437,37,-437,293,-437,294,-437,287,-437,286,-437,289,-437,288,-437,60,-437,291,-437,62,-437,292,-437,290,-437,295,-437,63,-437,283,-437,41,-437,125,-437,58,-437,93,-437,44,-437,268,-437,338,-437,40,-469}),
      new State(197, new int[] {40,128}, new int[] {-116,198}),
      new State(198, -403),
      new State(199, -79),
      new State(200, -80),
      new State(201, -72),
      new State(202, -4),
      new State(203, -5),
      new State(204, -6),
      new State(205, -7),
      new State(206, -8),
      new State(207, -9),
      new State(208, -10),
      new State(209, -11),
      new State(210, -12),
      new State(211, -13),
      new State(212, -14),
      new State(213, -15),
      new State(214, -16),
      new State(215, -17),
      new State(216, -18),
      new State(217, -19),
      new State(218, -20),
      new State(219, -21),
      new State(220, -22),
      new State(221, -23),
      new State(222, -24),
      new State(223, -25),
      new State(224, -26),
      new State(225, -27),
      new State(226, -28),
      new State(227, -29),
      new State(228, -30),
      new State(229, -31),
      new State(230, -32),
      new State(231, -33),
      new State(232, -34),
      new State(233, -35),
      new State(234, -36),
      new State(235, -37),
      new State(236, -38),
      new State(237, -39),
      new State(238, -40),
      new State(239, -41),
      new State(240, -42),
      new State(241, -43),
      new State(242, -44),
      new State(243, -45),
      new State(244, -46),
      new State(245, -47),
      new State(246, -48),
      new State(247, -49),
      new State(248, -50),
      new State(249, -51),
      new State(250, -52),
      new State(251, -53),
      new State(252, -54),
      new State(253, -55),
      new State(254, -56),
      new State(255, -57),
      new State(256, -58),
      new State(257, -59),
      new State(258, -60),
      new State(259, -61),
      new State(260, -62),
      new State(261, -63),
      new State(262, -64),
      new State(263, -65),
      new State(264, -66),
      new State(265, -67),
      new State(266, -68),
      new State(267, -69),
      new State(268, -70),
      new State(269, -71),
      new State(270, -73),
      new State(271, -74),
      new State(272, -75),
      new State(273, -76),
      new State(274, -77),
      new State(275, -78),
      new State(276, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,277,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(277, new int[] {125,278,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(278, -470),
      new State(279, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,280,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(280, new int[] {41,281,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(281, new int[] {91,-444,369,-444,123,-444,390,-444,40,-447,59,-359,284,-359,285,-359,263,-359,265,-359,264,-359,124,-359,38,-359,94,-359,46,-359,43,-359,45,-359,42,-359,305,-359,47,-359,37,-359,293,-359,294,-359,287,-359,286,-359,289,-359,288,-359,60,-359,291,-359,62,-359,292,-359,290,-359,295,-359,63,-359,283,-359,41,-359,125,-359,58,-359,93,-359,44,-359,268,-359,338,-359}),
      new State(282, new int[] {91,-445,369,-445,123,-445,390,-445,40,-448,59,-433,284,-433,285,-433,263,-433,265,-433,264,-433,124,-433,38,-433,94,-433,46,-433,43,-433,45,-433,42,-433,305,-433,47,-433,37,-433,293,-433,294,-433,287,-433,286,-433,289,-433,288,-433,60,-433,291,-433,62,-433,292,-433,290,-433,295,-433,63,-433,283,-433,41,-433,125,-433,58,-433,93,-433,44,-433,268,-433,338,-433}),
      new State(283, new int[] {40,284}),
      new State(284, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,329,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,38,793,394,795,44,-476,41,-476}, new int[] {-127,285,-126,287,-124,328,-125,290,-41,291,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(285, new int[] {41,286}),
      new State(286, -416),
      new State(287, new int[] {44,288,41,-475,93,-475}),
      new State(288, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,329,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,38,793,394,795,44,-476,41,-476,93,-476}, new int[] {-124,289,-125,290,-41,291,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(289, -478),
      new State(290, -477),
      new State(291, new int[] {268,292,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,44,-481,41,-481,93,-481}),
      new State(292, new int[] {38,294,367,803,320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,293,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(293, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,44,-480,41,-480,93,-480}),
      new State(294, new int[] {320,97,36,98,353,296,319,187,391,188,393,191,40,297,368,283,91,325,323,305}, new int[] {-42,295,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,324,-49,335,-51,310,-78,311}),
      new State(295, new int[] {44,-482,41,-482,93,-482,91,-443,369,-443,123,-443,390,-443}),
      new State(296, -405),
      new State(297, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,298,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(298, new int[] {41,299,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(299, new int[] {91,-444,369,-444,123,-444,390,-444,40,-447}),
      new State(300, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,329,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,38,793,394,795,44,-476,93,-476}, new int[] {-127,301,-126,287,-124,328,-125,290,-41,291,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(301, new int[] {93,302}),
      new State(302, new int[] {61,303,91,-417,369,-417,123,-417,390,-417,40,-417,59,-417,284,-417,285,-417,263,-417,265,-417,264,-417,124,-417,38,-417,94,-417,46,-417,43,-417,45,-417,42,-417,305,-417,47,-417,37,-417,293,-417,294,-417,287,-417,286,-417,289,-417,288,-417,60,-417,291,-417,62,-417,292,-417,290,-417,295,-417,63,-417,283,-417,41,-417,125,-417,58,-417,93,-417,44,-417,268,-417,338,-417}),
      new State(303, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,304,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(304, new int[] {284,40,285,42,263,-306,265,-306,264,-306,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-306,41,-306,125,-306,58,-306,93,-306,44,-306,268,-306,338,-306}),
      new State(305, -418),
      new State(306, new int[] {91,307,59,-434,284,-434,285,-434,263,-434,265,-434,264,-434,124,-434,38,-434,94,-434,46,-434,43,-434,45,-434,42,-434,305,-434,47,-434,37,-434,293,-434,294,-434,287,-434,286,-434,289,-434,288,-434,60,-434,291,-434,62,-434,292,-434,290,-434,295,-434,63,-434,283,-434,41,-434,125,-434,58,-434,93,-434,44,-434,268,-434,338,-434}),
      new State(307, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,93,-440}, new int[] {-60,308,-41,120,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(308, new int[] {93,309}),
      new State(309, -451),
      new State(310, -454),
      new State(311, new int[] {40,128}, new int[] {-116,312}),
      new State(312, -404),
      new State(313, -439),
      new State(314, new int[] {40,315}),
      new State(315, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,329,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,38,793,394,795,44,-476,41,-476}, new int[] {-127,316,-126,287,-124,328,-125,290,-41,291,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(316, new int[] {41,317}),
      new State(317, new int[] {61,318}),
      new State(318, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,319,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(319, new int[] {284,40,285,42,263,-305,265,-305,264,-305,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-305,41,-305,125,-305,58,-305,93,-305,44,-305,268,-305,338,-305}),
      new State(320, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,321,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(321, -310),
      new State(322, new int[] {320,97,36,98,353,296,319,187,391,188,393,191,40,297,368,283,91,325,323,305}, new int[] {-42,323,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,324,-49,335,-51,310,-78,311}),
      new State(323, new int[] {59,-325,284,-325,285,-325,263,-325,265,-325,264,-325,124,-325,38,-325,94,-325,46,-325,43,-325,45,-325,42,-325,305,-325,47,-325,37,-325,293,-325,294,-325,287,-325,286,-325,289,-325,288,-325,60,-325,291,-325,62,-325,292,-325,290,-325,295,-325,63,-325,283,-325,41,-325,125,-325,58,-325,93,-325,44,-325,268,-325,338,-325,91,-443,369,-443,123,-443,390,-443}),
      new State(324, new int[] {91,-445,369,-445,123,-445,390,-445,40,-448}),
      new State(325, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,329,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,38,793,394,795,44,-476,93,-476}, new int[] {-127,326,-126,287,-124,328,-125,290,-41,291,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(326, new int[] {93,327}),
      new State(327, -417),
      new State(328, -479),
      new State(329, new int[] {40,330}),
      new State(330, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,329,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,38,793,394,795,44,-476,41,-476}, new int[] {-127,331,-126,287,-124,328,-125,290,-41,291,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(331, new int[] {41,332}),
      new State(332, new int[] {61,318,44,-486,41,-486,93,-486}),
      new State(333, new int[] {320,97,36,98,353,296,319,187,391,188,393,191,40,297,368,283,91,325,323,305}, new int[] {-42,334,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,324,-49,335,-51,310,-78,311}),
      new State(334, new int[] {59,-327,284,-327,285,-327,263,-327,265,-327,264,-327,124,-327,38,-327,94,-327,46,-327,43,-327,45,-327,42,-327,305,-327,47,-327,37,-327,293,-327,294,-327,287,-327,286,-327,289,-327,288,-327,60,-327,291,-327,62,-327,292,-327,290,-327,295,-327,63,-327,283,-327,41,-327,125,-327,58,-327,93,-327,44,-327,268,-327,338,-327,91,-443,369,-443,123,-443,390,-443}),
      new State(335, new int[] {91,307}),
      new State(336, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,337,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(337, new int[] {284,-345,285,-345,263,-345,265,-345,264,-345,124,-345,38,-345,94,-345,46,-345,43,-345,45,-345,42,-345,305,64,47,-345,37,-345,293,-345,294,-345,287,-345,286,-345,289,-345,288,-345,60,-345,291,-345,62,-345,292,-345,290,-345,295,-345,63,-345,283,-345,59,-345,41,-345,125,-345,58,-345,93,-345,44,-345,268,-345,338,-345}),
      new State(338, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,339,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(339, new int[] {284,-346,285,-346,263,-346,265,-346,264,-346,124,-346,38,-346,94,-346,46,-346,43,-346,45,-346,42,-346,305,64,47,-346,37,-346,293,-346,294,-346,287,-346,286,-346,289,-346,288,-346,60,-346,291,-346,62,-346,292,-346,290,-346,295,-346,63,-346,283,-346,59,-346,41,-346,125,-346,58,-346,93,-346,44,-346,268,-346,338,-346}),
      new State(340, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,341,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(341, new int[] {284,-347,285,-347,263,-347,265,-347,264,-347,124,-347,38,-347,94,-347,46,-347,43,-347,45,-347,42,-347,305,64,47,-347,37,-347,293,-347,294,-347,287,-347,286,-347,289,-347,288,-347,60,-347,291,-347,62,-347,292,-347,290,-347,295,92,63,-347,283,-347,59,-347,41,-347,125,-347,58,-347,93,-347,44,-347,268,-347,338,-347}),
      new State(342, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,343,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(343, new int[] {284,-348,285,-348,263,-348,265,-348,264,-348,124,-348,38,-348,94,-348,46,-348,43,-348,45,-348,42,-348,305,64,47,-348,37,-348,293,-348,294,-348,287,-348,286,-348,289,-348,288,-348,60,-348,291,-348,62,-348,292,-348,290,-348,295,-348,63,-348,283,-348,59,-348,41,-348,125,-348,58,-348,93,-348,44,-348,268,-348,338,-348}),
      new State(344, -360),
      new State(345, new int[] {353,296,319,187,391,188,393,191,320,97,36,98,361,521}, new int[] {-25,346,-131,349,-26,94,-19,350,-106,184,-77,351,-47,520}),
      new State(346, new int[] {40,128,59,-414,284,-414,285,-414,263,-414,265,-414,264,-414,124,-414,38,-414,94,-414,46,-414,43,-414,45,-414,42,-414,305,-414,47,-414,37,-414,293,-414,294,-414,287,-414,286,-414,289,-414,288,-414,60,-414,291,-414,62,-414,292,-414,290,-414,295,-414,63,-414,283,-414,41,-414,125,-414,58,-414,93,-414,44,-414,268,-414,338,-414}, new int[] {-115,347,-116,348}),
      new State(347, -303),
      new State(348, -415),
      new State(349, -304),
      new State(350, -406),
      new State(351, new int[] {91,352,123,508,369,511,390,518,59,-408,284,-408,285,-408,263,-408,265,-408,264,-408,124,-408,38,-408,94,-408,46,-408,43,-408,45,-408,42,-408,305,-408,47,-408,37,-408,293,-408,294,-408,287,-408,286,-408,289,-408,288,-408,60,-408,291,-408,62,-408,292,-408,290,-408,295,-408,63,-408,283,-408,41,-408,125,-408,58,-408,93,-408,44,-408,268,-408,338,-408,40,-408}),
      new State(352, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,93,-440}, new int[] {-60,353,-41,120,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(353, new int[] {93,354}),
      new State(354, -464),
      new State(355, -364),
      new State(356, new int[] {40,357}),
      new State(357, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-96,358,-40,507,-41,363,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(358, new int[] {44,361,41,-110}, new int[] {-3,359}),
      new State(359, new int[] {41,360}),
      new State(360, -501),
      new State(361, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,41,-111}, new int[] {-40,362,-41,363,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(362, -509),
      new State(363, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,44,-510,41,-510}),
      new State(364, new int[] {40,365}),
      new State(365, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,366,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(366, new int[] {41,367,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(367, -502),
      new State(368, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,369,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(369, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-503,41,-503,125,-503,58,-503,93,-503,44,-503,268,-503,338,-503}),
      new State(370, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,371,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(371, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-504,41,-504,125,-504,58,-504,93,-504,44,-504,268,-504,338,-504}),
      new State(372, new int[] {40,373}),
      new State(373, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,374,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(374, new int[] {41,375,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(375, -505),
      new State(376, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,377,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(377, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-506,41,-506,125,-506,58,-506,93,-506,44,-506,268,-506,338,-506}),
      new State(378, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,379,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(379, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-507,41,-507,125,-507,58,-507,93,-507,44,-507,268,-507,338,-507}),
      new State(380, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,381,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(381, new int[] {284,-365,285,-365,263,-365,265,-365,264,-365,124,-365,38,-365,94,-365,46,-365,43,-365,45,-365,42,-365,305,64,47,-365,37,-365,293,-365,294,-365,287,-365,286,-365,289,-365,288,-365,60,-365,291,-365,62,-365,292,-365,290,-365,295,-365,63,-365,283,-365,59,-365,41,-365,125,-365,58,-365,93,-365,44,-365,268,-365,338,-365}),
      new State(382, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,383,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(383, new int[] {284,-366,285,-366,263,-366,265,-366,264,-366,124,-366,38,-366,94,-366,46,-366,43,-366,45,-366,42,-366,305,64,47,-366,37,-366,293,-366,294,-366,287,-366,286,-366,289,-366,288,-366,60,-366,291,-366,62,-366,292,-366,290,-366,295,-366,63,-366,283,-366,59,-366,41,-366,125,-366,58,-366,93,-366,44,-366,268,-366,338,-366}),
      new State(384, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,385,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(385, new int[] {284,-367,285,-367,263,-367,265,-367,264,-367,124,-367,38,-367,94,-367,46,-367,43,-367,45,-367,42,-367,305,64,47,-367,37,-367,293,-367,294,-367,287,-367,286,-367,289,-367,288,-367,60,-367,291,-367,62,-367,292,-367,290,-367,295,-367,63,-367,283,-367,59,-367,41,-367,125,-367,58,-367,93,-367,44,-367,268,-367,338,-367}),
      new State(386, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,387,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(387, new int[] {284,-368,285,-368,263,-368,265,-368,264,-368,124,-368,38,-368,94,-368,46,-368,43,-368,45,-368,42,-368,305,64,47,-368,37,-368,293,-368,294,-368,287,-368,286,-368,289,-368,288,-368,60,-368,291,-368,62,-368,292,-368,290,-368,295,-368,63,-368,283,-368,59,-368,41,-368,125,-368,58,-368,93,-368,44,-368,268,-368,338,-368}),
      new State(388, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,389,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(389, new int[] {284,-369,285,-369,263,-369,265,-369,264,-369,124,-369,38,-369,94,-369,46,-369,43,-369,45,-369,42,-369,305,64,47,-369,37,-369,293,-369,294,-369,287,-369,286,-369,289,-369,288,-369,60,-369,291,-369,62,-369,292,-369,290,-369,295,-369,63,-369,283,-369,59,-369,41,-369,125,-369,58,-369,93,-369,44,-369,268,-369,338,-369}),
      new State(390, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,391,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(391, new int[] {284,-370,285,-370,263,-370,265,-370,264,-370,124,-370,38,-370,94,-370,46,-370,43,-370,45,-370,42,-370,305,64,47,-370,37,-370,293,-370,294,-370,287,-370,286,-370,289,-370,288,-370,60,-370,291,-370,62,-370,292,-370,290,-370,295,-370,63,-370,283,-370,59,-370,41,-370,125,-370,58,-370,93,-370,44,-370,268,-370,338,-370}),
      new State(392, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,393,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(393, new int[] {284,-371,285,-371,263,-371,265,-371,264,-371,124,-371,38,-371,94,-371,46,-371,43,-371,45,-371,42,-371,305,64,47,-371,37,-371,293,-371,294,-371,287,-371,286,-371,289,-371,288,-371,60,-371,291,-371,62,-371,292,-371,290,-371,295,-371,63,-371,283,-371,59,-371,41,-371,125,-371,58,-371,93,-371,44,-371,268,-371,338,-371}),
      new State(394, new int[] {40,396,59,-409,284,-409,285,-409,263,-409,265,-409,264,-409,124,-409,38,-409,94,-409,46,-409,43,-409,45,-409,42,-409,305,-409,47,-409,37,-409,293,-409,294,-409,287,-409,286,-409,289,-409,288,-409,60,-409,291,-409,62,-409,292,-409,290,-409,295,-409,63,-409,283,-409,41,-409,125,-409,58,-409,93,-409,44,-409,268,-409,338,-409}, new int[] {-75,395}),
      new State(395, -372),
      new State(396, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,41,-440}, new int[] {-60,397,-41,120,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(397, new int[] {41,398}),
      new State(398, -410),
      new State(399, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,400,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(400, new int[] {284,-373,285,-373,263,-373,265,-373,264,-373,124,-373,38,-373,94,-373,46,-373,43,-373,45,-373,42,-373,305,64,47,-373,37,-373,293,-373,294,-373,287,-373,286,-373,289,-373,288,-373,60,-373,291,-373,62,-373,292,-373,290,-373,295,-373,63,-373,283,-373,59,-373,41,-373,125,-373,58,-373,93,-373,44,-373,268,-373,338,-373}),
      new State(401, -374),
      new State(402, -419),
      new State(403, -420),
      new State(404, -421),
      new State(405, -422),
      new State(406, -423),
      new State(407, -424),
      new State(408, -425),
      new State(409, -426),
      new State(410, -427),
      new State(411, -428),
      new State(412, new int[] {320,417,385,426,386,440,316,506}, new int[] {-95,413,-62,445}),
      new State(413, new int[] {34,414,316,416,320,417,385,426,386,440}, new int[] {-62,415}),
      new State(414, -429),
      new State(415, -487),
      new State(416, -488),
      new State(417, new int[] {91,418,369,424,34,-491,316,-491,320,-491,385,-491,386,-491,387,-491,96,-491}),
      new State(418, new int[] {319,421,325,422,320,423}, new int[] {-63,419}),
      new State(419, new int[] {93,420}),
      new State(420, -492),
      new State(421, -498),
      new State(422, -499),
      new State(423, -500),
      new State(424, new int[] {319,425}),
      new State(425, -493),
      new State(426, new int[] {318,429,320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,427,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(427, new int[] {125,428,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(428, -494),
      new State(429, new int[] {125,430,91,431}),
      new State(430, -495),
      new State(431, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,432,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(432, new int[] {93,433,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(433, new int[] {125,434}),
      new State(434, -496),
      new State(435, new int[] {387,436,316,437,320,417,385,426,386,440}, new int[] {-95,443,-62,445}),
      new State(436, -430),
      new State(437, new int[] {387,438,320,417,385,426,386,440}, new int[] {-62,439}),
      new State(438, -431),
      new State(439, -490),
      new State(440, new int[] {320,97,36,98,353,296,319,187,391,188,393,191,40,297,368,283,91,325,323,305}, new int[] {-42,441,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,324,-49,335,-51,310,-78,311}),
      new State(441, new int[] {125,442,91,-443,369,-443,123,-443,390,-443}),
      new State(442, -497),
      new State(443, new int[] {387,444,316,416,320,417,385,426,386,440}, new int[] {-62,415}),
      new State(444, -432),
      new State(445, -489),
      new State(446, -375),
      new State(447, new int[] {96,448,316,449,320,417,385,426,386,440}, new int[] {-95,451,-62,445}),
      new State(448, -411),
      new State(449, new int[] {96,450,320,417,385,426,386,440}, new int[] {-62,439}),
      new State(450, -412),
      new State(451, new int[] {96,452,316,416,320,417,385,426,386,440}, new int[] {-62,415}),
      new State(452, -413),
      new State(453, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,454,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(454, new int[] {284,40,285,42,263,-376,265,-376,264,-376,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-376,41,-376,125,-376,58,-376,93,-376,44,-376,268,-376,338,-376}),
      new State(455, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,59,-377,284,-377,285,-377,263,-377,265,-377,264,-377,124,-377,38,-377,94,-377,46,-377,42,-377,305,-377,47,-377,37,-377,293,-377,294,-377,287,-377,286,-377,289,-377,288,-377,60,-377,291,-377,62,-377,292,-377,290,-377,295,-377,63,-377,283,-377,41,-377,125,-377,58,-377,93,-377,44,-377,268,-377,338,-377}, new int[] {-41,456,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(456, new int[] {268,457,284,40,285,42,263,-378,265,-378,264,-378,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-378,41,-378,125,-378,58,-378,93,-378,44,-378,338,-378}),
      new State(457, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,458,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(458, new int[] {284,40,285,42,263,-379,265,-379,264,-379,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-379,41,-379,125,-379,58,-379,93,-379,44,-379,268,-379,338,-379}),
      new State(459, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,460,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(460, new int[] {284,40,285,42,263,-380,265,-380,264,-380,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-380,41,-380,125,-380,58,-380,93,-380,44,-380,268,-380,338,-380}),
      new State(461, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,462,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(462, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-381,41,-381,125,-381,58,-381,93,-381,44,-381,268,-381,338,-381}),
      new State(463, -382),
      new State(464, -387),
      new State(465, new int[] {38,505,40,-393}, new int[] {-4,466}),
      new State(466, new int[] {40,467}),
      new State(467, new int[] {368,483,372,484,319,187,391,188,393,191,63,486,38,-224,394,-224,320,-224,41,-219}, new int[] {-120,468,-121,491,-118,504,-23,495,-22,503,-20,480,-19,485,-106,184,-31,488}),
      new State(468, new int[] {41,469}),
      new State(469, new int[] {58,478,268,-234}, new int[] {-21,470}),
      new State(470, -388, new int[] {-16,471}),
      new State(471, new int[] {268,472}),
      new State(472, -391, new int[] {-140,473}),
      new State(473, -392, new int[] {-146,474}),
      new State(474, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,475,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(475, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-391,41,-391,125,-391,58,-391,93,-391,44,-391,268,-391,338,-391}, new int[] {-140,476}),
      new State(476, -385),
      new State(477, -386),
      new State(478, new int[] {368,483,372,484,319,187,391,188,393,191,63,486}, new int[] {-22,479,-20,480,-19,485,-106,184,-31,488}),
      new State(479, -235),
      new State(480, new int[] {124,481,38,-226,394,-226,320,-226,123,-226,268,-226,59,-226}),
      new State(481, new int[] {368,483,372,484,319,187,391,188,393,191}, new int[] {-20,482,-19,485,-106,184}),
      new State(482, -232),
      new State(483, -229),
      new State(484, -230),
      new State(485, -231),
      new State(486, new int[] {368,483,372,484,319,187,391,188,393,191}, new int[] {-20,487,-19,485,-106,184}),
      new State(487, -227),
      new State(488, new int[] {124,489,38,-228,394,-228,320,-228,123,-228,268,-228,59,-228}),
      new State(489, new int[] {368,483,372,484,319,187,391,188,393,191}, new int[] {-20,490,-19,485,-106,184}),
      new State(490, -233),
      new State(491, new int[] {44,493,41,-110}, new int[] {-3,492}),
      new State(492, -218),
      new State(493, new int[] {368,483,372,484,319,187,391,188,393,191,63,486,41,-111,38,-224,394,-224,320,-224}, new int[] {-118,494,-23,495,-22,503,-20,480,-19,485,-106,184,-31,488}),
      new State(494, -221),
      new State(495, new int[] {38,502,394,-169,320,-169}, new int[] {-7,496}),
      new State(496, new int[] {394,501,320,-171}, new int[] {-8,497}),
      new State(497, new int[] {320,498}),
      new State(498, new int[] {61,499,44,-222,41,-222}),
      new State(499, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,500,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(500, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,44,-223,41,-223}),
      new State(501, -172),
      new State(502, -170),
      new State(503, -225),
      new State(504, -220),
      new State(505, -394),
      new State(506, new int[] {320,417,385,426,386,440}, new int[] {-62,439}),
      new State(507, -508),
      new State(508, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,509,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(509, new int[] {125,510,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(510, -465),
      new State(511, new int[] {319,513,123,514,320,97,36,98}, new int[] {-1,512,-47,517}),
      new State(512, -466),
      new State(513, -472),
      new State(514, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,515,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(515, new int[] {125,516,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(516, -473),
      new State(517, -474),
      new State(518, new int[] {320,97,36,98}, new int[] {-47,519}),
      new State(519, -468),
      new State(520, -463),
      new State(521, new int[] {40,128,364,-414,365,-414,123,-414}, new int[] {-115,522,-116,348}),
      new State(522, new int[] {364,727,365,-183,123,-183}, new int[] {-24,523}),
      new State(523, -301, new int[] {-145,524}),
      new State(524, new int[] {365,725,123,-187}, new int[] {-29,525}),
      new State(525, -388, new int[] {-16,526}),
      new State(526, -389, new int[] {-17,527}),
      new State(527, new int[] {123,528}),
      new State(528, -250, new int[] {-88,529}),
      new State(529, new int[] {125,530,311,547,357,548,313,549,353,550,315,551,314,552,356,554,350,690,344,-276,346,-276}, new int[] {-82,532,-9,533,-11,545,-12,553,-10,555}),
      new State(530, -390, new int[] {-18,531}),
      new State(531, -302),
      new State(532, -249),
      new State(533, new int[] {368,483,372,484,319,187,391,188,393,191,63,486,320,-224}, new int[] {-23,534,-22,503,-20,480,-19,485,-106,184,-31,488}),
      new State(534, new int[] {320,539}, new int[] {-97,535,-61,544}),
      new State(535, new int[] {59,536,44,537}),
      new State(536, -251),
      new State(537, new int[] {320,539}, new int[] {-61,538}),
      new State(538, -286),
      new State(539, new int[] {61,541,59,-388,44,-388}, new int[] {-16,540}),
      new State(540, -288),
      new State(541, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,542,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(542, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-388,44,-388}, new int[] {-16,543}),
      new State(543, -289),
      new State(544, -287),
      new State(545, new int[] {311,547,357,548,313,549,353,550,315,551,314,552,368,-274,372,-274,319,-274,391,-274,393,-274,63,-274,320,-274,344,-277,346,-277}, new int[] {-12,546}),
      new State(546, -279),
      new State(547, -280),
      new State(548, -281),
      new State(549, -282),
      new State(550, -283),
      new State(551, -284),
      new State(552, -285),
      new State(553, -278),
      new State(554, -275),
      new State(555, new int[] {344,556,346,464}, new int[] {-5,566}),
      new State(556, new int[] {319,199,262,202,261,203,260,204,259,205,258,206,263,207,264,208,265,209,295,210,306,211,307,212,326,213,322,214,308,215,309,216,310,217,324,218,329,219,330,220,327,221,328,222,333,223,334,224,331,225,332,226,337,227,338,228,349,229,347,230,351,231,352,232,350,233,354,234,355,235,356,236,360,237,358,238,359,239,340,240,345,241,346,242,344,243,348,244,266,245,267,246,367,247,335,248,336,249,341,250,342,251,339,252,368,253,372,254,364,255,365,256,391,257,362,258,366,259,361,260,373,261,374,262,376,263,378,264,370,265,371,266,375,267,392,268,343,269,353,270,315,271,314,272,313,273,357,274,311,275}, new int[] {-86,557,-68,565,-103,561,-104,200,-105,201}),
      new State(557, new int[] {59,558,44,559}),
      new State(558, -252),
      new State(559, new int[] {319,199,262,202,261,203,260,204,259,205,258,206,263,207,264,208,265,209,295,210,306,211,307,212,326,213,322,214,308,215,309,216,310,217,324,218,329,219,330,220,327,221,328,222,333,223,334,224,331,225,332,226,337,227,338,228,349,229,347,230,351,231,352,232,350,233,354,234,355,235,356,236,360,237,358,238,359,239,340,240,345,241,346,242,344,243,348,244,266,245,267,246,367,247,335,248,336,249,341,250,342,251,339,252,368,253,372,254,364,255,365,256,391,257,362,258,366,259,361,260,373,261,374,262,376,263,378,264,370,265,371,266,375,267,392,268,343,269,353,270,315,271,314,272,313,273,357,274,311,275}, new int[] {-68,560,-103,561,-104,200,-105,201}),
      new State(560, -290),
      new State(561, new int[] {61,562}),
      new State(562, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,563,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(563, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-388,44,-388}, new int[] {-16,564}),
      new State(564, -292),
      new State(565, -291),
      new State(566, new int[] {38,505,319,-393,262,-393,261,-393,260,-393,259,-393,258,-393,263,-393,264,-393,265,-393,295,-393,306,-393,307,-393,326,-393,322,-393,308,-393,309,-393,310,-393,324,-393,329,-393,330,-393,327,-393,328,-393,333,-393,334,-393,331,-393,332,-393,337,-393,338,-393,349,-393,347,-393,351,-393,352,-393,350,-393,354,-393,355,-393,356,-393,360,-393,358,-393,359,-393,340,-393,345,-393,346,-393,344,-393,348,-393,266,-393,267,-393,367,-393,335,-393,336,-393,341,-393,342,-393,339,-393,368,-393,372,-393,364,-393,365,-393,391,-393,362,-393,366,-393,361,-393,373,-393,374,-393,376,-393,378,-393,370,-393,371,-393,375,-393,392,-393,343,-393,353,-393,315,-393,314,-393,313,-393,357,-393,311,-393}, new int[] {-4,567}),
      new State(567, new int[] {319,199,262,202,261,203,260,204,259,205,258,206,263,207,264,208,265,209,295,210,306,211,307,212,326,213,322,214,308,215,309,216,310,217,324,218,329,219,330,220,327,221,328,222,333,223,334,224,331,225,332,226,337,227,338,228,349,229,347,230,351,231,352,232,350,233,354,234,355,235,356,236,360,237,358,238,359,239,340,240,345,241,346,242,344,243,348,244,266,245,267,246,367,247,335,248,336,249,341,250,342,251,339,252,368,253,372,254,364,255,365,256,391,257,362,258,366,259,361,260,373,261,374,262,376,263,378,264,370,265,371,266,375,267,392,268,343,269,353,270,315,271,314,272,313,273,357,274,311,275}, new int[] {-103,568,-104,200,-105,201}),
      new State(568, -388, new int[] {-16,569}),
      new State(569, new int[] {40,570}),
      new State(570, new int[] {368,483,372,484,319,187,391,188,393,191,63,486,38,-224,394,-224,320,-224,41,-219}, new int[] {-120,571,-121,491,-118,504,-23,495,-22,503,-20,480,-19,485,-106,184,-31,488}),
      new State(571, new int[] {41,572}),
      new State(572, new int[] {58,478,59,-234,123,-234}, new int[] {-21,573}),
      new State(573, -391, new int[] {-140,574}),
      new State(574, new int[] {59,577,123,578}, new int[] {-74,575}),
      new State(575, -391, new int[] {-140,576}),
      new State(576, -254),
      new State(577, -272),
      new State(578, -127, new int[] {-87,579}),
      new State(579, new int[] {125,580,123,7,330,23,329,31,328,153,335,165,339,179,340,581,348,584,355,587,353,594,324,603,321,610,320,97,36,98,319,613,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,360,630,334,640,332,650,59,656,349,657,345,673,315,731,314,732,362,734,366,744,363,756,322,-389,361,-175}, new int[] {-81,10,-33,11,-17,12,-41,611,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,615,-6,465,-34,676,-35,677,-14,678,-13,729,-36,733,-38,743}),
      new State(580, -273),
      new State(581, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,59,-440}, new int[] {-60,582,-41,120,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(582, new int[] {59,583}),
      new State(583, -142),
      new State(584, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,59,-440}, new int[] {-60,585,-41,120,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(585, new int[] {59,586}),
      new State(586, -143),
      new State(587, new int[] {320,97,36,98}, new int[] {-90,588,-57,593,-47,592}),
      new State(588, new int[] {59,589,44,590}),
      new State(589, -144),
      new State(590, new int[] {320,97,36,98}, new int[] {-57,591,-47,592}),
      new State(591, -242),
      new State(592, -244),
      new State(593, -243),
      new State(594, new int[] {320,599,346,464,343,477,390,-405}, new int[] {-91,595,-83,137,-58,602,-5,138,-6,465}),
      new State(595, new int[] {59,596,44,597}),
      new State(596, -145),
      new State(597, new int[] {320,599}, new int[] {-58,598}),
      new State(598, -245),
      new State(599, new int[] {61,600,59,-247,44,-247}),
      new State(600, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,601,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(601, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-248,44,-248}),
      new State(602, -246),
      new State(603, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-92,604,-59,609,-41,608,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(604, new int[] {59,605,44,606}),
      new State(605, -146),
      new State(606, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-59,607,-41,608,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(607, -294),
      new State(608, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-296,44,-296}),
      new State(609, -295),
      new State(610, -147),
      new State(611, new int[] {59,612,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(612, -148),
      new State(613, new int[] {58,614,393,-83,40,-83,390,-83,91,-83,59,-83,284,-83,285,-83,263,-83,265,-83,264,-83,124,-83,38,-83,94,-83,46,-83,43,-83,45,-83,42,-83,305,-83,47,-83,37,-83,293,-83,294,-83,287,-83,286,-83,289,-83,288,-83,60,-83,291,-83,62,-83,292,-83,290,-83,295,-83,63,-83,283,-83}),
      new State(614, -156),
      new State(615, new int[] {38,505,319,-393,40,-393}, new int[] {-4,616}),
      new State(616, new int[] {319,617,40,-388}, new int[] {-16,140}),
      new State(617, -388, new int[] {-16,618}),
      new State(618, new int[] {40,619}),
      new State(619, new int[] {368,483,372,484,319,187,391,188,393,191,63,486,38,-224,394,-224,320,-224,41,-219}, new int[] {-120,620,-121,491,-118,504,-23,495,-22,503,-20,480,-19,485,-106,184,-31,488}),
      new State(620, new int[] {41,621}),
      new State(621, new int[] {58,478,123,-234}, new int[] {-21,622}),
      new State(622, -391, new int[] {-140,623}),
      new State(623, -389, new int[] {-17,624}),
      new State(624, new int[] {123,625}),
      new State(625, -127, new int[] {-87,626}),
      new State(626, new int[] {125,627,123,7,330,23,329,31,328,153,335,165,339,179,340,581,348,584,355,587,353,594,324,603,321,610,320,97,36,98,319,613,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,360,630,334,640,332,650,59,656,349,657,345,673,315,731,314,732,362,734,366,744,363,756,322,-389,361,-175}, new int[] {-81,10,-33,11,-17,12,-41,611,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,615,-6,465,-34,676,-35,677,-14,678,-13,729,-36,733,-38,743}),
      new State(627, -390, new int[] {-18,628}),
      new State(628, -391, new int[] {-140,629}),
      new State(629, -168),
      new State(630, new int[] {40,631}),
      new State(631, new int[] {320,97,36,98,353,296,319,187,391,188,393,191,40,297,368,283,91,325,323,305}, new int[] {-93,632,-56,639,-42,638,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,324,-49,335,-51,310,-78,311}),
      new State(632, new int[] {44,636,41,-110}, new int[] {-3,633}),
      new State(633, new int[] {41,634}),
      new State(634, new int[] {59,635}),
      new State(635, -149),
      new State(636, new int[] {320,97,36,98,353,296,319,187,391,188,393,191,40,297,368,283,91,325,323,305,41,-111}, new int[] {-56,637,-42,638,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,324,-49,335,-51,310,-78,311}),
      new State(637, -166),
      new State(638, new int[] {44,-167,41,-167,91,-443,369,-443,123,-443,390,-443}),
      new State(639, -165),
      new State(640, new int[] {40,641}),
      new State(641, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,642,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(642, new int[] {338,643,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(643, new int[] {320,97,36,98,353,296,319,187,391,188,393,191,40,297,368,283,91,790,323,305,38,797,367,799}, new int[] {-130,644,-42,789,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,324,-49,335,-51,310,-78,311}),
      new State(644, new int[] {41,645,268,783}),
      new State(645, -389, new int[] {-17,646}),
      new State(646, new int[] {123,7,330,23,329,31,328,153,335,165,339,179,340,581,348,584,355,587,353,594,324,603,321,610,320,97,36,98,319,613,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,360,630,334,640,332,650,59,656,349,657,345,673,58,779,322,-389}, new int[] {-71,647,-33,649,-17,12,-41,611,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(647, -390, new int[] {-18,648}),
      new State(648, -150),
      new State(649, -195),
      new State(650, new int[] {40,651}),
      new State(651, new int[] {319,774}, new int[] {-85,652,-55,778}),
      new State(652, new int[] {41,653,44,772}),
      new State(653, new int[] {123,7,330,23,329,31,328,153,335,165,339,179,340,581,348,584,355,587,353,594,324,603,321,610,320,97,36,98,319,613,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,360,630,334,640,332,650,59,656,349,657,345,673,58,768,322,-389}, new int[] {-64,654,-33,655,-17,12,-41,611,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(654, -152),
      new State(655, -197),
      new State(656, -153),
      new State(657, new int[] {123,658}),
      new State(658, -127, new int[] {-87,659}),
      new State(659, new int[] {125,660,123,7,330,23,329,31,328,153,335,165,339,179,340,581,348,584,355,587,353,594,324,603,321,610,320,97,36,98,319,613,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,360,630,334,640,332,650,59,656,349,657,345,673,315,731,314,732,362,734,366,744,363,756,322,-389,361,-175}, new int[] {-81,10,-33,11,-17,12,-41,611,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,615,-6,465,-34,676,-35,677,-14,678,-13,729,-36,733,-38,743}),
      new State(660, -389, new int[] {-17,661}),
      new State(661, -157, new int[] {-101,662}),
      new State(662, new int[] {347,665,351,764,123,-163,330,-163,329,-163,328,-163,335,-163,339,-163,340,-163,348,-163,355,-163,353,-163,324,-163,321,-163,320,-163,36,-163,319,-163,391,-163,393,-163,40,-163,368,-163,91,-163,323,-163,367,-163,307,-163,303,-163,302,-163,43,-163,45,-163,33,-163,126,-163,306,-163,358,-163,359,-163,262,-163,261,-163,260,-163,259,-163,258,-163,301,-163,300,-163,299,-163,298,-163,297,-163,296,-163,304,-163,326,-163,64,-163,317,-163,312,-163,370,-163,371,-163,375,-163,374,-163,378,-163,376,-163,392,-163,373,-163,34,-163,383,-163,96,-163,266,-163,267,-163,269,-163,352,-163,346,-163,343,-163,360,-163,334,-163,332,-163,59,-163,349,-163,345,-163,315,-163,314,-163,362,-163,366,-163,363,-163,350,-163,344,-163,322,-163,361,-163,0,-163,125,-163,308,-163,309,-163,341,-163,342,-163,336,-163,337,-163,331,-163,333,-163,327,-163,310,-163}, new int[] {-76,663}),
      new State(663, -390, new int[] {-18,664}),
      new State(664, -154),
      new State(665, new int[] {40,666}),
      new State(666, new int[] {319,187,391,188,393,191}, new int[] {-28,667,-19,763,-106,184}),
      new State(667, new int[] {124,760,320,762,41,-159}, new int[] {-102,668}),
      new State(668, new int[] {41,669}),
      new State(669, new int[] {123,670}),
      new State(670, -127, new int[] {-87,671}),
      new State(671, new int[] {125,672,123,7,330,23,329,31,328,153,335,165,339,179,340,581,348,584,355,587,353,594,324,603,321,610,320,97,36,98,319,613,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,360,630,334,640,332,650,59,656,349,657,345,673,315,731,314,732,362,734,366,744,363,756,322,-389,361,-175}, new int[] {-81,10,-33,11,-17,12,-41,611,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,615,-6,465,-34,676,-35,677,-14,678,-13,729,-36,733,-38,743}),
      new State(672, -158),
      new State(673, new int[] {319,674}),
      new State(674, new int[] {59,675}),
      new State(675, -155),
      new State(676, -129),
      new State(677, -130),
      new State(678, new int[] {361,679}),
      new State(679, new int[] {319,680}),
      new State(680, new int[] {364,727,365,-183,123,-183}, new int[] {-24,681}),
      new State(681, -173, new int[] {-141,682}),
      new State(682, new int[] {365,725,123,-187}, new int[] {-29,683}),
      new State(683, -388, new int[] {-16,684}),
      new State(684, -389, new int[] {-17,685}),
      new State(685, new int[] {123,686}),
      new State(686, -250, new int[] {-88,687}),
      new State(687, new int[] {125,688,311,547,357,548,313,549,353,550,315,551,314,552,356,554,350,690,344,-276,346,-276}, new int[] {-82,532,-9,533,-11,545,-12,553,-10,555}),
      new State(688, -390, new int[] {-18,689}),
      new State(689, -174),
      new State(690, new int[] {319,187,391,188,393,191}, new int[] {-27,691,-19,706,-106,184}),
      new State(691, new int[] {44,693,59,695,123,696}, new int[] {-79,692}),
      new State(692, -253),
      new State(693, new int[] {319,187,391,188,393,191}, new int[] {-19,694,-106,184}),
      new State(694, -256),
      new State(695, -257),
      new State(696, new int[] {125,697,319,710,391,711,393,191,262,202,261,203,260,204,259,205,258,206,263,207,264,208,265,209,295,210,306,211,307,212,326,213,322,214,308,215,309,216,310,217,324,218,329,219,330,220,327,221,328,222,333,223,334,224,331,225,332,226,337,227,338,228,349,229,347,230,351,231,352,232,350,233,354,234,355,235,356,236,360,237,358,238,359,239,340,240,345,241,346,242,344,243,348,244,266,245,267,246,367,247,335,248,336,249,341,250,342,251,339,252,368,253,372,254,364,255,365,256,362,258,366,259,361,260,373,261,374,262,376,263,378,264,370,265,371,266,375,267,392,268,343,269,353,270,315,271,314,272,313,273,357,274,311,275}, new int[] {-94,698,-65,724,-66,701,-109,702,-19,707,-106,184,-67,712,-108,713,-103,723,-104,200,-105,201}),
      new State(697, -258),
      new State(698, new int[] {125,699,319,710,391,711,393,191,262,202,261,203,260,204,259,205,258,206,263,207,264,208,265,209,295,210,306,211,307,212,326,213,322,214,308,215,309,216,310,217,324,218,329,219,330,220,327,221,328,222,333,223,334,224,331,225,332,226,337,227,338,228,349,229,347,230,351,231,352,232,350,233,354,234,355,235,356,236,360,237,358,238,359,239,340,240,345,241,346,242,344,243,348,244,266,245,267,246,367,247,335,248,336,249,341,250,342,251,339,252,368,253,372,254,364,255,365,256,362,258,366,259,361,260,373,261,374,262,376,263,378,264,370,265,371,266,375,267,392,268,343,269,353,270,315,271,314,272,313,273,357,274,311,275}, new int[] {-65,700,-66,701,-109,702,-19,707,-106,184,-67,712,-108,713,-103,723,-104,200,-105,201}),
      new State(699, -259),
      new State(700, -261),
      new State(701, -262),
      new State(702, new int[] {354,703,338,-270}),
      new State(703, new int[] {319,187,391,188,393,191}, new int[] {-27,704,-19,706,-106,184}),
      new State(704, new int[] {59,705,44,693}),
      new State(705, -264),
      new State(706, -255),
      new State(707, new int[] {390,708}),
      new State(708, new int[] {319,199,262,202,261,203,260,204,259,205,258,206,263,207,264,208,265,209,295,210,306,211,307,212,326,213,322,214,308,215,309,216,310,217,324,218,329,219,330,220,327,221,328,222,333,223,334,224,331,225,332,226,337,227,338,228,349,229,347,230,351,231,352,232,350,233,354,234,355,235,356,236,360,237,358,238,359,239,340,240,345,241,346,242,344,243,348,244,266,245,267,246,367,247,335,248,336,249,341,250,342,251,339,252,368,253,372,254,364,255,365,256,391,257,362,258,366,259,361,260,373,261,374,262,376,263,378,264,370,265,371,266,375,267,392,268,343,269,353,270,315,271,314,272,313,273,357,274,311,275}, new int[] {-103,709,-104,200,-105,201}),
      new State(709, -271),
      new State(710, new int[] {393,-83,390,-83,338,-79}),
      new State(711, new int[] {393,189,338,-59}),
      new State(712, -263),
      new State(713, new int[] {338,714}),
      new State(714, new int[] {319,715,262,202,261,203,260,204,259,205,258,206,263,207,264,208,265,209,295,210,306,211,307,212,326,213,322,214,308,215,309,216,310,217,324,218,329,219,330,220,327,221,328,222,333,223,334,224,331,225,332,226,337,227,338,228,349,229,347,230,351,231,352,232,350,233,354,234,355,235,356,236,360,237,358,238,359,239,340,240,345,241,346,242,344,243,348,244,266,245,267,246,367,247,335,248,336,249,341,250,342,251,339,252,368,253,372,254,364,255,365,256,391,257,362,258,366,259,361,260,373,261,374,262,376,263,378,264,370,265,371,266,375,267,392,268,343,269,311,547,357,548,313,549,353,550,315,551,314,552}, new int[] {-105,717,-12,719}),
      new State(715, new int[] {59,716}),
      new State(716, -265),
      new State(717, new int[] {59,718}),
      new State(718, -266),
      new State(719, new int[] {59,722,319,199,262,202,261,203,260,204,259,205,258,206,263,207,264,208,265,209,295,210,306,211,307,212,326,213,322,214,308,215,309,216,310,217,324,218,329,219,330,220,327,221,328,222,333,223,334,224,331,225,332,226,337,227,338,228,349,229,347,230,351,231,352,232,350,233,354,234,355,235,356,236,360,237,358,238,359,239,340,240,345,241,346,242,344,243,348,244,266,245,267,246,367,247,335,248,336,249,341,250,342,251,339,252,368,253,372,254,364,255,365,256,391,257,362,258,366,259,361,260,373,261,374,262,376,263,378,264,370,265,371,266,375,267,392,268,343,269,353,270,315,271,314,272,313,273,357,274,311,275}, new int[] {-103,720,-104,200,-105,201}),
      new State(720, new int[] {59,721}),
      new State(721, -267),
      new State(722, -268),
      new State(723, -269),
      new State(724, -260),
      new State(725, new int[] {319,187,391,188,393,191}, new int[] {-27,726,-19,706,-106,184}),
      new State(726, new int[] {44,693,123,-188}),
      new State(727, new int[] {319,187,391,188,393,191}, new int[] {-19,728,-106,184}),
      new State(728, -184),
      new State(729, new int[] {315,731,314,732,361,-175}, new int[] {-14,730,-13,729}),
      new State(730, -176),
      new State(731, -177),
      new State(732, -178),
      new State(733, -131),
      new State(734, new int[] {319,735}),
      new State(735, -179, new int[] {-142,736}),
      new State(736, -388, new int[] {-16,737}),
      new State(737, -389, new int[] {-17,738}),
      new State(738, new int[] {123,739}),
      new State(739, -250, new int[] {-88,740}),
      new State(740, new int[] {125,741,311,547,357,548,313,549,353,550,315,551,314,552,356,554,350,690,344,-276,346,-276}, new int[] {-82,532,-9,533,-11,545,-12,553,-10,555}),
      new State(741, -390, new int[] {-18,742}),
      new State(742, -180),
      new State(743, -132),
      new State(744, new int[] {319,745}),
      new State(745, -181, new int[] {-143,746}),
      new State(746, new int[] {364,754,123,-185}, new int[] {-30,747}),
      new State(747, -388, new int[] {-16,748}),
      new State(748, -389, new int[] {-17,749}),
      new State(749, new int[] {123,750}),
      new State(750, -250, new int[] {-88,751}),
      new State(751, new int[] {125,752,311,547,357,548,313,549,353,550,315,551,314,552,356,554,350,690,344,-276,346,-276}, new int[] {-82,532,-9,533,-11,545,-12,553,-10,555}),
      new State(752, -390, new int[] {-18,753}),
      new State(753, -182),
      new State(754, new int[] {319,187,391,188,393,191}, new int[] {-27,755,-19,706,-106,184}),
      new State(755, new int[] {44,693,123,-186}),
      new State(756, new int[] {40,757}),
      new State(757, new int[] {41,758}),
      new State(758, new int[] {59,759}),
      new State(759, -133),
      new State(760, new int[] {319,187,391,188,393,191}, new int[] {-19,761,-106,184}),
      new State(761, -162),
      new State(762, -160),
      new State(763, -161),
      new State(764, new int[] {123,765}),
      new State(765, -127, new int[] {-87,766}),
      new State(766, new int[] {125,767,123,7,330,23,329,31,328,153,335,165,339,179,340,581,348,584,355,587,353,594,324,603,321,610,320,97,36,98,319,613,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,360,630,334,640,332,650,59,656,349,657,345,673,315,731,314,732,362,734,366,744,363,756,322,-389,361,-175}, new int[] {-81,10,-33,11,-17,12,-41,611,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,615,-6,465,-34,676,-35,677,-14,678,-13,729,-36,733,-38,743}),
      new State(767, -164),
      new State(768, -127, new int[] {-87,769}),
      new State(769, new int[] {337,770,123,7,330,23,329,31,328,153,335,165,339,179,340,581,348,584,355,587,353,594,324,603,321,610,320,97,36,98,319,613,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,360,630,334,640,332,650,59,656,349,657,345,673,315,731,314,732,362,734,366,744,363,756,322,-389,361,-175}, new int[] {-81,10,-33,11,-17,12,-41,611,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,615,-6,465,-34,676,-35,677,-14,678,-13,729,-36,733,-38,743}),
      new State(770, new int[] {59,771}),
      new State(771, -198),
      new State(772, new int[] {319,774}, new int[] {-55,773}),
      new State(773, -124),
      new State(774, new int[] {61,775}),
      new State(775, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,776,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(776, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,41,-388,44,-388,59,-388}, new int[] {-16,777}),
      new State(777, -293),
      new State(778, -125),
      new State(779, -127, new int[] {-87,780}),
      new State(780, new int[] {331,781,123,7,330,23,329,31,328,153,335,165,339,179,340,581,348,584,355,587,353,594,324,603,321,610,320,97,36,98,319,613,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,360,630,334,640,332,650,59,656,349,657,345,673,315,731,314,732,362,734,366,744,363,756,322,-389,361,-175}, new int[] {-81,10,-33,11,-17,12,-41,611,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,615,-6,465,-34,676,-35,677,-14,678,-13,729,-36,733,-38,743}),
      new State(781, new int[] {59,782}),
      new State(782, -196),
      new State(783, new int[] {320,97,36,98,353,296,319,187,391,188,393,191,40,297,368,283,91,790,323,305,38,797,367,799}, new int[] {-130,784,-42,789,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,324,-49,335,-51,310,-78,311}),
      new State(784, new int[] {41,785}),
      new State(785, -389, new int[] {-17,786}),
      new State(786, new int[] {123,7,330,23,329,31,328,153,335,165,339,179,340,581,348,584,355,587,353,594,324,603,321,610,320,97,36,98,319,613,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,360,630,334,640,332,650,59,656,349,657,345,673,58,779,322,-389}, new int[] {-71,787,-33,649,-17,12,-41,611,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(787, -390, new int[] {-18,788}),
      new State(788, -151),
      new State(789, new int[] {41,-189,268,-189,91,-443,369,-443,123,-443,390,-443}),
      new State(790, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,329,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,38,793,394,795,44,-476,93,-476}, new int[] {-127,791,-126,287,-124,328,-125,290,-41,291,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(791, new int[] {93,792}),
      new State(792, new int[] {91,-417,369,-417,123,-417,390,-417,40,-417,41,-192,268,-192}),
      new State(793, new int[] {320,97,36,98,353,296,319,187,391,188,393,191,40,297,368,283,91,325,323,305}, new int[] {-42,794,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,324,-49,335,-51,310,-78,311}),
      new State(794, new int[] {44,-483,41,-483,93,-483,91,-443,369,-443,123,-443,390,-443}),
      new State(795, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,796,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(796, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,44,-484,41,-484,93,-484}),
      new State(797, new int[] {320,97,36,98,353,296,319,187,391,188,393,191,40,297,368,283,91,325,323,305}, new int[] {-42,798,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,324,-49,335,-51,310,-78,311}),
      new State(798, new int[] {41,-190,268,-190,91,-443,369,-443,123,-443,390,-443}),
      new State(799, new int[] {40,800}),
      new State(800, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,329,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,38,793,394,795,44,-476,41,-476}, new int[] {-127,801,-126,287,-124,328,-125,290,-41,291,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(801, new int[] {41,802}),
      new State(802, -191),
      new State(803, new int[] {40,804}),
      new State(804, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,329,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,38,793,394,795,44,-476,41,-476}, new int[] {-127,805,-126,287,-124,328,-125,290,-41,291,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(805, new int[] {41,806}),
      new State(806, new int[] {61,318,44,-485,41,-485,93,-485}),
      new State(807, -206),
      new State(808, -207),
      new State(809, new int[] {58,807,59,808}, new int[] {-144,810}),
      new State(810, -127, new int[] {-87,811}),
      new State(811, new int[] {123,7,330,23,329,31,328,153,335,165,339,179,340,581,348,584,355,587,353,594,324,603,321,610,320,97,36,98,319,613,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,360,630,334,640,332,650,59,656,349,657,345,673,315,731,314,732,362,734,366,744,363,756,125,-205,341,-205,342,-205,336,-205,322,-389,361,-175}, new int[] {-81,10,-33,11,-17,12,-41,611,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,615,-6,465,-34,676,-35,677,-14,678,-13,729,-36,733,-38,743}),
      new State(812, -203, new int[] {-98,813}),
      new State(813, new int[] {125,814,341,175,342,809}),
      new State(814, -200),
      new State(815, new int[] {59,819,336,-203,341,-203,342,-203}, new int[] {-98,816}),
      new State(816, new int[] {336,817,341,175,342,809}),
      new State(817, new int[] {59,818}),
      new State(818, -201),
      new State(819, -203, new int[] {-98,820}),
      new State(820, new int[] {336,821,341,175,342,809}),
      new State(821, new int[] {59,822}),
      new State(822, -202),
      new State(823, -127, new int[] {-87,824}),
      new State(824, new int[] {333,825,123,7,330,23,329,31,328,153,335,165,339,179,340,581,348,584,355,587,353,594,324,603,321,610,320,97,36,98,319,613,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,360,630,334,640,332,650,59,656,349,657,345,673,315,731,314,732,362,734,366,744,363,756,322,-389,361,-175}, new int[] {-81,10,-33,11,-17,12,-41,611,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,615,-6,465,-34,676,-35,677,-14,678,-13,729,-36,733,-38,743}),
      new State(825, new int[] {59,826}),
      new State(826, -194),
      new State(827, new int[] {44,828,59,-298,41,-298}),
      new State(828, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,829,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(829, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,44,-299,59,-299,41,-299}),
      new State(830, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,44,-300,59,-300,41,-300}),
      new State(831, new int[] {40,832}),
      new State(832, new int[] {320,837,38,838}, new int[] {-123,833,-119,840}),
      new State(833, new int[] {41,834,44,835}),
      new State(834, -396),
      new State(835, new int[] {320,837,38,838}, new int[] {-119,836}),
      new State(836, -397),
      new State(837, -399),
      new State(838, new int[] {320,839}),
      new State(839, -400),
      new State(840, -398),
      new State(841, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,842,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(842, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,44,-241,41,-241}),
      new State(843, -238),
      new State(844, new int[] {319,513,123,514,320,97,36,98}, new int[] {-1,845,-47,517}),
      new State(845, new int[] {40,128,61,-457,270,-457,271,-457,279,-457,281,-457,278,-457,277,-457,276,-457,275,-457,274,-457,273,-457,272,-457,280,-457,282,-457,303,-457,302,-457,59,-457,284,-457,285,-457,263,-457,265,-457,264,-457,124,-457,38,-457,94,-457,46,-457,43,-457,45,-457,42,-457,305,-457,47,-457,37,-457,293,-457,294,-457,287,-457,286,-457,289,-457,288,-457,60,-457,291,-457,62,-457,292,-457,290,-457,295,-457,63,-457,283,-457,91,-457,369,-457,123,-457,390,-457,41,-457,125,-457,58,-457,93,-457,44,-457,268,-457,338,-457}, new int[] {-116,846}),
      new State(846, -453),
      new State(847, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,848,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(848, new int[] {125,849,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(849, -452),
      new State(850, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,851,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(851, new int[] {284,40,285,42,263,-311,265,-311,264,-311,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-311,41,-311,125,-311,58,-311,93,-311,44,-311,268,-311,338,-311}),
      new State(852, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,853,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(853, new int[] {284,40,285,42,263,-312,265,-312,264,-312,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-312,41,-312,125,-312,58,-312,93,-312,44,-312,268,-312,338,-312}),
      new State(854, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,855,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(855, new int[] {284,40,285,42,263,-313,265,-313,264,-313,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-313,41,-313,125,-313,58,-313,93,-313,44,-313,268,-313,338,-313}),
      new State(856, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,857,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(857, new int[] {284,40,285,42,263,-314,265,-314,264,-314,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-314,41,-314,125,-314,58,-314,93,-314,44,-314,268,-314,338,-314}),
      new State(858, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,859,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(859, new int[] {284,40,285,42,263,-315,265,-315,264,-315,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-315,41,-315,125,-315,58,-315,93,-315,44,-315,268,-315,338,-315}),
      new State(860, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,861,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(861, new int[] {284,40,285,42,263,-316,265,-316,264,-316,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-316,41,-316,125,-316,58,-316,93,-316,44,-316,268,-316,338,-316}),
      new State(862, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,863,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(863, new int[] {284,40,285,42,263,-317,265,-317,264,-317,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-317,41,-317,125,-317,58,-317,93,-317,44,-317,268,-317,338,-317}),
      new State(864, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,865,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(865, new int[] {284,40,285,42,263,-318,265,-318,264,-318,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-318,41,-318,125,-318,58,-318,93,-318,44,-318,268,-318,338,-318}),
      new State(866, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,867,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(867, new int[] {284,40,285,42,263,-319,265,-319,264,-319,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-319,41,-319,125,-319,58,-319,93,-319,44,-319,268,-319,338,-319}),
      new State(868, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,869,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(869, new int[] {284,40,285,42,263,-320,265,-320,264,-320,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-320,41,-320,125,-320,58,-320,93,-320,44,-320,268,-320,338,-320}),
      new State(870, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,871,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(871, new int[] {284,40,285,42,263,-321,265,-321,264,-321,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-321,41,-321,125,-321,58,-321,93,-321,44,-321,268,-321,338,-321}),
      new State(872, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,873,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(873, new int[] {284,40,285,42,263,-322,265,-322,264,-322,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-322,41,-322,125,-322,58,-322,93,-322,44,-322,268,-322,338,-322}),
      new State(874, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,875,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(875, new int[] {284,40,285,42,263,-323,265,-323,264,-323,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-323,41,-323,125,-323,58,-323,93,-323,44,-323,268,-323,338,-323}),
      new State(876, -324),
      new State(877, -326),
      new State(878, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,879,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(879, new int[] {284,40,285,42,263,-362,265,-362,264,-362,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,-362,283,106,59,-362,41,-362,125,-362,58,-362,93,-362,44,-362,268,-362,338,-362}),
      new State(880, -460),
      new State(881, -127, new int[] {-87,882}),
      new State(882, new int[] {327,883,123,7,330,23,329,31,328,153,335,165,339,179,340,581,348,584,355,587,353,594,324,603,321,610,320,97,36,98,319,613,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,360,630,334,640,332,650,59,656,349,657,345,673,315,731,314,732,362,734,366,744,363,756,322,-389,361,-175}, new int[] {-81,10,-33,11,-17,12,-41,611,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,615,-6,465,-34,676,-35,677,-14,678,-13,729,-36,733,-38,743}),
      new State(883, new int[] {59,884}),
      new State(884, -209),
      new State(885, new int[] {123,7,330,23,329,31,328,153,335,165,339,179,340,581,348,584,355,587,353,594,324,603,321,610,320,97,36,98,319,613,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,360,630,334,640,332,650,59,656,349,657,345,673,322,-389}, new int[] {-33,886,-17,12,-41,611,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(886, -213),
      new State(887, new int[] {40,888}),
      new State(888, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,889,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(889, new int[] {41,890,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(890, new int[] {58,892,123,7,330,23,329,31,328,153,335,165,339,179,340,581,348,584,355,587,353,594,324,603,321,610,320,97,36,98,319,613,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,360,630,334,640,332,650,59,656,349,657,345,673,322,-389}, new int[] {-33,891,-17,12,-41,611,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(891, -210),
      new State(892, -127, new int[] {-87,893}),
      new State(893, new int[] {123,7,330,23,329,31,328,153,335,165,339,179,340,581,348,584,355,587,353,594,324,603,321,610,320,97,36,98,319,613,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,360,630,334,640,332,650,59,656,349,657,345,673,315,731,314,732,362,734,366,744,363,756,310,-214,308,-214,309,-214,322,-389,361,-175}, new int[] {-81,10,-33,11,-17,12,-41,611,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,615,-6,465,-34,676,-35,677,-14,678,-13,729,-36,733,-38,743}),
      new State(894, new int[] {310,895,308,897,309,903}),
      new State(895, new int[] {59,896}),
      new State(896, -216),
      new State(897, new int[] {40,898}),
      new State(898, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-41,899,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,138,-6,465}),
      new State(899, new int[] {41,900,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(900, new int[] {58,901}),
      new State(901, -127, new int[] {-87,902}),
      new State(902, new int[] {123,7,330,23,329,31,328,153,335,165,339,179,340,581,348,584,355,587,353,594,324,603,321,610,320,97,36,98,319,613,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,360,630,334,640,332,650,59,656,349,657,345,673,315,731,314,732,362,734,366,744,363,756,310,-215,308,-215,309,-215,322,-389,361,-175}, new int[] {-81,10,-33,11,-17,12,-41,611,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,615,-6,465,-34,676,-35,677,-14,678,-13,729,-36,733,-38,743}),
      new State(903, new int[] {58,904}),
      new State(904, -127, new int[] {-87,905}),
      new State(905, new int[] {310,906,123,7,330,23,329,31,328,153,335,165,339,179,340,581,348,584,355,587,353,594,324,603,321,610,320,97,36,98,319,613,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,360,630,334,640,332,650,59,656,349,657,345,673,315,731,314,732,362,734,366,744,363,756,322,-389,361,-175}, new int[] {-81,10,-33,11,-17,12,-41,611,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,615,-6,465,-34,676,-35,677,-14,678,-13,729,-36,733,-38,743}),
      new State(906, new int[] {59,907}),
      new State(907, -217),
      new State(908, new int[] {393,189,319,187,123,-388}, new int[] {-106,909,-16,983}),
      new State(909, new int[] {59,910,393,185,123,-388}, new int[] {-16,911}),
      new State(910, -94),
      new State(911, -95, new int[] {-138,912}),
      new State(912, new int[] {123,913}),
      new State(913, -82, new int[] {-84,914}),
      new State(914, new int[] {125,915,123,7,330,23,329,31,328,153,335,165,339,179,340,581,348,584,355,587,353,594,324,603,321,610,320,97,36,98,319,613,391,908,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,360,630,334,640,332,650,59,656,349,657,345,673,315,731,314,732,362,734,366,744,363,920,350,924,344,980,322,-389,361,-175}, new int[] {-32,5,-33,6,-17,12,-41,611,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,615,-6,465,-34,916,-35,917,-14,678,-13,729,-36,918,-38,919}),
      new State(915, -96),
      new State(916, -89),
      new State(917, -90),
      new State(918, -91),
      new State(919, -92),
      new State(920, new int[] {40,921}),
      new State(921, new int[] {41,922}),
      new State(922, new int[] {59,923}),
      new State(923, -93),
      new State(924, new int[] {319,187,393,973,346,970,344,971}, new int[] {-134,925,-15,927,-132,957,-106,959,-110,956,-107,934}),
      new State(925, new int[] {59,926}),
      new State(926, -99),
      new State(927, new int[] {319,187,393,949}, new int[] {-133,928,-132,930,-106,940,-110,956,-107,934}),
      new State(928, new int[] {59,929}),
      new State(929, -100),
      new State(930, new int[] {59,931,44,932}),
      new State(931, -102),
      new State(932, new int[] {319,187,393,938}, new int[] {-110,933,-107,934,-106,935}),
      new State(933, -116),
      new State(934, -122),
      new State(935, new int[] {393,185,338,936,59,-120,44,-120,125,-120}),
      new State(936, new int[] {319,937}),
      new State(937, -121),
      new State(938, new int[] {319,187}, new int[] {-107,939,-106,935}),
      new State(939, -123),
      new State(940, new int[] {393,941,338,936,59,-120,44,-120}),
      new State(941, new int[] {123,942,319,186}),
      new State(942, new int[] {319,187}, new int[] {-111,943,-107,948,-106,935}),
      new State(943, new int[] {44,946,125,-110}, new int[] {-3,944}),
      new State(944, new int[] {125,945}),
      new State(945, -106),
      new State(946, new int[] {319,187,125,-111}, new int[] {-107,947,-106,935}),
      new State(947, -114),
      new State(948, -115),
      new State(949, new int[] {319,187}, new int[] {-106,950,-107,939}),
      new State(950, new int[] {393,951,338,936,59,-120,44,-120}),
      new State(951, new int[] {123,952,319,186}),
      new State(952, new int[] {319,187}, new int[] {-111,953,-107,948,-106,935}),
      new State(953, new int[] {44,946,125,-110}, new int[] {-3,954}),
      new State(954, new int[] {125,955}),
      new State(955, -107),
      new State(956, -117),
      new State(957, new int[] {59,958,44,932}),
      new State(958, -101),
      new State(959, new int[] {393,960,338,936,59,-120,44,-120}),
      new State(960, new int[] {123,961,319,186}),
      new State(961, new int[] {319,187,346,970,344,971}, new int[] {-113,962,-112,972,-107,967,-106,935,-15,968}),
      new State(962, new int[] {44,965,125,-110}, new int[] {-3,963}),
      new State(963, new int[] {125,964}),
      new State(964, -108),
      new State(965, new int[] {319,187,346,970,344,971,125,-111}, new int[] {-112,966,-107,967,-106,935,-15,968}),
      new State(966, -112),
      new State(967, -118),
      new State(968, new int[] {319,187}, new int[] {-107,969,-106,935}),
      new State(969, -119),
      new State(970, -104),
      new State(971, -105),
      new State(972, -113),
      new State(973, new int[] {319,187}, new int[] {-106,974,-107,939}),
      new State(974, new int[] {393,975,338,936,59,-120,44,-120}),
      new State(975, new int[] {123,976,319,186}),
      new State(976, new int[] {319,187,346,970,344,971}, new int[] {-113,977,-112,972,-107,967,-106,935,-15,968}),
      new State(977, new int[] {44,965,125,-110}, new int[] {-3,978}),
      new State(978, new int[] {125,979}),
      new State(979, -109),
      new State(980, new int[] {319,774}, new int[] {-85,981,-55,778}),
      new State(981, new int[] {59,982,44,772}),
      new State(982, -103),
      new State(983, -97, new int[] {-139,984}),
      new State(984, new int[] {123,985}),
      new State(985, -82, new int[] {-84,986}),
      new State(986, new int[] {125,987,123,7,330,23,329,31,328,153,335,165,339,179,340,581,348,584,355,587,353,594,324,603,321,610,320,97,36,98,319,613,391,908,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,360,630,334,640,332,650,59,656,349,657,345,673,315,731,314,732,362,734,366,744,363,920,350,924,344,980,322,-389,361,-175}, new int[] {-32,5,-33,6,-17,12,-41,611,-42,108,-46,114,-47,115,-69,116,-52,121,-26,122,-19,182,-106,184,-80,193,-50,282,-49,306,-51,310,-78,311,-43,313,-44,344,-45,355,-48,401,-73,446,-83,463,-5,615,-6,465,-34,916,-35,917,-14,678,-13,729,-36,918,-38,919}),
      new State(987, -98),
    };
    #endregion

    #region rules
    rules = new Rule[]
    {
    default(Rule),
    new Rule(-136, new int[]{-135,0}),
    new Rule(-137, new int[]{}),
    new Rule(-135, new int[]{-137,-84}),
    new Rule(-105, new int[]{262}),
    new Rule(-105, new int[]{261}),
    new Rule(-105, new int[]{260}),
    new Rule(-105, new int[]{259}),
    new Rule(-105, new int[]{258}),
    new Rule(-105, new int[]{263}),
    new Rule(-105, new int[]{264}),
    new Rule(-105, new int[]{265}),
    new Rule(-105, new int[]{295}),
    new Rule(-105, new int[]{306}),
    new Rule(-105, new int[]{307}),
    new Rule(-105, new int[]{326}),
    new Rule(-105, new int[]{322}),
    new Rule(-105, new int[]{308}),
    new Rule(-105, new int[]{309}),
    new Rule(-105, new int[]{310}),
    new Rule(-105, new int[]{324}),
    new Rule(-105, new int[]{329}),
    new Rule(-105, new int[]{330}),
    new Rule(-105, new int[]{327}),
    new Rule(-105, new int[]{328}),
    new Rule(-105, new int[]{333}),
    new Rule(-105, new int[]{334}),
    new Rule(-105, new int[]{331}),
    new Rule(-105, new int[]{332}),
    new Rule(-105, new int[]{337}),
    new Rule(-105, new int[]{338}),
    new Rule(-105, new int[]{349}),
    new Rule(-105, new int[]{347}),
    new Rule(-105, new int[]{351}),
    new Rule(-105, new int[]{352}),
    new Rule(-105, new int[]{350}),
    new Rule(-105, new int[]{354}),
    new Rule(-105, new int[]{355}),
    new Rule(-105, new int[]{356}),
    new Rule(-105, new int[]{360}),
    new Rule(-105, new int[]{358}),
    new Rule(-105, new int[]{359}),
    new Rule(-105, new int[]{340}),
    new Rule(-105, new int[]{345}),
    new Rule(-105, new int[]{346}),
    new Rule(-105, new int[]{344}),
    new Rule(-105, new int[]{348}),
    new Rule(-105, new int[]{266}),
    new Rule(-105, new int[]{267}),
    new Rule(-105, new int[]{367}),
    new Rule(-105, new int[]{335}),
    new Rule(-105, new int[]{336}),
    new Rule(-105, new int[]{341}),
    new Rule(-105, new int[]{342}),
    new Rule(-105, new int[]{339}),
    new Rule(-105, new int[]{368}),
    new Rule(-105, new int[]{372}),
    new Rule(-105, new int[]{364}),
    new Rule(-105, new int[]{365}),
    new Rule(-105, new int[]{391}),
    new Rule(-105, new int[]{362}),
    new Rule(-105, new int[]{366}),
    new Rule(-105, new int[]{361}),
    new Rule(-105, new int[]{373}),
    new Rule(-105, new int[]{374}),
    new Rule(-105, new int[]{376}),
    new Rule(-105, new int[]{378}),
    new Rule(-105, new int[]{370}),
    new Rule(-105, new int[]{371}),
    new Rule(-105, new int[]{375}),
    new Rule(-105, new int[]{392}),
    new Rule(-105, new int[]{343}),
    new Rule(-104, new int[]{-105}),
    new Rule(-104, new int[]{353}),
    new Rule(-104, new int[]{315}),
    new Rule(-104, new int[]{314}),
    new Rule(-104, new int[]{313}),
    new Rule(-104, new int[]{357}),
    new Rule(-104, new int[]{311}),
    new Rule(-103, new int[]{319}),
    new Rule(-103, new int[]{-104}),
    new Rule(-84, new int[]{-84,-32}),
    new Rule(-84, new int[]{}),
    new Rule(-106, new int[]{319}),
    new Rule(-106, new int[]{-106,393,319}),
    new Rule(-19, new int[]{-106}),
    new Rule(-19, new int[]{391,393,-106}),
    new Rule(-19, new int[]{393,-106}),
    new Rule(-32, new int[]{-33}),
    new Rule(-32, new int[]{-34}),
    new Rule(-32, new int[]{-35}),
    new Rule(-32, new int[]{-36}),
    new Rule(-32, new int[]{-38}),
    new Rule(-32, new int[]{363,40,41,59}),
    new Rule(-32, new int[]{391,-106,59}),
    new Rule(-138, new int[]{}),
    new Rule(-32, new int[]{391,-106,-16,-138,123,-84,125}),
    new Rule(-139, new int[]{}),
    new Rule(-32, new int[]{391,-16,-139,123,-84,125}),
    new Rule(-32, new int[]{350,-134,59}),
    new Rule(-32, new int[]{350,-15,-133,59}),
    new Rule(-32, new int[]{350,-132,59}),
    new Rule(-32, new int[]{350,-15,-132,59}),
    new Rule(-32, new int[]{344,-85,59}),
    new Rule(-15, new int[]{346}),
    new Rule(-15, new int[]{344}),
    new Rule(-133, new int[]{-106,393,123,-111,-3,125}),
    new Rule(-133, new int[]{393,-106,393,123,-111,-3,125}),
    new Rule(-134, new int[]{-106,393,123,-113,-3,125}),
    new Rule(-134, new int[]{393,-106,393,123,-113,-3,125}),
    new Rule(-3, new int[]{}),
    new Rule(-3, new int[]{44}),
    new Rule(-113, new int[]{-113,44,-112}),
    new Rule(-113, new int[]{-112}),
    new Rule(-111, new int[]{-111,44,-107}),
    new Rule(-111, new int[]{-107}),
    new Rule(-132, new int[]{-132,44,-110}),
    new Rule(-132, new int[]{-110}),
    new Rule(-112, new int[]{-107}),
    new Rule(-112, new int[]{-15,-107}),
    new Rule(-107, new int[]{-106}),
    new Rule(-107, new int[]{-106,338,319}),
    new Rule(-110, new int[]{-107}),
    new Rule(-110, new int[]{393,-107}),
    new Rule(-85, new int[]{-85,44,-55}),
    new Rule(-85, new int[]{-55}),
    new Rule(-87, new int[]{-87,-81}),
    new Rule(-87, new int[]{}),
    new Rule(-81, new int[]{-33}),
    new Rule(-81, new int[]{-34}),
    new Rule(-81, new int[]{-35}),
    new Rule(-81, new int[]{-36}),
    new Rule(-81, new int[]{-38}),
    new Rule(-81, new int[]{363,40,41,59}),
    new Rule(-33, new int[]{123,-87,125}),
    new Rule(-33, new int[]{-17,-53,-18}),
    new Rule(-33, new int[]{-17,-54,-18}),
    new Rule(-33, new int[]{330,40,-41,41,-17,-72,-18}),
    new Rule(-33, new int[]{329,-17,-33,330,40,-41,41,59,-18}),
    new Rule(-33, new int[]{328,40,-89,59,-89,59,-89,41,-17,-70,-18}),
    new Rule(-33, new int[]{335,40,-41,41,-17,-99,-18}),
    new Rule(-33, new int[]{339,-60,59}),
    new Rule(-33, new int[]{340,-60,59}),
    new Rule(-33, new int[]{348,-60,59}),
    new Rule(-33, new int[]{355,-90,59}),
    new Rule(-33, new int[]{353,-91,59}),
    new Rule(-33, new int[]{324,-92,59}),
    new Rule(-33, new int[]{321}),
    new Rule(-33, new int[]{-41,59}),
    new Rule(-33, new int[]{360,40,-93,-3,41,59}),
    new Rule(-33, new int[]{334,40,-41,338,-130,41,-17,-71,-18}),
    new Rule(-33, new int[]{334,40,-41,338,-130,268,-130,41,-17,-71,-18}),
    new Rule(-33, new int[]{332,40,-85,41,-64}),
    new Rule(-33, new int[]{59}),
    new Rule(-33, new int[]{349,123,-87,125,-17,-101,-76,-18}),
    new Rule(-33, new int[]{345,319,59}),
    new Rule(-33, new int[]{319,58}),
    new Rule(-101, new int[]{}),
    new Rule(-101, new int[]{-101,347,40,-28,-102,41,123,-87,125}),
    new Rule(-102, new int[]{}),
    new Rule(-102, new int[]{320}),
    new Rule(-28, new int[]{-19}),
    new Rule(-28, new int[]{-28,124,-19}),
    new Rule(-76, new int[]{}),
    new Rule(-76, new int[]{351,123,-87,125}),
    new Rule(-93, new int[]{-56}),
    new Rule(-93, new int[]{-93,44,-56}),
    new Rule(-56, new int[]{-42}),
    new Rule(-34, new int[]{-5,-4,319,-16,40,-120,41,-21,-140,-17,123,-87,125,-18,-140}),
    new Rule(-7, new int[]{}),
    new Rule(-7, new int[]{38}),
    new Rule(-8, new int[]{}),
    new Rule(-8, new int[]{394}),
    new Rule(-141, new int[]{}),
    new Rule(-35, new int[]{-14,361,319,-24,-141,-29,-16,-17,123,-88,125,-18}),
    new Rule(-14, new int[]{}),
    new Rule(-14, new int[]{-13,-14}),
    new Rule(-13, new int[]{315}),
    new Rule(-13, new int[]{314}),
    new Rule(-142, new int[]{}),
    new Rule(-36, new int[]{362,319,-142,-16,-17,123,-88,125,-18}),
    new Rule(-143, new int[]{}),
    new Rule(-38, new int[]{366,319,-143,-30,-16,-17,123,-88,125,-18}),
    new Rule(-24, new int[]{}),
    new Rule(-24, new int[]{364,-19}),
    new Rule(-30, new int[]{}),
    new Rule(-30, new int[]{364,-27}),
    new Rule(-29, new int[]{}),
    new Rule(-29, new int[]{365,-27}),
    new Rule(-130, new int[]{-42}),
    new Rule(-130, new int[]{38,-42}),
    new Rule(-130, new int[]{367,40,-127,41}),
    new Rule(-130, new int[]{91,-127,93}),
    new Rule(-70, new int[]{-33}),
    new Rule(-70, new int[]{58,-87,333,59}),
    new Rule(-71, new int[]{-33}),
    new Rule(-71, new int[]{58,-87,331,59}),
    new Rule(-64, new int[]{-33}),
    new Rule(-64, new int[]{58,-87,337,59}),
    new Rule(-99, new int[]{123,-98,125}),
    new Rule(-99, new int[]{123,59,-98,125}),
    new Rule(-99, new int[]{58,-98,336,59}),
    new Rule(-99, new int[]{58,59,-98,336,59}),
    new Rule(-98, new int[]{}),
    new Rule(-98, new int[]{-98,341,-41,-144,-87}),
    new Rule(-98, new int[]{-98,342,-144,-87}),
    new Rule(-144, new int[]{58}),
    new Rule(-144, new int[]{59}),
    new Rule(-72, new int[]{-33}),
    new Rule(-72, new int[]{58,-87,327,59}),
    new Rule(-128, new int[]{322,40,-41,41,-33}),
    new Rule(-128, new int[]{-128,308,40,-41,41,-33}),
    new Rule(-53, new int[]{-128}),
    new Rule(-53, new int[]{-128,309,-33}),
    new Rule(-129, new int[]{322,40,-41,41,58,-87}),
    new Rule(-129, new int[]{-129,308,40,-41,41,58,-87}),
    new Rule(-54, new int[]{-129,310,59}),
    new Rule(-54, new int[]{-129,309,58,-87,310,59}),
    new Rule(-120, new int[]{-121,-3}),
    new Rule(-120, new int[]{}),
    new Rule(-121, new int[]{-118}),
    new Rule(-121, new int[]{-121,44,-118}),
    new Rule(-118, new int[]{-23,-7,-8,320}),
    new Rule(-118, new int[]{-23,-7,-8,320,61,-41}),
    new Rule(-23, new int[]{}),
    new Rule(-23, new int[]{-22}),
    new Rule(-22, new int[]{-20}),
    new Rule(-22, new int[]{63,-20}),
    new Rule(-22, new int[]{-31}),
    new Rule(-20, new int[]{368}),
    new Rule(-20, new int[]{372}),
    new Rule(-20, new int[]{-19}),
    new Rule(-31, new int[]{-20,124,-20}),
    new Rule(-31, new int[]{-31,124,-20}),
    new Rule(-21, new int[]{}),
    new Rule(-21, new int[]{58,-22}),
    new Rule(-116, new int[]{40,41}),
    new Rule(-116, new int[]{40,-117,-3,41}),
    new Rule(-117, new int[]{-114}),
    new Rule(-117, new int[]{-117,44,-114}),
    new Rule(-114, new int[]{-41}),
    new Rule(-114, new int[]{394,-41}),
    new Rule(-90, new int[]{-90,44,-57}),
    new Rule(-90, new int[]{-57}),
    new Rule(-57, new int[]{-47}),
    new Rule(-91, new int[]{-91,44,-58}),
    new Rule(-91, new int[]{-58}),
    new Rule(-58, new int[]{320}),
    new Rule(-58, new int[]{320,61,-41}),
    new Rule(-88, new int[]{-88,-82}),
    new Rule(-88, new int[]{}),
    new Rule(-82, new int[]{-9,-23,-97,59}),
    new Rule(-82, new int[]{-10,344,-86,59}),
    new Rule(-82, new int[]{350,-27,-79}),
    new Rule(-82, new int[]{-10,-5,-4,-103,-16,40,-120,41,-21,-140,-74,-140}),
    new Rule(-27, new int[]{-19}),
    new Rule(-27, new int[]{-27,44,-19}),
    new Rule(-79, new int[]{59}),
    new Rule(-79, new int[]{123,125}),
    new Rule(-79, new int[]{123,-94,125}),
    new Rule(-94, new int[]{-65}),
    new Rule(-94, new int[]{-94,-65}),
    new Rule(-65, new int[]{-66}),
    new Rule(-65, new int[]{-67}),
    new Rule(-66, new int[]{-109,354,-27,59}),
    new Rule(-67, new int[]{-108,338,319,59}),
    new Rule(-67, new int[]{-108,338,-105,59}),
    new Rule(-67, new int[]{-108,338,-12,-103,59}),
    new Rule(-67, new int[]{-108,338,-12,59}),
    new Rule(-108, new int[]{-103}),
    new Rule(-108, new int[]{-109}),
    new Rule(-109, new int[]{-19,390,-103}),
    new Rule(-74, new int[]{59}),
    new Rule(-74, new int[]{123,-87,125}),
    new Rule(-9, new int[]{-11}),
    new Rule(-9, new int[]{356}),
    new Rule(-10, new int[]{}),
    new Rule(-10, new int[]{-11}),
    new Rule(-11, new int[]{-12}),
    new Rule(-11, new int[]{-11,-12}),
    new Rule(-12, new int[]{311}),
    new Rule(-12, new int[]{357}),
    new Rule(-12, new int[]{313}),
    new Rule(-12, new int[]{353}),
    new Rule(-12, new int[]{315}),
    new Rule(-12, new int[]{314}),
    new Rule(-97, new int[]{-97,44,-61}),
    new Rule(-97, new int[]{-61}),
    new Rule(-61, new int[]{320,-16}),
    new Rule(-61, new int[]{320,61,-41,-16}),
    new Rule(-86, new int[]{-86,44,-68}),
    new Rule(-86, new int[]{-68}),
    new Rule(-68, new int[]{-103,61,-41,-16}),
    new Rule(-55, new int[]{319,61,-41,-16}),
    new Rule(-92, new int[]{-92,44,-59}),
    new Rule(-92, new int[]{-59}),
    new Rule(-59, new int[]{-41}),
    new Rule(-89, new int[]{}),
    new Rule(-89, new int[]{-100}),
    new Rule(-100, new int[]{-100,44,-41}),
    new Rule(-100, new int[]{-41}),
    new Rule(-145, new int[]{}),
    new Rule(-131, new int[]{361,-115,-24,-145,-29,-16,-17,123,-88,125,-18}),
    new Rule(-44, new int[]{306,-25,-115}),
    new Rule(-44, new int[]{306,-131}),
    new Rule(-43, new int[]{367,40,-127,41,61,-41}),
    new Rule(-43, new int[]{91,-127,93,61,-41}),
    new Rule(-43, new int[]{-42,61,-41}),
    new Rule(-43, new int[]{-42,61,38,-42}),
    new Rule(-43, new int[]{-42,61,38,-44}),
    new Rule(-43, new int[]{307,-41}),
    new Rule(-43, new int[]{-42,270,-41}),
    new Rule(-43, new int[]{-42,271,-41}),
    new Rule(-43, new int[]{-42,279,-41}),
    new Rule(-43, new int[]{-42,281,-41}),
    new Rule(-43, new int[]{-42,278,-41}),
    new Rule(-43, new int[]{-42,277,-41}),
    new Rule(-43, new int[]{-42,276,-41}),
    new Rule(-43, new int[]{-42,275,-41}),
    new Rule(-43, new int[]{-42,274,-41}),
    new Rule(-43, new int[]{-42,273,-41}),
    new Rule(-43, new int[]{-42,272,-41}),
    new Rule(-43, new int[]{-42,280,-41}),
    new Rule(-43, new int[]{-42,282,-41}),
    new Rule(-43, new int[]{-42,303}),
    new Rule(-43, new int[]{303,-42}),
    new Rule(-43, new int[]{-42,302}),
    new Rule(-43, new int[]{302,-42}),
    new Rule(-43, new int[]{-41,284,-41}),
    new Rule(-43, new int[]{-41,285,-41}),
    new Rule(-43, new int[]{-41,263,-41}),
    new Rule(-43, new int[]{-41,265,-41}),
    new Rule(-43, new int[]{-41,264,-41}),
    new Rule(-43, new int[]{-41,124,-41}),
    new Rule(-43, new int[]{-41,38,-41}),
    new Rule(-43, new int[]{-41,94,-41}),
    new Rule(-43, new int[]{-41,46,-41}),
    new Rule(-43, new int[]{-41,43,-41}),
    new Rule(-43, new int[]{-41,45,-41}),
    new Rule(-43, new int[]{-41,42,-41}),
    new Rule(-43, new int[]{-41,305,-41}),
    new Rule(-43, new int[]{-41,47,-41}),
    new Rule(-43, new int[]{-41,37,-41}),
    new Rule(-43, new int[]{-41,293,-41}),
    new Rule(-43, new int[]{-41,294,-41}),
    new Rule(-43, new int[]{43,-41}),
    new Rule(-43, new int[]{45,-41}),
    new Rule(-43, new int[]{33,-41}),
    new Rule(-43, new int[]{126,-41}),
    new Rule(-43, new int[]{-41,287,-41}),
    new Rule(-43, new int[]{-41,286,-41}),
    new Rule(-43, new int[]{-41,289,-41}),
    new Rule(-43, new int[]{-41,288,-41}),
    new Rule(-43, new int[]{-41,60,-41}),
    new Rule(-43, new int[]{-41,291,-41}),
    new Rule(-43, new int[]{-41,62,-41}),
    new Rule(-43, new int[]{-41,292,-41}),
    new Rule(-43, new int[]{-41,290,-41}),
    new Rule(-43, new int[]{-41,295,-25}),
    new Rule(-43, new int[]{40,-41,41}),
    new Rule(-43, new int[]{-44}),
    new Rule(-43, new int[]{-41,63,-41,58,-41}),
    new Rule(-43, new int[]{-41,63,58,-41}),
    new Rule(-43, new int[]{-41,283,-41}),
    new Rule(-43, new int[]{-45}),
    new Rule(-43, new int[]{301,-41}),
    new Rule(-43, new int[]{300,-41}),
    new Rule(-43, new int[]{299,-41}),
    new Rule(-43, new int[]{298,-41}),
    new Rule(-43, new int[]{297,-41}),
    new Rule(-43, new int[]{296,-41}),
    new Rule(-43, new int[]{304,-41}),
    new Rule(-43, new int[]{326,-75}),
    new Rule(-43, new int[]{64,-41}),
    new Rule(-43, new int[]{-48}),
    new Rule(-43, new int[]{-73}),
    new Rule(-43, new int[]{266,-41}),
    new Rule(-43, new int[]{267}),
    new Rule(-43, new int[]{267,-41}),
    new Rule(-43, new int[]{267,-41,268,-41}),
    new Rule(-43, new int[]{269,-41}),
    new Rule(-43, new int[]{352,-41}),
    new Rule(-43, new int[]{-83}),
    new Rule(-43, new int[]{353,-83}),
    new Rule(-83, new int[]{-5,-4,-16,40,-120,41,-122,-21,-140,-17,123,-87,125,-18,-140}),
    new Rule(-83, new int[]{-6,-4,40,-120,41,-21,-16,268,-140,-146,-41,-140}),
    new Rule(-6, new int[]{343}),
    new Rule(-5, new int[]{346}),
    new Rule(-16, new int[]{}),
    new Rule(-17, new int[]{}),
    new Rule(-18, new int[]{}),
    new Rule(-140, new int[]{}),
    new Rule(-146, new int[]{}),
    new Rule(-4, new int[]{}),
    new Rule(-4, new int[]{38}),
    new Rule(-122, new int[]{}),
    new Rule(-122, new int[]{350,40,-123,41}),
    new Rule(-123, new int[]{-123,44,-119}),
    new Rule(-123, new int[]{-119}),
    new Rule(-119, new int[]{320}),
    new Rule(-119, new int[]{38,320}),
    new Rule(-51, new int[]{-19,-116}),
    new Rule(-51, new int[]{-26,390,-2,-116}),
    new Rule(-51, new int[]{-80,390,-2,-116}),
    new Rule(-51, new int[]{-78,-116}),
    new Rule(-26, new int[]{353}),
    new Rule(-26, new int[]{-19}),
    new Rule(-25, new int[]{-26}),
    new Rule(-25, new int[]{-77}),
    new Rule(-75, new int[]{}),
    new Rule(-75, new int[]{40,-60,41}),
    new Rule(-73, new int[]{96,96}),
    new Rule(-73, new int[]{96,316,96}),
    new Rule(-73, new int[]{96,-95,96}),
    new Rule(-115, new int[]{}),
    new Rule(-115, new int[]{-116}),
    new Rule(-50, new int[]{368,40,-127,41}),
    new Rule(-50, new int[]{91,-127,93}),
    new Rule(-50, new int[]{323}),
    new Rule(-48, new int[]{317}),
    new Rule(-48, new int[]{312}),
    new Rule(-48, new int[]{370}),
    new Rule(-48, new int[]{371}),
    new Rule(-48, new int[]{375}),
    new Rule(-48, new int[]{374}),
    new Rule(-48, new int[]{378}),
    new Rule(-48, new int[]{376}),
    new Rule(-48, new int[]{392}),
    new Rule(-48, new int[]{373}),
    new Rule(-48, new int[]{34,-95,34}),
    new Rule(-48, new int[]{383,387}),
    new Rule(-48, new int[]{383,316,387}),
    new Rule(-48, new int[]{383,-95,387}),
    new Rule(-48, new int[]{-50}),
    new Rule(-48, new int[]{-49}),
    new Rule(-49, new int[]{-19}),
    new Rule(-49, new int[]{-26,390,-103}),
    new Rule(-49, new int[]{-80,390,-103}),
    new Rule(-41, new int[]{-42}),
    new Rule(-41, new int[]{-43}),
    new Rule(-60, new int[]{}),
    new Rule(-60, new int[]{-41}),
    new Rule(-80, new int[]{-69}),
    new Rule(-69, new int[]{-42}),
    new Rule(-69, new int[]{40,-41,41}),
    new Rule(-69, new int[]{-50}),
    new Rule(-78, new int[]{-46}),
    new Rule(-78, new int[]{40,-41,41}),
    new Rule(-78, new int[]{-50}),
    new Rule(-46, new int[]{-47}),
    new Rule(-46, new int[]{-69,91,-60,93}),
    new Rule(-46, new int[]{-49,91,-60,93}),
    new Rule(-46, new int[]{-69,123,-41,125}),
    new Rule(-46, new int[]{-69,369,-1,-116}),
    new Rule(-46, new int[]{-51}),
    new Rule(-42, new int[]{-46}),
    new Rule(-42, new int[]{-52}),
    new Rule(-42, new int[]{-69,369,-1}),
    new Rule(-47, new int[]{320}),
    new Rule(-47, new int[]{36,123,-41,125}),
    new Rule(-47, new int[]{36,-47}),
    new Rule(-52, new int[]{-26,390,-47}),
    new Rule(-52, new int[]{-80,390,-47}),
    new Rule(-77, new int[]{-47}),
    new Rule(-77, new int[]{-77,91,-60,93}),
    new Rule(-77, new int[]{-77,123,-41,125}),
    new Rule(-77, new int[]{-77,369,-1}),
    new Rule(-77, new int[]{-26,390,-47}),
    new Rule(-77, new int[]{-77,390,-47}),
    new Rule(-2, new int[]{-103}),
    new Rule(-2, new int[]{123,-41,125}),
    new Rule(-2, new int[]{-47}),
    new Rule(-1, new int[]{319}),
    new Rule(-1, new int[]{123,-41,125}),
    new Rule(-1, new int[]{-47}),
    new Rule(-127, new int[]{-126}),
    new Rule(-124, new int[]{}),
    new Rule(-124, new int[]{-125}),
    new Rule(-126, new int[]{-126,44,-124}),
    new Rule(-126, new int[]{-124}),
    new Rule(-125, new int[]{-41,268,-41}),
    new Rule(-125, new int[]{-41}),
    new Rule(-125, new int[]{-41,268,38,-42}),
    new Rule(-125, new int[]{38,-42}),
    new Rule(-125, new int[]{394,-41}),
    new Rule(-125, new int[]{-41,268,367,40,-127,41}),
    new Rule(-125, new int[]{367,40,-127,41}),
    new Rule(-95, new int[]{-95,-62}),
    new Rule(-95, new int[]{-95,316}),
    new Rule(-95, new int[]{-62}),
    new Rule(-95, new int[]{316,-62}),
    new Rule(-62, new int[]{320}),
    new Rule(-62, new int[]{320,91,-63,93}),
    new Rule(-62, new int[]{320,369,319}),
    new Rule(-62, new int[]{385,-41,125}),
    new Rule(-62, new int[]{385,318,125}),
    new Rule(-62, new int[]{385,318,91,-41,93,125}),
    new Rule(-62, new int[]{386,-42,125}),
    new Rule(-63, new int[]{319}),
    new Rule(-63, new int[]{325}),
    new Rule(-63, new int[]{320}),
    new Rule(-45, new int[]{358,40,-96,-3,41}),
    new Rule(-45, new int[]{359,40,-41,41}),
    new Rule(-45, new int[]{262,-41}),
    new Rule(-45, new int[]{261,-41}),
    new Rule(-45, new int[]{260,40,-41,41}),
    new Rule(-45, new int[]{259,-41}),
    new Rule(-45, new int[]{258,-41}),
    new Rule(-96, new int[]{-40}),
    new Rule(-96, new int[]{-96,44,-40}),
    new Rule(-40, new int[]{-41}),
    };
    #endregion

    nonTerminals = new string[] {"", "property_name", "member_name", "possible_comma", 
      "returns_ref", "function", "fn", "is_reference", "is_variadic", "variable_modifiers", 
      "method_modifiers", "non_empty_member_modifiers", "member_modifier", "class_modifier", 
      "class_modifiers", "use_type", "backup_doc_comment", "enter_scope", "exit_scope", 
      "name", "type", "return_type", "type_expr", "optional_type", "extends_from", 
      "class_name_reference", "class_name", "name_list", "catch_name_list", "implements_list", 
      "interface_extends_list", "union_type", "top_statement", "statement", "function_declaration_statement", 
      "class_declaration_statement", "trait_declaration_statement", "interface_declaratioimplements_listn_statement", 
      "interface_declaration_statement", "inline_html", "isset_variable", "expr", 
      "variable", "expr_without_variable", "new_expr", "internal_functions_in_yacc", 
      "callable_variable", "simple_variable", "scalar", "constant", "dereferencable_scalar", 
      "function_call", "static_member", "if_stmt", "alt_if_stmt", "const_decl", 
      "unset_variable", "global_var", "static_var", "echo_expr", "optional_expr", 
      "property", "encaps_var", "encaps_var_offset", "declare_statement", "trait_adaptation", 
      "trait_precedence", "trait_alias", "class_const_decl", "dereferencable", 
      "for_statement", "foreach_statement", "while_statement", "backticks_expr", 
      "method_body", "exit_expr", "finally_statement", "new_variable", "callable_expr", 
      "trait_adaptations", "variable_class_name", "inner_statement", "class_statement", 
      "inline_function", "top_statement_list", "const_list", "class_const_list", 
      "inner_statement_list", "class_statement_list", "for_exprs", "global_var_list", 
      "static_var_list", "echo_expr_list", "unset_variables", "trait_adaptation_list", 
      "encaps_list", "isset_variables", "property_list", "case_list", "switch_case_list", 
      "non_empty_for_exprs", "catch_list", "optional_variable", "identifier", 
      "semi_reserved", "reserved_non_modifiers", "namespace_name", "unprefixed_use_declaration", 
      "trait_method_reference", "absolute_trait_method_reference", "use_declaration", 
      "unprefixed_use_declarations", "inline_use_declaration", "inline_use_declarations", 
      "argument", "ctor_arguments", "argument_list", "non_empty_argument_list", 
      "parameter", "lexical_var", "parameter_list", "non_empty_parameter_list", 
      "lexical_vars", "lexical_var_list", "possible_array_pair", "array_pair", 
      "non_empty_array_pair_list", "array_pair_list", "if_stmt_without_else", 
      "alt_if_stmt_without_else", "foreach_variable", "anonymous_class", "use_declarations", 
      "group_use_declaration", "mixed_group_use_declaration", "start", "$accept", 
      "@1", "@2", "@3", "backup_fn_flags", "@4", "@5", "@6", "case_separator", 
      "@7", "backup_lex_pos", };
  }

  #endregion

  protected override void DoAction(int action)
  {
    switch (action)
    {
      case 2: // @1 -> 
{ SetNamingContext(null); }
        return;
      case 3: // start -> @1 top_statement_list 
{ 
		AssignNamingContext(); 
        _lexer.DocBlockList.Merge(new Span(0, int.MaxValue), value_stack.array[value_stack.top-1].yyval.NodeList, _astFactory);
		AssignStatements(value_stack.array[value_stack.top-1].yyval.NodeList);
		_astRoot = _astFactory.GlobalCode(yypos, value_stack.array[value_stack.top-1].yyval.NodeList, namingContext);
	}
        return;
      case 4: // reserved_non_modifiers -> T_INCLUDE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 5: // reserved_non_modifiers -> T_INCLUDE_ONCE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 6: // reserved_non_modifiers -> T_EVAL 
{ yyval.String = _lexer.TokenText; }
        return;
      case 7: // reserved_non_modifiers -> T_REQUIRE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 8: // reserved_non_modifiers -> T_REQUIRE_ONCE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 9: // reserved_non_modifiers -> T_LOGICAL_OR 
{ yyval.String = _lexer.TokenText; }
        return;
      case 10: // reserved_non_modifiers -> T_LOGICAL_XOR 
{ yyval.String = _lexer.TokenText; }
        return;
      case 11: // reserved_non_modifiers -> T_LOGICAL_AND 
{ yyval.String = _lexer.TokenText; }
        return;
      case 12: // reserved_non_modifiers -> T_INSTANCEOF 
{ yyval.String = _lexer.TokenText; }
        return;
      case 13: // reserved_non_modifiers -> T_NEW 
{ yyval.String = _lexer.TokenText; }
        return;
      case 14: // reserved_non_modifiers -> T_CLONE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 15: // reserved_non_modifiers -> T_EXIT 
{ yyval.String = _lexer.TokenText; }
        return;
      case 16: // reserved_non_modifiers -> T_IF 
{ yyval.String = _lexer.TokenText; }
        return;
      case 17: // reserved_non_modifiers -> T_ELSEIF 
{ yyval.String = _lexer.TokenText; }
        return;
      case 18: // reserved_non_modifiers -> T_ELSE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 19: // reserved_non_modifiers -> T_ENDIF 
{ yyval.String = _lexer.TokenText; }
        return;
      case 20: // reserved_non_modifiers -> T_ECHO 
{ yyval.String = _lexer.TokenText; }
        return;
      case 21: // reserved_non_modifiers -> T_DO 
{ yyval.String = _lexer.TokenText; }
        return;
      case 22: // reserved_non_modifiers -> T_WHILE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 23: // reserved_non_modifiers -> T_ENDWHILE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 24: // reserved_non_modifiers -> T_FOR 
{ yyval.String = _lexer.TokenText; }
        return;
      case 25: // reserved_non_modifiers -> T_ENDFOR 
{ yyval.String = _lexer.TokenText; }
        return;
      case 26: // reserved_non_modifiers -> T_FOREACH 
{ yyval.String = _lexer.TokenText; }
        return;
      case 27: // reserved_non_modifiers -> T_ENDFOREACH 
{ yyval.String = _lexer.TokenText; }
        return;
      case 28: // reserved_non_modifiers -> T_DECLARE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 29: // reserved_non_modifiers -> T_ENDDECLARE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 30: // reserved_non_modifiers -> T_AS 
{ yyval.String = _lexer.TokenText; }
        return;
      case 31: // reserved_non_modifiers -> T_TRY 
{ yyval.String = _lexer.TokenText; }
        return;
      case 32: // reserved_non_modifiers -> T_CATCH 
{ yyval.String = _lexer.TokenText; }
        return;
      case 33: // reserved_non_modifiers -> T_FINALLY 
{ yyval.String = _lexer.TokenText; }
        return;
      case 34: // reserved_non_modifiers -> T_THROW 
{ yyval.String = _lexer.TokenText; }
        return;
      case 35: // reserved_non_modifiers -> T_USE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 36: // reserved_non_modifiers -> T_INSTEADOF 
{ yyval.String = _lexer.TokenText; }
        return;
      case 37: // reserved_non_modifiers -> T_GLOBAL 
{ yyval.String = _lexer.TokenText; }
        return;
      case 38: // reserved_non_modifiers -> T_VAR 
{ yyval.String = _lexer.TokenText; }
        return;
      case 39: // reserved_non_modifiers -> T_UNSET 
{ yyval.String = _lexer.TokenText; }
        return;
      case 40: // reserved_non_modifiers -> T_ISSET 
{ yyval.String = _lexer.TokenText; }
        return;
      case 41: // reserved_non_modifiers -> T_EMPTY 
{ yyval.String = _lexer.TokenText; }
        return;
      case 42: // reserved_non_modifiers -> T_CONTINUE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 43: // reserved_non_modifiers -> T_GOTO 
{ yyval.String = _lexer.TokenText; }
        return;
      case 44: // reserved_non_modifiers -> T_FUNCTION 
{ yyval.String = _lexer.TokenText; }
        return;
      case 45: // reserved_non_modifiers -> T_CONST 
{ yyval.String = _lexer.TokenText; }
        return;
      case 46: // reserved_non_modifiers -> T_RETURN 
{ yyval.String = _lexer.TokenText; }
        return;
      case 47: // reserved_non_modifiers -> T_PRINT 
{ yyval.String = _lexer.TokenText; }
        return;
      case 48: // reserved_non_modifiers -> T_YIELD 
{ yyval.String = _lexer.TokenText; }
        return;
      case 49: // reserved_non_modifiers -> T_LIST 
{ yyval.String = _lexer.TokenText; }
        return;
      case 50: // reserved_non_modifiers -> T_SWITCH 
{ yyval.String = _lexer.TokenText; }
        return;
      case 51: // reserved_non_modifiers -> T_ENDSWITCH 
{ yyval.String = _lexer.TokenText; }
        return;
      case 52: // reserved_non_modifiers -> T_CASE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 53: // reserved_non_modifiers -> T_DEFAULT 
{ yyval.String = _lexer.TokenText; }
        return;
      case 54: // reserved_non_modifiers -> T_BREAK 
{ yyval.String = _lexer.TokenText; }
        return;
      case 55: // reserved_non_modifiers -> T_ARRAY 
{ yyval.String = _lexer.TokenText; }
        return;
      case 56: // reserved_non_modifiers -> T_CALLABLE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 57: // reserved_non_modifiers -> T_EXTENDS 
{ yyval.String = _lexer.TokenText; }
        return;
      case 58: // reserved_non_modifiers -> T_IMPLEMENTS 
{ yyval.String = _lexer.TokenText; }
        return;
      case 59: // reserved_non_modifiers -> T_NAMESPACE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 60: // reserved_non_modifiers -> T_TRAIT 
{ yyval.String = _lexer.TokenText; }
        return;
      case 61: // reserved_non_modifiers -> T_INTERFACE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 62: // reserved_non_modifiers -> T_CLASS 
{ yyval.String = _lexer.TokenText; }
        return;
      case 63: // reserved_non_modifiers -> T_CLASS_C 
{ yyval.String = _lexer.TokenText; }
        return;
      case 64: // reserved_non_modifiers -> T_TRAIT_C 
{ yyval.String = _lexer.TokenText; }
        return;
      case 65: // reserved_non_modifiers -> T_FUNC_C 
{ yyval.String = _lexer.TokenText; }
        return;
      case 66: // reserved_non_modifiers -> T_METHOD_C 
{ yyval.String = _lexer.TokenText; }
        return;
      case 67: // reserved_non_modifiers -> T_LINE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 68: // reserved_non_modifiers -> T_FILE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 69: // reserved_non_modifiers -> T_DIR 
{ yyval.String = _lexer.TokenText; }
        return;
      case 70: // reserved_non_modifiers -> T_NS_C 
{ yyval.String = _lexer.TokenText; }
        return;
      case 71: // reserved_non_modifiers -> T_FN 
{ yyval.String = _lexer.TokenText; }
        return;
      case 73: // semi_reserved -> T_STATIC 
{ yyval.String = _lexer.TokenText; }
        return;
      case 74: // semi_reserved -> T_ABSTRACT 
{ yyval.String = _lexer.TokenText; }
        return;
      case 75: // semi_reserved -> T_FINAL 
{ yyval.String = _lexer.TokenText; }
        return;
      case 76: // semi_reserved -> T_PRIVATE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 77: // semi_reserved -> T_PROTECTED 
{ yyval.String = _lexer.TokenText; }
        return;
      case 78: // semi_reserved -> T_PUBLIC 
{ yyval.String = _lexer.TokenText; }
        return;
      case 81: // top_statement_list -> top_statement_list top_statement 
{ yyval.NodeList = AddToTopStatementList<LangElement>(value_stack.array[value_stack.top-2].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 82: // top_statement_list -> 
{ yyval.NodeList = new List<LangElement>(); }
        return;
      case 83: // namespace_name -> T_STRING 
{ yyval.StringList = new List<string>() { value_stack.array[value_stack.top-1].yyval.String }; }
        return;
      case 84: // namespace_name -> namespace_name T_NS_SEPARATOR T_STRING 
{ yyval.StringList = AddToList<string>(value_stack.array[value_stack.top-3].yyval.StringList, value_stack.array[value_stack.top-1].yyval.String); }
        return;
      case 85: // name -> namespace_name 
{ yyval.QualifiedNameReference = new QualifiedNameRef(yypos, new QualifiedName(value_stack.array[value_stack.top-1].yyval.StringList, true, false)); }
        return;
      case 86: // name -> T_NAMESPACE T_NS_SEPARATOR namespace_name 
{ yyval.QualifiedNameReference = new QualifiedNameRef(yypos, MergeWithCurrentNamespace(namingContext.CurrentNamespace, value_stack.array[value_stack.top-1].yyval.StringList)); }
        return;
      case 87: // name -> T_NS_SEPARATOR namespace_name 
{ yyval.QualifiedNameReference = new QualifiedNameRef(yypos, new QualifiedName(value_stack.array[value_stack.top-1].yyval.StringList, true,  true)); }
        return;
      case 88: // top_statement -> statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 89: // top_statement -> function_declaration_statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 90: // top_statement -> class_declaration_statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 91: // top_statement -> trait_declaration_statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 92: // top_statement -> interface_declaration_statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 93: // top_statement -> T_HALT_COMPILER '(' ')' ';' 
{ yyval.Node = _astFactory.HaltCompiler(yypos); }
        return;
      case 94: // top_statement -> T_NAMESPACE namespace_name ';' 
{
			AssignNamingContext();
            SetNamingContext(value_stack.array[value_stack.top-2].yyval.StringList);
            SetDoc(yyval.Node = _currentNamespace = (NamespaceDecl)_astFactory.Namespace(yypos, namingContext.CurrentNamespace, value_stack.array[value_stack.top-2].yypos, namingContext));
		}
        return;
      case 95: // @2 -> 
{ SetNamingContext(value_stack.array[value_stack.top-2].yyval.StringList); }
        return;
      case 96: // top_statement -> T_NAMESPACE namespace_name backup_doc_comment @2 '{' top_statement_list '}' 
{ 
			yyval.Node = _astFactory.Namespace(yypos, namingContext.CurrentNamespace, value_stack.array[value_stack.top-6].yypos, CreateBlock(CombineSpans(value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-2].yyval.NodeList), namingContext);
			SetDoc(yyval.Node);
			ResetNamingContext(); 
		}
        return;
      case 97: // @3 -> 
{ SetNamingContext(null); }
        return;
      case 98: // top_statement -> T_NAMESPACE backup_doc_comment @3 '{' top_statement_list '}' 
{ 
			yyval.Node = _astFactory.Namespace(yypos, null, yypos, CreateBlock(CombineSpans(value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-2].yyval.NodeList), namingContext);
			SetDoc(yyval.Node);
			ResetNamingContext(); 
		}
        return;
      case 99: // top_statement -> T_USE mixed_group_use_declaration ';' 
{ yyval.Node = _astFactory.Use(yypos, value_stack.array[value_stack.top-2].yyval.UseList, AliasKind.Type); _contextType = AliasKind.Type;	/* TODO: Error - must contain only a single group use */	}
        return;
      case 100: // top_statement -> T_USE use_type group_use_declaration ';' 
{ yyval.Node = _astFactory.Use(yypos, value_stack.array[value_stack.top-2].yyval.UseList, value_stack.array[value_stack.top-3].yyval.Kind); _contextType = AliasKind.Type;				/* TODO: Error - must contain only a single group use */	}
        return;
      case 101: // top_statement -> T_USE use_declarations ';' 
{ yyval.Node = _astFactory.Use(yypos, value_stack.array[value_stack.top-2].yyval.UseList, AliasKind.Type); _contextType = AliasKind.Type;	/* TODO: Error - must contain only simple uses		  */	}
        return;
      case 102: // top_statement -> T_USE use_type use_declarations ';' 
{ yyval.Node = _astFactory.Use(yypos, value_stack.array[value_stack.top-2].yyval.UseList, value_stack.array[value_stack.top-3].yyval.Kind); _contextType = AliasKind.Type;				/* TODO: Error - must contain only simple uses		  */	}
        return;
      case 103: // top_statement -> T_CONST const_list ';' 
{
			SetDoc(yyval.Node = _astFactory.DeclList(yypos, PhpMemberAttributes.None, value_stack.array[value_stack.top-2].yyval.NodeList, null));
		}
        return;
      case 104: // use_type -> T_FUNCTION 
{ yyval.Kind = _contextType = AliasKind.Function; }
        return;
      case 105: // use_type -> T_CONST 
{ yyval.Kind = _contextType = AliasKind.Constant; }
        return;
      case 106: // group_use_declaration -> namespace_name T_NS_SEPARATOR '{' unprefixed_use_declarations possible_comma '}' 
{ yyval.UseList = new List<UseBase>() { AddAliases(yypos, value_stack.array[value_stack.top-6].yyval.StringList, CombineSpans(value_stack.array[value_stack.top-6].yypos, value_stack.array[value_stack.top-5].yypos), AddTrailingComma(value_stack.array[value_stack.top-3].yyval.AliasList, value_stack.array[value_stack.top-2].yyval.Bool), false) }; }
        return;
      case 107: // group_use_declaration -> T_NS_SEPARATOR namespace_name T_NS_SEPARATOR '{' unprefixed_use_declarations possible_comma '}' 
{ yyval.UseList = new List<UseBase>() { AddAliases(yypos, value_stack.array[value_stack.top-6].yyval.StringList, CombineSpans(value_stack.array[value_stack.top-7].yypos, value_stack.array[value_stack.top-6].yypos, value_stack.array[value_stack.top-5].yypos), AddTrailingComma(value_stack.array[value_stack.top-3].yyval.AliasList, value_stack.array[value_stack.top-2].yyval.Bool), true) }; }
        return;
      case 108: // mixed_group_use_declaration -> namespace_name T_NS_SEPARATOR '{' inline_use_declarations possible_comma '}' 
{  yyval.UseList = new List<UseBase>() { AddAliases(yypos, value_stack.array[value_stack.top-6].yyval.StringList, CombineSpans(value_stack.array[value_stack.top-6].yypos, value_stack.array[value_stack.top-5].yypos), AddTrailingComma(value_stack.array[value_stack.top-3].yyval.ContextAliasList, value_stack.array[value_stack.top-2].yyval.Bool), false) }; }
        return;
      case 109: // mixed_group_use_declaration -> T_NS_SEPARATOR namespace_name T_NS_SEPARATOR '{' inline_use_declarations possible_comma '}' 
{ yyval.UseList = new List<UseBase>() { AddAliases(yypos, value_stack.array[value_stack.top-6].yyval.StringList, CombineSpans(value_stack.array[value_stack.top-7].yypos, value_stack.array[value_stack.top-6].yypos, value_stack.array[value_stack.top-5].yypos), AddTrailingComma(value_stack.array[value_stack.top-3].yyval.ContextAliasList, value_stack.array[value_stack.top-2].yyval.Bool), true) }; }
        return;
      case 110: // possible_comma -> 
{ yyval.Bool = false; }
        return;
      case 111: // possible_comma -> ',' 
{ yyval.Bool = true;  }
        return;
      case 112: // inline_use_declarations -> inline_use_declarations ',' inline_use_declaration 
{ yyval.ContextAliasList = AddToList<ContextAlias>(value_stack.array[value_stack.top-3].yyval.ContextAliasList, value_stack.array[value_stack.top-1].yyval.ContextAlias); }
        return;
      case 113: // inline_use_declarations -> inline_use_declaration 
{ yyval.ContextAliasList = new List<ContextAlias>() { value_stack.array[value_stack.top-1].yyval.ContextAlias }; }
        return;
      case 114: // unprefixed_use_declarations -> unprefixed_use_declarations ',' unprefixed_use_declaration 
{ yyval.AliasList = AddToList<CompleteAlias>(value_stack.array[value_stack.top-3].yyval.AliasList, value_stack.array[value_stack.top-1].yyval.Alias); }
        return;
      case 115: // unprefixed_use_declarations -> unprefixed_use_declaration 
{ yyval.AliasList = new List<CompleteAlias>() { value_stack.array[value_stack.top-1].yyval.Alias }; }
        return;
      case 116: // use_declarations -> use_declarations ',' use_declaration 
{ yyval.UseList = AddToList<UseBase>(value_stack.array[value_stack.top-3].yyval.UseList, AddAlias(value_stack.array[value_stack.top-1].yyval.Alias)); }
        return;
      case 117: // use_declarations -> use_declaration 
{ yyval.UseList = new List<UseBase>() { AddAlias(value_stack.array[value_stack.top-1].yyval.Alias) }; }
        return;
      case 118: // inline_use_declaration -> unprefixed_use_declaration 
{ yyval.ContextAlias = JoinTuples(yypos, value_stack.array[value_stack.top-1].yyval.Alias, AliasKind.Type); }
        return;
      case 119: // inline_use_declaration -> use_type unprefixed_use_declaration 
{ yyval.ContextAlias = JoinTuples(yypos, value_stack.array[value_stack.top-1].yyval.Alias, (AliasKind)value_stack.array[value_stack.top-2].yyval.Kind);  }
        return;
      case 120: // unprefixed_use_declaration -> namespace_name 
{ yyval.Alias = new CompleteAlias(new QualifiedNameRef(yypos, new QualifiedName(value_stack.array[value_stack.top-1].yyval.StringList, true, false)), NameRef.Invalid); }
        return;
      case 121: // unprefixed_use_declaration -> namespace_name T_AS T_STRING 
{ yyval.Alias = new CompleteAlias(new QualifiedNameRef(value_stack.array[value_stack.top-3].yypos, new QualifiedName(value_stack.array[value_stack.top-3].yyval.StringList, true, false)), new NameRef(value_stack.array[value_stack.top-1].yypos, value_stack.array[value_stack.top-1].yyval.String)); }
        return;
      case 122: // use_declaration -> unprefixed_use_declaration 
{ yyval.Alias = value_stack.array[value_stack.top-1].yyval.Alias; }
        return;
      case 123: // use_declaration -> T_NS_SEPARATOR unprefixed_use_declaration 
{ 
				var src = value_stack.array[value_stack.top-1].yyval.Alias;
				yyval.Alias = new CompleteAlias(new QualifiedNameRef(CombineSpans(value_stack.array[value_stack.top-2].yypos, src.Item1.Span), 
					new QualifiedName(src.Item1.QualifiedName.Name, src.Item1.QualifiedName.Namespaces, true)), src.Item2); 
			}
        return;
      case 124: // const_list -> const_list ',' const_decl 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 125: // const_list -> const_decl 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 126: // inner_statement_list -> inner_statement_list inner_statement 
{ yyval.NodeList = AddToTopStatementList<LangElement>(value_stack.array[value_stack.top-2].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 127: // inner_statement_list -> 
{ yyval.NodeList = new List<LangElement>(); }
        return;
      case 128: // inner_statement -> statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 129: // inner_statement -> function_declaration_statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 130: // inner_statement -> class_declaration_statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 131: // inner_statement -> trait_declaration_statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 132: // inner_statement -> interface_declaration_statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 133: // inner_statement -> T_HALT_COMPILER '(' ')' ';' 
{ 
				yyval.Node = _astFactory.HaltCompiler(yypos); 
				_errors.Error(yypos, FatalErrors.InvalidHaltCompiler); 
			}
        return;
      case 134: // statement -> '{' inner_statement_list '}' 
{ yyval.Node = CreateBlock(yypos, value_stack.array[value_stack.top-2].yyval.NodeList); }
        return;
      case 135: // statement -> enter_scope if_stmt exit_scope 
{ yyval.Node = value_stack.array[value_stack.top-2].yyval.Node; }
        return;
      case 136: // statement -> enter_scope alt_if_stmt exit_scope 
{ yyval.Node = value_stack.array[value_stack.top-2].yyval.Node; }
        return;
      case 137: // statement -> T_WHILE '(' expr ')' enter_scope while_statement exit_scope 
{ yyval.Node = _astFactory.While(yypos, value_stack.array[value_stack.top-5].yyval.Node, CombineSpans(value_stack.array[value_stack.top-6].yypos, value_stack.array[value_stack.top-4].yypos), value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 138: // statement -> T_DO enter_scope statement T_WHILE '(' expr ')' ';' exit_scope 
{ yyval.Node = _astFactory.Do(yypos, value_stack.array[value_stack.top-7].yyval.Node, value_stack.array[value_stack.top-4].yyval.Node, CombineSpans(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-3].yypos)); }
        return;
      case 139: // statement -> T_FOR '(' for_exprs ';' for_exprs ';' for_exprs ')' enter_scope for_statement exit_scope 
{ yyval.Node = _astFactory.For(yypos, value_stack.array[value_stack.top-9].yyval.NodeList, value_stack.array[value_stack.top-7].yyval.NodeList, value_stack.array[value_stack.top-5].yyval.NodeList, CombineSpans(value_stack.array[value_stack.top-10].yypos, value_stack.array[value_stack.top-4].yypos), value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 140: // statement -> T_SWITCH '(' expr ')' enter_scope switch_case_list exit_scope 
{ yyval.Node = _astFactory.Switch(yypos, value_stack.array[value_stack.top-5].yyval.Node, value_stack.array[value_stack.top-2].yyval.NodeList); }
        return;
      case 141: // statement -> T_BREAK optional_expr ';' 
{ yyval.Node = _astFactory.Jump(yypos, JumpStmt.Types.Break, value_stack.array[value_stack.top-2].yyval.Node);}
        return;
      case 142: // statement -> T_CONTINUE optional_expr ';' 
{ yyval.Node = _astFactory.Jump(yypos, JumpStmt.Types.Continue, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 143: // statement -> T_RETURN optional_expr ';' 
{ yyval.Node = _astFactory.Jump(yypos, JumpStmt.Types.Return, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 144: // statement -> T_GLOBAL global_var_list ';' 
{ yyval.Node = _astFactory.Global(yypos, value_stack.array[value_stack.top-2].yyval.NodeList); }
        return;
      case 145: // statement -> T_STATIC static_var_list ';' 
{ yyval.Node = _astFactory.Static(yypos, value_stack.array[value_stack.top-2].yyval.NodeList); }
        return;
      case 146: // statement -> T_ECHO echo_expr_list ';' 
{ yyval.Node = _astFactory.Echo(yypos, value_stack.array[value_stack.top-2].yyval.NodeList); }
        return;
      case 147: // statement -> T_INLINE_HTML 
{ yyval.Node = _astFactory.InlineHtml(yypos, value_stack.array[value_stack.top-1].yyval.String); }
        return;
      case 148: // statement -> expr ';' 
{ yyval.Node = _astFactory.ExpressionStmt(yypos, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 149: // statement -> T_UNSET '(' unset_variables possible_comma ')' ';' 
{ yyval.Node = _astFactory.Unset(yypos, AddTrailingComma(value_stack.array[value_stack.top-4].yyval.NodeList, value_stack.array[value_stack.top-3].yyval.Bool)); }
        return;
      case 150: // statement -> T_FOREACH '(' expr T_AS foreach_variable ')' enter_scope foreach_statement exit_scope 
{ yyval.Node = _astFactory.Foreach(yypos, value_stack.array[value_stack.top-7].yyval.Node, null, value_stack.array[value_stack.top-5].yyval.ForeachVar, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 151: // statement -> T_FOREACH '(' expr T_AS foreach_variable T_DOUBLE_ARROW foreach_variable ')' enter_scope foreach_statement exit_scope 
{ yyval.Node = _astFactory.Foreach(yypos, value_stack.array[value_stack.top-9].yyval.Node, value_stack.array[value_stack.top-7].yyval.ForeachVar, value_stack.array[value_stack.top-5].yyval.ForeachVar, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 152: // statement -> T_DECLARE '(' const_list ')' declare_statement 
{ yyval.Node = _astFactory.Declare(yypos, value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 153: // statement -> ';' 
{ yyval.Node = _astFactory.EmptyStmt(yypos); }
        return;
      case 154: // statement -> T_TRY '{' inner_statement_list '}' enter_scope catch_list finally_statement exit_scope 
{ yyval.Node = _astFactory.TryCatch(yypos, CreateBlock(CombineSpans(value_stack.array[value_stack.top-7].yypos, value_stack.array[value_stack.top-5].yypos), value_stack.array[value_stack.top-6].yyval.NodeList), value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 155: // statement -> T_GOTO T_STRING ';' 
{ yyval.Node = _astFactory.Goto(yypos, value_stack.array[value_stack.top-2].yyval.String, value_stack.array[value_stack.top-2].yypos); }
        return;
      case 156: // statement -> T_STRING ':' 
{ yyval.Node = _astFactory.Label(yypos, value_stack.array[value_stack.top-2].yyval.String, value_stack.array[value_stack.top-2].yypos); }
        return;
      case 157: // catch_list -> 
{ yyval.NodeList = new List<LangElement>(); }
        return;
      case 158: // catch_list -> catch_list T_CATCH '(' catch_name_list optional_variable ')' '{' inner_statement_list '}' 
{ 
				yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-9].yyval.NodeList, _astFactory.Catch(CombineSpans(value_stack.array[value_stack.top-8].yypos, value_stack.array[value_stack.top-1].yypos), _astFactory.TypeReference(value_stack.array[value_stack.top-6].yypos, value_stack.array[value_stack.top-6].yyval.TypeRefList), 
					(DirectVarUse)value_stack.array[value_stack.top-5].yyval.Node, CreateBlock(CombineSpans(value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-2].yyval.NodeList))); 
			}
        return;
      case 159: // optional_variable -> 
{ yyval.Node = null; }
        return;
      case 160: // optional_variable -> T_VARIABLE 
{ yyval.Node = _astFactory.Variable(value_stack.array[value_stack.top-1].yypos, value_stack.array[value_stack.top-1].yyval.String, NullLangElement, true); }
        return;
      case 161: // catch_name_list -> name 
{ yyval.TypeRefList = new List<TypeRef>() { CreateTypeRef(value_stack.array[value_stack.top-1].yyval.QualifiedNameReference) }; }
        return;
      case 162: // catch_name_list -> catch_name_list '|' name 
{ yyval.TypeRefList = AddToList<TypeRef>(value_stack.array[value_stack.top-3].yyval.TypeRefList, CreateTypeRef(value_stack.array[value_stack.top-1].yyval.QualifiedNameReference)); }
        return;
      case 163: // finally_statement -> 
{ yyval.Node = null; }
        return;
      case 164: // finally_statement -> T_FINALLY '{' inner_statement_list '}' 
{ yyval.Node =_astFactory.Finally(yypos, CreateBlock(CombineSpans(value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-2].yyval.NodeList)); }
        return;
      case 165: // unset_variables -> unset_variable 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 166: // unset_variables -> unset_variables ',' unset_variable 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 167: // unset_variable -> variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 168: // function_declaration_statement -> function returns_ref T_STRING backup_doc_comment '(' parameter_list ')' return_type backup_fn_flags enter_scope '{' inner_statement_list '}' exit_scope backup_fn_flags 
{ 
			yyval.Node = _astFactory.Function(yypos, isConditional, value_stack.array[value_stack.top-14].yyval.Long == (long)FormalParam.Flags.IsByRef, PhpMemberAttributes.None, value_stack.array[value_stack.top-8].yyval.TypeReference, 
			new Name(value_stack.array[value_stack.top-13].yyval.String), value_stack.array[value_stack.top-13].yypos, null, value_stack.array[value_stack.top-10].yyval.FormalParamList, CombineSpans(value_stack.array[value_stack.top-11].yypos, value_stack.array[value_stack.top-9].yypos), 
			CreateBlock(CombineSpans(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-3].yypos), value_stack.array[value_stack.top-4].yyval.NodeList)); 
			SetDoc(yyval.Node);
		}
        return;
      case 169: // is_reference -> 
{ yyval.Long = 0; }
        return;
      case 170: // is_reference -> '&' 
{ yyval.Long = (long)FormalParam.Flags.IsByRef; }
        return;
      case 171: // is_variadic -> 
{ yyval.Long = 0; }
        return;
      case 172: // is_variadic -> T_ELLIPSIS 
{ yyval.Long = (long)FormalParam.Flags.IsVariadic; }
        return;
      case 173: // @4 -> 
{PushClassContext(value_stack.array[value_stack.top-2].yyval.String, value_stack.array[value_stack.top-1].yyval.TypeReference, (PhpMemberAttributes)value_stack.array[value_stack.top-4].yyval.Long);}
        return;
      case 174: // class_declaration_statement -> class_modifiers T_CLASS T_STRING extends_from @4 implements_list backup_doc_comment enter_scope '{' class_statement_list '}' exit_scope 
{ 
			yyval.Node = _astFactory.Type(yypos, CombineSpans(value_stack.array[value_stack.top-12].yypos, value_stack.array[value_stack.top-11].yypos, value_stack.array[value_stack.top-10].yypos, value_stack.array[value_stack.top-9].yypos, value_stack.array[value_stack.top-7].yypos), isConditional, (PhpMemberAttributes)value_stack.array[value_stack.top-12].yyval.Long, new Name(value_stack.array[value_stack.top-10].yyval.String), value_stack.array[value_stack.top-10].yypos, null, 
				ConvertToNamedTypeRef(value_stack.array[value_stack.top-9].yyval.TypeReference), value_stack.array[value_stack.top-7].yyval.TypeRefList.Select(ConvertToNamedTypeRef), value_stack.array[value_stack.top-3].yyval.NodeList, CombineSpans(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos)); 
			SetDoc(yyval.Node);
			PopClassContext();
		}
        return;
      case 175: // class_modifiers -> 
{ yyval.Long = (long)PhpMemberAttributes.None; }
        return;
      case 176: // class_modifiers -> class_modifier class_modifiers 
{ yyval.Long = value_stack.array[value_stack.top-2].yyval.Long | value_stack.array[value_stack.top-1].yyval.Long; }
        return;
      case 177: // class_modifier -> T_ABSTRACT 
{ yyval.Long = (long)PhpMemberAttributes.Abstract; }
        return;
      case 178: // class_modifier -> T_FINAL 
{ yyval.Long = (long)PhpMemberAttributes.Final; }
        return;
      case 179: // @5 -> 
{PushClassContext(value_stack.array[value_stack.top-1].yyval.String, null, PhpMemberAttributes.Trait);}
        return;
      case 180: // trait_declaration_statement -> T_TRAIT T_STRING @5 backup_doc_comment enter_scope '{' class_statement_list '}' exit_scope 
{ 
			yyval.Node = _astFactory.Type(yypos, CombineSpans(value_stack.array[value_stack.top-9].yypos, value_stack.array[value_stack.top-8].yypos), isConditional, PhpMemberAttributes.Trait, 
				new Name(value_stack.array[value_stack.top-8].yyval.String), value_stack.array[value_stack.top-8].yypos, null, null, new List<INamedTypeRef>(), value_stack.array[value_stack.top-3].yyval.NodeList, CombineSpans(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos)); 
			SetDoc(yyval.Node);
			PopClassContext();
		}
        return;
      case 181: // @6 -> 
{PushClassContext(value_stack.array[value_stack.top-1].yyval.String, null, PhpMemberAttributes.Interface);}
        return;
      case 182: // interface_declaration_statement -> T_INTERFACE T_STRING @6 interface_extends_list backup_doc_comment enter_scope '{' class_statement_list '}' exit_scope 
{ 
			yyval.Node = _astFactory.Type(yypos, CombineSpans(value_stack.array[value_stack.top-10].yypos, value_stack.array[value_stack.top-9].yypos, value_stack.array[value_stack.top-7].yypos), isConditional, PhpMemberAttributes.Interface, 
				new Name(value_stack.array[value_stack.top-9].yyval.String), value_stack.array[value_stack.top-9].yypos, null, null, value_stack.array[value_stack.top-7].yyval.TypeRefList.Select(ConvertToNamedTypeRef), value_stack.array[value_stack.top-3].yyval.NodeList, CombineSpans(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos)); 
			SetDoc(yyval.Node);
			PopClassContext();
		}
        return;
      case 183: // extends_from -> 
{ yyval.TypeReference = null; }
        return;
      case 184: // extends_from -> T_EXTENDS name 
{ yyval.TypeReference = CreateTypeRef(value_stack.array[value_stack.top-1].yyval.QualifiedNameReference); }
        return;
      case 185: // interface_extends_list -> 
{ yyval.TypeRefList = TypeRef.EmptyList; }
        return;
      case 186: // interface_extends_list -> T_EXTENDS name_list 
{ yyval.TypeRefList = value_stack.array[value_stack.top-1].yyval.TypeRefList; }
        return;
      case 187: // implements_list -> 
{ yyval.TypeRefList = TypeRef.EmptyList; }
        return;
      case 188: // implements_list -> T_IMPLEMENTS name_list 
{ yyval.TypeRefList = value_stack.array[value_stack.top-1].yyval.TypeRefList; }
        return;
      case 189: // foreach_variable -> variable 
{ yyval.ForeachVar = _astFactory.ForeachVariable(yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 190: // foreach_variable -> '&' variable 
{ yyval.ForeachVar = _astFactory.ForeachVariable(yypos, value_stack.array[value_stack.top-1].yyval.Node, true); }
        return;
      case 191: // foreach_variable -> T_LIST '(' array_pair_list ')' 
{ yyval.ForeachVar = _astFactory.ForeachVariable(yypos, _astFactory.List(yypos, value_stack.array[value_stack.top-2].yyval.ItemList, true)); }
        return;
      case 192: // foreach_variable -> '[' array_pair_list ']' 
{ yyval.ForeachVar = _astFactory.ForeachVariable(yypos, _astFactory.List(yypos, value_stack.array[value_stack.top-2].yyval.ItemList, false)); }
        return;
      case 193: // for_statement -> statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 194: // for_statement -> ':' inner_statement_list T_ENDFOR ';' 
{ yyval.Node = StatementsToBlock(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-3].yyval.NodeList, Tokens.T_ENDFOR); }
        return;
      case 195: // foreach_statement -> statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 196: // foreach_statement -> ':' inner_statement_list T_ENDFOREACH ';' 
{ yyval.Node = StatementsToBlock(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-3].yyval.NodeList, Tokens.T_ENDFOREACH); }
        return;
      case 197: // declare_statement -> statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 198: // declare_statement -> ':' inner_statement_list T_ENDDECLARE ';' 
{ yyval.Node = StatementsToBlock(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-3].yyval.NodeList, Tokens.T_ENDDECLARE); }
        return;
      case 199: // switch_case_list -> '{' case_list '}' 
{ yyval.NodeList = value_stack.array[value_stack.top-2].yyval.NodeList; }
        return;
      case 200: // switch_case_list -> '{' ';' case_list '}' 
{ yyval.NodeList = value_stack.array[value_stack.top-2].yyval.NodeList; }
        return;
      case 201: // switch_case_list -> ':' case_list T_ENDSWITCH ';' 
{ yyval.NodeList = value_stack.array[value_stack.top-3].yyval.NodeList; }
        return;
      case 202: // switch_case_list -> ':' ';' case_list T_ENDSWITCH ';' 
{ yyval.NodeList = value_stack.array[value_stack.top-3].yyval.NodeList; }
        return;
      case 203: // case_list -> 
{ yyval.NodeList = new List<LangElement>(); }
        return;
      case 204: // case_list -> case_list T_CASE expr case_separator inner_statement_list 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-5].yyval.NodeList, _astFactory.Case(CombineSpans(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yypos), 
				value_stack.array[value_stack.top-3].yyval.Node, CreateCaseBlock(CombineSpans(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-1].yyval.NodeList))); }
        return;
      case 205: // case_list -> case_list T_DEFAULT case_separator inner_statement_list 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-4].yyval.NodeList, _astFactory.Case(CombineSpans(value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yypos), 
				null, CreateCaseBlock(CombineSpans(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-1].yyval.NodeList))); }
        return;
      case 208: // while_statement -> statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 209: // while_statement -> ':' inner_statement_list T_ENDWHILE ';' 
{ yyval.Node = StatementsToBlock(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-3].yyval.NodeList, Tokens.T_ENDWHILE); }
        return;
      case 210: // if_stmt_without_else -> T_IF '(' expr ')' statement 
{ yyval.IfItemList = new List<IfStatement>() { 
				new IfStatement(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node) }; 
			}
        return;
      case 211: // if_stmt_without_else -> if_stmt_without_else T_ELSEIF '(' expr ')' statement 
{ yyval.IfItemList = AddToList<IfStatement>(value_stack.array[value_stack.top-6].yyval.IfItemList, 
				new IfStatement(CombineSpans(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node)); 
			}
        return;
      case 212: // if_stmt -> if_stmt_without_else 
{ ((List<IfStatement>)value_stack.array[value_stack.top-1].yyval.IfItemList).Reverse(); yyval.Node = null; 
			foreach (var item in (List<IfStatement>)value_stack.array[value_stack.top-1].yyval.IfItemList) 
				yyval.Node = _astFactory.If(yyval.Node != null? CombineSpans(item.Span, (yyval.Node).Span): item.Span, item.Condition, item.Body, yyval.Node); }
        return;
      case 213: // if_stmt -> if_stmt_without_else T_ELSE statement 
{ ((List<IfStatement>)value_stack.array[value_stack.top-3].yyval.IfItemList).Reverse(); yyval.Node = _astFactory.If(CombineSpans(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yypos), null, value_stack.array[value_stack.top-1].yyval.Node, null); 
			foreach (var item in (List<IfStatement>)value_stack.array[value_stack.top-3].yyval.IfItemList) yyval.Node = _astFactory.If(CombineSpans(item.Span, (yyval.Node).Span), item.Condition, item.Body, yyval.Node); }
        return;
      case 214: // alt_if_stmt_without_else -> T_IF '(' expr ')' ':' inner_statement_list 
{ 
				yyval.IfItemList = new List<IfStatement>() { new IfStatement(yypos, value_stack.array[value_stack.top-4].yyval.Node, StatementsToBlock(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yyval.NodeList, Tokens.END)) }; 
			}
        return;
      case 215: // alt_if_stmt_without_else -> alt_if_stmt_without_else T_ELSEIF '(' expr ')' ':' inner_statement_list 
{ 
				RebuildLast(value_stack.array[value_stack.top-7].yyval.IfItemList, value_stack.array[value_stack.top-6].yypos, Tokens.T_ELSEIF);
				yyval.IfItemList = AddToList<IfStatement>(value_stack.array[value_stack.top-7].yyval.IfItemList, 
					new IfStatement(CombineSpans(value_stack.array[value_stack.top-6].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-4].yyval.Node, StatementsToBlock(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yyval.NodeList, Tokens.END))); 
			}
        return;
      case 216: // alt_if_stmt -> alt_if_stmt_without_else T_ENDIF ';' 
{ RebuildLast(value_stack.array[value_stack.top-3].yyval.IfItemList, value_stack.array[value_stack.top-2].yypos, Tokens.T_ENDIF);
			 ((List<IfStatement>)value_stack.array[value_stack.top-3].yyval.IfItemList).Reverse(); yyval.Node = null; 
			foreach (var item in (List<IfStatement>)value_stack.array[value_stack.top-3].yyval.IfItemList) 
				yyval.Node = _astFactory.If(yyval.Node != null? CombineSpans(item.Span, (yyval.Node).Span): item.Span, item.Condition, item.Body, yyval.Node); }
        return;
      case 217: // alt_if_stmt -> alt_if_stmt_without_else T_ELSE ':' inner_statement_list T_ENDIF ';' 
{ RebuildLast(value_stack.array[value_stack.top-6].yyval.IfItemList, value_stack.array[value_stack.top-5].yypos, Tokens.T_ELSE);
			((List<IfStatement>)value_stack.array[value_stack.top-6].yyval.IfItemList).Reverse(); yyval.Node = _astFactory.If(CombineSpans(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-1].yypos), null, StatementsToBlock(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-3].yyval.NodeList, Tokens.T_ENDIF), null); 
			foreach (var item in (List<IfStatement>)value_stack.array[value_stack.top-6].yyval.IfItemList) yyval.Node = _astFactory.If(CombineSpans(item.Span, (yyval.Node).Span), item.Condition, item.Body, yyval.Node); }
        return;
      case 218: // parameter_list -> non_empty_parameter_list possible_comma 
{ yyval.FormalParamList = AddTrailingComma(value_stack.array[value_stack.top-2].yyval.FormalParamList, value_stack.array[value_stack.top-1].yyval.Bool); }
        return;
      case 219: // parameter_list -> 
{ yyval.FormalParamList = new List<FormalParam>(); }
        return;
      case 220: // non_empty_parameter_list -> parameter 
{ yyval.FormalParamList = new List<FormalParam>() { (FormalParam)value_stack.array[value_stack.top-1].yyval.FormalParam }; }
        return;
      case 221: // non_empty_parameter_list -> non_empty_parameter_list ',' parameter 
{ yyval.FormalParamList = AddToList<FormalParam>(value_stack.array[value_stack.top-3].yyval.FormalParamList, value_stack.array[value_stack.top-1].yyval.FormalParam); }
        return;
      case 222: // parameter -> optional_type is_reference is_variadic T_VARIABLE 
{ yyval.FormalParam = _astFactory.Parameter(CombineSpans(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-1].yyval.String, value_stack.array[value_stack.top-1].yypos, value_stack.array[value_stack.top-4].yyval.TypeReference, (FormalParam.Flags)value_stack.array[value_stack.top-3].yyval.Long|(FormalParam.Flags)value_stack.array[value_stack.top-2].yyval.Long, null); /* Important - @$ is invalid when optional_type is empty */ }
        return;
      case 223: // parameter -> optional_type is_reference is_variadic T_VARIABLE '=' expr 
{ yyval.FormalParam = _astFactory.Parameter(CombineSpans(value_stack.array[value_stack.top-6].yypos, value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-3].yyval.String, value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-6].yyval.TypeReference, (FormalParam.Flags)value_stack.array[value_stack.top-5].yyval.Long|(FormalParam.Flags)value_stack.array[value_stack.top-4].yyval.Long|FormalParam.Flags.Default, (Expression)value_stack.array[value_stack.top-1].yyval.Node); /* Important - @$ is invalid when optional_type is empty */ }
        return;
      case 224: // optional_type -> 
{ yyval.TypeReference = null; }
        return;
      case 225: // optional_type -> type_expr 
{ yyval.TypeReference = value_stack.array[value_stack.top-1].yyval.TypeReference; }
        return;
      case 226: // type_expr -> type 
{ yyval.TypeReference = value_stack.array[value_stack.top-1].yyval.TypeReference; }
        return;
      case 227: // type_expr -> '?' type 
{ yyval.TypeReference = _astFactory.NullableTypeReference(yypos, value_stack.array[value_stack.top-1].yyval.TypeReference); }
        return;
      case 228: // type_expr -> union_type 
{ yyval.TypeReference = _astFactory.TypeReference(yypos, value_stack.array[value_stack.top-1].yyval.TypeRefList); }
        return;
      case 229: // type -> T_ARRAY 
{ yyval.TypeReference = _astFactory.PrimitiveTypeReference(yypos, PrimitiveTypeRef.PrimitiveType.array); }
        return;
      case 230: // type -> T_CALLABLE 
{ yyval.TypeReference = _astFactory.PrimitiveTypeReference(yypos, PrimitiveTypeRef.PrimitiveType.callable); }
        return;
      case 231: // type -> name 
{ yyval.TypeReference = CreateTypeRef(value_stack.array[value_stack.top-1].yyval.QualifiedNameReference, true); }
        return;
      case 232: // union_type -> type '|' type 
{ yyval.TypeRefList = new List<TypeRef>(2){ value_stack.array[value_stack.top-3].yyval.TypeReference, value_stack.array[value_stack.top-1].yyval.TypeReference }; }
        return;
      case 233: // union_type -> union_type '|' type 
{ yyval.TypeRefList = AddToList<TypeRef>(value_stack.array[value_stack.top-3].yyval.TypeRefList, value_stack.array[value_stack.top-1].yyval.TypeReference); }
        return;
      case 234: // return_type -> 
{ yyval.TypeReference = null; }
        return;
      case 235: // return_type -> ':' type_expr 
{ yyval.TypeReference = value_stack.array[value_stack.top-1].yyval.TypeReference; }
        return;
      case 236: // argument_list -> '(' ')' 
{ yyval.ParamList = new List<ActualParam>(); }
        return;
      case 237: // argument_list -> '(' non_empty_argument_list possible_comma ')' 
{ yyval.ParamList = AddTrailingComma(value_stack.array[value_stack.top-3].yyval.ParamList, value_stack.array[value_stack.top-2].yyval.Bool); }
        return;
      case 238: // non_empty_argument_list -> argument 
{ yyval.ParamList = new List<ActualParam>() { value_stack.array[value_stack.top-1].yyval.Param }; }
        return;
      case 239: // non_empty_argument_list -> non_empty_argument_list ',' argument 
{ yyval.ParamList = AddToList<ActualParam>(value_stack.array[value_stack.top-3].yyval.ParamList, value_stack.array[value_stack.top-1].yyval.Param); }
        return;
      case 240: // argument -> expr 
{ yyval.Param = _astFactory.ActualParameter(yypos, value_stack.array[value_stack.top-1].yyval.Node, ActualParam.Flags.Default); }
        return;
      case 241: // argument -> T_ELLIPSIS expr 
{ yyval.Param = _astFactory.ActualParameter(yypos, value_stack.array[value_stack.top-1].yyval.Node, ActualParam.Flags.IsUnpack); }
        return;
      case 242: // global_var_list -> global_var_list ',' global_var 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 243: // global_var_list -> global_var 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 244: // global_var -> simple_variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 245: // static_var_list -> static_var_list ',' static_var 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 246: // static_var_list -> static_var 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 247: // static_var -> T_VARIABLE 
{ yyval.Node = _astFactory.StaticVarDecl(yypos, new VariableName(value_stack.array[value_stack.top-1].yyval.String), null); }
        return;
      case 248: // static_var -> T_VARIABLE '=' expr 
{ yyval.Node = _astFactory.StaticVarDecl(yypos, new VariableName(value_stack.array[value_stack.top-3].yyval.String), value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 249: // class_statement_list -> class_statement_list class_statement 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-2].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 250: // class_statement_list -> 
{ yyval.NodeList = new List<LangElement>(); }
        return;
      case 251: // class_statement -> variable_modifiers optional_type property_list ';' 
{ 
				yyval.Node = _astFactory.DeclList(yypos, (PhpMemberAttributes)value_stack.array[value_stack.top-4].yyval.Long, value_stack.array[value_stack.top-2].yyval.NodeList, value_stack.array[value_stack.top-3].yyval.TypeReference); 
				SetDoc(yyval.Node);
			}
        return;
      case 252: // class_statement -> method_modifiers T_CONST class_const_list ';' 
{ 
				yyval.Node = _astFactory.DeclList(yypos, (PhpMemberAttributes)value_stack.array[value_stack.top-4].yyval.Long, value_stack.array[value_stack.top-2].yyval.NodeList, null); 
				SetDoc(yyval.Node);
			}
        return;
      case 253: // class_statement -> T_USE name_list trait_adaptations 
{ yyval.Node = _astFactory.TraitUse(yypos, value_stack.array[value_stack.top-2].yyval.TypeRefList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 254: // class_statement -> method_modifiers function returns_ref identifier backup_doc_comment '(' parameter_list ')' return_type backup_fn_flags method_body backup_fn_flags 
{	
				yyval.Node = _astFactory.Method(yypos, value_stack.array[value_stack.top-10].yyval.Long == (long)FormalParam.Flags.IsByRef, (PhpMemberAttributes)value_stack.array[value_stack.top-12].yyval.Long, 
					value_stack.array[value_stack.top-4].yyval.TypeReference, value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-9].yyval.String, value_stack.array[value_stack.top-9].yypos, null, value_stack.array[value_stack.top-6].yyval.FormalParamList, CombineSpans(value_stack.array[value_stack.top-7].yypos, value_stack.array[value_stack.top-5].yypos), null, value_stack.array[value_stack.top-2].yyval.Node);
				SetDoc(yyval.Node);
			}
        return;
      case 255: // name_list -> name 
{ yyval.TypeRefList = new List<TypeRef>() { CreateTypeRef(value_stack.array[value_stack.top-1].yyval.QualifiedNameReference) }; }
        return;
      case 256: // name_list -> name_list ',' name 
{ yyval.TypeRefList = AddToList<TypeRef>(value_stack.array[value_stack.top-3].yyval.TypeRefList, CreateTypeRef(value_stack.array[value_stack.top-1].yyval.QualifiedNameReference)); }
        return;
      case 257: // trait_adaptations -> ';' 
{ yyval.Node = null; }
        return;
      case 258: // trait_adaptations -> '{' '}' 
{ yyval.Node = _astFactory.TraitAdaptationBlock(yypos, new List<LangElement>()); }
        return;
      case 259: // trait_adaptations -> '{' trait_adaptation_list '}' 
{ yyval.Node = _astFactory.TraitAdaptationBlock(yypos, value_stack.array[value_stack.top-2].yyval.NodeList); }
        return;
      case 260: // trait_adaptation_list -> trait_adaptation 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node };
 }
        return;
      case 261: // trait_adaptation_list -> trait_adaptation_list trait_adaptation 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-2].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 262: // trait_adaptation -> trait_precedence 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 263: // trait_adaptation -> trait_alias 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 264: // trait_precedence -> absolute_trait_method_reference T_INSTEADOF name_list ';' 
{ yyval.Node = _astFactory.TraitAdaptationPrecedence(yypos, (Tuple<TypeRef,NameRef>)value_stack.array[value_stack.top-4].yyval.Object, value_stack.array[value_stack.top-2].yyval.TypeRefList); }
        return;
      case 265: // trait_alias -> trait_method_reference T_AS T_STRING ';' 
{ yyval.Node = _astFactory.TraitAdaptationAlias(yypos, (Tuple<TypeRef,NameRef>)value_stack.array[value_stack.top-4].yyval.Object, new NameRef(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.String), null); }
        return;
      case 266: // trait_alias -> trait_method_reference T_AS reserved_non_modifiers ';' 
{ yyval.Node = _astFactory.TraitAdaptationAlias(yypos, (Tuple<TypeRef,NameRef>)value_stack.array[value_stack.top-4].yyval.Object, new NameRef(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.String), null); }
        return;
      case 267: // trait_alias -> trait_method_reference T_AS member_modifier identifier ';' 
{ 
				yyval.Node = _astFactory.TraitAdaptationAlias(yypos, (Tuple<TypeRef,NameRef>)value_stack.array[value_stack.top-5].yyval.Object, new NameRef(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.String), (PhpMemberAttributes)value_stack.array[value_stack.top-3].yyval.Long); 
			}
        return;
      case 268: // trait_alias -> trait_method_reference T_AS member_modifier ';' 
{ 
				yyval.Node = _astFactory.TraitAdaptationAlias(yypos, (Tuple<TypeRef,NameRef>)value_stack.array[value_stack.top-4].yyval.Object, NameRef.Invalid, (PhpMemberAttributes)value_stack.array[value_stack.top-2].yyval.Long); 
			}
        return;
      case 269: // trait_method_reference -> identifier 
{ yyval.Object = new Tuple<TypeRef,NameRef>(null, new NameRef(value_stack.array[value_stack.top-1].yypos, value_stack.array[value_stack.top-1].yyval.String)); }
        return;
      case 270: // trait_method_reference -> absolute_trait_method_reference 
{ yyval.Object = value_stack.array[value_stack.top-1].yyval.Object; }
        return;
      case 271: // absolute_trait_method_reference -> name T_DOUBLE_COLON identifier 
{ yyval.Object = new Tuple<TypeRef,NameRef>(CreateTypeRef(value_stack.array[value_stack.top-3].yyval.QualifiedNameReference), new NameRef(value_stack.array[value_stack.top-1].yypos, value_stack.array[value_stack.top-1].yyval.String)); }
        return;
      case 272: // method_body -> ';' 
{ yyval.Node = null; }
        return;
      case 273: // method_body -> '{' inner_statement_list '}' 
{ yyval.Node = CreateBlock(CombineSpans(value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-2].yyval.NodeList); }
        return;
      case 274: // variable_modifiers -> non_empty_member_modifiers 
{ yyval.Long = value_stack.array[value_stack.top-1].yyval.Long; }
        return;
      case 275: // variable_modifiers -> T_VAR 
{ yyval.Long = (long)PhpMemberAttributes.None; }
        return;
      case 276: // method_modifiers -> 
{ yyval.Long = (long)PhpMemberAttributes.None; }
        return;
      case 277: // method_modifiers -> non_empty_member_modifiers 
{ yyval.Long = value_stack.array[value_stack.top-1].yyval.Long; }
        return;
      case 278: // non_empty_member_modifiers -> member_modifier 
{ yyval.Long = value_stack.array[value_stack.top-1].yyval.Long; }
        return;
      case 279: // non_empty_member_modifiers -> non_empty_member_modifiers member_modifier 
{ yyval.Long = value_stack.array[value_stack.top-2].yyval.Long | value_stack.array[value_stack.top-1].yyval.Long; }
        return;
      case 280: // member_modifier -> T_PUBLIC 
{ yyval.Long = (long)PhpMemberAttributes.Public; }
        return;
      case 281: // member_modifier -> T_PROTECTED 
{ yyval.Long = (long)PhpMemberAttributes.Protected; }
        return;
      case 282: // member_modifier -> T_PRIVATE 
{ yyval.Long = (long)PhpMemberAttributes.Private; }
        return;
      case 283: // member_modifier -> T_STATIC 
{ yyval.Long = (long)PhpMemberAttributes.Static; }
        return;
      case 284: // member_modifier -> T_ABSTRACT 
{ yyval.Long = (long)PhpMemberAttributes.Abstract; }
        return;
      case 285: // member_modifier -> T_FINAL 
{ yyval.Long = (long)PhpMemberAttributes.Final; }
        return;
      case 286: // property_list -> property_list ',' property 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 287: // property_list -> property 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 288: // property -> T_VARIABLE backup_doc_comment 
{ SetMemberDoc(yyval.Node = _astFactory.FieldDecl(yypos, new VariableName(value_stack.array[value_stack.top-2].yyval.String), null)); }
        return;
      case 289: // property -> T_VARIABLE '=' expr backup_doc_comment 
{ SetMemberDoc(yyval.Node = _astFactory.FieldDecl(yypos, new VariableName(value_stack.array[value_stack.top-4].yyval.String), (Expression)value_stack.array[value_stack.top-2].yyval.Node)); }
        return;
      case 290: // class_const_list -> class_const_list ',' class_const_decl 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 291: // class_const_list -> class_const_decl 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 292: // class_const_decl -> identifier '=' expr backup_doc_comment 
{
		yyval.Node = _astFactory.ClassConstDecl(yypos, new VariableName(value_stack.array[value_stack.top-4].yyval.String), value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yyval.Node); 
		SetMemberDoc(yyval.Node);
	}
        return;
      case 293: // const_decl -> T_STRING '=' expr backup_doc_comment 
{ yyval.Node = _astFactory.GlobalConstDecl(yypos, false, new VariableName(value_stack.array[value_stack.top-4].yyval.String), value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yyval.Node); 
		SetMemberDoc(yyval.Node);
	}
        return;
      case 294: // echo_expr_list -> echo_expr_list ',' echo_expr 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 295: // echo_expr_list -> echo_expr 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 296: // echo_expr -> expr 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 297: // for_exprs -> 
{ yyval.NodeList = LangElement.EmptyList; }
        return;
      case 298: // for_exprs -> non_empty_for_exprs 
{ yyval.NodeList = value_stack.array[value_stack.top-1].yyval.NodeList; }
        return;
      case 299: // non_empty_for_exprs -> non_empty_for_exprs ',' expr 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 300: // non_empty_for_exprs -> expr 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 301: // @7 -> 
{ PushAnonymousClassContext(value_stack.array[value_stack.top-1].yyval.TypeReference); }
        return;
      case 302: // anonymous_class -> T_CLASS ctor_arguments extends_from @7 implements_list backup_doc_comment enter_scope '{' class_statement_list '}' exit_scope 
{
			var typeRef = _astFactory.AnonymousTypeReference(yypos, CombineSpans(value_stack.array[value_stack.top-11].yypos, value_stack.array[value_stack.top-10].yypos, value_stack.array[value_stack.top-9].yypos, value_stack.array[value_stack.top-7].yypos), isConditional, PhpMemberAttributes.None, null, ConvertToNamedTypeRef(value_stack.array[value_stack.top-9].yyval.TypeReference), value_stack.array[value_stack.top-7].yyval.TypeRefList.Select(ConvertToNamedTypeRef), value_stack.array[value_stack.top-3].yyval.NodeList, CombineSpans(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos));
			SetDoc(((AnonymousTypeRef)typeRef).TypeDeclaration);
			yyval.AnonymousClass = new AnonymousClass(typeRef, value_stack.array[value_stack.top-10].yyval.ParamList, value_stack.array[value_stack.top-10].yypos); 
			PopClassContext();
		}
        return;
      case 303: // new_expr -> T_NEW class_name_reference ctor_arguments 
{ yyval.Node = _astFactory.New(yypos, value_stack.array[value_stack.top-2].yyval.TypeReference, value_stack.array[value_stack.top-1].yyval.ParamList, value_stack.array[value_stack.top-1].yypos); }
        return;
      case 304: // new_expr -> T_NEW anonymous_class 
{ yyval.Node = _astFactory.New(yypos, ((AnonymousClass)value_stack.array[value_stack.top-1].yyval.AnonymousClass).Item1, ((AnonymousClass)value_stack.array[value_stack.top-1].yyval.AnonymousClass).Item2, ((AnonymousClass)value_stack.array[value_stack.top-1].yyval.AnonymousClass).Item3); }
        return;
      case 305: // expr_without_variable -> T_LIST '(' array_pair_list ')' '=' expr 
{ yyval.Node = _astFactory.Assignment(yypos, _astFactory.List(Span.Combine(value_stack.array[value_stack.top-6].yypos, value_stack.array[value_stack.top-3].yypos), value_stack.array[value_stack.top-4].yyval.ItemList, true), value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignValue); }
        return;
      case 306: // expr_without_variable -> '[' array_pair_list ']' '=' expr 
{ yyval.Node = _astFactory.Assignment(yypos, _astFactory.List(CombineSpans(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-3].yypos), value_stack.array[value_stack.top-4].yyval.ItemList, false), value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignValue); }
        return;
      case 307: // expr_without_variable -> variable '=' expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignValue); }
        return;
      case 308: // expr_without_variable -> variable '=' '&' variable 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-4].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignRef); }
        return;
      case 309: // expr_without_variable -> variable '=' '&' new_expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-4].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignRef); _errors.Error(yypos, Warnings.AssignNewByRefDeprecated); }
        return;
      case 310: // expr_without_variable -> T_CLONE expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.Clone,   (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 311: // expr_without_variable -> variable T_PLUS_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignAdd); }
        return;
      case 312: // expr_without_variable -> variable T_MINUS_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignSub); }
        return;
      case 313: // expr_without_variable -> variable T_MUL_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignMul); }
        return;
      case 314: // expr_without_variable -> variable T_POW_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignPow); }
        return;
      case 315: // expr_without_variable -> variable T_DIV_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignDiv); }
        return;
      case 316: // expr_without_variable -> variable T_CONCAT_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignAppend); }
        return;
      case 317: // expr_without_variable -> variable T_MOD_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignMod); }
        return;
      case 318: // expr_without_variable -> variable T_AND_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignAnd); }
        return;
      case 319: // expr_without_variable -> variable T_OR_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignOr); }
        return;
      case 320: // expr_without_variable -> variable T_XOR_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignXor); }
        return;
      case 321: // expr_without_variable -> variable T_SL_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignShiftLeft); }
        return;
      case 322: // expr_without_variable -> variable T_SR_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignShiftRight); }
        return;
      case 323: // expr_without_variable -> variable T_COALESCE_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignCoalesce); }
        return;
      case 324: // expr_without_variable -> variable T_INC 
{ yyval.Node = CreateIncDec(yypos, value_stack.array[value_stack.top-2].yyval.Node, true, true); }
        return;
      case 325: // expr_without_variable -> T_INC variable 
{ yyval.Node = CreateIncDec(yypos, value_stack.array[value_stack.top-1].yyval.Node, true,  false); }
        return;
      case 326: // expr_without_variable -> variable T_DEC 
{ yyval.Node = CreateIncDec(yypos, value_stack.array[value_stack.top-2].yyval.Node, false, true); }
        return;
      case 327: // expr_without_variable -> T_DEC variable 
{ yyval.Node = CreateIncDec(yypos, value_stack.array[value_stack.top-1].yyval.Node, false, false); }
        return;
      case 328: // expr_without_variable -> expr T_BOOLEAN_OR expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Or,   value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 329: // expr_without_variable -> expr T_BOOLEAN_AND expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.And,  value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 330: // expr_without_variable -> expr T_LOGICAL_OR expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Or,   value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 331: // expr_without_variable -> expr T_LOGICAL_AND expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.And,  value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 332: // expr_without_variable -> expr T_LOGICAL_XOR expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Xor,  value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 333: // expr_without_variable -> expr '|' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.BitOr,  value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 334: // expr_without_variable -> expr '&' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.BitAnd, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 335: // expr_without_variable -> expr '^' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.BitXor, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 336: // expr_without_variable -> expr '.' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Concat, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 337: // expr_without_variable -> expr '+' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Add,    value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 338: // expr_without_variable -> expr '-' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Sub,    value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 339: // expr_without_variable -> expr '*' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Mul,    value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 340: // expr_without_variable -> expr T_POW expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Pow,    value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 341: // expr_without_variable -> expr '/' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Div,    value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 342: // expr_without_variable -> expr '%' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Mod,    value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 343: // expr_without_variable -> expr T_SL expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.ShiftLeft,  value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 344: // expr_without_variable -> expr T_SR expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.ShiftRight, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 345: // expr_without_variable -> '+' expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.Plus,   (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 346: // expr_without_variable -> '-' expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.Minus,   (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 347: // expr_without_variable -> '!' expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.LogicNegation, (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 348: // expr_without_variable -> '~' expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.BitNegation,   (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 349: // expr_without_variable -> expr T_IS_IDENTICAL expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Identical, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 350: // expr_without_variable -> expr T_IS_NOT_IDENTICAL expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.NotIdentical, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 351: // expr_without_variable -> expr T_IS_EQUAL expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Equal, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 352: // expr_without_variable -> expr T_IS_NOT_EQUAL expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.NotEqual, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 353: // expr_without_variable -> expr '<' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.LessThan, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 354: // expr_without_variable -> expr T_IS_SMALLER_OR_EQUAL expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.LessThanOrEqual, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 355: // expr_without_variable -> expr '>' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.GreaterThan, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 356: // expr_without_variable -> expr T_IS_GREATER_OR_EQUAL expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.GreaterThanOrEqual, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 357: // expr_without_variable -> expr T_SPACESHIP expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Spaceship, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 358: // expr_without_variable -> expr T_INSTANCEOF class_name_reference 
{ yyval.Node = _astFactory.InstanceOf(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.TypeReference); }
        return;
      case 359: // expr_without_variable -> '(' expr ')' 
{ yyval.Node = _astFactory.EncapsedExpression(yypos, value_stack.array[value_stack.top-2].yyval.Node, Tokens.T_LPAREN); }
        return;
      case 360: // expr_without_variable -> new_expr 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 361: // expr_without_variable -> expr '?' expr ':' expr 
{ yyval.Node = _astFactory.ConditionalEx(yypos, value_stack.array[value_stack.top-5].yyval.Node, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 362: // expr_without_variable -> expr '?' ':' expr 
{ yyval.Node = _astFactory.ConditionalEx(yypos, value_stack.array[value_stack.top-4].yyval.Node, null, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 363: // expr_without_variable -> expr T_COALESCE expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Coalesce, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 364: // expr_without_variable -> internal_functions_in_yacc 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 365: // expr_without_variable -> T_INT_CAST expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.Int64Cast,   (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 366: // expr_without_variable -> T_DOUBLE_CAST expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.DoubleCast, (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 367: // expr_without_variable -> T_STRING_CAST expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.StringCast, (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 368: // expr_without_variable -> T_ARRAY_CAST expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.ArrayCast,  (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 369: // expr_without_variable -> T_OBJECT_CAST expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.ObjectCast, (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 370: // expr_without_variable -> T_BOOL_CAST expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.BoolCast,   (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 371: // expr_without_variable -> T_UNSET_CAST expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.UnsetCast,  (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 372: // expr_without_variable -> T_EXIT exit_expr 
{ yyval.Node = _astFactory.Exit(yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 373: // expr_without_variable -> '@' expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.AtSign,     (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 374: // expr_without_variable -> scalar 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 375: // expr_without_variable -> backticks_expr 
{ yyval.Node = _astFactory.Shell(yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 376: // expr_without_variable -> T_PRINT expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.Print, (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 377: // expr_without_variable -> T_YIELD 
{ yyval.Node = _astFactory.Yield(yypos, null, null); }
        return;
      case 378: // expr_without_variable -> T_YIELD expr 
{ yyval.Node = _astFactory.Yield(yypos, null, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 379: // expr_without_variable -> T_YIELD expr T_DOUBLE_ARROW expr 
{ yyval.Node = _astFactory.Yield(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 380: // expr_without_variable -> T_YIELD_FROM expr 
{ yyval.Node = _astFactory.YieldFrom(yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 381: // expr_without_variable -> T_THROW expr 
{ yyval.Node = _astFactory.Throw(yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 382: // expr_without_variable -> inline_function 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 383: // expr_without_variable -> T_STATIC inline_function 
{
			var lambda = (LambdaFunctionExpr)value_stack.array[value_stack.top-1].yyval.Node;
			lambda.IsStatic = true;
			lambda.Span = yypos;
			yyval.Node = lambda;
		}
        return;
      case 384: // inline_function -> function returns_ref backup_doc_comment '(' parameter_list ')' lexical_vars return_type backup_fn_flags enter_scope '{' inner_statement_list '}' exit_scope backup_fn_flags 
{ 
				yyval.Node = _astFactory.Lambda(yypos, CombineSpans(value_stack.array[value_stack.top-15].yypos, value_stack.array[value_stack.top-10].yypos, value_stack.array[value_stack.top-9].yypos, value_stack.array[value_stack.top-8].yypos), value_stack.array[value_stack.top-14].yyval.Long == (long)FormalParam.Flags.IsByRef, value_stack.array[value_stack.top-8].yyval.TypeReference, 
					value_stack.array[value_stack.top-11].yyval.FormalParamList, CombineSpans(value_stack.array[value_stack.top-12].yypos, value_stack.array[value_stack.top-10].yypos), value_stack.array[value_stack.top-9].yyval.FormalParamList, CreateBlock(CombineSpans(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-3].yypos), value_stack.array[value_stack.top-4].yyval.NodeList)); 
				SetDoc(yyval.Node);
			}
        return;
      case 385: // inline_function -> fn returns_ref '(' parameter_list ')' return_type backup_doc_comment T_DOUBLE_ARROW backup_fn_flags backup_lex_pos expr backup_fn_flags 
{
				yyval.Node = _astFactory.ArrowFunc(yypos, CombineSpans(value_stack.array[value_stack.top-12].yypos, value_stack.array[value_stack.top-8].yypos, value_stack.array[value_stack.top-7].yypos), value_stack.array[value_stack.top-11].yyval.Long == (long)FormalParam.Flags.IsByRef, value_stack.array[value_stack.top-7].yyval.TypeReference, 
					value_stack.array[value_stack.top-9].yyval.FormalParamList, CombineSpans(value_stack.array[value_stack.top-10].yypos, value_stack.array[value_stack.top-8].yypos), value_stack.array[value_stack.top-2].yyval.Node); 
				SetDoc(yyval.Node);
			}
        return;
      case 388: // backup_doc_comment -> 
{ }
        return;
      case 389: // enter_scope -> 
{ _currentScope.Increment(); }
        return;
      case 390: // exit_scope -> 
{ _currentScope.Decrement(); }
        return;
      case 391: // backup_fn_flags -> 
{  }
        return;
      case 392: // backup_lex_pos -> 
{  }
        return;
      case 393: // returns_ref -> 
{ yyval.Long = 0; }
        return;
      case 394: // returns_ref -> '&' 
{ yyval.Long = (long)FormalParam.Flags.IsByRef; }
        return;
      case 395: // lexical_vars -> 
{ yyval.FormalParamList = new List<FormalParam>(); }
        return;
      case 396: // lexical_vars -> T_USE '(' lexical_var_list ')' 
{ yyval.FormalParamList = value_stack.array[value_stack.top-2].yyval.FormalParamList; }
        return;
      case 397: // lexical_var_list -> lexical_var_list ',' lexical_var 
{ yyval.FormalParamList = AddToList<FormalParam>(value_stack.array[value_stack.top-3].yyval.FormalParamList, value_stack.array[value_stack.top-1].yyval.FormalParam); }
        return;
      case 398: // lexical_var_list -> lexical_var 
{ yyval.FormalParamList = new List<FormalParam>() { (FormalParam)value_stack.array[value_stack.top-1].yyval.FormalParam }; }
        return;
      case 399: // lexical_var -> T_VARIABLE 
{ yyval.FormalParam = _astFactory.Parameter(yypos, value_stack.array[value_stack.top-1].yyval.String, value_stack.array[value_stack.top-1].yypos, null, FormalParam.Flags.Default, null); }
        return;
      case 400: // lexical_var -> '&' T_VARIABLE 
{ yyval.FormalParam = _astFactory.Parameter(yypos, value_stack.array[value_stack.top-1].yyval.String, value_stack.array[value_stack.top-1].yypos, null, FormalParam.Flags.IsByRef, null); }
        return;
      case 401: // function_call -> name argument_list 
{ yyval.Node = _astFactory.Call(yypos, TranslateQNRFunction(value_stack.array[value_stack.top-2].yyval.QualifiedNameReference), new CallSignature(value_stack.array[value_stack.top-1].yyval.ParamList, value_stack.array[value_stack.top-1].yypos) { Position = value_stack.array[value_stack.top-1].yypos }, null); }
        return;
      case 402: // function_call -> class_name T_DOUBLE_COLON member_name argument_list 
{
				if(value_stack.array[value_stack.top-2].yyval.Object is Name)
					yyval.Node = _astFactory.Call(yypos, (Name)value_stack.array[value_stack.top-2].yyval.Object, value_stack.array[value_stack.top-2].yypos, new CallSignature(value_stack.array[value_stack.top-1].yyval.ParamList, value_stack.array[value_stack.top-1].yypos) { Position = value_stack.array[value_stack.top-1].yypos }, value_stack.array[value_stack.top-4].yyval.TypeReference); 
				else
					yyval.Node = _astFactory.Call(yypos, (LangElement)value_stack.array[value_stack.top-2].yyval.Object, new CallSignature(value_stack.array[value_stack.top-1].yyval.ParamList, value_stack.array[value_stack.top-1].yypos) { Position = value_stack.array[value_stack.top-1].yypos }, value_stack.array[value_stack.top-4].yyval.TypeReference); 
			}
        return;
      case 403: // function_call -> variable_class_name T_DOUBLE_COLON member_name argument_list 
{
				if(value_stack.array[value_stack.top-2].yyval.Object is Name)
					yyval.Node = _astFactory.Call(yypos, (Name)value_stack.array[value_stack.top-2].yyval.Object, value_stack.array[value_stack.top-2].yypos, new CallSignature(value_stack.array[value_stack.top-1].yyval.ParamList, value_stack.array[value_stack.top-1].yypos) { Position = value_stack.array[value_stack.top-1].yypos }, _astFactory.TypeReference(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-4].yyval.Node)); 
				else
					yyval.Node = _astFactory.Call(yypos, (LangElement)value_stack.array[value_stack.top-2].yyval.Object, new CallSignature(value_stack.array[value_stack.top-1].yyval.ParamList, value_stack.array[value_stack.top-1].yypos) { Position = value_stack.array[value_stack.top-1].yypos }, _astFactory.TypeReference(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-4].yyval.Node)); 
			}
        return;
      case 404: // function_call -> callable_expr argument_list 
{ yyval.Node = _astFactory.Call(yypos, value_stack.array[value_stack.top-2].yyval.Node, new CallSignature(value_stack.array[value_stack.top-1].yyval.ParamList, value_stack.array[value_stack.top-1].yypos) { Position = value_stack.array[value_stack.top-1].yypos }, NullLangElement);}
        return;
      case 405: // class_name -> T_STATIC 
{ yyval.TypeReference = _astFactory.ReservedTypeReference(yypos, _reservedTypeStatic); }
        return;
      case 406: // class_name -> name 
{ yyval.TypeReference = CreateTypeRef(value_stack.array[value_stack.top-1].yyval.QualifiedNameReference); }
        return;
      case 407: // class_name_reference -> class_name 
{ yyval.TypeReference = value_stack.array[value_stack.top-1].yyval.TypeReference; }
        return;
      case 408: // class_name_reference -> new_variable 
{ yyval.TypeReference = _astFactory.TypeReference(yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 409: // exit_expr -> 
{ yyval.Node = null; }
        return;
      case 410: // exit_expr -> '(' optional_expr ')' 
{ yyval.Node = value_stack.array[value_stack.top-2].yyval.Node == null? null: _astFactory.EncapsedExpression(yypos, value_stack.array[value_stack.top-2].yyval.Node, Tokens.T_LPAREN); }
        return;
      case 411: // backticks_expr -> '`' '`' 
{ yyval.Node = _astFactory.Literal(yypos, string.Empty, "``"); }
        return;
      case 412: // backticks_expr -> '`' T_ENCAPSED_AND_WHITESPACE '`' 
{ yyval.Node = _astFactory.Literal(yypos, value_stack.array[value_stack.top-2].yyval.Strings.Key, string.Format("`{0}`", value_stack.array[value_stack.top-2].yyval.Strings.Value)); }
        return;
      case 413: // backticks_expr -> '`' encaps_list '`' 
{ yyval.Node = _astFactory.StringEncapsedExpression(yypos, _astFactory.Concat(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.NodeList), Tokens.T_BACKQUOTE); }
        return;
      case 414: // ctor_arguments -> 
{ yyval.ParamList = new List<ActualParam>(); }
        return;
      case 415: // ctor_arguments -> argument_list 
{ yyval.ParamList = value_stack.array[value_stack.top-1].yyval.ParamList; }
        return;
      case 416: // dereferencable_scalar -> T_ARRAY '(' array_pair_list ')' 
{ yyval.Node = _astFactory.NewArray(yypos, value_stack.array[value_stack.top-2].yyval.ItemList, true); }
        return;
      case 417: // dereferencable_scalar -> '[' array_pair_list ']' 
{ yyval.Node = _astFactory.NewArray(yypos, value_stack.array[value_stack.top-2].yyval.ItemList, false); }
        return;
      case 418: // dereferencable_scalar -> T_CONSTANT_ENCAPSED_STRING 
{ yyval.Node = _astFactory.Literal(yypos, value_stack.array[value_stack.top-1].yyval.String, _lexer.TokenText); }
        return;
      case 419: // scalar -> T_LNUMBER 
{ yyval.Node = _astFactory.Literal(yypos, value_stack.array[value_stack.top-1].yyval.Long, _lexer.TokenText); }
        return;
      case 420: // scalar -> T_DNUMBER 
{ yyval.Node = _astFactory.Literal(yypos, value_stack.array[value_stack.top-1].yyval.Double, _lexer.TokenText); }
        return;
      case 421: // scalar -> T_LINE 
{ yyval.Node = _astFactory.PseudoConstUse(yypos, PseudoConstUse.Types.Line); }
        return;
      case 422: // scalar -> T_FILE 
{ yyval.Node = _astFactory.PseudoConstUse(yypos, PseudoConstUse.Types.File); }
        return;
      case 423: // scalar -> T_DIR 
{ yyval.Node = _astFactory.PseudoConstUse(yypos, PseudoConstUse.Types.Dir); }
        return;
      case 424: // scalar -> T_TRAIT_C 
{ yyval.Node = _astFactory.PseudoConstUse(yypos, PseudoConstUse.Types.Trait); }
        return;
      case 425: // scalar -> T_METHOD_C 
{ yyval.Node = _astFactory.PseudoConstUse(yypos, PseudoConstUse.Types.Method); }
        return;
      case 426: // scalar -> T_FUNC_C 
{ yyval.Node = _astFactory.PseudoConstUse(yypos, PseudoConstUse.Types.Function); }
        return;
      case 427: // scalar -> T_NS_C 
{ yyval.Node = _astFactory.PseudoConstUse(yypos, PseudoConstUse.Types.Namespace); }
        return;
      case 428: // scalar -> T_CLASS_C 
{ yyval.Node = _astFactory.PseudoConstUse(yypos, PseudoConstUse.Types.Class); }
        return;
      case 429: // scalar -> '"' encaps_list '"' 
{ yyval.Node = _astFactory.StringEncapsedExpression(yypos, _astFactory.Concat(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.NodeList), Tokens.T_DOUBLE_QUOTES); }
        return;
      case 430: // scalar -> T_START_HEREDOC T_END_HEREDOC 
{ yyval.Node = _astFactory.HeredocExpression(yypos, _astFactory.Literal(new Span(value_stack.array[value_stack.top-2].yypos.End, 0), "", ""), value_stack.array[value_stack.top-2].yyval.QuoteToken, value_stack.array[value_stack.top-2].yyval.String); }
        return;
      case 431: // scalar -> T_START_HEREDOC T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC 
{ yyval.Node = _astFactory.HeredocExpression(yypos, _astFactory.Literal(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.Strings.Key, value_stack.array[value_stack.top-2].yyval.Strings.Value), value_stack.array[value_stack.top-3].yyval.QuoteToken, value_stack.array[value_stack.top-3].yyval.String); }
        return;
      case 432: // scalar -> T_START_HEREDOC encaps_list T_END_HEREDOC 
{ yyval.Node = _astFactory.HeredocExpression(yypos, _astFactory.Concat(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.NodeList), value_stack.array[value_stack.top-3].yyval.QuoteToken, value_stack.array[value_stack.top-3].yyval.String); }
        return;
      case 433: // scalar -> dereferencable_scalar 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 434: // scalar -> constant 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 435: // constant -> name 
{ yyval.Node = _astFactory.ConstUse(yypos, TranslateQNRConstant(value_stack.array[value_stack.top-1].yyval.QualifiedNameReference)); }
        return;
      case 436: // constant -> class_name T_DOUBLE_COLON identifier 
{ yyval.Node = _astFactory.ClassConstUse(yypos, value_stack.array[value_stack.top-3].yyval.TypeReference, new Name(value_stack.array[value_stack.top-1].yyval.String), value_stack.array[value_stack.top-1].yypos); }
        return;
      case 437: // constant -> variable_class_name T_DOUBLE_COLON identifier 
{ yyval.Node = _astFactory.ClassConstUse(yypos, _astFactory.TypeReference(value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-3].yyval.Node), new Name(value_stack.array[value_stack.top-1].yyval.String), value_stack.array[value_stack.top-1].yypos); }
        return;
      case 438: // expr -> variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 439: // expr -> expr_without_variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 440: // optional_expr -> 
{ yyval.Node = null; }
        return;
      case 441: // optional_expr -> expr 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 442: // variable_class_name -> dereferencable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; /* TODO if (!($1 is VarLikeConstructUse)) _errors.Error(@$, FatalErrors.CheckVarUseFault); */ }
        return;
      case 443: // dereferencable -> variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 444: // dereferencable -> '(' expr ')' 
{ yyval.Node = _astFactory.EncapsedExpression(yypos, value_stack.array[value_stack.top-2].yyval.Node, Tokens.T_LPAREN); }
        return;
      case 445: // dereferencable -> dereferencable_scalar 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 446: // callable_expr -> callable_variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 447: // callable_expr -> '(' expr ')' 
{ yyval.Node = _astFactory.EncapsedExpression(yypos, value_stack.array[value_stack.top-2].yyval.Node, Tokens.T_LPAREN); }
        return;
      case 448: // callable_expr -> dereferencable_scalar 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 449: // callable_variable -> simple_variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 450: // callable_variable -> dereferencable '[' optional_expr ']' 
{ yyval.Node = _astFactory.ArrayItem(yypos, false, value_stack.array[value_stack.top-4].yyval.Node, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 451: // callable_variable -> constant '[' optional_expr ']' 
{ yyval.Node = _astFactory.ArrayItem(yypos, false, value_stack.array[value_stack.top-4].yyval.Node, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 452: // callable_variable -> dereferencable '{' expr '}' 
{ yyval.Node = _astFactory.ArrayItem(yypos, true, value_stack.array[value_stack.top-4].yyval.Node, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 453: // callable_variable -> dereferencable T_OBJECT_OPERATOR property_name argument_list 
{
			if(value_stack.array[value_stack.top-2].yyval.Object is Name)
			{
				var name = new QualifiedName((Name)value_stack.array[value_stack.top-2].yyval.Object);
				yyval.Node = _astFactory.Call(yypos, new TranslatedQualifiedName(name, value_stack.array[value_stack.top-2].yypos, name, null), new CallSignature(value_stack.array[value_stack.top-1].yyval.ParamList, value_stack.array[value_stack.top-1].yypos) { Position = value_stack.array[value_stack.top-1].yypos }, VerifyMemberOf(value_stack.array[value_stack.top-4].yyval.Node));
			}
			else
				yyval.Node = _astFactory.Call(yypos, (LangElement)value_stack.array[value_stack.top-2].yyval.Object, new CallSignature(value_stack.array[value_stack.top-1].yyval.ParamList, value_stack.array[value_stack.top-1].yypos) { Position = value_stack.array[value_stack.top-1].yypos }, VerifyMemberOf(value_stack.array[value_stack.top-4].yyval.Node));
		}
        return;
      case 454: // callable_variable -> function_call 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 455: // variable -> callable_variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 456: // variable -> static_member 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 457: // variable -> dereferencable T_OBJECT_OPERATOR property_name 
{ yyval.Node = CreateProperty(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Object); }
        return;
      case 458: // simple_variable -> T_VARIABLE 
{ yyval.Node = _astFactory.Variable(yypos, value_stack.array[value_stack.top-1].yyval.String,	NullLangElement, true); }
        return;
      case 459: // simple_variable -> '$' '{' expr '}' 
{ yyval.Node = _astFactory.Variable(yypos, _astFactory.EncapsedExpression(Span.Combine(value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-2].yyval.Node, Tokens.T_LBRACE), NullLangElement); }
        return;
      case 460: // simple_variable -> '$' simple_variable 
{ yyval.Node = _astFactory.Variable(yypos, value_stack.array[value_stack.top-1].yyval.Node, NullLangElement); }
        return;
      case 461: // static_member -> class_name T_DOUBLE_COLON simple_variable 
{ yyval.Node = CreateStaticProperty(yypos, value_stack.array[value_stack.top-3].yyval.TypeReference, value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 462: // static_member -> variable_class_name T_DOUBLE_COLON simple_variable 
{ yyval.Node = CreateStaticProperty(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 463: // new_variable -> simple_variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 464: // new_variable -> new_variable '[' optional_expr ']' 
{ yyval.Node = _astFactory.ArrayItem(yypos, false, value_stack.array[value_stack.top-4].yyval.Node, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 465: // new_variable -> new_variable '{' expr '}' 
{ yyval.Node = _astFactory.ArrayItem(yypos, true, value_stack.array[value_stack.top-4].yyval.Node, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 466: // new_variable -> new_variable T_OBJECT_OPERATOR property_name 
{ yyval.Node = CreateProperty(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Object); }
        return;
      case 467: // new_variable -> class_name T_DOUBLE_COLON simple_variable 
{ yyval.Node = CreateStaticProperty(yypos, value_stack.array[value_stack.top-3].yyval.TypeReference, value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 468: // new_variable -> new_variable T_DOUBLE_COLON simple_variable 
{ yyval.Node = CreateStaticProperty(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 469: // member_name -> identifier 
{ yyval.Object = new Name(value_stack.array[value_stack.top-1].yyval.String); }
        return;
      case 470: // member_name -> '{' expr '}' 
{ yyval.Object = _astFactory.EncapsedExpression(yypos, value_stack.array[value_stack.top-2].yyval.Node, Tokens.T_LBRACE); }
        return;
      case 471: // member_name -> simple_variable 
{ yyval.Object = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 472: // property_name -> T_STRING 
{ yyval.Object = new Name(value_stack.array[value_stack.top-1].yyval.String); }
        return;
      case 473: // property_name -> '{' expr '}' 
{ yyval.Object = _astFactory.EncapsedExpression(yypos, value_stack.array[value_stack.top-2].yyval.Node, Tokens.T_LBRACE); }
        return;
      case 474: // property_name -> simple_variable 
{ yyval.Object = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 475: // array_pair_list -> non_empty_array_pair_list 
{ yyval.ItemList = value_stack.array[value_stack.top-1].yyval.ItemList;  }
        return;
      case 476: // possible_array_pair -> 
{ yyval.Item = null; }
        return;
      case 477: // possible_array_pair -> array_pair 
{ yyval.Item = value_stack.array[value_stack.top-1].yyval.Item; }
        return;
      case 478: // non_empty_array_pair_list -> non_empty_array_pair_list ',' possible_array_pair 
{ yyval.ItemList = AddToList<Item>(value_stack.array[value_stack.top-3].yyval.ItemList, value_stack.array[value_stack.top-1].yyval.Item); }
        return;
      case 479: // non_empty_array_pair_list -> possible_array_pair 
{ yyval.ItemList = new List<Item>() { value_stack.array[value_stack.top-1].yyval.Item }; }
        return;
      case 480: // array_pair -> expr T_DOUBLE_ARROW expr 
{ yyval.Item = _astFactory.ArrayItemValue(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 481: // array_pair -> expr 
{ yyval.Item = _astFactory.ArrayItemValue(yypos, null, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 482: // array_pair -> expr T_DOUBLE_ARROW '&' variable 
{ yyval.Item = _astFactory.ArrayItemRef(yypos, value_stack.array[value_stack.top-4].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 483: // array_pair -> '&' variable 
{ yyval.Item = _astFactory.ArrayItemRef(yypos, null, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 484: // array_pair -> T_ELLIPSIS expr 
{ yyval.Item = _astFactory.ArrayItemSpread(yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 485: // array_pair -> expr T_DOUBLE_ARROW T_LIST '(' array_pair_list ')' 
{ yyval.Item = _astFactory.ArrayItemValue(yypos, value_stack.array[value_stack.top-6].yyval.Node, _astFactory.List(Span.Combine(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-2].yyval.ItemList, true)); }
        return;
      case 486: // array_pair -> T_LIST '(' array_pair_list ')' 
{ yyval.Item = _astFactory.ArrayItemValue(yypos, null, _astFactory.List(Span.Combine(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-2].yyval.ItemList, true)); }
        return;
      case 487: // encaps_list -> encaps_list encaps_var 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-2].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 488: // encaps_list -> encaps_list T_ENCAPSED_AND_WHITESPACE 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-2].yyval.NodeList, _astFactory.Literal(value_stack.array[value_stack.top-1].yypos, value_stack.array[value_stack.top-1].yyval.Strings.Key, _lexer.TokenText)); }
        return;
      case 489: // encaps_list -> encaps_var 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 490: // encaps_list -> T_ENCAPSED_AND_WHITESPACE encaps_var 
{ yyval.NodeList = new List<LangElement>() { _astFactory.Literal(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.Strings.Key, value_stack.array[value_stack.top-2].yyval.Strings.Value), value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 491: // encaps_var -> T_VARIABLE 
{ yyval.Node = _astFactory.Variable(yypos, value_stack.array[value_stack.top-1].yyval.String, NullLangElement, true); }
        return;
      case 492: // encaps_var -> T_VARIABLE '[' encaps_var_offset ']' 
{ yyval.Node = _astFactory.ArrayItem(yypos, false,
					_astFactory.Variable(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-4].yyval.String, NullLangElement, true), value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 493: // encaps_var -> T_VARIABLE T_OBJECT_OPERATOR T_STRING 
{ yyval.Node = CreateProperty(yypos, _astFactory.Variable(value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-3].yyval.String, NullLangElement, true), new Name(value_stack.array[value_stack.top-1].yyval.String)); }
        return;
      case 494: // encaps_var -> T_DOLLAR_OPEN_CURLY_BRACES expr '}' 
{ yyval.Node = _astFactory.EncapsedExpression(yypos, _astFactory.Variable(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.Node, NullLangElement), Tokens.T_DOLLAR_OPEN_CURLY_BRACES); }
        return;
      case 495: // encaps_var -> T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '}' 
{ yyval.Node = _astFactory.EncapsedExpression(yypos, _astFactory.Variable(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.String, NullLangElement, false), Tokens.T_DOLLAR_OPEN_CURLY_BRACES); }
        return;
      case 496: // encaps_var -> T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' expr ']' '}' 
{ yyval.Node = _astFactory.EncapsedExpression(yypos, _astFactory.ArrayItem(Span.Combine(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-2].yypos), false,
					_astFactory.Variable(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-5].yyval.String, NullLangElement, false), value_stack.array[value_stack.top-3].yyval.Node), Tokens.T_DOLLAR_OPEN_CURLY_BRACES); }
        return;
      case 497: // encaps_var -> T_CURLY_OPEN variable '}' 
{ yyval.Node = _astFactory.EncapsedExpression(yypos, value_stack.array[value_stack.top-2].yyval.Node, Tokens.T_LBRACE); }
        return;
      case 498: // encaps_var_offset -> T_STRING 
{ yyval.Node = _astFactory.Literal(yypos, value_stack.array[value_stack.top-1].yyval.String, _lexer.TokenText); }
        return;
      case 499: // encaps_var_offset -> T_NUM_STRING 
{ yyval.Node = _astFactory.Literal(yypos, value_stack.array[value_stack.top-1].yyval.Long, _lexer.TokenText); }
        return;
      case 500: // encaps_var_offset -> T_VARIABLE 
{ yyval.Node = _astFactory.Variable(yypos, value_stack.array[value_stack.top-1].yyval.String, NullLangElement, true); }
        return;
      case 501: // internal_functions_in_yacc -> T_ISSET '(' isset_variables possible_comma ')' 
{ yyval.Node = _astFactory.Isset(yypos, AddTrailingComma(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-2].yyval.Bool)); }
        return;
      case 502: // internal_functions_in_yacc -> T_EMPTY '(' expr ')' 
{ yyval.Node = _astFactory.Empty(yypos, value_stack.array[value_stack.top-2].yyval.Node);}
        return;
      case 503: // internal_functions_in_yacc -> T_INCLUDE expr 
{ yyval.Node = _astFactory.Inclusion(yypos, isConditional, InclusionTypes.Include, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 504: // internal_functions_in_yacc -> T_INCLUDE_ONCE expr 
{ yyval.Node = _astFactory.Inclusion(yypos, isConditional, InclusionTypes.IncludeOnce, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 505: // internal_functions_in_yacc -> T_EVAL '(' expr ')' 
{ yyval.Node = _astFactory.Eval(yypos, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 506: // internal_functions_in_yacc -> T_REQUIRE expr 
{ yyval.Node = _astFactory.Inclusion(yypos, isConditional, InclusionTypes.Require, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 507: // internal_functions_in_yacc -> T_REQUIRE_ONCE expr 
{ yyval.Node = _astFactory.Inclusion(yypos, isConditional, InclusionTypes.RequireOnce, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 508: // isset_variables -> isset_variable 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 509: // isset_variables -> isset_variables ',' isset_variable 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 510: // isset_variable -> expr 
{ yyval.Node = CreateIssetVar(value_stack.array[value_stack.top-1].yyval.Node); }
        return;
    }
  }

  protected override string TerminalToString(int terminal)
  {
    if (((Tokens)terminal).ToString() != terminal.ToString())
      return ((Tokens)terminal).ToString();
    else
      return CharToString((char)terminal);
  }


}
}
