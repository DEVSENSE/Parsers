using System;
using System.Text;
using System.Collections.Generic;

// Copyright(c) DEVSENSE s.r.o.
// All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the License); you may not use
// this file except in compliance with the License. You may obtain a copy of the
// License at http://www.apache.org/licenses/LICENSE-2.0
//
// THIS CODE IS PROVIDED ON AN  *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS
// OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY
// IMPLIED WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
// MERCHANTABILITY OR NON-INFRINGEMENT.
//
// See the Apache Version 2.0 License for specific language governing
// permissions and limitations under the License.

using System.Linq;
using System.Runtime.InteropServices;
using Devsense.PHP.Syntax.Ast;
using Devsense.PHP.Text;
using Devsense.PHP.Errors;

using CompleteAlias = System.Tuple<Devsense.PHP.Syntax.QualifiedNameRef, Devsense.PHP.Syntax.NameRef>;
using ContextAlias = System.Tuple<Devsense.PHP.Text.Span, Devsense.PHP.Syntax.QualifiedNameRef, Devsense.PHP.Syntax.NameRef, Devsense.PHP.Syntax.AliasKind>;
using AnonymousClass = System.Tuple<Devsense.PHP.Syntax.Ast.TypeRef, System.Collections.Generic.List<Devsense.PHP.Syntax.Ast.ActualParam>, Devsense.PHP.Text.Span>;
using StringPair = System.Collections.Generic.KeyValuePair<string, string>;


namespace Devsense.PHP.Syntax
{
public enum Tokens {
/// <summary>&quot;throw (T_THROW)&quot;</summary>
T_THROW=352,
PREC_ARROW_FUNCTION=128,
/// <summary>&quot;include (T_INCLUDE)&quot;</summary>
T_INCLUDE=262,
/// <summary>&quot;include_once (T_INCLUDE_ONCE)&quot;</summary>
T_INCLUDE_ONCE=261,
/// <summary>&quot;require (T_REQUIRE)&quot;</summary>
T_REQUIRE=259,
/// <summary>&quot;require_once (T_REQUIRE_ONCE)&quot;</summary>
T_REQUIRE_ONCE=258,
/// <summary>&quot;or (T_LOGICAL_OR)&quot;</summary>
T_LOGICAL_OR=263,
/// <summary>&quot;xor (T_LOGICAL_XOR)&quot;</summary>
T_LOGICAL_XOR=264,
/// <summary>&quot;and (T_LOGICAL_AND)&quot;</summary>
T_LOGICAL_AND=265,
/// <summary>&quot;print (T_PRINT)&quot;</summary>
T_PRINT=266,
/// <summary>&quot;yield (T_YIELD)&quot;</summary>
T_YIELD=267,
/// <summary>&quot;=&gt; (T_DOUBLE_ARROW)&quot;</summary>
T_DOUBLE_ARROW=268,
/// <summary>&quot;yield from (T_YIELD_FROM)&quot;</summary>
T_YIELD_FROM=269,
/// <summary>&quot;+= (T_PLUS_EQUAL)&quot;</summary>
T_PLUS_EQUAL=270,
/// <summary>&quot;-= (T_MINUS_EQUAL)&quot;</summary>
T_MINUS_EQUAL=271,
/// <summary>&quot;*= (T_MUL_EQUAL)&quot;</summary>
T_MUL_EQUAL=279,
/// <summary>&quot;/= (T_DIV_EQUAL)&quot;</summary>
T_DIV_EQUAL=278,
/// <summary>&quot;.= (T_CONCAT_EQUAL)&quot;</summary>
T_CONCAT_EQUAL=277,
/// <summary>&quot;%= (T_MOD_EQUAL)&quot;</summary>
T_MOD_EQUAL=276,
/// <summary>&quot;&amp;= (T_AND_EQUAL)&quot;</summary>
T_AND_EQUAL=275,
/// <summary>&quot;|= (T_OR_EQUAL)&quot;</summary>
T_OR_EQUAL=274,
/// <summary>&quot;^= (T_XOR_EQUAL)&quot;</summary>
T_XOR_EQUAL=273,
/// <summary>&quot;&lt;&lt;= (T_SL_EQUAL)&quot;</summary>
T_SL_EQUAL=272,
/// <summary>&quot;&gt;&gt;= (T_SR_EQUAL)&quot;</summary>
T_SR_EQUAL=280,
/// <summary>&quot;**= (T_POW_EQUAL)&quot;</summary>
T_POW_EQUAL=281,
/// <summary> &quot;??= (T_COALESCE_EQUAL)&quot;</summary>
T_COALESCE_EQUAL=282,
/// <summary>&quot;?? (T_COALESCE)&quot;</summary>
T_COALESCE=283,
/// <summary>&quot;|| (T_BOOLEAN_OR)&quot;</summary>
T_BOOLEAN_OR=284,
/// <summary>&quot;&amp;&amp; (T_BOOLEAN_AND)&quot;</summary>
T_BOOLEAN_AND=285,
/// <summary>&quot;== (T_IS_EQUAL)&quot;</summary>
T_IS_EQUAL=289,
/// <summary>&quot;!= (T_IS_NOT_EQUAL)&quot;</summary>
T_IS_NOT_EQUAL=288,
/// <summary>&quot;=== (T_IS_IDENTICAL)&quot;</summary>
T_IS_IDENTICAL=287,
/// <summary>&quot;!== (T_IS_NOT_IDENTICAL)&quot;</summary>
T_IS_NOT_IDENTICAL=286,
/// <summary>&quot;&lt;=&gt; (T_SPACESHIP)&quot;</summary>
T_SPACESHIP=290,
/// <summary>&quot;&lt;= (T_IS_SMALLER_OR_EQUAL)&quot;</summary>
T_IS_SMALLER_OR_EQUAL=291,
/// <summary>&quot;&gt;= (T_IS_GREATER_OR_EQUAL)&quot;</summary>
T_IS_GREATER_OR_EQUAL=292,
/// <summary>&quot;&lt;&lt; (T_SL)&quot;</summary>
T_SL=293,
/// <summary>&quot;&gt;&gt; (T_SR)&quot;</summary>
T_SR=294,
/// <summary>&quot;instanceof (T_INSTANCEOF)&quot;</summary>
T_INSTANCEOF=295,
/// <summary>&quot;++ (T_INC)&quot;</summary>
T_INC=303,
/// <summary>&quot;-- (T_DEC)&quot;</summary>
T_DEC=302,
/// <summary>&quot;(int) (T_INT_CAST)&quot;</summary>
T_INT_CAST=301,
/// <summary>&quot;(double) (T_DOUBLE_CAST)&quot;</summary>
T_DOUBLE_CAST=300,
/// <summary>&quot; (T_STRING_CAST)&quot;</summary>
T_STRING_CAST=299,
/// <summary>&quot;(array) (T_ARRAY_CAST)&quot;</summary>
T_ARRAY_CAST=298,
/// <summary>&quot;(object) (T_OBJECT_CAST)&quot;</summary>
T_OBJECT_CAST=297,
/// <summary>&quot;(bool) (T_BOOL_CAST)&quot;</summary>
T_BOOL_CAST=296,
/// <summary>&quot;(unset) (T_UNSET_CAST)&quot;</summary>
T_UNSET_CAST=304,
/// <summary>&quot;** (T_POW)&quot;</summary>
T_POW=305,
/// <summary>&quot;new (T_NEW)&quot;</summary>
T_NEW=306,
/// <summary>&quot;clone (T_CLONE)&quot;</summary>
T_CLONE=307,
T_NOELSE=178,
/// <summary>&quot;elseif (T_ELSEIF)&quot;</summary>
T_ELSEIF=308,
/// <summary>&quot;else (T_ELSE)&quot;</summary>
T_ELSE=309,
/// <summary>&quot;endif (T_ENDIF)&quot;</summary>
T_ENDIF=310,
/// <summary>&quot;static (T_STATIC)&quot;</summary>
T_STATIC=353,
/// <summary>&quot;abstract (T_ABSTRACT)&quot;</summary>
T_ABSTRACT=315,
/// <summary>&quot;final (T_FINAL)&quot;</summary>
T_FINAL=314,
/// <summary>&quot;private (T_PRIVATE)&quot;</summary>
T_PRIVATE=313,
/// <summary>&quot;protected (T_PROTECTED)&quot;</summary>
T_PROTECTED=357,
/// <summary>&quot;public (T_PUBLIC)&quot;</summary>
T_PUBLIC=311,
/// <summary>&quot;integer number (T_LNUMBER)&quot;</summary>
T_LNUMBER=317,
/// <summary>&quot;floating-point number (T_DNUMBER)&quot;</summary>
T_DNUMBER=312,
/// <summary>&quot;identifier (T_STRING)&quot;</summary>
T_STRING=319,
/// <summary>&quot;variable (T_VARIABLE)&quot;</summary>
T_VARIABLE=320,
T_INLINE_HTML=321,
/// <summary>&quot;quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)&quot;</summary>
T_ENCAPSED_AND_WHITESPACE=316,
/// <summary>&quot;quoted-string (T_CONSTANT_ENCAPSED_STRING)&quot;</summary>
T_CONSTANT_ENCAPSED_STRING=323,
/// <summary>&quot;variable name (T_STRING_VARNAME)&quot;</summary>
T_STRING_VARNAME=318,
/// <summary>&quot;number (T_NUM_STRING)&quot;</summary>
T_NUM_STRING=325,
/// <summary>&#39;!&#39;</summary>
T_EXCLAM=33,
/// <summary>&#39;&quot;&#39;</summary>
T_DOUBLE_QUOTES=34,
/// <summary>&#39;$&#39;</summary>
T_DOLLAR=36,
/// <summary>&#39;%&#39;</summary>
T_PERCENT=37,
/// <summary>&#39;&amp;&#39;</summary>
T_AMP=38,
/// <summary>&#39;\&#39;&#39;</summary>
T_SINGLE_QUOTES=39,
/// <summary>&#39;(&#39;</summary>
T_LPAREN=40,
/// <summary>&#39;)&#39;</summary>
T_RPAREN=41,
/// <summary>&#39;*&#39;</summary>
T_MUL=42,
/// <summary>&#39;+&#39;</summary>
T_PLUS=43,
/// <summary>&#39;,&#39;</summary>
T_COMMA=44,
/// <summary>&#39;-&#39;</summary>
T_MINUS=45,
/// <summary>&#39;.&#39;</summary>
T_DOT=46,
/// <summary>&#39;/&#39;</summary>
T_SLASH=47,
/// <summary>&#39;:&#39;</summary>
T_COLON=58,
/// <summary>&#39;;&#39;</summary>
T_SEMI=59,
/// <summary>&#39;&lt;&#39;</summary>
T_LT=60,
/// <summary>&#39;=&#39;</summary>
T_EQ=61,
/// <summary>&#39;&gt;&#39;</summary>
T_GT=62,
/// <summary>&#39;?&#39;</summary>
T_QUESTION=63,
/// <summary>&#39;@&#39;</summary>
T_AT=64,
/// <summary>&#39;[&#39;</summary>
T_LBRACKET=91,
/// <summary>&#39;]&#39;</summary>
T_RBRACKET=93,
/// <summary>&#39;^&#39;</summary>
T_CARET=94,
/// <summary>&#39;`&#39;</summary>
T_BACKQUOTE=96,
/// <summary>&#39;{&#39;</summary>
T_LBRACE=123,
/// <summary>&#39;|&#39;</summary>
T_PIPE=124,
/// <summary>&#39;}&#39;</summary>
T_RBRACE=125,
/// <summary>&#39;~&#39;</summary>
T_TILDE=126,
/// <summary>&quot;end of file&quot;</summary>
END=0,
/// <summary>&quot;eval (T_EVAL)&quot;</summary>
T_EVAL=260,
/// <summary>&quot;exit (T_EXIT)&quot;</summary>
T_EXIT=326,
/// <summary>&quot;if (T_IF)&quot;</summary>
T_IF=322,
/// <summary>&quot;echo (T_ECHO)&quot;</summary>
T_ECHO=324,
/// <summary>&quot;do (T_DO)&quot;</summary>
T_DO=329,
/// <summary>&quot;while (T_WHILE)&quot;</summary>
T_WHILE=330,
/// <summary>&quot;endwhile (T_ENDWHILE)&quot;</summary>
T_ENDWHILE=327,
/// <summary>&quot;for (T_FOR)&quot;</summary>
T_FOR=328,
/// <summary>&quot;endfor (T_ENDFOR)&quot;</summary>
T_ENDFOR=333,
/// <summary>&quot;foreach (T_FOREACH)&quot;</summary>
T_FOREACH=334,
/// <summary>&quot;endforeach (T_ENDFOREACH)&quot;</summary>
T_ENDFOREACH=331,
/// <summary>&quot;declare (T_DECLARE)&quot;</summary>
T_DECLARE=332,
/// <summary>&quot;enddeclare (T_ENDDECLARE)&quot;</summary>
T_ENDDECLARE=337,
/// <summary>&quot;as (T_AS)&quot;</summary>
T_AS=338,
/// <summary>&quot;switch (T_SWITCH)&quot;</summary>
T_SWITCH=335,
/// <summary>&quot;endswitch (T_ENDSWITCH)&quot;</summary>
T_ENDSWITCH=336,
/// <summary>&quot;case (T_CASE)&quot;</summary>
T_CASE=341,
/// <summary>&quot;default (T_DEFAULT)&quot;</summary>
T_DEFAULT=342,
/// <summary>&quot;break (T_BREAK)&quot;</summary>
T_BREAK=339,
/// <summary>&quot;continue (T_CONTINUE)&quot;</summary>
T_CONTINUE=340,
/// <summary>&quot;goto (T_GOTO)&quot;</summary>
T_GOTO=345,
/// <summary>&quot;function (T_FUNCTION)&quot;</summary>
T_FUNCTION=346,
/// <summary> &quot;fn (T_FN)&quot;</summary>
T_FN=343,
/// <summary>&quot;const (T_CONST)&quot;</summary>
T_CONST=344,
/// <summary>&quot;return (T_RETURN)&quot;</summary>
T_RETURN=348,
/// <summary>&quot;try (T_TRY)&quot;</summary>
T_TRY=349,
/// <summary>&quot;catch (T_CATCH)&quot;</summary>
T_CATCH=347,
/// <summary>&quot;finally (T_FINALLY)&quot;</summary>
T_FINALLY=351,
/// <summary>&quot;use (T_USE)&quot;</summary>
T_USE=350,
/// <summary>&quot;insteadof (T_INSTEADOF)&quot;</summary>
T_INSTEADOF=354,
/// <summary>&quot;exit_scope (T_GLOBAL)&quot;</summary>
T_GLOBAL=355,
/// <summary>&quot;var (T_VAR)&quot;</summary>
T_VAR=356,
/// <summary>&quot;unset (T_UNSET)&quot;</summary>
T_UNSET=360,
/// <summary>&quot;isset (T_ISSET)&quot;</summary>
T_ISSET=358,
/// <summary>&quot;empty (T_EMPTY)&quot;</summary>
T_EMPTY=359,
/// <summary>&quot;__halt_compiler (T_HALT_COMPILER)&quot;</summary>
T_HALT_COMPILER=363,
/// <summary>&quot;class (T_CLASS)&quot;</summary>
T_CLASS=361,
/// <summary>&quot;trait (T_TRAIT)&quot;</summary>
T_TRAIT=362,
/// <summary>&quot;interface (T_INTERFACE)&quot;</summary>
T_INTERFACE=366,
/// <summary>&quot;extends (T_EXTENDS)&quot;</summary>
T_EXTENDS=364,
/// <summary>&quot;implements (T_IMPLEMENTS)&quot;</summary>
T_IMPLEMENTS=365,
/// <summary>&quot;-&gt; (T_OBJECT_OPERATOR)&quot;</summary>
T_OBJECT_OPERATOR=369,
/// <summary>&quot;list (T_LIST)&quot;</summary>
T_LIST=367,
/// <summary>&quot;array (T_ARRAY)&quot;</summary>
T_ARRAY=368,
/// <summary>&quot;callable (T_CALLABLE)&quot;</summary>
T_CALLABLE=372,
/// <summary>&quot;__LINE__ (T_LINE)&quot;</summary>
T_LINE=370,
/// <summary>&quot;__FILE__ (T_FILE)&quot;</summary>
T_FILE=371,
/// <summary>&quot;__DIR__ (T_DIR)&quot;</summary>
T_DIR=375,
/// <summary>&quot;__CLASS__ (T_CLASS_C)&quot;</summary>
T_CLASS_C=373,
/// <summary>&quot;__TRAIT__ (T_TRAIT_C)&quot;</summary>
T_TRAIT_C=374,
/// <summary>&quot;__METHOD__ (T_METHOD_C)&quot;</summary>
T_METHOD_C=378,
/// <summary>&quot;__FUNCTION__ (T_FUNC_C)&quot;</summary>
T_FUNC_C=376,
/// <summary>&quot;comment (T_COMMENT)&quot;</summary>
T_COMMENT=377,
/// <summary>&quot;doc comment (T_DOC_COMMENT)&quot;</summary>
T_DOC_COMMENT=381,
/// <summary>&quot;open tag (T_OPEN_TAG)&quot;</summary>
T_OPEN_TAG=379,
/// <summary>&quot;open tag with echo (T_OPEN_TAG_WITH_ECHO)&quot;</summary>
T_OPEN_TAG_WITH_ECHO=380,
/// <summary>&quot;close tag (T_CLOSE_TAG)&quot;</summary>
T_CLOSE_TAG=384,
/// <summary>&quot;whitespace (T_WHITESPACE)&quot;</summary>
T_WHITESPACE=382,
/// <summary>&quot;heredoc start (T_START_HEREDOC)&quot;</summary>
T_START_HEREDOC=383,
/// <summary>&quot;heredoc end (T_END_HEREDOC)&quot;</summary>
T_END_HEREDOC=387,
/// <summary>&quot;${ (T_DOLLAR_OPEN_CURLY_BRACES)&quot;</summary>
T_DOLLAR_OPEN_CURLY_BRACES=385,
/// <summary>&quot;{$ (T_CURLY_OPEN)&quot;</summary>
T_CURLY_OPEN=386,
/// <summary>&quot;:: (T_DOUBLE_COLON)&quot;</summary>
T_DOUBLE_COLON=390,
/// <summary>&quot;namespace (T_NAMESPACE)&quot;</summary>
T_NAMESPACE=391,
/// <summary>&quot;__NAMESPACE__ (T_NS_C)&quot;</summary>
T_NS_C=392,
/// <summary>&quot;\\ (T_NS_SEPARATOR)&quot;</summary>
T_NS_SEPARATOR=393,
/// <summary>&quot;... (T_ELLIPSIS)&quot;</summary>
T_ELLIPSIS=394,
/// <summary> type safe declaration</summary>
T_ERROR=257,
EOF=0
};

[StructLayout(LayoutKind.Explicit)]
public partial struct SemanticValueType
{
	// Integer and Offset are both used when generating code for string 
	// with 'inline' variables. Other fields are not combined.
	
	[FieldOffset(0)]		
	public bool Bool;
	[FieldOffset(0)]		
	public int Integer;
	[FieldOffset(0)]
	public double Double;
	[FieldOffset(0)]
	public long Long;
	[FieldOffset(0)]
	public QualifiedNameRef QualifiedNameReference;
	[FieldOffset(0)]
	public AliasKind Kind;
	/// <summary>Token that encapsulates the string literal.</summary>
	[FieldOffset(0)]
	public Tokens QuoteToken;

	[FieldOffset(8)]
	public object Object;

	public TypeRef TypeReference						{ get { return (TypeRef)Object; }					set { Object = value; } }
	public IList<TypeRef> TypeRefList					{ get { return (IList<TypeRef>)Object; }			set { Object = value; } }
	public LangElement Node								{ get { return (LangElement)Object; }				set { Object = value; } }
	public List<LangElement> NodeList					{ get { return (List<LangElement>)Object; }			set { Object = value; } }
	public string String								{ get { return (string)Object; }					set { Object = value; } }
	public StringPair Strings							{ get { return (StringPair)Object; }				set { Object = value; } }
	public List<string> StringList						{ get { return (List<string>)Object; }				set { Object = value; } }
	public CompleteAlias Alias							{ get { return (CompleteAlias)Object; }				set { Object = value; } }
	public List<CompleteAlias> AliasList				{ get { return (List<CompleteAlias>)Object; }		set { Object = value; } }
	public ContextAlias ContextAlias					{ get { return (ContextAlias)Object; }				set { Object = value; } }
	public List<ContextAlias> ContextAliasList			{ get { return (List<ContextAlias>)Object; }		set { Object = value; } }
	public ActualParam Param							{ get { return (ActualParam)Object; }				set { Object = value; } }
	public List<ActualParam> ParamList					{ get { return (List<ActualParam>)Object; }			set { Object = value; } }
	public FormalParam FormalParam						{ get { return (FormalParam)Object; }				set { Object = value; } }
	public List<FormalParam> FormalParamList			{ get { return (List<FormalParam>)Object; }			set { Object = value; } }
	public Item Item									{ get { return (Item)Object; }						set { Object = value; } }
	public List<Item> ItemList							{ get { return (List<Item>)Object; }				set { Object = value; } }
	internal List<IfStatement> IfItemList				{ get { return (List<IfStatement>)Object; }			set { Object = value; } }
	public ForeachVar ForeachVar						{ get { return (ForeachVar)Object; }				set { Object = value; } }
	public AnonymousClass AnonymousClass				{ get { return (AnonymousClass)Object; }			set { Object = value; } }
	public UseBase Use									{ get { return (UseBase)Object; }					set { Object = value; } }
	public List<UseBase> UseList						{ get { return (List<UseBase>)Object; }				set { Object = value; } }
}

public partial class Parser: ShiftReduceParser<SemanticValueType,Span>
{

  protected override string[] NonTerminals { get { return nonTerminals; } }
  private static string[] nonTerminals;

  protected override State[] States { get { return states; } }
  private static readonly State[] states;

  protected override Rule[] Rules { get { return rules; } }
  private static readonly Rule[] rules;


  #region Construction

  static Parser()
  {

    #region states
    states = new State[]
    {
      new State(0, -2, new int[] {-143,1,-145,3}),
      new State(1, new int[] {0,2}),
      new State(2, -1),
      new State(3, -82, new int[] {-92,4}),
      new State(4, new int[] {123,7,330,23,329,31,328,153,335,165,339,179,340,603,348,606,355,609,353,616,324,625,321,632,320,97,36,98,319,635,391,935,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504,360,736,334,746,332,756,59,762,349,763,345,779,315,711,314,712,362,714,366,724,363,946,350,950,344,1006,0,-3,322,-406,361,-181}, new int[] {-33,5,-34,6,-18,12,-42,633,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,637,-6,487,-90,943,-88,515,-85,945,-35,654,-36,655,-14,656,-13,709,-37,713,-39,723}),
      new State(5, -81),
      new State(6, -98),
      new State(7, -135, new int[] {-95,8}),
      new State(8, new int[] {125,9,123,7,330,23,329,31,328,153,335,165,339,179,340,603,348,606,355,609,353,616,324,625,321,632,320,97,36,98,319,635,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504,360,736,334,746,332,756,59,762,349,763,345,779,315,711,314,712,362,714,366,724,363,783,322,-406,361,-181}, new int[] {-82,10,-34,11,-18,12,-42,633,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,637,-6,487,-90,652,-88,515,-85,782,-35,654,-36,655,-14,656,-13,709,-37,713,-39,723}),
      new State(9, -140),
      new State(10, -134),
      new State(11, -136),
      new State(12, new int[] {322,914}, new int[] {-54,13,-55,15,-136,17,-137,921}),
      new State(13, -407, new int[] {-19,14}),
      new State(14, -141),
      new State(15, -407, new int[] {-19,16}),
      new State(16, -142),
      new State(17, new int[] {308,18,309,912,123,-218,330,-218,329,-218,328,-218,335,-218,339,-218,340,-218,348,-218,355,-218,353,-218,324,-218,321,-218,320,-218,36,-218,319,-218,391,-218,393,-218,40,-218,368,-218,91,-218,323,-218,367,-218,307,-218,303,-218,302,-218,43,-218,45,-218,33,-218,126,-218,306,-218,358,-218,359,-218,262,-218,261,-218,260,-218,259,-218,258,-218,301,-218,300,-218,299,-218,298,-218,297,-218,296,-218,304,-218,326,-218,64,-218,317,-218,312,-218,370,-218,371,-218,375,-218,374,-218,378,-218,376,-218,392,-218,373,-218,34,-218,383,-218,96,-218,266,-218,267,-218,269,-218,352,-218,346,-218,343,-218,293,-218,360,-218,334,-218,332,-218,59,-218,349,-218,345,-218,315,-218,314,-218,362,-218,366,-218,363,-218,350,-218,344,-218,322,-218,361,-218,0,-218,125,-218,341,-218,342,-218,336,-218,337,-218,331,-218,333,-218,327,-218,310,-218}),
      new State(18, new int[] {40,19}),
      new State(19, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,20,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(20, new int[] {41,21,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(21, new int[] {123,7,330,23,329,31,328,153,335,165,339,179,340,603,348,606,355,609,353,616,324,625,321,632,320,97,36,98,319,635,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504,360,736,334,746,332,756,59,762,349,763,345,779,322,-406}, new int[] {-34,22,-18,12,-42,633,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(22, -217),
      new State(23, new int[] {40,24}),
      new State(24, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,25,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(25, new int[] {41,26,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(26, -406, new int[] {-18,27}),
      new State(27, new int[] {123,7,330,23,329,31,328,153,335,165,339,179,340,603,348,606,355,609,353,616,324,625,321,632,320,97,36,98,319,635,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504,360,736,334,746,332,756,59,762,349,763,345,779,58,908,322,-406}, new int[] {-73,28,-34,30,-18,12,-42,633,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(28, -407, new int[] {-19,29}),
      new State(29, -143),
      new State(30, -214),
      new State(31, -406, new int[] {-18,32}),
      new State(32, new int[] {123,7,330,23,329,31,328,153,335,165,339,179,340,603,348,606,355,609,353,616,324,625,321,632,320,97,36,98,319,635,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504,360,736,334,746,332,756,59,762,349,763,345,779,322,-406}, new int[] {-34,33,-18,12,-42,633,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(33, new int[] {330,34}),
      new State(34, new int[] {40,35}),
      new State(35, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,36,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(36, new int[] {41,37,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(37, new int[] {59,38}),
      new State(38, -407, new int[] {-19,39}),
      new State(39, -144),
      new State(40, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,41,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(41, new int[] {284,-343,285,42,263,-343,265,-343,264,-343,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,-343,283,-343,59,-343,41,-343,125,-343,58,-343,93,-343,44,-343,268,-343,338,-343}),
      new State(42, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,43,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(43, new int[] {284,-344,285,-344,263,-344,265,-344,264,-344,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,-344,283,-344,59,-344,41,-344,125,-344,58,-344,93,-344,44,-344,268,-344,338,-344}),
      new State(44, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,45,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(45, new int[] {284,40,285,42,263,-345,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-345,41,-345,125,-345,58,-345,93,-345,44,-345,268,-345,338,-345}),
      new State(46, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,47,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(47, new int[] {284,40,285,42,263,-346,265,-346,264,-346,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-346,41,-346,125,-346,58,-346,93,-346,44,-346,268,-346,338,-346}),
      new State(48, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,49,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(49, new int[] {284,40,285,42,263,-347,265,46,264,-347,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-347,41,-347,125,-347,58,-347,93,-347,44,-347,268,-347,338,-347}),
      new State(50, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,51,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(51, new int[] {284,-348,285,-348,263,-348,265,-348,264,-348,124,-348,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,-348,283,-348,59,-348,41,-348,125,-348,58,-348,93,-348,44,-348,268,-348,338,-348}),
      new State(52, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,53,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(53, new int[] {284,-349,285,-349,263,-349,265,-349,264,-349,124,-349,38,-349,94,-349,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,-349,283,-349,59,-349,41,-349,125,-349,58,-349,93,-349,44,-349,268,-349,338,-349}),
      new State(54, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,55,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(55, new int[] {284,-350,285,-350,263,-350,265,-350,264,-350,124,-350,38,52,94,-350,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,-350,283,-350,59,-350,41,-350,125,-350,58,-350,93,-350,44,-350,268,-350,338,-350}),
      new State(56, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,57,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(57, new int[] {284,-351,285,-351,263,-351,265,-351,264,-351,124,-351,38,-351,94,-351,46,-351,43,-351,45,-351,42,62,305,64,47,66,37,68,293,-351,294,-351,287,-351,286,-351,289,-351,288,-351,60,-351,291,-351,62,-351,292,-351,290,-351,295,92,63,-351,283,-351,59,-351,41,-351,125,-351,58,-351,93,-351,44,-351,268,-351,338,-351}),
      new State(58, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,59,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(59, new int[] {284,-352,285,-352,263,-352,265,-352,264,-352,124,-352,38,-352,94,-352,46,-352,43,-352,45,-352,42,62,305,64,47,66,37,68,293,-352,294,-352,287,-352,286,-352,289,-352,288,-352,60,-352,291,-352,62,-352,292,-352,290,-352,295,92,63,-352,283,-352,59,-352,41,-352,125,-352,58,-352,93,-352,44,-352,268,-352,338,-352}),
      new State(60, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,61,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(61, new int[] {284,-353,285,-353,263,-353,265,-353,264,-353,124,-353,38,-353,94,-353,46,-353,43,-353,45,-353,42,62,305,64,47,66,37,68,293,-353,294,-353,287,-353,286,-353,289,-353,288,-353,60,-353,291,-353,62,-353,292,-353,290,-353,295,92,63,-353,283,-353,59,-353,41,-353,125,-353,58,-353,93,-353,44,-353,268,-353,338,-353}),
      new State(62, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,63,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(63, new int[] {284,-354,285,-354,263,-354,265,-354,264,-354,124,-354,38,-354,94,-354,46,-354,43,-354,45,-354,42,-354,305,64,47,-354,37,-354,293,-354,294,-354,287,-354,286,-354,289,-354,288,-354,60,-354,291,-354,62,-354,292,-354,290,-354,295,92,63,-354,283,-354,59,-354,41,-354,125,-354,58,-354,93,-354,44,-354,268,-354,338,-354}),
      new State(64, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,65,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(65, new int[] {284,-355,285,-355,263,-355,265,-355,264,-355,124,-355,38,-355,94,-355,46,-355,43,-355,45,-355,42,-355,305,64,47,-355,37,-355,293,-355,294,-355,287,-355,286,-355,289,-355,288,-355,60,-355,291,-355,62,-355,292,-355,290,-355,295,-355,63,-355,283,-355,59,-355,41,-355,125,-355,58,-355,93,-355,44,-355,268,-355,338,-355}),
      new State(66, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,67,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(67, new int[] {284,-356,285,-356,263,-356,265,-356,264,-356,124,-356,38,-356,94,-356,46,-356,43,-356,45,-356,42,-356,305,64,47,-356,37,-356,293,-356,294,-356,287,-356,286,-356,289,-356,288,-356,60,-356,291,-356,62,-356,292,-356,290,-356,295,92,63,-356,283,-356,59,-356,41,-356,125,-356,58,-356,93,-356,44,-356,268,-356,338,-356}),
      new State(68, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,69,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(69, new int[] {284,-357,285,-357,263,-357,265,-357,264,-357,124,-357,38,-357,94,-357,46,-357,43,-357,45,-357,42,-357,305,64,47,-357,37,-357,293,-357,294,-357,287,-357,286,-357,289,-357,288,-357,60,-357,291,-357,62,-357,292,-357,290,-357,295,92,63,-357,283,-357,59,-357,41,-357,125,-357,58,-357,93,-357,44,-357,268,-357,338,-357}),
      new State(70, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,71,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(71, new int[] {284,-358,285,-358,263,-358,265,-358,264,-358,124,-358,38,-358,94,-358,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,-358,294,-358,287,-358,286,-358,289,-358,288,-358,60,-358,291,-358,62,-358,292,-358,290,-358,295,92,63,-358,283,-358,59,-358,41,-358,125,-358,58,-358,93,-358,44,-358,268,-358,338,-358}),
      new State(72, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,73,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(73, new int[] {284,-359,285,-359,263,-359,265,-359,264,-359,124,-359,38,-359,94,-359,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,-359,294,-359,287,-359,286,-359,289,-359,288,-359,60,-359,291,-359,62,-359,292,-359,290,-359,295,92,63,-359,283,-359,59,-359,41,-359,125,-359,58,-359,93,-359,44,-359,268,-359,338,-359}),
      new State(74, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,75,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(75, new int[] {284,-364,285,-364,263,-364,265,-364,264,-364,124,-364,38,-364,94,-364,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,-364,283,-364,59,-364,41,-364,125,-364,58,-364,93,-364,44,-364,268,-364,338,-364}),
      new State(76, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,77,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(77, new int[] {284,-365,285,-365,263,-365,265,-365,264,-365,124,-365,38,-365,94,-365,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,-365,283,-365,59,-365,41,-365,125,-365,58,-365,93,-365,44,-365,268,-365,338,-365}),
      new State(78, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,79,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(79, new int[] {284,-366,285,-366,263,-366,265,-366,264,-366,124,-366,38,-366,94,-366,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,-366,283,-366,59,-366,41,-366,125,-366,58,-366,93,-366,44,-366,268,-366,338,-366}),
      new State(80, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,81,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(81, new int[] {284,-367,285,-367,263,-367,265,-367,264,-367,124,-367,38,-367,94,-367,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,-367,283,-367,59,-367,41,-367,125,-367,58,-367,93,-367,44,-367,268,-367,338,-367}),
      new State(82, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,83,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(83, new int[] {284,-368,285,-368,263,-368,265,-368,264,-368,124,-368,38,-368,94,-368,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,-368,286,-368,289,-368,288,-368,60,82,291,84,62,86,292,88,290,-368,295,92,63,-368,283,-368,59,-368,41,-368,125,-368,58,-368,93,-368,44,-368,268,-368,338,-368}),
      new State(84, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,85,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(85, new int[] {284,-369,285,-369,263,-369,265,-369,264,-369,124,-369,38,-369,94,-369,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,-369,286,-369,289,-369,288,-369,60,82,291,84,62,86,292,88,290,-369,295,92,63,-369,283,-369,59,-369,41,-369,125,-369,58,-369,93,-369,44,-369,268,-369,338,-369}),
      new State(86, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,87,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(87, new int[] {284,-370,285,-370,263,-370,265,-370,264,-370,124,-370,38,-370,94,-370,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,-370,286,-370,289,-370,288,-370,60,82,291,84,62,86,292,88,290,-370,295,92,63,-370,283,-370,59,-370,41,-370,125,-370,58,-370,93,-370,44,-370,268,-370,338,-370}),
      new State(88, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,89,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(89, new int[] {284,-371,285,-371,263,-371,265,-371,264,-371,124,-371,38,-371,94,-371,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,-371,286,-371,289,-371,288,-371,60,82,291,84,62,86,292,88,290,-371,295,92,63,-371,283,-371,59,-371,41,-371,125,-371,58,-371,93,-371,44,-371,268,-371,338,-371}),
      new State(90, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,91,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(91, new int[] {284,-372,285,-372,263,-372,265,-372,264,-372,124,-372,38,-372,94,-372,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,-372,283,-372,59,-372,41,-372,125,-372,58,-372,93,-372,44,-372,268,-372,338,-372}),
      new State(92, new int[] {353,296,319,187,391,188,393,191,320,97,36,98}, new int[] {-26,93,-27,94,-20,510,-114,184,-78,511,-48,528}),
      new State(93, -373),
      new State(94, new int[] {390,95,59,-424,284,-424,285,-424,263,-424,265,-424,264,-424,124,-424,38,-424,94,-424,46,-424,43,-424,45,-424,42,-424,305,-424,47,-424,37,-424,293,-424,294,-424,287,-424,286,-424,289,-424,288,-424,60,-424,291,-424,62,-424,292,-424,290,-424,295,-424,63,-424,283,-424,41,-424,125,-424,58,-424,93,-424,44,-424,268,-424,338,-424,40,-424}),
      new State(95, new int[] {320,97,36,98}, new int[] {-48,96}),
      new State(96, -484),
      new State(97, -475),
      new State(98, new int[] {123,99,320,97,36,98}, new int[] {-48,907}),
      new State(99, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,100,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(100, new int[] {125,101,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(101, -476),
      new State(102, new int[] {58,905,320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,103,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(103, new int[] {58,104,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(104, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,105,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(105, new int[] {284,40,285,42,263,-376,265,-376,264,-376,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,-376,283,106,59,-376,41,-376,125,-376,58,-376,93,-376,44,-376,268,-376,338,-376}),
      new State(106, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,107,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(107, new int[] {284,40,285,42,263,-378,265,-378,264,-378,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,-378,283,106,59,-378,41,-378,125,-378,58,-378,93,-378,44,-378,268,-378,338,-378}),
      new State(108, new int[] {61,109,270,877,271,879,279,881,281,883,278,885,277,887,276,889,275,891,274,893,273,895,272,897,280,899,282,901,303,903,302,904,59,-455,284,-455,285,-455,263,-455,265,-455,264,-455,124,-455,38,-455,94,-455,46,-455,43,-455,45,-455,42,-455,305,-455,47,-455,37,-455,293,-455,294,-455,287,-455,286,-455,289,-455,288,-455,60,-455,291,-455,62,-455,292,-455,290,-455,295,-455,63,-455,283,-455,41,-455,125,-455,58,-455,93,-455,44,-455,268,-455,338,-455,91,-460,369,-460,123,-460,390,-460}),
      new State(109, new int[] {38,111,320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,110,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(110, new int[] {284,40,285,42,263,-322,265,-322,264,-322,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-322,41,-322,125,-322,58,-322,93,-322,44,-322,268,-322,338,-322}),
      new State(111, new int[] {320,97,36,98,353,296,319,187,391,188,393,191,40,297,368,283,91,325,323,305,306,345}, new int[] {-43,112,-45,113,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,324,-50,335,-52,310,-79,311}),
      new State(112, new int[] {59,-323,284,-323,285,-323,263,-323,265,-323,264,-323,124,-323,38,-323,94,-323,46,-323,43,-323,45,-323,42,-323,305,-323,47,-323,37,-323,293,-323,294,-323,287,-323,286,-323,289,-323,288,-323,60,-323,291,-323,62,-323,292,-323,290,-323,295,-323,63,-323,283,-323,41,-323,125,-323,58,-323,93,-323,44,-323,268,-323,338,-323,91,-460,369,-460,123,-460,390,-460}),
      new State(113, -324),
      new State(114, new int[] {61,-472,270,-472,271,-472,279,-472,281,-472,278,-472,277,-472,276,-472,275,-472,274,-472,273,-472,272,-472,280,-472,282,-472,303,-472,302,-472,59,-472,284,-472,285,-472,263,-472,265,-472,264,-472,124,-472,38,-472,94,-472,46,-472,43,-472,45,-472,42,-472,305,-472,47,-472,37,-472,293,-472,294,-472,287,-472,286,-472,289,-472,288,-472,60,-472,291,-472,62,-472,292,-472,290,-472,295,-472,63,-472,283,-472,91,-472,369,-472,123,-472,390,-472,41,-472,125,-472,58,-472,93,-472,44,-472,268,-472,338,-472,40,-463}),
      new State(115, -466),
      new State(116, new int[] {91,117,369,871,123,874,390,-459}),
      new State(117, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504,93,-457}, new int[] {-61,118,-42,120,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(118, new int[] {93,119}),
      new State(119, -467),
      new State(120, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,93,-458,59,-458,41,-458}),
      new State(121, -473),
      new State(122, new int[] {390,123}),
      new State(123, new int[] {320,97,36,98,319,199,262,202,261,203,260,204,259,205,258,206,263,207,264,208,265,209,295,210,306,211,307,212,326,213,322,214,308,215,309,216,310,217,324,218,329,219,330,220,327,221,328,222,333,223,334,224,331,225,332,226,337,227,338,228,349,229,347,230,351,231,352,232,350,233,354,234,355,235,356,236,360,237,358,238,359,239,340,240,345,241,346,242,344,243,348,244,266,245,267,246,367,247,335,248,336,249,341,250,342,251,339,252,368,253,372,254,364,255,365,256,391,257,362,258,366,259,361,260,373,261,374,262,376,263,378,264,370,265,371,266,375,267,392,268,343,269,353,270,315,271,314,272,313,273,357,274,311,275,123,276}, new int[] {-48,124,-111,125,-2,126,-112,200,-113,201}),
      new State(124, new int[] {61,-478,270,-478,271,-478,279,-478,281,-478,278,-478,277,-478,276,-478,275,-478,274,-478,273,-478,272,-478,280,-478,282,-478,303,-478,302,-478,59,-478,284,-478,285,-478,263,-478,265,-478,264,-478,124,-478,38,-478,94,-478,46,-478,43,-478,45,-478,42,-478,305,-478,47,-478,37,-478,293,-478,294,-478,287,-478,286,-478,289,-478,288,-478,60,-478,291,-478,62,-478,292,-478,290,-478,295,-478,63,-478,283,-478,91,-478,369,-478,123,-478,390,-478,41,-478,125,-478,58,-478,93,-478,44,-478,268,-478,338,-478,40,-488}),
      new State(125, new int[] {91,-453,59,-453,284,-453,285,-453,263,-453,265,-453,264,-453,124,-453,38,-453,94,-453,46,-453,43,-453,45,-453,42,-453,305,-453,47,-453,37,-453,293,-453,294,-453,287,-453,286,-453,289,-453,288,-453,60,-453,291,-453,62,-453,292,-453,290,-453,295,-453,63,-453,283,-453,41,-453,125,-453,58,-453,93,-453,44,-453,268,-453,338,-453,40,-486}),
      new State(126, new int[] {40,128}, new int[] {-124,127}),
      new State(127, -419),
      new State(128, new int[] {41,129,320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504,394,868}, new int[] {-125,130,-122,870,-42,135,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(129, -248),
      new State(130, new int[] {44,133,41,-118}, new int[] {-3,131}),
      new State(131, new int[] {41,132}),
      new State(132, -249),
      new State(133, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504,394,868,41,-119}, new int[] {-122,134,-42,135,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(134, -251),
      new State(135, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,44,-252,41,-252}),
      new State(136, new int[] {346,486,343,499,390,-422}, new int[] {-84,137,-5,138,-6,487}),
      new State(137, -399),
      new State(138, new int[] {38,563,40,-410}, new int[] {-4,139}),
      new State(139, -405, new int[] {-17,140}),
      new State(140, new int[] {40,141}),
      new State(141, new int[] {293,504,311,558,357,559,313,560,368,-230,372,-230,319,-230,391,-230,393,-230,63,-230,38,-230,394,-230,320,-230,41,-225}, new int[] {-128,142,-129,542,-87,562,-90,546,-88,515,-126,561,-15,548}),
      new State(142, new int[] {41,143}),
      new State(143, new int[] {350,858,58,-412,123,-412}, new int[] {-130,144}),
      new State(144, new int[] {58,529,123,-246}, new int[] {-22,145}),
      new State(145, -408, new int[] {-148,146}),
      new State(146, -406, new int[] {-18,147}),
      new State(147, new int[] {123,148}),
      new State(148, -135, new int[] {-95,149}),
      new State(149, new int[] {125,150,123,7,330,23,329,31,328,153,335,165,339,179,340,603,348,606,355,609,353,616,324,625,321,632,320,97,36,98,319,635,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504,360,736,334,746,332,756,59,762,349,763,345,779,315,711,314,712,362,714,366,724,363,783,322,-406,361,-181}, new int[] {-82,10,-34,11,-18,12,-42,633,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,637,-6,487,-90,652,-88,515,-85,782,-35,654,-36,655,-14,656,-13,709,-37,713,-39,723}),
      new State(150, -407, new int[] {-19,151}),
      new State(151, -408, new int[] {-148,152}),
      new State(152, -401),
      new State(153, new int[] {40,154}),
      new State(154, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504,59,-311}, new int[] {-97,155,-108,854,-42,857,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(155, new int[] {59,156}),
      new State(156, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504,59,-311}, new int[] {-97,157,-108,854,-42,857,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(157, new int[] {59,158}),
      new State(158, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504,41,-311}, new int[] {-97,159,-108,854,-42,857,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(159, new int[] {41,160}),
      new State(160, -406, new int[] {-18,161}),
      new State(161, new int[] {123,7,330,23,329,31,328,153,335,165,339,179,340,603,348,606,355,609,353,616,324,625,321,632,320,97,36,98,319,635,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504,360,736,334,746,332,756,59,762,349,763,345,779,58,850,322,-406}, new int[] {-71,162,-34,164,-18,12,-42,633,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(162, -407, new int[] {-19,163}),
      new State(163, -145),
      new State(164, -199),
      new State(165, new int[] {40,166}),
      new State(166, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,167,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(167, new int[] {41,168,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(168, -406, new int[] {-18,169}),
      new State(169, new int[] {123,172,58,842}, new int[] {-107,170}),
      new State(170, -407, new int[] {-19,171}),
      new State(171, -146),
      new State(172, new int[] {59,839,125,-209,341,-209,342,-209}, new int[] {-106,173}),
      new State(173, new int[] {125,174,341,175,342,836}),
      new State(174, -205),
      new State(175, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,176,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(176, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,58,834,59,835}, new int[] {-152,177}),
      new State(177, -135, new int[] {-95,178}),
      new State(178, new int[] {123,7,330,23,329,31,328,153,335,165,339,179,340,603,348,606,355,609,353,616,324,625,321,632,320,97,36,98,319,635,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504,360,736,334,746,332,756,59,762,349,763,345,779,315,711,314,712,362,714,366,724,363,783,125,-210,341,-210,342,-210,336,-210,322,-406,361,-181}, new int[] {-82,10,-34,11,-18,12,-42,633,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,637,-6,487,-90,652,-88,515,-85,782,-35,654,-36,655,-14,656,-13,709,-37,713,-39,723}),
      new State(179, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504,59,-457}, new int[] {-61,180,-42,120,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(180, new int[] {59,181}),
      new State(181, -147),
      new State(182, new int[] {40,128,390,-423,91,-452,59,-452,284,-452,285,-452,263,-452,265,-452,264,-452,124,-452,38,-452,94,-452,46,-452,43,-452,45,-452,42,-452,305,-452,47,-452,37,-452,293,-452,294,-452,287,-452,286,-452,289,-452,288,-452,60,-452,291,-452,62,-452,292,-452,290,-452,295,-452,63,-452,283,-452,41,-452,125,-452,58,-452,93,-452,44,-452,268,-452,338,-452}, new int[] {-124,183}),
      new State(183, -418),
      new State(184, new int[] {393,185,40,-85,390,-85,91,-85,59,-85,284,-85,285,-85,263,-85,265,-85,264,-85,124,-85,38,-85,94,-85,46,-85,43,-85,45,-85,42,-85,305,-85,47,-85,37,-85,293,-85,294,-85,287,-85,286,-85,289,-85,288,-85,60,-85,291,-85,62,-85,292,-85,290,-85,295,-85,63,-85,283,-85,41,-85,125,-85,58,-85,93,-85,44,-85,268,-85,338,-85,320,-85,123,-85,394,-85,365,-85}),
      new State(185, new int[] {319,186}),
      new State(186, -84),
      new State(187, -83),
      new State(188, new int[] {393,189}),
      new State(189, new int[] {319,187}, new int[] {-114,190}),
      new State(190, new int[] {393,185,40,-86,390,-86,91,-86,59,-86,284,-86,285,-86,263,-86,265,-86,264,-86,124,-86,38,-86,94,-86,46,-86,43,-86,45,-86,42,-86,305,-86,47,-86,37,-86,293,-86,294,-86,287,-86,286,-86,289,-86,288,-86,60,-86,291,-86,62,-86,292,-86,290,-86,295,-86,63,-86,283,-86,41,-86,125,-86,58,-86,93,-86,44,-86,268,-86,338,-86,320,-86,123,-86,394,-86,365,-86}),
      new State(191, new int[] {319,187}, new int[] {-114,192}),
      new State(192, new int[] {393,185,40,-87,390,-87,91,-87,59,-87,284,-87,285,-87,263,-87,265,-87,264,-87,124,-87,38,-87,94,-87,46,-87,43,-87,45,-87,42,-87,305,-87,47,-87,37,-87,293,-87,294,-87,287,-87,286,-87,289,-87,288,-87,60,-87,291,-87,62,-87,292,-87,290,-87,295,-87,63,-87,283,-87,41,-87,125,-87,58,-87,93,-87,44,-87,268,-87,338,-87,320,-87,123,-87,394,-87,365,-87}),
      new State(193, new int[] {390,194}),
      new State(194, new int[] {320,97,36,98,319,199,262,202,261,203,260,204,259,205,258,206,263,207,264,208,265,209,295,210,306,211,307,212,326,213,322,214,308,215,309,216,310,217,324,218,329,219,330,220,327,221,328,222,333,223,334,224,331,225,332,226,337,227,338,228,349,229,347,230,351,231,352,232,350,233,354,234,355,235,356,236,360,237,358,238,359,239,340,240,345,241,346,242,344,243,348,244,266,245,267,246,367,247,335,248,336,249,341,250,342,251,339,252,368,253,372,254,364,255,365,256,391,257,362,258,366,259,361,260,373,261,374,262,376,263,378,264,370,265,371,266,375,267,392,268,343,269,353,270,315,271,314,272,313,273,357,274,311,275,123,276}, new int[] {-48,195,-111,196,-2,197,-112,200,-113,201}),
      new State(195, new int[] {61,-479,270,-479,271,-479,279,-479,281,-479,278,-479,277,-479,276,-479,275,-479,274,-479,273,-479,272,-479,280,-479,282,-479,303,-479,302,-479,59,-479,284,-479,285,-479,263,-479,265,-479,264,-479,124,-479,38,-479,94,-479,46,-479,43,-479,45,-479,42,-479,305,-479,47,-479,37,-479,293,-479,294,-479,287,-479,286,-479,289,-479,288,-479,60,-479,291,-479,62,-479,292,-479,290,-479,295,-479,63,-479,283,-479,91,-479,369,-479,123,-479,390,-479,41,-479,125,-479,58,-479,93,-479,44,-479,268,-479,338,-479,40,-488}),
      new State(196, new int[] {91,-454,59,-454,284,-454,285,-454,263,-454,265,-454,264,-454,124,-454,38,-454,94,-454,46,-454,43,-454,45,-454,42,-454,305,-454,47,-454,37,-454,293,-454,294,-454,287,-454,286,-454,289,-454,288,-454,60,-454,291,-454,62,-454,292,-454,290,-454,295,-454,63,-454,283,-454,41,-454,125,-454,58,-454,93,-454,44,-454,268,-454,338,-454,40,-486}),
      new State(197, new int[] {40,128}, new int[] {-124,198}),
      new State(198, -420),
      new State(199, -79),
      new State(200, -80),
      new State(201, -72),
      new State(202, -4),
      new State(203, -5),
      new State(204, -6),
      new State(205, -7),
      new State(206, -8),
      new State(207, -9),
      new State(208, -10),
      new State(209, -11),
      new State(210, -12),
      new State(211, -13),
      new State(212, -14),
      new State(213, -15),
      new State(214, -16),
      new State(215, -17),
      new State(216, -18),
      new State(217, -19),
      new State(218, -20),
      new State(219, -21),
      new State(220, -22),
      new State(221, -23),
      new State(222, -24),
      new State(223, -25),
      new State(224, -26),
      new State(225, -27),
      new State(226, -28),
      new State(227, -29),
      new State(228, -30),
      new State(229, -31),
      new State(230, -32),
      new State(231, -33),
      new State(232, -34),
      new State(233, -35),
      new State(234, -36),
      new State(235, -37),
      new State(236, -38),
      new State(237, -39),
      new State(238, -40),
      new State(239, -41),
      new State(240, -42),
      new State(241, -43),
      new State(242, -44),
      new State(243, -45),
      new State(244, -46),
      new State(245, -47),
      new State(246, -48),
      new State(247, -49),
      new State(248, -50),
      new State(249, -51),
      new State(250, -52),
      new State(251, -53),
      new State(252, -54),
      new State(253, -55),
      new State(254, -56),
      new State(255, -57),
      new State(256, -58),
      new State(257, -59),
      new State(258, -60),
      new State(259, -61),
      new State(260, -62),
      new State(261, -63),
      new State(262, -64),
      new State(263, -65),
      new State(264, -66),
      new State(265, -67),
      new State(266, -68),
      new State(267, -69),
      new State(268, -70),
      new State(269, -71),
      new State(270, -73),
      new State(271, -74),
      new State(272, -75),
      new State(273, -76),
      new State(274, -77),
      new State(275, -78),
      new State(276, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,277,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(277, new int[] {125,278,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(278, -487),
      new State(279, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,280,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(280, new int[] {41,281,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(281, new int[] {91,-461,369,-461,123,-461,390,-461,40,-464,59,-374,284,-374,285,-374,263,-374,265,-374,264,-374,124,-374,38,-374,94,-374,46,-374,43,-374,45,-374,42,-374,305,-374,47,-374,37,-374,293,-374,294,-374,287,-374,286,-374,289,-374,288,-374,60,-374,291,-374,62,-374,292,-374,290,-374,295,-374,63,-374,283,-374,41,-374,125,-374,58,-374,93,-374,44,-374,268,-374,338,-374}),
      new State(282, new int[] {91,-462,369,-462,123,-462,390,-462,40,-465,59,-450,284,-450,285,-450,263,-450,265,-450,264,-450,124,-450,38,-450,94,-450,46,-450,43,-450,45,-450,42,-450,305,-450,47,-450,37,-450,293,-450,294,-450,287,-450,286,-450,289,-450,288,-450,60,-450,291,-450,62,-450,292,-450,290,-450,295,-450,63,-450,283,-450,41,-450,125,-450,58,-450,93,-450,44,-450,268,-450,338,-450}),
      new State(283, new int[] {40,284}),
      new State(284, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,329,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504,38,820,394,822,44,-493,41,-493}, new int[] {-135,285,-134,287,-132,328,-133,290,-42,291,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(285, new int[] {41,286}),
      new State(286, -433),
      new State(287, new int[] {44,288,41,-492,93,-492}),
      new State(288, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,329,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504,38,820,394,822,44,-493,41,-493,93,-493}, new int[] {-132,289,-133,290,-42,291,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(289, -495),
      new State(290, -494),
      new State(291, new int[] {268,292,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,44,-498,41,-498,93,-498}),
      new State(292, new int[] {38,294,367,830,320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,293,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(293, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,44,-497,41,-497,93,-497}),
      new State(294, new int[] {320,97,36,98,353,296,319,187,391,188,393,191,40,297,368,283,91,325,323,305}, new int[] {-43,295,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,324,-50,335,-52,310,-79,311}),
      new State(295, new int[] {44,-499,41,-499,93,-499,91,-460,369,-460,123,-460,390,-460}),
      new State(296, -422),
      new State(297, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,298,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(298, new int[] {41,299,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(299, new int[] {91,-461,369,-461,123,-461,390,-461,40,-464}),
      new State(300, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,329,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504,38,820,394,822,44,-493,93,-493}, new int[] {-135,301,-134,287,-132,328,-133,290,-42,291,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(301, new int[] {93,302}),
      new State(302, new int[] {61,303,91,-434,369,-434,123,-434,390,-434,40,-434,59,-434,284,-434,285,-434,263,-434,265,-434,264,-434,124,-434,38,-434,94,-434,46,-434,43,-434,45,-434,42,-434,305,-434,47,-434,37,-434,293,-434,294,-434,287,-434,286,-434,289,-434,288,-434,60,-434,291,-434,62,-434,292,-434,290,-434,295,-434,63,-434,283,-434,41,-434,125,-434,58,-434,93,-434,44,-434,268,-434,338,-434}),
      new State(303, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,304,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(304, new int[] {284,40,285,42,263,-321,265,-321,264,-321,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-321,41,-321,125,-321,58,-321,93,-321,44,-321,268,-321,338,-321}),
      new State(305, -435),
      new State(306, new int[] {91,307,59,-451,284,-451,285,-451,263,-451,265,-451,264,-451,124,-451,38,-451,94,-451,46,-451,43,-451,45,-451,42,-451,305,-451,47,-451,37,-451,293,-451,294,-451,287,-451,286,-451,289,-451,288,-451,60,-451,291,-451,62,-451,292,-451,290,-451,295,-451,63,-451,283,-451,41,-451,125,-451,58,-451,93,-451,44,-451,268,-451,338,-451}),
      new State(307, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504,93,-457}, new int[] {-61,308,-42,120,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(308, new int[] {93,309}),
      new State(309, -468),
      new State(310, -471),
      new State(311, new int[] {40,128}, new int[] {-124,312}),
      new State(312, -421),
      new State(313, -456),
      new State(314, new int[] {40,315}),
      new State(315, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,329,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504,38,820,394,822,44,-493,41,-493}, new int[] {-135,316,-134,287,-132,328,-133,290,-42,291,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(316, new int[] {41,317}),
      new State(317, new int[] {61,318}),
      new State(318, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,319,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(319, new int[] {284,40,285,42,263,-320,265,-320,264,-320,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-320,41,-320,125,-320,58,-320,93,-320,44,-320,268,-320,338,-320}),
      new State(320, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,321,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(321, -325),
      new State(322, new int[] {320,97,36,98,353,296,319,187,391,188,393,191,40,297,368,283,91,325,323,305}, new int[] {-43,323,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,324,-50,335,-52,310,-79,311}),
      new State(323, new int[] {59,-340,284,-340,285,-340,263,-340,265,-340,264,-340,124,-340,38,-340,94,-340,46,-340,43,-340,45,-340,42,-340,305,-340,47,-340,37,-340,293,-340,294,-340,287,-340,286,-340,289,-340,288,-340,60,-340,291,-340,62,-340,292,-340,290,-340,295,-340,63,-340,283,-340,41,-340,125,-340,58,-340,93,-340,44,-340,268,-340,338,-340,91,-460,369,-460,123,-460,390,-460}),
      new State(324, new int[] {91,-462,369,-462,123,-462,390,-462,40,-465}),
      new State(325, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,329,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504,38,820,394,822,44,-493,93,-493}, new int[] {-135,326,-134,287,-132,328,-133,290,-42,291,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(326, new int[] {93,327}),
      new State(327, -434),
      new State(328, -496),
      new State(329, new int[] {40,330}),
      new State(330, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,329,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504,38,820,394,822,44,-493,41,-493}, new int[] {-135,331,-134,287,-132,328,-133,290,-42,291,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(331, new int[] {41,332}),
      new State(332, new int[] {61,318,44,-503,41,-503,93,-503}),
      new State(333, new int[] {320,97,36,98,353,296,319,187,391,188,393,191,40,297,368,283,91,325,323,305}, new int[] {-43,334,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,324,-50,335,-52,310,-79,311}),
      new State(334, new int[] {59,-342,284,-342,285,-342,263,-342,265,-342,264,-342,124,-342,38,-342,94,-342,46,-342,43,-342,45,-342,42,-342,305,-342,47,-342,37,-342,293,-342,294,-342,287,-342,286,-342,289,-342,288,-342,60,-342,291,-342,62,-342,292,-342,290,-342,295,-342,63,-342,283,-342,41,-342,125,-342,58,-342,93,-342,44,-342,268,-342,338,-342,91,-460,369,-460,123,-460,390,-460}),
      new State(335, new int[] {91,307}),
      new State(336, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,337,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(337, new int[] {284,-360,285,-360,263,-360,265,-360,264,-360,124,-360,38,-360,94,-360,46,-360,43,-360,45,-360,42,-360,305,64,47,-360,37,-360,293,-360,294,-360,287,-360,286,-360,289,-360,288,-360,60,-360,291,-360,62,-360,292,-360,290,-360,295,-360,63,-360,283,-360,59,-360,41,-360,125,-360,58,-360,93,-360,44,-360,268,-360,338,-360}),
      new State(338, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,339,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(339, new int[] {284,-361,285,-361,263,-361,265,-361,264,-361,124,-361,38,-361,94,-361,46,-361,43,-361,45,-361,42,-361,305,64,47,-361,37,-361,293,-361,294,-361,287,-361,286,-361,289,-361,288,-361,60,-361,291,-361,62,-361,292,-361,290,-361,295,-361,63,-361,283,-361,59,-361,41,-361,125,-361,58,-361,93,-361,44,-361,268,-361,338,-361}),
      new State(340, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,341,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(341, new int[] {284,-362,285,-362,263,-362,265,-362,264,-362,124,-362,38,-362,94,-362,46,-362,43,-362,45,-362,42,-362,305,64,47,-362,37,-362,293,-362,294,-362,287,-362,286,-362,289,-362,288,-362,60,-362,291,-362,62,-362,292,-362,290,-362,295,92,63,-362,283,-362,59,-362,41,-362,125,-362,58,-362,93,-362,44,-362,268,-362,338,-362}),
      new State(342, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,343,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(343, new int[] {284,-363,285,-363,263,-363,265,-363,264,-363,124,-363,38,-363,94,-363,46,-363,43,-363,45,-363,42,-363,305,64,47,-363,37,-363,293,-363,294,-363,287,-363,286,-363,289,-363,288,-363,60,-363,291,-363,62,-363,292,-363,290,-363,295,-363,63,-363,283,-363,59,-363,41,-363,125,-363,58,-363,93,-363,44,-363,268,-363,338,-363}),
      new State(344, -375),
      new State(345, new int[] {353,296,319,187,391,188,393,191,320,97,36,98,361,353,293,504}, new int[] {-26,346,-139,349,-90,350,-27,94,-20,510,-114,184,-78,511,-48,528,-88,515}),
      new State(346, new int[] {40,128,59,-431,284,-431,285,-431,263,-431,265,-431,264,-431,124,-431,38,-431,94,-431,46,-431,43,-431,45,-431,42,-431,305,-431,47,-431,37,-431,293,-431,294,-431,287,-431,286,-431,289,-431,288,-431,60,-431,291,-431,62,-431,292,-431,290,-431,295,-431,63,-431,283,-431,41,-431,125,-431,58,-431,93,-431,44,-431,268,-431,338,-431}, new int[] {-123,347,-124,348}),
      new State(347, -317),
      new State(348, -432),
      new State(349, -318),
      new State(350, new int[] {361,353,293,504}, new int[] {-139,351,-88,352}),
      new State(351, -319),
      new State(352, -93),
      new State(353, new int[] {40,128,364,-431,365,-431,123,-431}, new int[] {-123,354,-124,348}),
      new State(354, new int[] {364,707,365,-189,123,-189}, new int[] {-25,355}),
      new State(355, -315, new int[] {-153,356}),
      new State(356, new int[] {365,705,123,-193}, new int[] {-30,357}),
      new State(357, -405, new int[] {-17,358}),
      new State(358, -406, new int[] {-18,359}),
      new State(359, new int[] {123,360}),
      new State(360, -262, new int[] {-96,361}),
      new State(361, new int[] {125,362,311,569,357,570,313,571,353,572,315,573,314,574,356,576,293,504,350,670,344,-290,346,-290}, new int[] {-83,364,-86,365,-9,366,-11,567,-12,575,-10,577,-90,668,-88,515}),
      new State(362, -407, new int[] {-19,363}),
      new State(363, -316),
      new State(364, -261),
      new State(365, -266),
      new State(366, new int[] {368,534,372,535,319,187,391,188,393,191,63,537,320,-236}, new int[] {-24,367,-23,557,-21,531,-20,536,-114,184,-32,539}),
      new State(367, new int[] {320,372}, new int[] {-105,368,-62,566}),
      new State(368, new int[] {59,369,44,370}),
      new State(369, -263),
      new State(370, new int[] {320,372}, new int[] {-62,371}),
      new State(371, -300),
      new State(372, new int[] {61,374,59,-405,44,-405}, new int[] {-17,373}),
      new State(373, -302),
      new State(374, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,375,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(375, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-405,44,-405}, new int[] {-17,376}),
      new State(376, -303),
      new State(377, -379),
      new State(378, new int[] {40,379}),
      new State(379, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-104,380,-41,565,-42,385,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(380, new int[] {44,383,41,-118}, new int[] {-3,381}),
      new State(381, new int[] {41,382}),
      new State(382, -518),
      new State(383, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504,41,-119}, new int[] {-41,384,-42,385,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(384, -526),
      new State(385, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,44,-527,41,-527}),
      new State(386, new int[] {40,387}),
      new State(387, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,388,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(388, new int[] {41,389,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(389, -519),
      new State(390, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,391,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(391, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-520,41,-520,125,-520,58,-520,93,-520,44,-520,268,-520,338,-520}),
      new State(392, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,393,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(393, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-521,41,-521,125,-521,58,-521,93,-521,44,-521,268,-521,338,-521}),
      new State(394, new int[] {40,395}),
      new State(395, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,396,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(396, new int[] {41,397,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(397, -522),
      new State(398, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,399,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(399, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-523,41,-523,125,-523,58,-523,93,-523,44,-523,268,-523,338,-523}),
      new State(400, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,401,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(401, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-524,41,-524,125,-524,58,-524,93,-524,44,-524,268,-524,338,-524}),
      new State(402, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,403,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(403, new int[] {284,-380,285,-380,263,-380,265,-380,264,-380,124,-380,38,-380,94,-380,46,-380,43,-380,45,-380,42,-380,305,64,47,-380,37,-380,293,-380,294,-380,287,-380,286,-380,289,-380,288,-380,60,-380,291,-380,62,-380,292,-380,290,-380,295,-380,63,-380,283,-380,59,-380,41,-380,125,-380,58,-380,93,-380,44,-380,268,-380,338,-380}),
      new State(404, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,405,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(405, new int[] {284,-381,285,-381,263,-381,265,-381,264,-381,124,-381,38,-381,94,-381,46,-381,43,-381,45,-381,42,-381,305,64,47,-381,37,-381,293,-381,294,-381,287,-381,286,-381,289,-381,288,-381,60,-381,291,-381,62,-381,292,-381,290,-381,295,-381,63,-381,283,-381,59,-381,41,-381,125,-381,58,-381,93,-381,44,-381,268,-381,338,-381}),
      new State(406, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,407,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(407, new int[] {284,-382,285,-382,263,-382,265,-382,264,-382,124,-382,38,-382,94,-382,46,-382,43,-382,45,-382,42,-382,305,64,47,-382,37,-382,293,-382,294,-382,287,-382,286,-382,289,-382,288,-382,60,-382,291,-382,62,-382,292,-382,290,-382,295,-382,63,-382,283,-382,59,-382,41,-382,125,-382,58,-382,93,-382,44,-382,268,-382,338,-382}),
      new State(408, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,409,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(409, new int[] {284,-383,285,-383,263,-383,265,-383,264,-383,124,-383,38,-383,94,-383,46,-383,43,-383,45,-383,42,-383,305,64,47,-383,37,-383,293,-383,294,-383,287,-383,286,-383,289,-383,288,-383,60,-383,291,-383,62,-383,292,-383,290,-383,295,-383,63,-383,283,-383,59,-383,41,-383,125,-383,58,-383,93,-383,44,-383,268,-383,338,-383}),
      new State(410, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,411,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(411, new int[] {284,-384,285,-384,263,-384,265,-384,264,-384,124,-384,38,-384,94,-384,46,-384,43,-384,45,-384,42,-384,305,64,47,-384,37,-384,293,-384,294,-384,287,-384,286,-384,289,-384,288,-384,60,-384,291,-384,62,-384,292,-384,290,-384,295,-384,63,-384,283,-384,59,-384,41,-384,125,-384,58,-384,93,-384,44,-384,268,-384,338,-384}),
      new State(412, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,413,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(413, new int[] {284,-385,285,-385,263,-385,265,-385,264,-385,124,-385,38,-385,94,-385,46,-385,43,-385,45,-385,42,-385,305,64,47,-385,37,-385,293,-385,294,-385,287,-385,286,-385,289,-385,288,-385,60,-385,291,-385,62,-385,292,-385,290,-385,295,-385,63,-385,283,-385,59,-385,41,-385,125,-385,58,-385,93,-385,44,-385,268,-385,338,-385}),
      new State(414, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,415,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(415, new int[] {284,-386,285,-386,263,-386,265,-386,264,-386,124,-386,38,-386,94,-386,46,-386,43,-386,45,-386,42,-386,305,64,47,-386,37,-386,293,-386,294,-386,287,-386,286,-386,289,-386,288,-386,60,-386,291,-386,62,-386,292,-386,290,-386,295,-386,63,-386,283,-386,59,-386,41,-386,125,-386,58,-386,93,-386,44,-386,268,-386,338,-386}),
      new State(416, new int[] {40,418,59,-426,284,-426,285,-426,263,-426,265,-426,264,-426,124,-426,38,-426,94,-426,46,-426,43,-426,45,-426,42,-426,305,-426,47,-426,37,-426,293,-426,294,-426,287,-426,286,-426,289,-426,288,-426,60,-426,291,-426,62,-426,292,-426,290,-426,295,-426,63,-426,283,-426,41,-426,125,-426,58,-426,93,-426,44,-426,268,-426,338,-426}, new int[] {-76,417}),
      new State(417, -387),
      new State(418, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504,41,-457}, new int[] {-61,419,-42,120,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(419, new int[] {41,420}),
      new State(420, -427),
      new State(421, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,422,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(422, new int[] {284,-388,285,-388,263,-388,265,-388,264,-388,124,-388,38,-388,94,-388,46,-388,43,-388,45,-388,42,-388,305,64,47,-388,37,-388,293,-388,294,-388,287,-388,286,-388,289,-388,288,-388,60,-388,291,-388,62,-388,292,-388,290,-388,295,-388,63,-388,283,-388,59,-388,41,-388,125,-388,58,-388,93,-388,44,-388,268,-388,338,-388}),
      new State(423, -389),
      new State(424, -436),
      new State(425, -437),
      new State(426, -438),
      new State(427, -439),
      new State(428, -440),
      new State(429, -441),
      new State(430, -442),
      new State(431, -443),
      new State(432, -444),
      new State(433, -445),
      new State(434, new int[] {320,439,385,448,386,462,316,564}, new int[] {-103,435,-63,467}),
      new State(435, new int[] {34,436,316,438,320,439,385,448,386,462}, new int[] {-63,437}),
      new State(436, -446),
      new State(437, -504),
      new State(438, -505),
      new State(439, new int[] {91,440,369,446,34,-508,316,-508,320,-508,385,-508,386,-508,387,-508,96,-508}),
      new State(440, new int[] {319,443,325,444,320,445}, new int[] {-64,441}),
      new State(441, new int[] {93,442}),
      new State(442, -509),
      new State(443, -515),
      new State(444, -516),
      new State(445, -517),
      new State(446, new int[] {319,447}),
      new State(447, -510),
      new State(448, new int[] {318,451,320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,449,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(449, new int[] {125,450,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(450, -511),
      new State(451, new int[] {125,452,91,453}),
      new State(452, -512),
      new State(453, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,454,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(454, new int[] {93,455,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(455, new int[] {125,456}),
      new State(456, -513),
      new State(457, new int[] {387,458,316,459,320,439,385,448,386,462}, new int[] {-103,465,-63,467}),
      new State(458, -447),
      new State(459, new int[] {387,460,320,439,385,448,386,462}, new int[] {-63,461}),
      new State(460, -448),
      new State(461, -507),
      new State(462, new int[] {320,97,36,98,353,296,319,187,391,188,393,191,40,297,368,283,91,325,323,305}, new int[] {-43,463,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,324,-50,335,-52,310,-79,311}),
      new State(463, new int[] {125,464,91,-460,369,-460,123,-460,390,-460}),
      new State(464, -514),
      new State(465, new int[] {387,466,316,438,320,439,385,448,386,462}, new int[] {-63,437}),
      new State(466, -449),
      new State(467, -506),
      new State(468, -390),
      new State(469, new int[] {96,470,316,471,320,439,385,448,386,462}, new int[] {-103,473,-63,467}),
      new State(470, -428),
      new State(471, new int[] {96,472,320,439,385,448,386,462}, new int[] {-63,461}),
      new State(472, -429),
      new State(473, new int[] {96,474,316,438,320,439,385,448,386,462}, new int[] {-63,437}),
      new State(474, -430),
      new State(475, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,476,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(476, new int[] {284,40,285,42,263,-391,265,-391,264,-391,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-391,41,-391,125,-391,58,-391,93,-391,44,-391,268,-391,338,-391}),
      new State(477, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504,59,-392,284,-392,285,-392,263,-392,265,-392,264,-392,124,-392,38,-392,94,-392,46,-392,42,-392,305,-392,47,-392,37,-392,294,-392,287,-392,286,-392,289,-392,288,-392,60,-392,291,-392,62,-392,292,-392,290,-392,295,-392,63,-392,283,-392,41,-392,125,-392,58,-392,93,-392,44,-392,268,-392,338,-392}, new int[] {-42,478,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(478, new int[] {268,479,284,40,285,42,263,-393,265,-393,264,-393,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-393,41,-393,125,-393,58,-393,93,-393,44,-393,338,-393}),
      new State(479, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,480,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(480, new int[] {284,40,285,42,263,-394,265,-394,264,-394,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-394,41,-394,125,-394,58,-394,93,-394,44,-394,268,-394,338,-394}),
      new State(481, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,482,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(482, new int[] {284,40,285,42,263,-395,265,-395,264,-395,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-395,41,-395,125,-395,58,-395,93,-395,44,-395,268,-395,338,-395}),
      new State(483, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,484,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(484, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-396,41,-396,125,-396,58,-396,93,-396,44,-396,268,-396,338,-396}),
      new State(485, -397),
      new State(486, -404),
      new State(487, new int[] {38,563,40,-410}, new int[] {-4,488}),
      new State(488, new int[] {40,489}),
      new State(489, new int[] {293,504,311,558,357,559,313,560,368,-230,372,-230,319,-230,391,-230,393,-230,63,-230,38,-230,394,-230,320,-230,41,-225}, new int[] {-128,490,-129,542,-87,562,-90,546,-88,515,-126,561,-15,548}),
      new State(490, new int[] {41,491}),
      new State(491, new int[] {58,529,268,-246}, new int[] {-22,492}),
      new State(492, -405, new int[] {-17,493}),
      new State(493, new int[] {268,494}),
      new State(494, -408, new int[] {-148,495}),
      new State(495, -409, new int[] {-154,496}),
      new State(496, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,497,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(497, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-408,41,-408,125,-408,58,-408,93,-408,44,-408,268,-408,338,-408}, new int[] {-148,498}),
      new State(498, -402),
      new State(499, -403),
      new State(500, new int[] {353,502,346,486,343,499,293,504}, new int[] {-84,501,-88,352,-5,138,-6,487}),
      new State(501, -398),
      new State(502, new int[] {346,486,343,499}, new int[] {-84,503,-5,138,-6,487}),
      new State(503, -400),
      new State(504, new int[] {353,296,319,187,391,188,393,191,320,97,36,98}, new int[] {-89,505,-26,507,-27,94,-20,510,-114,184,-78,511,-48,528}),
      new State(505, new int[] {294,506}),
      new State(506, -91),
      new State(507, new int[] {40,128,294,-89}, new int[] {-91,508,-124,509}),
      new State(508, -90),
      new State(509, -88),
      new State(510, -423),
      new State(511, new int[] {91,512,123,516,369,519,390,526,59,-425,284,-425,285,-425,263,-425,265,-425,264,-425,124,-425,38,-425,94,-425,46,-425,43,-425,45,-425,42,-425,305,-425,47,-425,37,-425,293,-425,294,-425,287,-425,286,-425,289,-425,288,-425,60,-425,291,-425,62,-425,292,-425,290,-425,295,-425,63,-425,283,-425,41,-425,125,-425,58,-425,93,-425,44,-425,268,-425,338,-425,40,-425}),
      new State(512, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504,93,-457}, new int[] {-61,513,-42,120,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(513, new int[] {93,514}),
      new State(514, -481),
      new State(515, -92),
      new State(516, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,517,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(517, new int[] {125,518,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(518, -482),
      new State(519, new int[] {319,521,123,522,320,97,36,98}, new int[] {-1,520,-48,525}),
      new State(520, -483),
      new State(521, -489),
      new State(522, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,523,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(523, new int[] {125,524,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(524, -490),
      new State(525, -491),
      new State(526, new int[] {320,97,36,98}, new int[] {-48,527}),
      new State(527, -485),
      new State(528, -480),
      new State(529, new int[] {368,534,372,535,319,187,391,188,393,191,63,537}, new int[] {-23,530,-21,531,-20,536,-114,184,-32,539}),
      new State(530, -247),
      new State(531, new int[] {124,532,320,-238,123,-238,268,-238,59,-238,38,-238,394,-238}),
      new State(532, new int[] {368,534,372,535,319,187,391,188,393,191}, new int[] {-21,533,-20,536,-114,184}),
      new State(533, -244),
      new State(534, -241),
      new State(535, -242),
      new State(536, -243),
      new State(537, new int[] {368,534,372,535,319,187,391,188,393,191}, new int[] {-21,538,-20,536,-114,184}),
      new State(538, -239),
      new State(539, new int[] {124,540,320,-240,123,-240,268,-240,59,-240,38,-240,394,-240}),
      new State(540, new int[] {368,534,372,535,319,187,391,188,393,191}, new int[] {-21,541,-20,536,-114,184}),
      new State(541, -245),
      new State(542, new int[] {44,544,41,-118}, new int[] {-3,543}),
      new State(543, -224),
      new State(544, new int[] {293,504,311,558,357,559,313,560,41,-119,368,-230,372,-230,319,-230,391,-230,393,-230,63,-230,38,-230,394,-230,320,-230}, new int[] {-87,545,-90,546,-88,515,-126,561,-15,548}),
      new State(545, -227),
      new State(546, new int[] {311,558,357,559,313,560,293,504,368,-230,372,-230,319,-230,391,-230,393,-230,63,-230,38,-230,394,-230,320,-230}, new int[] {-126,547,-88,352,-15,548}),
      new State(547, -228),
      new State(548, new int[] {368,534,372,535,319,187,391,188,393,191,63,537,38,-236,394,-236,320,-236}, new int[] {-24,549,-23,557,-21,531,-20,536,-114,184,-32,539}),
      new State(549, new int[] {38,556,394,-175,320,-175}, new int[] {-7,550}),
      new State(550, new int[] {394,555,320,-177}, new int[] {-8,551}),
      new State(551, new int[] {320,552}),
      new State(552, new int[] {61,553,44,-234,41,-234}),
      new State(553, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,554,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(554, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,44,-235,41,-235}),
      new State(555, -178),
      new State(556, -176),
      new State(557, -237),
      new State(558, -231),
      new State(559, -232),
      new State(560, -233),
      new State(561, -229),
      new State(562, -226),
      new State(563, -411),
      new State(564, new int[] {320,439,385,448,386,462}, new int[] {-63,461}),
      new State(565, -525),
      new State(566, -301),
      new State(567, new int[] {311,569,357,570,313,571,353,572,315,573,314,574,368,-288,372,-288,319,-288,391,-288,393,-288,63,-288,320,-288,344,-291,346,-291}, new int[] {-12,568}),
      new State(568, -293),
      new State(569, -294),
      new State(570, -295),
      new State(571, -296),
      new State(572, -297),
      new State(573, -298),
      new State(574, -299),
      new State(575, -292),
      new State(576, -289),
      new State(577, new int[] {344,578,346,486}, new int[] {-5,588}),
      new State(578, new int[] {319,199,262,202,261,203,260,204,259,205,258,206,263,207,264,208,265,209,295,210,306,211,307,212,326,213,322,214,308,215,309,216,310,217,324,218,329,219,330,220,327,221,328,222,333,223,334,224,331,225,332,226,337,227,338,228,349,229,347,230,351,231,352,232,350,233,354,234,355,235,356,236,360,237,358,238,359,239,340,240,345,241,346,242,344,243,348,244,266,245,267,246,367,247,335,248,336,249,341,250,342,251,339,252,368,253,372,254,364,255,365,256,391,257,362,258,366,259,361,260,373,261,374,262,376,263,378,264,370,265,371,266,375,267,392,268,343,269,353,270,315,271,314,272,313,273,357,274,311,275}, new int[] {-94,579,-69,587,-111,583,-112,200,-113,201}),
      new State(579, new int[] {59,580,44,581}),
      new State(580, -264),
      new State(581, new int[] {319,199,262,202,261,203,260,204,259,205,258,206,263,207,264,208,265,209,295,210,306,211,307,212,326,213,322,214,308,215,309,216,310,217,324,218,329,219,330,220,327,221,328,222,333,223,334,224,331,225,332,226,337,227,338,228,349,229,347,230,351,231,352,232,350,233,354,234,355,235,356,236,360,237,358,238,359,239,340,240,345,241,346,242,344,243,348,244,266,245,267,246,367,247,335,248,336,249,341,250,342,251,339,252,368,253,372,254,364,255,365,256,391,257,362,258,366,259,361,260,373,261,374,262,376,263,378,264,370,265,371,266,375,267,392,268,343,269,353,270,315,271,314,272,313,273,357,274,311,275}, new int[] {-69,582,-111,583,-112,200,-113,201}),
      new State(582, -304),
      new State(583, new int[] {61,584}),
      new State(584, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,585,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(585, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-405,44,-405}, new int[] {-17,586}),
      new State(586, -306),
      new State(587, -305),
      new State(588, new int[] {38,563,319,-410,262,-410,261,-410,260,-410,259,-410,258,-410,263,-410,264,-410,265,-410,295,-410,306,-410,307,-410,326,-410,322,-410,308,-410,309,-410,310,-410,324,-410,329,-410,330,-410,327,-410,328,-410,333,-410,334,-410,331,-410,332,-410,337,-410,338,-410,349,-410,347,-410,351,-410,352,-410,350,-410,354,-410,355,-410,356,-410,360,-410,358,-410,359,-410,340,-410,345,-410,346,-410,344,-410,348,-410,266,-410,267,-410,367,-410,335,-410,336,-410,341,-410,342,-410,339,-410,368,-410,372,-410,364,-410,365,-410,391,-410,362,-410,366,-410,361,-410,373,-410,374,-410,376,-410,378,-410,370,-410,371,-410,375,-410,392,-410,343,-410,353,-410,315,-410,314,-410,313,-410,357,-410,311,-410}, new int[] {-4,589}),
      new State(589, new int[] {319,199,262,202,261,203,260,204,259,205,258,206,263,207,264,208,265,209,295,210,306,211,307,212,326,213,322,214,308,215,309,216,310,217,324,218,329,219,330,220,327,221,328,222,333,223,334,224,331,225,332,226,337,227,338,228,349,229,347,230,351,231,352,232,350,233,354,234,355,235,356,236,360,237,358,238,359,239,340,240,345,241,346,242,344,243,348,244,266,245,267,246,367,247,335,248,336,249,341,250,342,251,339,252,368,253,372,254,364,255,365,256,391,257,362,258,366,259,361,260,373,261,374,262,376,263,378,264,370,265,371,266,375,267,392,268,343,269,353,270,315,271,314,272,313,273,357,274,311,275}, new int[] {-111,590,-112,200,-113,201}),
      new State(590, -405, new int[] {-17,591}),
      new State(591, new int[] {40,592}),
      new State(592, new int[] {293,504,311,558,357,559,313,560,368,-230,372,-230,319,-230,391,-230,393,-230,63,-230,38,-230,394,-230,320,-230,41,-225}, new int[] {-128,593,-129,542,-87,562,-90,546,-88,515,-126,561,-15,548}),
      new State(593, new int[] {41,594}),
      new State(594, new int[] {58,529,59,-246,123,-246}, new int[] {-22,595}),
      new State(595, -408, new int[] {-148,596}),
      new State(596, new int[] {59,599,123,600}, new int[] {-75,597}),
      new State(597, -408, new int[] {-148,598}),
      new State(598, -265),
      new State(599, -286),
      new State(600, -135, new int[] {-95,601}),
      new State(601, new int[] {125,602,123,7,330,23,329,31,328,153,335,165,339,179,340,603,348,606,355,609,353,616,324,625,321,632,320,97,36,98,319,635,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504,360,736,334,746,332,756,59,762,349,763,345,779,315,711,314,712,362,714,366,724,363,783,322,-406,361,-181}, new int[] {-82,10,-34,11,-18,12,-42,633,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,637,-6,487,-90,652,-88,515,-85,782,-35,654,-36,655,-14,656,-13,709,-37,713,-39,723}),
      new State(602, -287),
      new State(603, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504,59,-457}, new int[] {-61,604,-42,120,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(604, new int[] {59,605}),
      new State(605, -148),
      new State(606, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504,59,-457}, new int[] {-61,607,-42,120,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(607, new int[] {59,608}),
      new State(608, -149),
      new State(609, new int[] {320,97,36,98}, new int[] {-98,610,-58,615,-48,614}),
      new State(610, new int[] {59,611,44,612}),
      new State(611, -150),
      new State(612, new int[] {320,97,36,98}, new int[] {-58,613,-48,614}),
      new State(613, -254),
      new State(614, -256),
      new State(615, -255),
      new State(616, new int[] {320,621,346,486,343,499,390,-422}, new int[] {-99,617,-84,137,-59,624,-5,138,-6,487}),
      new State(617, new int[] {59,618,44,619}),
      new State(618, -151),
      new State(619, new int[] {320,621}, new int[] {-59,620}),
      new State(620, -257),
      new State(621, new int[] {61,622,59,-259,44,-259}),
      new State(622, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,623,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(623, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-260,44,-260}),
      new State(624, -258),
      new State(625, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-100,626,-60,631,-42,630,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(626, new int[] {59,627,44,628}),
      new State(627, -152),
      new State(628, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-60,629,-42,630,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(629, -308),
      new State(630, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-310,44,-310}),
      new State(631, -309),
      new State(632, -153),
      new State(633, new int[] {59,634,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(634, -154),
      new State(635, new int[] {58,636,393,-83,40,-83,390,-83,91,-83,59,-83,284,-83,285,-83,263,-83,265,-83,264,-83,124,-83,38,-83,94,-83,46,-83,43,-83,45,-83,42,-83,305,-83,47,-83,37,-83,293,-83,294,-83,287,-83,286,-83,289,-83,288,-83,60,-83,291,-83,62,-83,292,-83,290,-83,295,-83,63,-83,283,-83}),
      new State(636, -162),
      new State(637, new int[] {38,563,319,-410,40,-410}, new int[] {-4,638}),
      new State(638, new int[] {319,639,40,-405}, new int[] {-17,140}),
      new State(639, -405, new int[] {-17,640}),
      new State(640, new int[] {40,641}),
      new State(641, new int[] {293,504,311,558,357,559,313,560,368,-230,372,-230,319,-230,391,-230,393,-230,63,-230,38,-230,394,-230,320,-230,41,-225}, new int[] {-128,642,-129,542,-87,562,-90,546,-88,515,-126,561,-15,548}),
      new State(642, new int[] {41,643}),
      new State(643, new int[] {58,529,123,-246}, new int[] {-22,644}),
      new State(644, -408, new int[] {-148,645}),
      new State(645, -406, new int[] {-18,646}),
      new State(646, new int[] {123,647}),
      new State(647, -135, new int[] {-95,648}),
      new State(648, new int[] {125,649,123,7,330,23,329,31,328,153,335,165,339,179,340,603,348,606,355,609,353,616,324,625,321,632,320,97,36,98,319,635,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504,360,736,334,746,332,756,59,762,349,763,345,779,315,711,314,712,362,714,366,724,363,783,322,-406,361,-181}, new int[] {-82,10,-34,11,-18,12,-42,633,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,637,-6,487,-90,652,-88,515,-85,782,-35,654,-36,655,-14,656,-13,709,-37,713,-39,723}),
      new State(649, -407, new int[] {-19,650}),
      new State(650, -408, new int[] {-148,651}),
      new State(651, -174),
      new State(652, new int[] {353,502,346,486,343,499,293,504,315,711,314,712,362,714,366,724,361,-181}, new int[] {-84,501,-88,352,-85,653,-5,637,-6,487,-35,654,-36,655,-14,656,-13,709,-37,713,-39,723}),
      new State(653, -138),
      new State(654, -94),
      new State(655, -95),
      new State(656, new int[] {361,657}),
      new State(657, new int[] {319,658}),
      new State(658, new int[] {364,707,365,-189,123,-189}, new int[] {-25,659}),
      new State(659, -179, new int[] {-149,660}),
      new State(660, new int[] {365,705,123,-193}, new int[] {-30,661}),
      new State(661, -405, new int[] {-17,662}),
      new State(662, -406, new int[] {-18,663}),
      new State(663, new int[] {123,664}),
      new State(664, -262, new int[] {-96,665}),
      new State(665, new int[] {125,666,311,569,357,570,313,571,353,572,315,573,314,574,356,576,293,504,350,670,344,-290,346,-290}, new int[] {-83,364,-86,365,-9,366,-11,567,-12,575,-10,577,-90,668,-88,515}),
      new State(666, -407, new int[] {-19,667}),
      new State(667, -180),
      new State(668, new int[] {311,569,357,570,313,571,353,572,315,573,314,574,356,576,293,504,344,-290,346,-290}, new int[] {-86,669,-88,352,-9,366,-11,567,-12,575,-10,577}),
      new State(669, -267),
      new State(670, new int[] {319,187,391,188,393,191}, new int[] {-28,671,-20,686,-114,184}),
      new State(671, new int[] {44,673,59,675,123,676}, new int[] {-80,672}),
      new State(672, -268),
      new State(673, new int[] {319,187,391,188,393,191}, new int[] {-20,674,-114,184}),
      new State(674, -270),
      new State(675, -271),
      new State(676, new int[] {125,677,319,690,391,691,393,191,262,202,261,203,260,204,259,205,258,206,263,207,264,208,265,209,295,210,306,211,307,212,326,213,322,214,308,215,309,216,310,217,324,218,329,219,330,220,327,221,328,222,333,223,334,224,331,225,332,226,337,227,338,228,349,229,347,230,351,231,352,232,350,233,354,234,355,235,356,236,360,237,358,238,359,239,340,240,345,241,346,242,344,243,348,244,266,245,267,246,367,247,335,248,336,249,341,250,342,251,339,252,368,253,372,254,364,255,365,256,362,258,366,259,361,260,373,261,374,262,376,263,378,264,370,265,371,266,375,267,392,268,343,269,353,270,315,271,314,272,313,273,357,274,311,275}, new int[] {-102,678,-66,704,-67,681,-117,682,-20,687,-114,184,-68,692,-116,693,-111,703,-112,200,-113,201}),
      new State(677, -272),
      new State(678, new int[] {125,679,319,690,391,691,393,191,262,202,261,203,260,204,259,205,258,206,263,207,264,208,265,209,295,210,306,211,307,212,326,213,322,214,308,215,309,216,310,217,324,218,329,219,330,220,327,221,328,222,333,223,334,224,331,225,332,226,337,227,338,228,349,229,347,230,351,231,352,232,350,233,354,234,355,235,356,236,360,237,358,238,359,239,340,240,345,241,346,242,344,243,348,244,266,245,267,246,367,247,335,248,336,249,341,250,342,251,339,252,368,253,372,254,364,255,365,256,362,258,366,259,361,260,373,261,374,262,376,263,378,264,370,265,371,266,375,267,392,268,343,269,353,270,315,271,314,272,313,273,357,274,311,275}, new int[] {-66,680,-67,681,-117,682,-20,687,-114,184,-68,692,-116,693,-111,703,-112,200,-113,201}),
      new State(679, -273),
      new State(680, -275),
      new State(681, -276),
      new State(682, new int[] {354,683,338,-284}),
      new State(683, new int[] {319,187,391,188,393,191}, new int[] {-28,684,-20,686,-114,184}),
      new State(684, new int[] {59,685,44,673}),
      new State(685, -278),
      new State(686, -269),
      new State(687, new int[] {390,688}),
      new State(688, new int[] {319,199,262,202,261,203,260,204,259,205,258,206,263,207,264,208,265,209,295,210,306,211,307,212,326,213,322,214,308,215,309,216,310,217,324,218,329,219,330,220,327,221,328,222,333,223,334,224,331,225,332,226,337,227,338,228,349,229,347,230,351,231,352,232,350,233,354,234,355,235,356,236,360,237,358,238,359,239,340,240,345,241,346,242,344,243,348,244,266,245,267,246,367,247,335,248,336,249,341,250,342,251,339,252,368,253,372,254,364,255,365,256,391,257,362,258,366,259,361,260,373,261,374,262,376,263,378,264,370,265,371,266,375,267,392,268,343,269,353,270,315,271,314,272,313,273,357,274,311,275}, new int[] {-111,689,-112,200,-113,201}),
      new State(689, -285),
      new State(690, new int[] {393,-83,390,-83,338,-79}),
      new State(691, new int[] {393,189,338,-59}),
      new State(692, -277),
      new State(693, new int[] {338,694}),
      new State(694, new int[] {319,695,262,202,261,203,260,204,259,205,258,206,263,207,264,208,265,209,295,210,306,211,307,212,326,213,322,214,308,215,309,216,310,217,324,218,329,219,330,220,327,221,328,222,333,223,334,224,331,225,332,226,337,227,338,228,349,229,347,230,351,231,352,232,350,233,354,234,355,235,356,236,360,237,358,238,359,239,340,240,345,241,346,242,344,243,348,244,266,245,267,246,367,247,335,248,336,249,341,250,342,251,339,252,368,253,372,254,364,255,365,256,391,257,362,258,366,259,361,260,373,261,374,262,376,263,378,264,370,265,371,266,375,267,392,268,343,269,311,569,357,570,313,571,353,572,315,573,314,574}, new int[] {-113,697,-12,699}),
      new State(695, new int[] {59,696}),
      new State(696, -279),
      new State(697, new int[] {59,698}),
      new State(698, -280),
      new State(699, new int[] {59,702,319,199,262,202,261,203,260,204,259,205,258,206,263,207,264,208,265,209,295,210,306,211,307,212,326,213,322,214,308,215,309,216,310,217,324,218,329,219,330,220,327,221,328,222,333,223,334,224,331,225,332,226,337,227,338,228,349,229,347,230,351,231,352,232,350,233,354,234,355,235,356,236,360,237,358,238,359,239,340,240,345,241,346,242,344,243,348,244,266,245,267,246,367,247,335,248,336,249,341,250,342,251,339,252,368,253,372,254,364,255,365,256,391,257,362,258,366,259,361,260,373,261,374,262,376,263,378,264,370,265,371,266,375,267,392,268,343,269,353,270,315,271,314,272,313,273,357,274,311,275}, new int[] {-111,700,-112,200,-113,201}),
      new State(700, new int[] {59,701}),
      new State(701, -281),
      new State(702, -282),
      new State(703, -283),
      new State(704, -274),
      new State(705, new int[] {319,187,391,188,393,191}, new int[] {-28,706,-20,686,-114,184}),
      new State(706, new int[] {44,673,123,-194}),
      new State(707, new int[] {319,187,391,188,393,191}, new int[] {-20,708,-114,184}),
      new State(708, -190),
      new State(709, new int[] {315,711,314,712,361,-181}, new int[] {-14,710,-13,709}),
      new State(710, -182),
      new State(711, -183),
      new State(712, -184),
      new State(713, -96),
      new State(714, new int[] {319,715}),
      new State(715, -185, new int[] {-150,716}),
      new State(716, -405, new int[] {-17,717}),
      new State(717, -406, new int[] {-18,718}),
      new State(718, new int[] {123,719}),
      new State(719, -262, new int[] {-96,720}),
      new State(720, new int[] {125,721,311,569,357,570,313,571,353,572,315,573,314,574,356,576,293,504,350,670,344,-290,346,-290}, new int[] {-83,364,-86,365,-9,366,-11,567,-12,575,-10,577,-90,668,-88,515}),
      new State(721, -407, new int[] {-19,722}),
      new State(722, -186),
      new State(723, -97),
      new State(724, new int[] {319,725}),
      new State(725, -187, new int[] {-151,726}),
      new State(726, new int[] {364,734,123,-191}, new int[] {-31,727}),
      new State(727, -405, new int[] {-17,728}),
      new State(728, -406, new int[] {-18,729}),
      new State(729, new int[] {123,730}),
      new State(730, -262, new int[] {-96,731}),
      new State(731, new int[] {125,732,311,569,357,570,313,571,353,572,315,573,314,574,356,576,293,504,350,670,344,-290,346,-290}, new int[] {-83,364,-86,365,-9,366,-11,567,-12,575,-10,577,-90,668,-88,515}),
      new State(732, -407, new int[] {-19,733}),
      new State(733, -188),
      new State(734, new int[] {319,187,391,188,393,191}, new int[] {-28,735,-20,686,-114,184}),
      new State(735, new int[] {44,673,123,-192}),
      new State(736, new int[] {40,737}),
      new State(737, new int[] {320,97,36,98,353,296,319,187,391,188,393,191,40,297,368,283,91,325,323,305}, new int[] {-101,738,-57,745,-43,744,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,324,-50,335,-52,310,-79,311}),
      new State(738, new int[] {44,742,41,-118}, new int[] {-3,739}),
      new State(739, new int[] {41,740}),
      new State(740, new int[] {59,741}),
      new State(741, -155),
      new State(742, new int[] {320,97,36,98,353,296,319,187,391,188,393,191,40,297,368,283,91,325,323,305,41,-119}, new int[] {-57,743,-43,744,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,324,-50,335,-52,310,-79,311}),
      new State(743, -172),
      new State(744, new int[] {44,-173,41,-173,91,-460,369,-460,123,-460,390,-460}),
      new State(745, -171),
      new State(746, new int[] {40,747}),
      new State(747, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,748,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(748, new int[] {338,749,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(749, new int[] {320,97,36,98,353,296,319,187,391,188,393,191,40,297,368,283,91,817,323,305,38,824,367,826}, new int[] {-138,750,-43,816,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,324,-50,335,-52,310,-79,311}),
      new State(750, new int[] {41,751,268,810}),
      new State(751, -406, new int[] {-18,752}),
      new State(752, new int[] {123,7,330,23,329,31,328,153,335,165,339,179,340,603,348,606,355,609,353,616,324,625,321,632,320,97,36,98,319,635,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504,360,736,334,746,332,756,59,762,349,763,345,779,58,806,322,-406}, new int[] {-72,753,-34,755,-18,12,-42,633,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(753, -407, new int[] {-19,754}),
      new State(754, -156),
      new State(755, -201),
      new State(756, new int[] {40,757}),
      new State(757, new int[] {319,801}, new int[] {-93,758,-56,805}),
      new State(758, new int[] {41,759,44,799}),
      new State(759, new int[] {123,7,330,23,329,31,328,153,335,165,339,179,340,603,348,606,355,609,353,616,324,625,321,632,320,97,36,98,319,635,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504,360,736,334,746,332,756,59,762,349,763,345,779,58,795,322,-406}, new int[] {-65,760,-34,761,-18,12,-42,633,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(760, -158),
      new State(761, -203),
      new State(762, -159),
      new State(763, new int[] {123,764}),
      new State(764, -135, new int[] {-95,765}),
      new State(765, new int[] {125,766,123,7,330,23,329,31,328,153,335,165,339,179,340,603,348,606,355,609,353,616,324,625,321,632,320,97,36,98,319,635,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504,360,736,334,746,332,756,59,762,349,763,345,779,315,711,314,712,362,714,366,724,363,783,322,-406,361,-181}, new int[] {-82,10,-34,11,-18,12,-42,633,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,637,-6,487,-90,652,-88,515,-85,782,-35,654,-36,655,-14,656,-13,709,-37,713,-39,723}),
      new State(766, -406, new int[] {-18,767}),
      new State(767, -163, new int[] {-109,768}),
      new State(768, new int[] {347,771,351,791,123,-169,330,-169,329,-169,328,-169,335,-169,339,-169,340,-169,348,-169,355,-169,353,-169,324,-169,321,-169,320,-169,36,-169,319,-169,391,-169,393,-169,40,-169,368,-169,91,-169,323,-169,367,-169,307,-169,303,-169,302,-169,43,-169,45,-169,33,-169,126,-169,306,-169,358,-169,359,-169,262,-169,261,-169,260,-169,259,-169,258,-169,301,-169,300,-169,299,-169,298,-169,297,-169,296,-169,304,-169,326,-169,64,-169,317,-169,312,-169,370,-169,371,-169,375,-169,374,-169,378,-169,376,-169,392,-169,373,-169,34,-169,383,-169,96,-169,266,-169,267,-169,269,-169,352,-169,346,-169,343,-169,293,-169,360,-169,334,-169,332,-169,59,-169,349,-169,345,-169,315,-169,314,-169,362,-169,366,-169,363,-169,350,-169,344,-169,322,-169,361,-169,0,-169,125,-169,308,-169,309,-169,341,-169,342,-169,336,-169,337,-169,331,-169,333,-169,327,-169,310,-169}, new int[] {-77,769}),
      new State(769, -407, new int[] {-19,770}),
      new State(770, -160),
      new State(771, new int[] {40,772}),
      new State(772, new int[] {319,187,391,188,393,191}, new int[] {-29,773,-20,790,-114,184}),
      new State(773, new int[] {124,787,320,789,41,-165}, new int[] {-110,774}),
      new State(774, new int[] {41,775}),
      new State(775, new int[] {123,776}),
      new State(776, -135, new int[] {-95,777}),
      new State(777, new int[] {125,778,123,7,330,23,329,31,328,153,335,165,339,179,340,603,348,606,355,609,353,616,324,625,321,632,320,97,36,98,319,635,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504,360,736,334,746,332,756,59,762,349,763,345,779,315,711,314,712,362,714,366,724,363,783,322,-406,361,-181}, new int[] {-82,10,-34,11,-18,12,-42,633,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,637,-6,487,-90,652,-88,515,-85,782,-35,654,-36,655,-14,656,-13,709,-37,713,-39,723}),
      new State(778, -164),
      new State(779, new int[] {319,780}),
      new State(780, new int[] {59,781}),
      new State(781, -161),
      new State(782, -137),
      new State(783, new int[] {40,784}),
      new State(784, new int[] {41,785}),
      new State(785, new int[] {59,786}),
      new State(786, -139),
      new State(787, new int[] {319,187,391,188,393,191}, new int[] {-20,788,-114,184}),
      new State(788, -168),
      new State(789, -166),
      new State(790, -167),
      new State(791, new int[] {123,792}),
      new State(792, -135, new int[] {-95,793}),
      new State(793, new int[] {125,794,123,7,330,23,329,31,328,153,335,165,339,179,340,603,348,606,355,609,353,616,324,625,321,632,320,97,36,98,319,635,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504,360,736,334,746,332,756,59,762,349,763,345,779,315,711,314,712,362,714,366,724,363,783,322,-406,361,-181}, new int[] {-82,10,-34,11,-18,12,-42,633,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,637,-6,487,-90,652,-88,515,-85,782,-35,654,-36,655,-14,656,-13,709,-37,713,-39,723}),
      new State(794, -170),
      new State(795, -135, new int[] {-95,796}),
      new State(796, new int[] {337,797,123,7,330,23,329,31,328,153,335,165,339,179,340,603,348,606,355,609,353,616,324,625,321,632,320,97,36,98,319,635,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504,360,736,334,746,332,756,59,762,349,763,345,779,315,711,314,712,362,714,366,724,363,783,322,-406,361,-181}, new int[] {-82,10,-34,11,-18,12,-42,633,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,637,-6,487,-90,652,-88,515,-85,782,-35,654,-36,655,-14,656,-13,709,-37,713,-39,723}),
      new State(797, new int[] {59,798}),
      new State(798, -204),
      new State(799, new int[] {319,801}, new int[] {-56,800}),
      new State(800, -132),
      new State(801, new int[] {61,802}),
      new State(802, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,803,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(803, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,41,-405,44,-405,59,-405}, new int[] {-17,804}),
      new State(804, -307),
      new State(805, -133),
      new State(806, -135, new int[] {-95,807}),
      new State(807, new int[] {331,808,123,7,330,23,329,31,328,153,335,165,339,179,340,603,348,606,355,609,353,616,324,625,321,632,320,97,36,98,319,635,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504,360,736,334,746,332,756,59,762,349,763,345,779,315,711,314,712,362,714,366,724,363,783,322,-406,361,-181}, new int[] {-82,10,-34,11,-18,12,-42,633,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,637,-6,487,-90,652,-88,515,-85,782,-35,654,-36,655,-14,656,-13,709,-37,713,-39,723}),
      new State(808, new int[] {59,809}),
      new State(809, -202),
      new State(810, new int[] {320,97,36,98,353,296,319,187,391,188,393,191,40,297,368,283,91,817,323,305,38,824,367,826}, new int[] {-138,811,-43,816,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,324,-50,335,-52,310,-79,311}),
      new State(811, new int[] {41,812}),
      new State(812, -406, new int[] {-18,813}),
      new State(813, new int[] {123,7,330,23,329,31,328,153,335,165,339,179,340,603,348,606,355,609,353,616,324,625,321,632,320,97,36,98,319,635,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504,360,736,334,746,332,756,59,762,349,763,345,779,58,806,322,-406}, new int[] {-72,814,-34,755,-18,12,-42,633,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(814, -407, new int[] {-19,815}),
      new State(815, -157),
      new State(816, new int[] {41,-195,268,-195,91,-460,369,-460,123,-460,390,-460}),
      new State(817, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,329,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504,38,820,394,822,44,-493,93,-493}, new int[] {-135,818,-134,287,-132,328,-133,290,-42,291,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(818, new int[] {93,819}),
      new State(819, new int[] {91,-434,369,-434,123,-434,390,-434,40,-434,41,-198,268,-198}),
      new State(820, new int[] {320,97,36,98,353,296,319,187,391,188,393,191,40,297,368,283,91,325,323,305}, new int[] {-43,821,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,324,-50,335,-52,310,-79,311}),
      new State(821, new int[] {44,-500,41,-500,93,-500,91,-460,369,-460,123,-460,390,-460}),
      new State(822, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,823,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(823, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,44,-501,41,-501,93,-501}),
      new State(824, new int[] {320,97,36,98,353,296,319,187,391,188,393,191,40,297,368,283,91,325,323,305}, new int[] {-43,825,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,324,-50,335,-52,310,-79,311}),
      new State(825, new int[] {41,-196,268,-196,91,-460,369,-460,123,-460,390,-460}),
      new State(826, new int[] {40,827}),
      new State(827, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,329,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504,38,820,394,822,44,-493,41,-493}, new int[] {-135,828,-134,287,-132,328,-133,290,-42,291,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(828, new int[] {41,829}),
      new State(829, -197),
      new State(830, new int[] {40,831}),
      new State(831, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,329,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504,38,820,394,822,44,-493,41,-493}, new int[] {-135,832,-134,287,-132,328,-133,290,-42,291,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(832, new int[] {41,833}),
      new State(833, new int[] {61,318,44,-502,41,-502,93,-502}),
      new State(834, -212),
      new State(835, -213),
      new State(836, new int[] {58,834,59,835}, new int[] {-152,837}),
      new State(837, -135, new int[] {-95,838}),
      new State(838, new int[] {123,7,330,23,329,31,328,153,335,165,339,179,340,603,348,606,355,609,353,616,324,625,321,632,320,97,36,98,319,635,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504,360,736,334,746,332,756,59,762,349,763,345,779,315,711,314,712,362,714,366,724,363,783,125,-211,341,-211,342,-211,336,-211,322,-406,361,-181}, new int[] {-82,10,-34,11,-18,12,-42,633,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,637,-6,487,-90,652,-88,515,-85,782,-35,654,-36,655,-14,656,-13,709,-37,713,-39,723}),
      new State(839, -209, new int[] {-106,840}),
      new State(840, new int[] {125,841,341,175,342,836}),
      new State(841, -206),
      new State(842, new int[] {59,846,336,-209,341,-209,342,-209}, new int[] {-106,843}),
      new State(843, new int[] {336,844,341,175,342,836}),
      new State(844, new int[] {59,845}),
      new State(845, -207),
      new State(846, -209, new int[] {-106,847}),
      new State(847, new int[] {336,848,341,175,342,836}),
      new State(848, new int[] {59,849}),
      new State(849, -208),
      new State(850, -135, new int[] {-95,851}),
      new State(851, new int[] {333,852,123,7,330,23,329,31,328,153,335,165,339,179,340,603,348,606,355,609,353,616,324,625,321,632,320,97,36,98,319,635,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504,360,736,334,746,332,756,59,762,349,763,345,779,315,711,314,712,362,714,366,724,363,783,322,-406,361,-181}, new int[] {-82,10,-34,11,-18,12,-42,633,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,637,-6,487,-90,652,-88,515,-85,782,-35,654,-36,655,-14,656,-13,709,-37,713,-39,723}),
      new State(852, new int[] {59,853}),
      new State(853, -200),
      new State(854, new int[] {44,855,59,-312,41,-312}),
      new State(855, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,856,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(856, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,44,-313,59,-313,41,-313}),
      new State(857, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,44,-314,59,-314,41,-314}),
      new State(858, new int[] {40,859}),
      new State(859, new int[] {320,864,38,865}, new int[] {-131,860,-127,867}),
      new State(860, new int[] {41,861,44,862}),
      new State(861, -413),
      new State(862, new int[] {320,864,38,865}, new int[] {-127,863}),
      new State(863, -414),
      new State(864, -416),
      new State(865, new int[] {320,866}),
      new State(866, -417),
      new State(867, -415),
      new State(868, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,869,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(869, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,44,-253,41,-253}),
      new State(870, -250),
      new State(871, new int[] {319,521,123,522,320,97,36,98}, new int[] {-1,872,-48,525}),
      new State(872, new int[] {40,128,61,-474,270,-474,271,-474,279,-474,281,-474,278,-474,277,-474,276,-474,275,-474,274,-474,273,-474,272,-474,280,-474,282,-474,303,-474,302,-474,59,-474,284,-474,285,-474,263,-474,265,-474,264,-474,124,-474,38,-474,94,-474,46,-474,43,-474,45,-474,42,-474,305,-474,47,-474,37,-474,293,-474,294,-474,287,-474,286,-474,289,-474,288,-474,60,-474,291,-474,62,-474,292,-474,290,-474,295,-474,63,-474,283,-474,91,-474,369,-474,123,-474,390,-474,41,-474,125,-474,58,-474,93,-474,44,-474,268,-474,338,-474}, new int[] {-124,873}),
      new State(873, -470),
      new State(874, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,875,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(875, new int[] {125,876,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(876, -469),
      new State(877, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,878,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(878, new int[] {284,40,285,42,263,-326,265,-326,264,-326,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-326,41,-326,125,-326,58,-326,93,-326,44,-326,268,-326,338,-326}),
      new State(879, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,880,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(880, new int[] {284,40,285,42,263,-327,265,-327,264,-327,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-327,41,-327,125,-327,58,-327,93,-327,44,-327,268,-327,338,-327}),
      new State(881, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,882,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(882, new int[] {284,40,285,42,263,-328,265,-328,264,-328,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-328,41,-328,125,-328,58,-328,93,-328,44,-328,268,-328,338,-328}),
      new State(883, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,884,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(884, new int[] {284,40,285,42,263,-329,265,-329,264,-329,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-329,41,-329,125,-329,58,-329,93,-329,44,-329,268,-329,338,-329}),
      new State(885, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,886,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(886, new int[] {284,40,285,42,263,-330,265,-330,264,-330,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-330,41,-330,125,-330,58,-330,93,-330,44,-330,268,-330,338,-330}),
      new State(887, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,888,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(888, new int[] {284,40,285,42,263,-331,265,-331,264,-331,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-331,41,-331,125,-331,58,-331,93,-331,44,-331,268,-331,338,-331}),
      new State(889, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,890,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(890, new int[] {284,40,285,42,263,-332,265,-332,264,-332,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-332,41,-332,125,-332,58,-332,93,-332,44,-332,268,-332,338,-332}),
      new State(891, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,892,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(892, new int[] {284,40,285,42,263,-333,265,-333,264,-333,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-333,41,-333,125,-333,58,-333,93,-333,44,-333,268,-333,338,-333}),
      new State(893, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,894,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(894, new int[] {284,40,285,42,263,-334,265,-334,264,-334,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-334,41,-334,125,-334,58,-334,93,-334,44,-334,268,-334,338,-334}),
      new State(895, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,896,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(896, new int[] {284,40,285,42,263,-335,265,-335,264,-335,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-335,41,-335,125,-335,58,-335,93,-335,44,-335,268,-335,338,-335}),
      new State(897, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,898,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(898, new int[] {284,40,285,42,263,-336,265,-336,264,-336,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-336,41,-336,125,-336,58,-336,93,-336,44,-336,268,-336,338,-336}),
      new State(899, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,900,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(900, new int[] {284,40,285,42,263,-337,265,-337,264,-337,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-337,41,-337,125,-337,58,-337,93,-337,44,-337,268,-337,338,-337}),
      new State(901, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,902,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(902, new int[] {284,40,285,42,263,-338,265,-338,264,-338,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-338,41,-338,125,-338,58,-338,93,-338,44,-338,268,-338,338,-338}),
      new State(903, -339),
      new State(904, -341),
      new State(905, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,906,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(906, new int[] {284,40,285,42,263,-377,265,-377,264,-377,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,-377,283,106,59,-377,41,-377,125,-377,58,-377,93,-377,44,-377,268,-377,338,-377}),
      new State(907, -477),
      new State(908, -135, new int[] {-95,909}),
      new State(909, new int[] {327,910,123,7,330,23,329,31,328,153,335,165,339,179,340,603,348,606,355,609,353,616,324,625,321,632,320,97,36,98,319,635,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504,360,736,334,746,332,756,59,762,349,763,345,779,315,711,314,712,362,714,366,724,363,783,322,-406,361,-181}, new int[] {-82,10,-34,11,-18,12,-42,633,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,637,-6,487,-90,652,-88,515,-85,782,-35,654,-36,655,-14,656,-13,709,-37,713,-39,723}),
      new State(910, new int[] {59,911}),
      new State(911, -215),
      new State(912, new int[] {123,7,330,23,329,31,328,153,335,165,339,179,340,603,348,606,355,609,353,616,324,625,321,632,320,97,36,98,319,635,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504,360,736,334,746,332,756,59,762,349,763,345,779,322,-406}, new int[] {-34,913,-18,12,-42,633,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(913, -219),
      new State(914, new int[] {40,915}),
      new State(915, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,916,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(916, new int[] {41,917,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(917, new int[] {58,919,123,7,330,23,329,31,328,153,335,165,339,179,340,603,348,606,355,609,353,616,324,625,321,632,320,97,36,98,319,635,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504,360,736,334,746,332,756,59,762,349,763,345,779,322,-406}, new int[] {-34,918,-18,12,-42,633,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(918, -216),
      new State(919, -135, new int[] {-95,920}),
      new State(920, new int[] {123,7,330,23,329,31,328,153,335,165,339,179,340,603,348,606,355,609,353,616,324,625,321,632,320,97,36,98,319,635,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504,360,736,334,746,332,756,59,762,349,763,345,779,315,711,314,712,362,714,366,724,363,783,310,-220,308,-220,309,-220,322,-406,361,-181}, new int[] {-82,10,-34,11,-18,12,-42,633,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,637,-6,487,-90,652,-88,515,-85,782,-35,654,-36,655,-14,656,-13,709,-37,713,-39,723}),
      new State(921, new int[] {310,922,308,924,309,930}),
      new State(922, new int[] {59,923}),
      new State(923, -222),
      new State(924, new int[] {40,925}),
      new State(925, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504}, new int[] {-42,926,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,138,-6,487,-90,500,-88,515}),
      new State(926, new int[] {41,927,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(927, new int[] {58,928}),
      new State(928, -135, new int[] {-95,929}),
      new State(929, new int[] {123,7,330,23,329,31,328,153,335,165,339,179,340,603,348,606,355,609,353,616,324,625,321,632,320,97,36,98,319,635,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504,360,736,334,746,332,756,59,762,349,763,345,779,315,711,314,712,362,714,366,724,363,783,310,-221,308,-221,309,-221,322,-406,361,-181}, new int[] {-82,10,-34,11,-18,12,-42,633,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,637,-6,487,-90,652,-88,515,-85,782,-35,654,-36,655,-14,656,-13,709,-37,713,-39,723}),
      new State(930, new int[] {58,931}),
      new State(931, -135, new int[] {-95,932}),
      new State(932, new int[] {310,933,123,7,330,23,329,31,328,153,335,165,339,179,340,603,348,606,355,609,353,616,324,625,321,632,320,97,36,98,319,635,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504,360,736,334,746,332,756,59,762,349,763,345,779,315,711,314,712,362,714,366,724,363,783,322,-406,361,-181}, new int[] {-82,10,-34,11,-18,12,-42,633,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,637,-6,487,-90,652,-88,515,-85,782,-35,654,-36,655,-14,656,-13,709,-37,713,-39,723}),
      new State(933, new int[] {59,934}),
      new State(934, -223),
      new State(935, new int[] {393,189,319,187,123,-405}, new int[] {-114,936,-17,1009}),
      new State(936, new int[] {59,937,393,185,123,-405}, new int[] {-17,938}),
      new State(937, -102),
      new State(938, -103, new int[] {-146,939}),
      new State(939, new int[] {123,940}),
      new State(940, -82, new int[] {-92,941}),
      new State(941, new int[] {125,942,123,7,330,23,329,31,328,153,335,165,339,179,340,603,348,606,355,609,353,616,324,625,321,632,320,97,36,98,319,635,391,935,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504,360,736,334,746,332,756,59,762,349,763,345,779,315,711,314,712,362,714,366,724,363,946,350,950,344,1006,322,-406,361,-181}, new int[] {-33,5,-34,6,-18,12,-42,633,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,637,-6,487,-90,943,-88,515,-85,945,-35,654,-36,655,-14,656,-13,709,-37,713,-39,723}),
      new State(942, -104),
      new State(943, new int[] {353,502,346,486,343,499,293,504,315,711,314,712,362,714,366,724,361,-181}, new int[] {-84,501,-88,352,-85,944,-5,637,-6,487,-35,654,-36,655,-14,656,-13,709,-37,713,-39,723}),
      new State(944, -100),
      new State(945, -99),
      new State(946, new int[] {40,947}),
      new State(947, new int[] {41,948}),
      new State(948, new int[] {59,949}),
      new State(949, -101),
      new State(950, new int[] {319,187,393,999,346,996,344,997}, new int[] {-142,951,-16,953,-140,983,-114,985,-118,982,-115,960}),
      new State(951, new int[] {59,952}),
      new State(952, -107),
      new State(953, new int[] {319,187,393,975}, new int[] {-141,954,-140,956,-114,966,-118,982,-115,960}),
      new State(954, new int[] {59,955}),
      new State(955, -108),
      new State(956, new int[] {59,957,44,958}),
      new State(957, -110),
      new State(958, new int[] {319,187,393,964}, new int[] {-118,959,-115,960,-114,961}),
      new State(959, -124),
      new State(960, -130),
      new State(961, new int[] {393,185,338,962,59,-128,44,-128,125,-128}),
      new State(962, new int[] {319,963}),
      new State(963, -129),
      new State(964, new int[] {319,187}, new int[] {-115,965,-114,961}),
      new State(965, -131),
      new State(966, new int[] {393,967,338,962,59,-128,44,-128}),
      new State(967, new int[] {123,968,319,186}),
      new State(968, new int[] {319,187}, new int[] {-119,969,-115,974,-114,961}),
      new State(969, new int[] {44,972,125,-118}, new int[] {-3,970}),
      new State(970, new int[] {125,971}),
      new State(971, -114),
      new State(972, new int[] {319,187,125,-119}, new int[] {-115,973,-114,961}),
      new State(973, -122),
      new State(974, -123),
      new State(975, new int[] {319,187}, new int[] {-114,976,-115,965}),
      new State(976, new int[] {393,977,338,962,59,-128,44,-128}),
      new State(977, new int[] {123,978,319,186}),
      new State(978, new int[] {319,187}, new int[] {-119,979,-115,974,-114,961}),
      new State(979, new int[] {44,972,125,-118}, new int[] {-3,980}),
      new State(980, new int[] {125,981}),
      new State(981, -115),
      new State(982, -125),
      new State(983, new int[] {59,984,44,958}),
      new State(984, -109),
      new State(985, new int[] {393,986,338,962,59,-128,44,-128}),
      new State(986, new int[] {123,987,319,186}),
      new State(987, new int[] {319,187,346,996,344,997}, new int[] {-121,988,-120,998,-115,993,-114,961,-16,994}),
      new State(988, new int[] {44,991,125,-118}, new int[] {-3,989}),
      new State(989, new int[] {125,990}),
      new State(990, -116),
      new State(991, new int[] {319,187,346,996,344,997,125,-119}, new int[] {-120,992,-115,993,-114,961,-16,994}),
      new State(992, -120),
      new State(993, -126),
      new State(994, new int[] {319,187}, new int[] {-115,995,-114,961}),
      new State(995, -127),
      new State(996, -112),
      new State(997, -113),
      new State(998, -121),
      new State(999, new int[] {319,187}, new int[] {-114,1000,-115,965}),
      new State(1000, new int[] {393,1001,338,962,59,-128,44,-128}),
      new State(1001, new int[] {123,1002,319,186}),
      new State(1002, new int[] {319,187,346,996,344,997}, new int[] {-121,1003,-120,998,-115,993,-114,961,-16,994}),
      new State(1003, new int[] {44,991,125,-118}, new int[] {-3,1004}),
      new State(1004, new int[] {125,1005}),
      new State(1005, -117),
      new State(1006, new int[] {319,801}, new int[] {-93,1007,-56,805}),
      new State(1007, new int[] {59,1008,44,799}),
      new State(1008, -111),
      new State(1009, -105, new int[] {-147,1010}),
      new State(1010, new int[] {123,1011}),
      new State(1011, -82, new int[] {-92,1012}),
      new State(1012, new int[] {125,1013,123,7,330,23,329,31,328,153,335,165,339,179,340,603,348,606,355,609,353,616,324,625,321,632,320,97,36,98,319,635,391,935,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,378,359,386,262,390,261,392,260,394,259,398,258,400,301,402,300,404,299,406,298,408,297,410,296,412,304,414,326,416,64,421,317,424,312,425,370,426,371,427,375,428,374,429,378,430,376,431,392,432,373,433,34,434,383,457,96,469,266,475,267,477,269,481,352,483,346,486,343,499,293,504,360,736,334,746,332,756,59,762,349,763,345,779,315,711,314,712,362,714,366,724,363,946,350,950,344,1006,322,-406,361,-181}, new int[] {-33,5,-34,6,-18,12,-42,633,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-114,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,377,-49,423,-74,468,-84,485,-5,637,-6,487,-90,943,-88,515,-85,945,-35,654,-36,655,-14,656,-13,709,-37,713,-39,723}),
      new State(1013, -106),
    };
    #endregion

    #region rules
    rules = new Rule[]
    {
    default(Rule),
    new Rule(-144, new int[]{-143,0}),
    new Rule(-145, new int[]{}),
    new Rule(-143, new int[]{-145,-92}),
    new Rule(-113, new int[]{262}),
    new Rule(-113, new int[]{261}),
    new Rule(-113, new int[]{260}),
    new Rule(-113, new int[]{259}),
    new Rule(-113, new int[]{258}),
    new Rule(-113, new int[]{263}),
    new Rule(-113, new int[]{264}),
    new Rule(-113, new int[]{265}),
    new Rule(-113, new int[]{295}),
    new Rule(-113, new int[]{306}),
    new Rule(-113, new int[]{307}),
    new Rule(-113, new int[]{326}),
    new Rule(-113, new int[]{322}),
    new Rule(-113, new int[]{308}),
    new Rule(-113, new int[]{309}),
    new Rule(-113, new int[]{310}),
    new Rule(-113, new int[]{324}),
    new Rule(-113, new int[]{329}),
    new Rule(-113, new int[]{330}),
    new Rule(-113, new int[]{327}),
    new Rule(-113, new int[]{328}),
    new Rule(-113, new int[]{333}),
    new Rule(-113, new int[]{334}),
    new Rule(-113, new int[]{331}),
    new Rule(-113, new int[]{332}),
    new Rule(-113, new int[]{337}),
    new Rule(-113, new int[]{338}),
    new Rule(-113, new int[]{349}),
    new Rule(-113, new int[]{347}),
    new Rule(-113, new int[]{351}),
    new Rule(-113, new int[]{352}),
    new Rule(-113, new int[]{350}),
    new Rule(-113, new int[]{354}),
    new Rule(-113, new int[]{355}),
    new Rule(-113, new int[]{356}),
    new Rule(-113, new int[]{360}),
    new Rule(-113, new int[]{358}),
    new Rule(-113, new int[]{359}),
    new Rule(-113, new int[]{340}),
    new Rule(-113, new int[]{345}),
    new Rule(-113, new int[]{346}),
    new Rule(-113, new int[]{344}),
    new Rule(-113, new int[]{348}),
    new Rule(-113, new int[]{266}),
    new Rule(-113, new int[]{267}),
    new Rule(-113, new int[]{367}),
    new Rule(-113, new int[]{335}),
    new Rule(-113, new int[]{336}),
    new Rule(-113, new int[]{341}),
    new Rule(-113, new int[]{342}),
    new Rule(-113, new int[]{339}),
    new Rule(-113, new int[]{368}),
    new Rule(-113, new int[]{372}),
    new Rule(-113, new int[]{364}),
    new Rule(-113, new int[]{365}),
    new Rule(-113, new int[]{391}),
    new Rule(-113, new int[]{362}),
    new Rule(-113, new int[]{366}),
    new Rule(-113, new int[]{361}),
    new Rule(-113, new int[]{373}),
    new Rule(-113, new int[]{374}),
    new Rule(-113, new int[]{376}),
    new Rule(-113, new int[]{378}),
    new Rule(-113, new int[]{370}),
    new Rule(-113, new int[]{371}),
    new Rule(-113, new int[]{375}),
    new Rule(-113, new int[]{392}),
    new Rule(-113, new int[]{343}),
    new Rule(-112, new int[]{-113}),
    new Rule(-112, new int[]{353}),
    new Rule(-112, new int[]{315}),
    new Rule(-112, new int[]{314}),
    new Rule(-112, new int[]{313}),
    new Rule(-112, new int[]{357}),
    new Rule(-112, new int[]{311}),
    new Rule(-111, new int[]{319}),
    new Rule(-111, new int[]{-112}),
    new Rule(-92, new int[]{-92,-33}),
    new Rule(-92, new int[]{}),
    new Rule(-114, new int[]{319}),
    new Rule(-114, new int[]{-114,393,319}),
    new Rule(-20, new int[]{-114}),
    new Rule(-20, new int[]{391,393,-114}),
    new Rule(-20, new int[]{393,-114}),
    new Rule(-91, new int[]{-124}),
    new Rule(-89, new int[]{-26}),
    new Rule(-89, new int[]{-26,-91}),
    new Rule(-88, new int[]{293,-89,294}),
    new Rule(-90, new int[]{-88}),
    new Rule(-90, new int[]{-90,-88}),
    new Rule(-85, new int[]{-35}),
    new Rule(-85, new int[]{-36}),
    new Rule(-85, new int[]{-37}),
    new Rule(-85, new int[]{-39}),
    new Rule(-33, new int[]{-34}),
    new Rule(-33, new int[]{-85}),
    new Rule(-33, new int[]{-90,-85}),
    new Rule(-33, new int[]{363,40,41,59}),
    new Rule(-33, new int[]{391,-114,59}),
    new Rule(-146, new int[]{}),
    new Rule(-33, new int[]{391,-114,-17,-146,123,-92,125}),
    new Rule(-147, new int[]{}),
    new Rule(-33, new int[]{391,-17,-147,123,-92,125}),
    new Rule(-33, new int[]{350,-142,59}),
    new Rule(-33, new int[]{350,-16,-141,59}),
    new Rule(-33, new int[]{350,-140,59}),
    new Rule(-33, new int[]{350,-16,-140,59}),
    new Rule(-33, new int[]{344,-93,59}),
    new Rule(-16, new int[]{346}),
    new Rule(-16, new int[]{344}),
    new Rule(-141, new int[]{-114,393,123,-119,-3,125}),
    new Rule(-141, new int[]{393,-114,393,123,-119,-3,125}),
    new Rule(-142, new int[]{-114,393,123,-121,-3,125}),
    new Rule(-142, new int[]{393,-114,393,123,-121,-3,125}),
    new Rule(-3, new int[]{}),
    new Rule(-3, new int[]{44}),
    new Rule(-121, new int[]{-121,44,-120}),
    new Rule(-121, new int[]{-120}),
    new Rule(-119, new int[]{-119,44,-115}),
    new Rule(-119, new int[]{-115}),
    new Rule(-140, new int[]{-140,44,-118}),
    new Rule(-140, new int[]{-118}),
    new Rule(-120, new int[]{-115}),
    new Rule(-120, new int[]{-16,-115}),
    new Rule(-115, new int[]{-114}),
    new Rule(-115, new int[]{-114,338,319}),
    new Rule(-118, new int[]{-115}),
    new Rule(-118, new int[]{393,-115}),
    new Rule(-93, new int[]{-93,44,-56}),
    new Rule(-93, new int[]{-56}),
    new Rule(-95, new int[]{-95,-82}),
    new Rule(-95, new int[]{}),
    new Rule(-82, new int[]{-34}),
    new Rule(-82, new int[]{-85}),
    new Rule(-82, new int[]{-90,-85}),
    new Rule(-82, new int[]{363,40,41,59}),
    new Rule(-34, new int[]{123,-95,125}),
    new Rule(-34, new int[]{-18,-54,-19}),
    new Rule(-34, new int[]{-18,-55,-19}),
    new Rule(-34, new int[]{330,40,-42,41,-18,-73,-19}),
    new Rule(-34, new int[]{329,-18,-34,330,40,-42,41,59,-19}),
    new Rule(-34, new int[]{328,40,-97,59,-97,59,-97,41,-18,-71,-19}),
    new Rule(-34, new int[]{335,40,-42,41,-18,-107,-19}),
    new Rule(-34, new int[]{339,-61,59}),
    new Rule(-34, new int[]{340,-61,59}),
    new Rule(-34, new int[]{348,-61,59}),
    new Rule(-34, new int[]{355,-98,59}),
    new Rule(-34, new int[]{353,-99,59}),
    new Rule(-34, new int[]{324,-100,59}),
    new Rule(-34, new int[]{321}),
    new Rule(-34, new int[]{-42,59}),
    new Rule(-34, new int[]{360,40,-101,-3,41,59}),
    new Rule(-34, new int[]{334,40,-42,338,-138,41,-18,-72,-19}),
    new Rule(-34, new int[]{334,40,-42,338,-138,268,-138,41,-18,-72,-19}),
    new Rule(-34, new int[]{332,40,-93,41,-65}),
    new Rule(-34, new int[]{59}),
    new Rule(-34, new int[]{349,123,-95,125,-18,-109,-77,-19}),
    new Rule(-34, new int[]{345,319,59}),
    new Rule(-34, new int[]{319,58}),
    new Rule(-109, new int[]{}),
    new Rule(-109, new int[]{-109,347,40,-29,-110,41,123,-95,125}),
    new Rule(-110, new int[]{}),
    new Rule(-110, new int[]{320}),
    new Rule(-29, new int[]{-20}),
    new Rule(-29, new int[]{-29,124,-20}),
    new Rule(-77, new int[]{}),
    new Rule(-77, new int[]{351,123,-95,125}),
    new Rule(-101, new int[]{-57}),
    new Rule(-101, new int[]{-101,44,-57}),
    new Rule(-57, new int[]{-43}),
    new Rule(-35, new int[]{-5,-4,319,-17,40,-128,41,-22,-148,-18,123,-95,125,-19,-148}),
    new Rule(-7, new int[]{}),
    new Rule(-7, new int[]{38}),
    new Rule(-8, new int[]{}),
    new Rule(-8, new int[]{394}),
    new Rule(-149, new int[]{}),
    new Rule(-36, new int[]{-14,361,319,-25,-149,-30,-17,-18,123,-96,125,-19}),
    new Rule(-14, new int[]{}),
    new Rule(-14, new int[]{-13,-14}),
    new Rule(-13, new int[]{315}),
    new Rule(-13, new int[]{314}),
    new Rule(-150, new int[]{}),
    new Rule(-37, new int[]{362,319,-150,-17,-18,123,-96,125,-19}),
    new Rule(-151, new int[]{}),
    new Rule(-39, new int[]{366,319,-151,-31,-17,-18,123,-96,125,-19}),
    new Rule(-25, new int[]{}),
    new Rule(-25, new int[]{364,-20}),
    new Rule(-31, new int[]{}),
    new Rule(-31, new int[]{364,-28}),
    new Rule(-30, new int[]{}),
    new Rule(-30, new int[]{365,-28}),
    new Rule(-138, new int[]{-43}),
    new Rule(-138, new int[]{38,-43}),
    new Rule(-138, new int[]{367,40,-135,41}),
    new Rule(-138, new int[]{91,-135,93}),
    new Rule(-71, new int[]{-34}),
    new Rule(-71, new int[]{58,-95,333,59}),
    new Rule(-72, new int[]{-34}),
    new Rule(-72, new int[]{58,-95,331,59}),
    new Rule(-65, new int[]{-34}),
    new Rule(-65, new int[]{58,-95,337,59}),
    new Rule(-107, new int[]{123,-106,125}),
    new Rule(-107, new int[]{123,59,-106,125}),
    new Rule(-107, new int[]{58,-106,336,59}),
    new Rule(-107, new int[]{58,59,-106,336,59}),
    new Rule(-106, new int[]{}),
    new Rule(-106, new int[]{-106,341,-42,-152,-95}),
    new Rule(-106, new int[]{-106,342,-152,-95}),
    new Rule(-152, new int[]{58}),
    new Rule(-152, new int[]{59}),
    new Rule(-73, new int[]{-34}),
    new Rule(-73, new int[]{58,-95,327,59}),
    new Rule(-136, new int[]{322,40,-42,41,-34}),
    new Rule(-136, new int[]{-136,308,40,-42,41,-34}),
    new Rule(-54, new int[]{-136}),
    new Rule(-54, new int[]{-136,309,-34}),
    new Rule(-137, new int[]{322,40,-42,41,58,-95}),
    new Rule(-137, new int[]{-137,308,40,-42,41,58,-95}),
    new Rule(-55, new int[]{-137,310,59}),
    new Rule(-55, new int[]{-137,309,58,-95,310,59}),
    new Rule(-128, new int[]{-129,-3}),
    new Rule(-128, new int[]{}),
    new Rule(-129, new int[]{-87}),
    new Rule(-129, new int[]{-129,44,-87}),
    new Rule(-87, new int[]{-90,-126}),
    new Rule(-87, new int[]{-126}),
    new Rule(-15, new int[]{}),
    new Rule(-15, new int[]{311}),
    new Rule(-15, new int[]{357}),
    new Rule(-15, new int[]{313}),
    new Rule(-126, new int[]{-15,-24,-7,-8,320}),
    new Rule(-126, new int[]{-15,-24,-7,-8,320,61,-42}),
    new Rule(-24, new int[]{}),
    new Rule(-24, new int[]{-23}),
    new Rule(-23, new int[]{-21}),
    new Rule(-23, new int[]{63,-21}),
    new Rule(-23, new int[]{-32}),
    new Rule(-21, new int[]{368}),
    new Rule(-21, new int[]{372}),
    new Rule(-21, new int[]{-20}),
    new Rule(-32, new int[]{-21,124,-21}),
    new Rule(-32, new int[]{-32,124,-21}),
    new Rule(-22, new int[]{}),
    new Rule(-22, new int[]{58,-23}),
    new Rule(-124, new int[]{40,41}),
    new Rule(-124, new int[]{40,-125,-3,41}),
    new Rule(-125, new int[]{-122}),
    new Rule(-125, new int[]{-125,44,-122}),
    new Rule(-122, new int[]{-42}),
    new Rule(-122, new int[]{394,-42}),
    new Rule(-98, new int[]{-98,44,-58}),
    new Rule(-98, new int[]{-58}),
    new Rule(-58, new int[]{-48}),
    new Rule(-99, new int[]{-99,44,-59}),
    new Rule(-99, new int[]{-59}),
    new Rule(-59, new int[]{320}),
    new Rule(-59, new int[]{320,61,-42}),
    new Rule(-96, new int[]{-96,-83}),
    new Rule(-96, new int[]{}),
    new Rule(-86, new int[]{-9,-24,-105,59}),
    new Rule(-86, new int[]{-10,344,-94,59}),
    new Rule(-86, new int[]{-10,-5,-4,-111,-17,40,-128,41,-22,-148,-75,-148}),
    new Rule(-83, new int[]{-86}),
    new Rule(-83, new int[]{-90,-86}),
    new Rule(-83, new int[]{350,-28,-80}),
    new Rule(-28, new int[]{-20}),
    new Rule(-28, new int[]{-28,44,-20}),
    new Rule(-80, new int[]{59}),
    new Rule(-80, new int[]{123,125}),
    new Rule(-80, new int[]{123,-102,125}),
    new Rule(-102, new int[]{-66}),
    new Rule(-102, new int[]{-102,-66}),
    new Rule(-66, new int[]{-67}),
    new Rule(-66, new int[]{-68}),
    new Rule(-67, new int[]{-117,354,-28,59}),
    new Rule(-68, new int[]{-116,338,319,59}),
    new Rule(-68, new int[]{-116,338,-113,59}),
    new Rule(-68, new int[]{-116,338,-12,-111,59}),
    new Rule(-68, new int[]{-116,338,-12,59}),
    new Rule(-116, new int[]{-111}),
    new Rule(-116, new int[]{-117}),
    new Rule(-117, new int[]{-20,390,-111}),
    new Rule(-75, new int[]{59}),
    new Rule(-75, new int[]{123,-95,125}),
    new Rule(-9, new int[]{-11}),
    new Rule(-9, new int[]{356}),
    new Rule(-10, new int[]{}),
    new Rule(-10, new int[]{-11}),
    new Rule(-11, new int[]{-12}),
    new Rule(-11, new int[]{-11,-12}),
    new Rule(-12, new int[]{311}),
    new Rule(-12, new int[]{357}),
    new Rule(-12, new int[]{313}),
    new Rule(-12, new int[]{353}),
    new Rule(-12, new int[]{315}),
    new Rule(-12, new int[]{314}),
    new Rule(-105, new int[]{-105,44,-62}),
    new Rule(-105, new int[]{-62}),
    new Rule(-62, new int[]{320,-17}),
    new Rule(-62, new int[]{320,61,-42,-17}),
    new Rule(-94, new int[]{-94,44,-69}),
    new Rule(-94, new int[]{-69}),
    new Rule(-69, new int[]{-111,61,-42,-17}),
    new Rule(-56, new int[]{319,61,-42,-17}),
    new Rule(-100, new int[]{-100,44,-60}),
    new Rule(-100, new int[]{-60}),
    new Rule(-60, new int[]{-42}),
    new Rule(-97, new int[]{}),
    new Rule(-97, new int[]{-108}),
    new Rule(-108, new int[]{-108,44,-42}),
    new Rule(-108, new int[]{-42}),
    new Rule(-153, new int[]{}),
    new Rule(-139, new int[]{361,-123,-25,-153,-30,-17,-18,123,-96,125,-19}),
    new Rule(-45, new int[]{306,-26,-123}),
    new Rule(-45, new int[]{306,-139}),
    new Rule(-45, new int[]{306,-90,-139}),
    new Rule(-44, new int[]{367,40,-135,41,61,-42}),
    new Rule(-44, new int[]{91,-135,93,61,-42}),
    new Rule(-44, new int[]{-43,61,-42}),
    new Rule(-44, new int[]{-43,61,38,-43}),
    new Rule(-44, new int[]{-43,61,38,-45}),
    new Rule(-44, new int[]{307,-42}),
    new Rule(-44, new int[]{-43,270,-42}),
    new Rule(-44, new int[]{-43,271,-42}),
    new Rule(-44, new int[]{-43,279,-42}),
    new Rule(-44, new int[]{-43,281,-42}),
    new Rule(-44, new int[]{-43,278,-42}),
    new Rule(-44, new int[]{-43,277,-42}),
    new Rule(-44, new int[]{-43,276,-42}),
    new Rule(-44, new int[]{-43,275,-42}),
    new Rule(-44, new int[]{-43,274,-42}),
    new Rule(-44, new int[]{-43,273,-42}),
    new Rule(-44, new int[]{-43,272,-42}),
    new Rule(-44, new int[]{-43,280,-42}),
    new Rule(-44, new int[]{-43,282,-42}),
    new Rule(-44, new int[]{-43,303}),
    new Rule(-44, new int[]{303,-43}),
    new Rule(-44, new int[]{-43,302}),
    new Rule(-44, new int[]{302,-43}),
    new Rule(-44, new int[]{-42,284,-42}),
    new Rule(-44, new int[]{-42,285,-42}),
    new Rule(-44, new int[]{-42,263,-42}),
    new Rule(-44, new int[]{-42,265,-42}),
    new Rule(-44, new int[]{-42,264,-42}),
    new Rule(-44, new int[]{-42,124,-42}),
    new Rule(-44, new int[]{-42,38,-42}),
    new Rule(-44, new int[]{-42,94,-42}),
    new Rule(-44, new int[]{-42,46,-42}),
    new Rule(-44, new int[]{-42,43,-42}),
    new Rule(-44, new int[]{-42,45,-42}),
    new Rule(-44, new int[]{-42,42,-42}),
    new Rule(-44, new int[]{-42,305,-42}),
    new Rule(-44, new int[]{-42,47,-42}),
    new Rule(-44, new int[]{-42,37,-42}),
    new Rule(-44, new int[]{-42,293,-42}),
    new Rule(-44, new int[]{-42,294,-42}),
    new Rule(-44, new int[]{43,-42}),
    new Rule(-44, new int[]{45,-42}),
    new Rule(-44, new int[]{33,-42}),
    new Rule(-44, new int[]{126,-42}),
    new Rule(-44, new int[]{-42,287,-42}),
    new Rule(-44, new int[]{-42,286,-42}),
    new Rule(-44, new int[]{-42,289,-42}),
    new Rule(-44, new int[]{-42,288,-42}),
    new Rule(-44, new int[]{-42,60,-42}),
    new Rule(-44, new int[]{-42,291,-42}),
    new Rule(-44, new int[]{-42,62,-42}),
    new Rule(-44, new int[]{-42,292,-42}),
    new Rule(-44, new int[]{-42,290,-42}),
    new Rule(-44, new int[]{-42,295,-26}),
    new Rule(-44, new int[]{40,-42,41}),
    new Rule(-44, new int[]{-45}),
    new Rule(-44, new int[]{-42,63,-42,58,-42}),
    new Rule(-44, new int[]{-42,63,58,-42}),
    new Rule(-44, new int[]{-42,283,-42}),
    new Rule(-44, new int[]{-46}),
    new Rule(-44, new int[]{301,-42}),
    new Rule(-44, new int[]{300,-42}),
    new Rule(-44, new int[]{299,-42}),
    new Rule(-44, new int[]{298,-42}),
    new Rule(-44, new int[]{297,-42}),
    new Rule(-44, new int[]{296,-42}),
    new Rule(-44, new int[]{304,-42}),
    new Rule(-44, new int[]{326,-76}),
    new Rule(-44, new int[]{64,-42}),
    new Rule(-44, new int[]{-49}),
    new Rule(-44, new int[]{-74}),
    new Rule(-44, new int[]{266,-42}),
    new Rule(-44, new int[]{267}),
    new Rule(-44, new int[]{267,-42}),
    new Rule(-44, new int[]{267,-42,268,-42}),
    new Rule(-44, new int[]{269,-42}),
    new Rule(-44, new int[]{352,-42}),
    new Rule(-44, new int[]{-84}),
    new Rule(-44, new int[]{-90,-84}),
    new Rule(-44, new int[]{353,-84}),
    new Rule(-44, new int[]{-90,353,-84}),
    new Rule(-84, new int[]{-5,-4,-17,40,-128,41,-130,-22,-148,-18,123,-95,125,-19,-148}),
    new Rule(-84, new int[]{-6,-4,40,-128,41,-22,-17,268,-148,-154,-42,-148}),
    new Rule(-6, new int[]{343}),
    new Rule(-5, new int[]{346}),
    new Rule(-17, new int[]{}),
    new Rule(-18, new int[]{}),
    new Rule(-19, new int[]{}),
    new Rule(-148, new int[]{}),
    new Rule(-154, new int[]{}),
    new Rule(-4, new int[]{}),
    new Rule(-4, new int[]{38}),
    new Rule(-130, new int[]{}),
    new Rule(-130, new int[]{350,40,-131,41}),
    new Rule(-131, new int[]{-131,44,-127}),
    new Rule(-131, new int[]{-127}),
    new Rule(-127, new int[]{320}),
    new Rule(-127, new int[]{38,320}),
    new Rule(-52, new int[]{-20,-124}),
    new Rule(-52, new int[]{-27,390,-2,-124}),
    new Rule(-52, new int[]{-81,390,-2,-124}),
    new Rule(-52, new int[]{-79,-124}),
    new Rule(-27, new int[]{353}),
    new Rule(-27, new int[]{-20}),
    new Rule(-26, new int[]{-27}),
    new Rule(-26, new int[]{-78}),
    new Rule(-76, new int[]{}),
    new Rule(-76, new int[]{40,-61,41}),
    new Rule(-74, new int[]{96,96}),
    new Rule(-74, new int[]{96,316,96}),
    new Rule(-74, new int[]{96,-103,96}),
    new Rule(-123, new int[]{}),
    new Rule(-123, new int[]{-124}),
    new Rule(-51, new int[]{368,40,-135,41}),
    new Rule(-51, new int[]{91,-135,93}),
    new Rule(-51, new int[]{323}),
    new Rule(-49, new int[]{317}),
    new Rule(-49, new int[]{312}),
    new Rule(-49, new int[]{370}),
    new Rule(-49, new int[]{371}),
    new Rule(-49, new int[]{375}),
    new Rule(-49, new int[]{374}),
    new Rule(-49, new int[]{378}),
    new Rule(-49, new int[]{376}),
    new Rule(-49, new int[]{392}),
    new Rule(-49, new int[]{373}),
    new Rule(-49, new int[]{34,-103,34}),
    new Rule(-49, new int[]{383,387}),
    new Rule(-49, new int[]{383,316,387}),
    new Rule(-49, new int[]{383,-103,387}),
    new Rule(-49, new int[]{-51}),
    new Rule(-49, new int[]{-50}),
    new Rule(-50, new int[]{-20}),
    new Rule(-50, new int[]{-27,390,-111}),
    new Rule(-50, new int[]{-81,390,-111}),
    new Rule(-42, new int[]{-43}),
    new Rule(-42, new int[]{-44}),
    new Rule(-61, new int[]{}),
    new Rule(-61, new int[]{-42}),
    new Rule(-81, new int[]{-70}),
    new Rule(-70, new int[]{-43}),
    new Rule(-70, new int[]{40,-42,41}),
    new Rule(-70, new int[]{-51}),
    new Rule(-79, new int[]{-47}),
    new Rule(-79, new int[]{40,-42,41}),
    new Rule(-79, new int[]{-51}),
    new Rule(-47, new int[]{-48}),
    new Rule(-47, new int[]{-70,91,-61,93}),
    new Rule(-47, new int[]{-50,91,-61,93}),
    new Rule(-47, new int[]{-70,123,-42,125}),
    new Rule(-47, new int[]{-70,369,-1,-124}),
    new Rule(-47, new int[]{-52}),
    new Rule(-43, new int[]{-47}),
    new Rule(-43, new int[]{-53}),
    new Rule(-43, new int[]{-70,369,-1}),
    new Rule(-48, new int[]{320}),
    new Rule(-48, new int[]{36,123,-42,125}),
    new Rule(-48, new int[]{36,-48}),
    new Rule(-53, new int[]{-27,390,-48}),
    new Rule(-53, new int[]{-81,390,-48}),
    new Rule(-78, new int[]{-48}),
    new Rule(-78, new int[]{-78,91,-61,93}),
    new Rule(-78, new int[]{-78,123,-42,125}),
    new Rule(-78, new int[]{-78,369,-1}),
    new Rule(-78, new int[]{-27,390,-48}),
    new Rule(-78, new int[]{-78,390,-48}),
    new Rule(-2, new int[]{-111}),
    new Rule(-2, new int[]{123,-42,125}),
    new Rule(-2, new int[]{-48}),
    new Rule(-1, new int[]{319}),
    new Rule(-1, new int[]{123,-42,125}),
    new Rule(-1, new int[]{-48}),
    new Rule(-135, new int[]{-134}),
    new Rule(-132, new int[]{}),
    new Rule(-132, new int[]{-133}),
    new Rule(-134, new int[]{-134,44,-132}),
    new Rule(-134, new int[]{-132}),
    new Rule(-133, new int[]{-42,268,-42}),
    new Rule(-133, new int[]{-42}),
    new Rule(-133, new int[]{-42,268,38,-43}),
    new Rule(-133, new int[]{38,-43}),
    new Rule(-133, new int[]{394,-42}),
    new Rule(-133, new int[]{-42,268,367,40,-135,41}),
    new Rule(-133, new int[]{367,40,-135,41}),
    new Rule(-103, new int[]{-103,-63}),
    new Rule(-103, new int[]{-103,316}),
    new Rule(-103, new int[]{-63}),
    new Rule(-103, new int[]{316,-63}),
    new Rule(-63, new int[]{320}),
    new Rule(-63, new int[]{320,91,-64,93}),
    new Rule(-63, new int[]{320,369,319}),
    new Rule(-63, new int[]{385,-42,125}),
    new Rule(-63, new int[]{385,318,125}),
    new Rule(-63, new int[]{385,318,91,-42,93,125}),
    new Rule(-63, new int[]{386,-43,125}),
    new Rule(-64, new int[]{319}),
    new Rule(-64, new int[]{325}),
    new Rule(-64, new int[]{320}),
    new Rule(-46, new int[]{358,40,-104,-3,41}),
    new Rule(-46, new int[]{359,40,-42,41}),
    new Rule(-46, new int[]{262,-42}),
    new Rule(-46, new int[]{261,-42}),
    new Rule(-46, new int[]{260,40,-42,41}),
    new Rule(-46, new int[]{259,-42}),
    new Rule(-46, new int[]{258,-42}),
    new Rule(-104, new int[]{-41}),
    new Rule(-104, new int[]{-104,44,-41}),
    new Rule(-41, new int[]{-42}),
    };
    #endregion

    nonTerminals = new string[] {"", "property_name", "member_name", "possible_comma", 
      "returns_ref", "function", "fn", "is_reference", "is_variadic", "variable_modifiers", 
      "method_modifiers", "non_empty_member_modifiers", "member_modifier", "class_modifier", 
      "class_modifiers", "optional_visibility_modifier", "use_type", "backup_doc_comment", 
      "enter_scope", "exit_scope", "name", "type", "return_type", "type_expr", 
      "optional_type", "extends_from", "class_name_reference", "class_name", 
      "name_list", "catch_name_list", "implements_list", "interface_extends_list", 
      "union_type", "top_statement", "statement", "function_declaration_statement", 
      "class_declaration_statement", "trait_declaration_statement", "interface_declaratioimplements_listn_statement", 
      "interface_declaration_statement", "inline_html", "isset_variable", "expr", 
      "variable", "expr_without_variable", "new_expr", "internal_functions_in_yacc", 
      "callable_variable", "simple_variable", "scalar", "constant", "dereferencable_scalar", 
      "function_call", "static_member", "if_stmt", "alt_if_stmt", "const_decl", 
      "unset_variable", "global_var", "static_var", "echo_expr", "optional_expr", 
      "property", "encaps_var", "encaps_var_offset", "declare_statement", "trait_adaptation", 
      "trait_precedence", "trait_alias", "class_const_decl", "dereferencable", 
      "for_statement", "foreach_statement", "while_statement", "backticks_expr", 
      "method_body", "exit_expr", "finally_statement", "new_variable", "callable_expr", 
      "trait_adaptations", "variable_class_name", "inner_statement", "class_statement", 
      "inline_function", "attributed_statement", "attributed_class_statement", 
      "attributed_parameter", "attribute", "attribute_decl", "attributes", "attribute_arguments", 
      "top_statement_list", "const_list", "class_const_list", "inner_statement_list", 
      "class_statement_list", "for_exprs", "global_var_list", "static_var_list", 
      "echo_expr_list", "unset_variables", "trait_adaptation_list", "encaps_list", 
      "isset_variables", "property_list", "case_list", "switch_case_list", "non_empty_for_exprs", 
      "catch_list", "optional_variable", "identifier", "semi_reserved", "reserved_non_modifiers", 
      "namespace_name", "unprefixed_use_declaration", "trait_method_reference", 
      "absolute_trait_method_reference", "use_declaration", "unprefixed_use_declarations", 
      "inline_use_declaration", "inline_use_declarations", "argument", "ctor_arguments", 
      "argument_list", "non_empty_argument_list", "parameter", "lexical_var", 
      "parameter_list", "non_empty_parameter_list", "lexical_vars", "lexical_var_list", 
      "possible_array_pair", "array_pair", "non_empty_array_pair_list", "array_pair_list", 
      "if_stmt_without_else", "alt_if_stmt_without_else", "foreach_variable", 
      "anonymous_class", "use_declarations", "group_use_declaration", "mixed_group_use_declaration", 
      "start", "$accept", "@1", "@2", "@3", "backup_fn_flags", "@4", "@5", "@6", 
      "case_separator", "@7", "backup_lex_pos", };
  }

  #endregion

  protected override void DoAction(int action)
  {
    switch (action)
    {
      case 2: // @1 -> 
{ SetNamingContext(null); }
        return;
      case 3: // start -> @1 top_statement_list 
{ 
		AssignNamingContext(); 
        _lexer.DocBlockList.Merge(new Span(0, int.MaxValue), value_stack.array[value_stack.top-1].yyval.NodeList, _astFactory);
		AssignStatements(value_stack.array[value_stack.top-1].yyval.NodeList);
		_astRoot = _astFactory.GlobalCode(yypos, value_stack.array[value_stack.top-1].yyval.NodeList, namingContext);
	}
        return;
      case 4: // reserved_non_modifiers -> T_INCLUDE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 5: // reserved_non_modifiers -> T_INCLUDE_ONCE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 6: // reserved_non_modifiers -> T_EVAL 
{ yyval.String = _lexer.TokenText; }
        return;
      case 7: // reserved_non_modifiers -> T_REQUIRE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 8: // reserved_non_modifiers -> T_REQUIRE_ONCE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 9: // reserved_non_modifiers -> T_LOGICAL_OR 
{ yyval.String = _lexer.TokenText; }
        return;
      case 10: // reserved_non_modifiers -> T_LOGICAL_XOR 
{ yyval.String = _lexer.TokenText; }
        return;
      case 11: // reserved_non_modifiers -> T_LOGICAL_AND 
{ yyval.String = _lexer.TokenText; }
        return;
      case 12: // reserved_non_modifiers -> T_INSTANCEOF 
{ yyval.String = _lexer.TokenText; }
        return;
      case 13: // reserved_non_modifiers -> T_NEW 
{ yyval.String = _lexer.TokenText; }
        return;
      case 14: // reserved_non_modifiers -> T_CLONE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 15: // reserved_non_modifiers -> T_EXIT 
{ yyval.String = _lexer.TokenText; }
        return;
      case 16: // reserved_non_modifiers -> T_IF 
{ yyval.String = _lexer.TokenText; }
        return;
      case 17: // reserved_non_modifiers -> T_ELSEIF 
{ yyval.String = _lexer.TokenText; }
        return;
      case 18: // reserved_non_modifiers -> T_ELSE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 19: // reserved_non_modifiers -> T_ENDIF 
{ yyval.String = _lexer.TokenText; }
        return;
      case 20: // reserved_non_modifiers -> T_ECHO 
{ yyval.String = _lexer.TokenText; }
        return;
      case 21: // reserved_non_modifiers -> T_DO 
{ yyval.String = _lexer.TokenText; }
        return;
      case 22: // reserved_non_modifiers -> T_WHILE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 23: // reserved_non_modifiers -> T_ENDWHILE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 24: // reserved_non_modifiers -> T_FOR 
{ yyval.String = _lexer.TokenText; }
        return;
      case 25: // reserved_non_modifiers -> T_ENDFOR 
{ yyval.String = _lexer.TokenText; }
        return;
      case 26: // reserved_non_modifiers -> T_FOREACH 
{ yyval.String = _lexer.TokenText; }
        return;
      case 27: // reserved_non_modifiers -> T_ENDFOREACH 
{ yyval.String = _lexer.TokenText; }
        return;
      case 28: // reserved_non_modifiers -> T_DECLARE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 29: // reserved_non_modifiers -> T_ENDDECLARE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 30: // reserved_non_modifiers -> T_AS 
{ yyval.String = _lexer.TokenText; }
        return;
      case 31: // reserved_non_modifiers -> T_TRY 
{ yyval.String = _lexer.TokenText; }
        return;
      case 32: // reserved_non_modifiers -> T_CATCH 
{ yyval.String = _lexer.TokenText; }
        return;
      case 33: // reserved_non_modifiers -> T_FINALLY 
{ yyval.String = _lexer.TokenText; }
        return;
      case 34: // reserved_non_modifiers -> T_THROW 
{ yyval.String = _lexer.TokenText; }
        return;
      case 35: // reserved_non_modifiers -> T_USE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 36: // reserved_non_modifiers -> T_INSTEADOF 
{ yyval.String = _lexer.TokenText; }
        return;
      case 37: // reserved_non_modifiers -> T_GLOBAL 
{ yyval.String = _lexer.TokenText; }
        return;
      case 38: // reserved_non_modifiers -> T_VAR 
{ yyval.String = _lexer.TokenText; }
        return;
      case 39: // reserved_non_modifiers -> T_UNSET 
{ yyval.String = _lexer.TokenText; }
        return;
      case 40: // reserved_non_modifiers -> T_ISSET 
{ yyval.String = _lexer.TokenText; }
        return;
      case 41: // reserved_non_modifiers -> T_EMPTY 
{ yyval.String = _lexer.TokenText; }
        return;
      case 42: // reserved_non_modifiers -> T_CONTINUE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 43: // reserved_non_modifiers -> T_GOTO 
{ yyval.String = _lexer.TokenText; }
        return;
      case 44: // reserved_non_modifiers -> T_FUNCTION 
{ yyval.String = _lexer.TokenText; }
        return;
      case 45: // reserved_non_modifiers -> T_CONST 
{ yyval.String = _lexer.TokenText; }
        return;
      case 46: // reserved_non_modifiers -> T_RETURN 
{ yyval.String = _lexer.TokenText; }
        return;
      case 47: // reserved_non_modifiers -> T_PRINT 
{ yyval.String = _lexer.TokenText; }
        return;
      case 48: // reserved_non_modifiers -> T_YIELD 
{ yyval.String = _lexer.TokenText; }
        return;
      case 49: // reserved_non_modifiers -> T_LIST 
{ yyval.String = _lexer.TokenText; }
        return;
      case 50: // reserved_non_modifiers -> T_SWITCH 
{ yyval.String = _lexer.TokenText; }
        return;
      case 51: // reserved_non_modifiers -> T_ENDSWITCH 
{ yyval.String = _lexer.TokenText; }
        return;
      case 52: // reserved_non_modifiers -> T_CASE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 53: // reserved_non_modifiers -> T_DEFAULT 
{ yyval.String = _lexer.TokenText; }
        return;
      case 54: // reserved_non_modifiers -> T_BREAK 
{ yyval.String = _lexer.TokenText; }
        return;
      case 55: // reserved_non_modifiers -> T_ARRAY 
{ yyval.String = _lexer.TokenText; }
        return;
      case 56: // reserved_non_modifiers -> T_CALLABLE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 57: // reserved_non_modifiers -> T_EXTENDS 
{ yyval.String = _lexer.TokenText; }
        return;
      case 58: // reserved_non_modifiers -> T_IMPLEMENTS 
{ yyval.String = _lexer.TokenText; }
        return;
      case 59: // reserved_non_modifiers -> T_NAMESPACE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 60: // reserved_non_modifiers -> T_TRAIT 
{ yyval.String = _lexer.TokenText; }
        return;
      case 61: // reserved_non_modifiers -> T_INTERFACE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 62: // reserved_non_modifiers -> T_CLASS 
{ yyval.String = _lexer.TokenText; }
        return;
      case 63: // reserved_non_modifiers -> T_CLASS_C 
{ yyval.String = _lexer.TokenText; }
        return;
      case 64: // reserved_non_modifiers -> T_TRAIT_C 
{ yyval.String = _lexer.TokenText; }
        return;
      case 65: // reserved_non_modifiers -> T_FUNC_C 
{ yyval.String = _lexer.TokenText; }
        return;
      case 66: // reserved_non_modifiers -> T_METHOD_C 
{ yyval.String = _lexer.TokenText; }
        return;
      case 67: // reserved_non_modifiers -> T_LINE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 68: // reserved_non_modifiers -> T_FILE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 69: // reserved_non_modifiers -> T_DIR 
{ yyval.String = _lexer.TokenText; }
        return;
      case 70: // reserved_non_modifiers -> T_NS_C 
{ yyval.String = _lexer.TokenText; }
        return;
      case 71: // reserved_non_modifiers -> T_FN 
{ yyval.String = _lexer.TokenText; }
        return;
      case 73: // semi_reserved -> T_STATIC 
{ yyval.String = _lexer.TokenText; }
        return;
      case 74: // semi_reserved -> T_ABSTRACT 
{ yyval.String = _lexer.TokenText; }
        return;
      case 75: // semi_reserved -> T_FINAL 
{ yyval.String = _lexer.TokenText; }
        return;
      case 76: // semi_reserved -> T_PRIVATE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 77: // semi_reserved -> T_PROTECTED 
{ yyval.String = _lexer.TokenText; }
        return;
      case 78: // semi_reserved -> T_PUBLIC 
{ yyval.String = _lexer.TokenText; }
        return;
      case 81: // top_statement_list -> top_statement_list top_statement 
{ yyval.NodeList = AddToTopStatementList<LangElement>(value_stack.array[value_stack.top-2].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 82: // top_statement_list -> 
{ yyval.NodeList = new List<LangElement>(); }
        return;
      case 83: // namespace_name -> T_STRING 
{ yyval.StringList = new List<string>() { value_stack.array[value_stack.top-1].yyval.String }; }
        return;
      case 84: // namespace_name -> namespace_name T_NS_SEPARATOR T_STRING 
{ yyval.StringList = AddToList<string>(value_stack.array[value_stack.top-3].yyval.StringList, value_stack.array[value_stack.top-1].yyval.String); }
        return;
      case 85: // name -> namespace_name 
{ yyval.QualifiedNameReference = new QualifiedNameRef(yypos, new QualifiedName(value_stack.array[value_stack.top-1].yyval.StringList, true, false)); }
        return;
      case 86: // name -> T_NAMESPACE T_NS_SEPARATOR namespace_name 
{ yyval.QualifiedNameReference = new QualifiedNameRef(yypos, MergeWithCurrentNamespace(namingContext.CurrentNamespace, value_stack.array[value_stack.top-1].yyval.StringList)); }
        return;
      case 87: // name -> T_NS_SEPARATOR namespace_name 
{ yyval.QualifiedNameReference = new QualifiedNameRef(yypos, new QualifiedName(value_stack.array[value_stack.top-1].yyval.StringList, true,  true)); }
        return;
      case 88: // attribute_arguments -> argument_list 
{ yyval.ParamList = value_stack.array[value_stack.top-1].yyval.ParamList; /* intentionally more benevolent rule */ }
        return;
      case 89: // attribute_decl -> class_name_reference 
{ yyval.Node = _astFactory.Attribute(yypos, value_stack.array[value_stack.top-1].yyval.TypeReference); }
        return;
      case 90: // attribute_decl -> class_name_reference attribute_arguments 
{ yyval.Node = _astFactory.Attribute(yypos, value_stack.array[value_stack.top-2].yyval.TypeReference, new CallSignature(value_stack.array[value_stack.top-1].yyval.ParamList, value_stack.array[value_stack.top-1].yypos)); }
        return;
      case 91: // attribute -> T_SL attribute_decl T_SR 
{ value_stack.array[value_stack.top-2].yyval.Node.Span = yypos; yyval.Node = value_stack.array[value_stack.top-2].yyval.Node; }
        return;
      case 92: // attributes -> attribute 
{ yyval.NodeList = new List<LangElement>(1) { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 93: // attributes -> attributes attribute 
{ yyval.NodeList = AddToList(value_stack.array[value_stack.top-2].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 94: // attributed_statement -> function_declaration_statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 95: // attributed_statement -> class_declaration_statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 96: // attributed_statement -> trait_declaration_statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 97: // attributed_statement -> interface_declaration_statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 98: // top_statement -> statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 99: // top_statement -> attributed_statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 100: // top_statement -> attributes attributed_statement 
{ yyval.Node = WithAttributes(value_stack.array[value_stack.top-1].yyval.Node, value_stack.array[value_stack.top-2].yyval.NodeList); }
        return;
      case 101: // top_statement -> T_HALT_COMPILER '(' ')' ';' 
{ yyval.Node = _astFactory.HaltCompiler(yypos); }
        return;
      case 102: // top_statement -> T_NAMESPACE namespace_name ';' 
{
			AssignNamingContext();
            SetNamingContext(value_stack.array[value_stack.top-2].yyval.StringList);
            SetDoc(yyval.Node = _currentNamespace = (NamespaceDecl)_astFactory.Namespace(yypos, namingContext.CurrentNamespace, value_stack.array[value_stack.top-2].yypos, namingContext));
		}
        return;
      case 103: // @2 -> 
{ SetNamingContext(value_stack.array[value_stack.top-2].yyval.StringList); }
        return;
      case 104: // top_statement -> T_NAMESPACE namespace_name backup_doc_comment @2 '{' top_statement_list '}' 
{ 
			yyval.Node = _astFactory.Namespace(yypos, namingContext.CurrentNamespace, value_stack.array[value_stack.top-6].yypos, CreateBlock(CombineSpans(value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-2].yyval.NodeList), namingContext);
			SetDoc(yyval.Node);
			ResetNamingContext(); 
		}
        return;
      case 105: // @3 -> 
{ SetNamingContext(null); }
        return;
      case 106: // top_statement -> T_NAMESPACE backup_doc_comment @3 '{' top_statement_list '}' 
{ 
			yyval.Node = _astFactory.Namespace(yypos, null, yypos, CreateBlock(CombineSpans(value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-2].yyval.NodeList), namingContext);
			SetDoc(yyval.Node);
			ResetNamingContext(); 
		}
        return;
      case 107: // top_statement -> T_USE mixed_group_use_declaration ';' 
{ yyval.Node = _astFactory.Use(yypos, value_stack.array[value_stack.top-2].yyval.UseList, AliasKind.Type); _contextType = AliasKind.Type;	/* TODO: Error - must contain only a single group use */	}
        return;
      case 108: // top_statement -> T_USE use_type group_use_declaration ';' 
{ yyval.Node = _astFactory.Use(yypos, value_stack.array[value_stack.top-2].yyval.UseList, value_stack.array[value_stack.top-3].yyval.Kind); _contextType = AliasKind.Type;				/* TODO: Error - must contain only a single group use */	}
        return;
      case 109: // top_statement -> T_USE use_declarations ';' 
{ yyval.Node = _astFactory.Use(yypos, value_stack.array[value_stack.top-2].yyval.UseList, AliasKind.Type); _contextType = AliasKind.Type;	/* TODO: Error - must contain only simple uses		  */	}
        return;
      case 110: // top_statement -> T_USE use_type use_declarations ';' 
{ yyval.Node = _astFactory.Use(yypos, value_stack.array[value_stack.top-2].yyval.UseList, value_stack.array[value_stack.top-3].yyval.Kind); _contextType = AliasKind.Type;				/* TODO: Error - must contain only simple uses		  */	}
        return;
      case 111: // top_statement -> T_CONST const_list ';' 
{
			SetDoc(yyval.Node = _astFactory.DeclList(yypos, PhpMemberAttributes.None, value_stack.array[value_stack.top-2].yyval.NodeList, null));
		}
        return;
      case 112: // use_type -> T_FUNCTION 
{ yyval.Kind = _contextType = AliasKind.Function; }
        return;
      case 113: // use_type -> T_CONST 
{ yyval.Kind = _contextType = AliasKind.Constant; }
        return;
      case 114: // group_use_declaration -> namespace_name T_NS_SEPARATOR '{' unprefixed_use_declarations possible_comma '}' 
{ yyval.UseList = new List<UseBase>() { AddAliases(yypos, value_stack.array[value_stack.top-6].yyval.StringList, CombineSpans(value_stack.array[value_stack.top-6].yypos, value_stack.array[value_stack.top-5].yypos), AddTrailingComma(value_stack.array[value_stack.top-3].yyval.AliasList, value_stack.array[value_stack.top-2].yyval.Bool), false) }; }
        return;
      case 115: // group_use_declaration -> T_NS_SEPARATOR namespace_name T_NS_SEPARATOR '{' unprefixed_use_declarations possible_comma '}' 
{ yyval.UseList = new List<UseBase>() { AddAliases(yypos, value_stack.array[value_stack.top-6].yyval.StringList, CombineSpans(value_stack.array[value_stack.top-7].yypos, value_stack.array[value_stack.top-6].yypos, value_stack.array[value_stack.top-5].yypos), AddTrailingComma(value_stack.array[value_stack.top-3].yyval.AliasList, value_stack.array[value_stack.top-2].yyval.Bool), true) }; }
        return;
      case 116: // mixed_group_use_declaration -> namespace_name T_NS_SEPARATOR '{' inline_use_declarations possible_comma '}' 
{  yyval.UseList = new List<UseBase>() { AddAliases(yypos, value_stack.array[value_stack.top-6].yyval.StringList, CombineSpans(value_stack.array[value_stack.top-6].yypos, value_stack.array[value_stack.top-5].yypos), AddTrailingComma(value_stack.array[value_stack.top-3].yyval.ContextAliasList, value_stack.array[value_stack.top-2].yyval.Bool), false) }; }
        return;
      case 117: // mixed_group_use_declaration -> T_NS_SEPARATOR namespace_name T_NS_SEPARATOR '{' inline_use_declarations possible_comma '}' 
{ yyval.UseList = new List<UseBase>() { AddAliases(yypos, value_stack.array[value_stack.top-6].yyval.StringList, CombineSpans(value_stack.array[value_stack.top-7].yypos, value_stack.array[value_stack.top-6].yypos, value_stack.array[value_stack.top-5].yypos), AddTrailingComma(value_stack.array[value_stack.top-3].yyval.ContextAliasList, value_stack.array[value_stack.top-2].yyval.Bool), true) }; }
        return;
      case 118: // possible_comma -> 
{ yyval.Bool = false; }
        return;
      case 119: // possible_comma -> ',' 
{ yyval.Bool = true;  }
        return;
      case 120: // inline_use_declarations -> inline_use_declarations ',' inline_use_declaration 
{ yyval.ContextAliasList = AddToList<ContextAlias>(value_stack.array[value_stack.top-3].yyval.ContextAliasList, value_stack.array[value_stack.top-1].yyval.ContextAlias); }
        return;
      case 121: // inline_use_declarations -> inline_use_declaration 
{ yyval.ContextAliasList = new List<ContextAlias>() { value_stack.array[value_stack.top-1].yyval.ContextAlias }; }
        return;
      case 122: // unprefixed_use_declarations -> unprefixed_use_declarations ',' unprefixed_use_declaration 
{ yyval.AliasList = AddToList<CompleteAlias>(value_stack.array[value_stack.top-3].yyval.AliasList, value_stack.array[value_stack.top-1].yyval.Alias); }
        return;
      case 123: // unprefixed_use_declarations -> unprefixed_use_declaration 
{ yyval.AliasList = new List<CompleteAlias>() { value_stack.array[value_stack.top-1].yyval.Alias }; }
        return;
      case 124: // use_declarations -> use_declarations ',' use_declaration 
{ yyval.UseList = AddToList<UseBase>(value_stack.array[value_stack.top-3].yyval.UseList, AddAlias(value_stack.array[value_stack.top-1].yyval.Alias)); }
        return;
      case 125: // use_declarations -> use_declaration 
{ yyval.UseList = new List<UseBase>() { AddAlias(value_stack.array[value_stack.top-1].yyval.Alias) }; }
        return;
      case 126: // inline_use_declaration -> unprefixed_use_declaration 
{ yyval.ContextAlias = JoinTuples(yypos, value_stack.array[value_stack.top-1].yyval.Alias, AliasKind.Type); }
        return;
      case 127: // inline_use_declaration -> use_type unprefixed_use_declaration 
{ yyval.ContextAlias = JoinTuples(yypos, value_stack.array[value_stack.top-1].yyval.Alias, (AliasKind)value_stack.array[value_stack.top-2].yyval.Kind);  }
        return;
      case 128: // unprefixed_use_declaration -> namespace_name 
{ yyval.Alias = new CompleteAlias(new QualifiedNameRef(yypos, new QualifiedName(value_stack.array[value_stack.top-1].yyval.StringList, true, false)), NameRef.Invalid); }
        return;
      case 129: // unprefixed_use_declaration -> namespace_name T_AS T_STRING 
{ yyval.Alias = new CompleteAlias(new QualifiedNameRef(value_stack.array[value_stack.top-3].yypos, new QualifiedName(value_stack.array[value_stack.top-3].yyval.StringList, true, false)), new NameRef(value_stack.array[value_stack.top-1].yypos, value_stack.array[value_stack.top-1].yyval.String)); }
        return;
      case 130: // use_declaration -> unprefixed_use_declaration 
{ yyval.Alias = value_stack.array[value_stack.top-1].yyval.Alias; }
        return;
      case 131: // use_declaration -> T_NS_SEPARATOR unprefixed_use_declaration 
{ 
				var src = value_stack.array[value_stack.top-1].yyval.Alias;
				yyval.Alias = new CompleteAlias(new QualifiedNameRef(CombineSpans(value_stack.array[value_stack.top-2].yypos, src.Item1.Span), 
					new QualifiedName(src.Item1.QualifiedName.Name, src.Item1.QualifiedName.Namespaces, true)), src.Item2); 
			}
        return;
      case 132: // const_list -> const_list ',' const_decl 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 133: // const_list -> const_decl 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 134: // inner_statement_list -> inner_statement_list inner_statement 
{ yyval.NodeList = AddToTopStatementList<LangElement>(value_stack.array[value_stack.top-2].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 135: // inner_statement_list -> 
{ yyval.NodeList = new List<LangElement>(); }
        return;
      case 136: // inner_statement -> statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 137: // inner_statement -> attributed_statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 138: // inner_statement -> attributes attributed_statement 
{ yyval.Node = WithAttributes(value_stack.array[value_stack.top-1].yyval.Node, value_stack.array[value_stack.top-2].yyval.NodeList); }
        return;
      case 139: // inner_statement -> T_HALT_COMPILER '(' ')' ';' 
{ 
				yyval.Node = _astFactory.HaltCompiler(yypos); 
				_errors.Error(yypos, FatalErrors.InvalidHaltCompiler); 
			}
        return;
      case 140: // statement -> '{' inner_statement_list '}' 
{ yyval.Node = CreateBlock(yypos, value_stack.array[value_stack.top-2].yyval.NodeList); }
        return;
      case 141: // statement -> enter_scope if_stmt exit_scope 
{ yyval.Node = value_stack.array[value_stack.top-2].yyval.Node; }
        return;
      case 142: // statement -> enter_scope alt_if_stmt exit_scope 
{ yyval.Node = value_stack.array[value_stack.top-2].yyval.Node; }
        return;
      case 143: // statement -> T_WHILE '(' expr ')' enter_scope while_statement exit_scope 
{ yyval.Node = _astFactory.While(yypos, value_stack.array[value_stack.top-5].yyval.Node, CombineSpans(value_stack.array[value_stack.top-6].yypos, value_stack.array[value_stack.top-4].yypos), value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 144: // statement -> T_DO enter_scope statement T_WHILE '(' expr ')' ';' exit_scope 
{ yyval.Node = _astFactory.Do(yypos, value_stack.array[value_stack.top-7].yyval.Node, value_stack.array[value_stack.top-4].yyval.Node, CombineSpans(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-3].yypos)); }
        return;
      case 145: // statement -> T_FOR '(' for_exprs ';' for_exprs ';' for_exprs ')' enter_scope for_statement exit_scope 
{ yyval.Node = _astFactory.For(yypos, value_stack.array[value_stack.top-9].yyval.NodeList, value_stack.array[value_stack.top-7].yyval.NodeList, value_stack.array[value_stack.top-5].yyval.NodeList, CombineSpans(value_stack.array[value_stack.top-10].yypos, value_stack.array[value_stack.top-4].yypos), value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 146: // statement -> T_SWITCH '(' expr ')' enter_scope switch_case_list exit_scope 
{ yyval.Node = _astFactory.Switch(yypos, value_stack.array[value_stack.top-5].yyval.Node, value_stack.array[value_stack.top-2].yyval.NodeList); }
        return;
      case 147: // statement -> T_BREAK optional_expr ';' 
{ yyval.Node = _astFactory.Jump(yypos, JumpStmt.Types.Break, value_stack.array[value_stack.top-2].yyval.Node);}
        return;
      case 148: // statement -> T_CONTINUE optional_expr ';' 
{ yyval.Node = _astFactory.Jump(yypos, JumpStmt.Types.Continue, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 149: // statement -> T_RETURN optional_expr ';' 
{ yyval.Node = _astFactory.Jump(yypos, JumpStmt.Types.Return, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 150: // statement -> T_GLOBAL global_var_list ';' 
{ yyval.Node = _astFactory.Global(yypos, value_stack.array[value_stack.top-2].yyval.NodeList); }
        return;
      case 151: // statement -> T_STATIC static_var_list ';' 
{ yyval.Node = _astFactory.Static(yypos, value_stack.array[value_stack.top-2].yyval.NodeList); }
        return;
      case 152: // statement -> T_ECHO echo_expr_list ';' 
{ yyval.Node = _astFactory.Echo(yypos, value_stack.array[value_stack.top-2].yyval.NodeList); }
        return;
      case 153: // statement -> T_INLINE_HTML 
{ yyval.Node = _astFactory.InlineHtml(yypos, value_stack.array[value_stack.top-1].yyval.String); }
        return;
      case 154: // statement -> expr ';' 
{ yyval.Node = _astFactory.ExpressionStmt(yypos, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 155: // statement -> T_UNSET '(' unset_variables possible_comma ')' ';' 
{ yyval.Node = _astFactory.Unset(yypos, AddTrailingComma(value_stack.array[value_stack.top-4].yyval.NodeList, value_stack.array[value_stack.top-3].yyval.Bool)); }
        return;
      case 156: // statement -> T_FOREACH '(' expr T_AS foreach_variable ')' enter_scope foreach_statement exit_scope 
{ yyval.Node = _astFactory.Foreach(yypos, value_stack.array[value_stack.top-7].yyval.Node, null, value_stack.array[value_stack.top-5].yyval.ForeachVar, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 157: // statement -> T_FOREACH '(' expr T_AS foreach_variable T_DOUBLE_ARROW foreach_variable ')' enter_scope foreach_statement exit_scope 
{ yyval.Node = _astFactory.Foreach(yypos, value_stack.array[value_stack.top-9].yyval.Node, value_stack.array[value_stack.top-7].yyval.ForeachVar, value_stack.array[value_stack.top-5].yyval.ForeachVar, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 158: // statement -> T_DECLARE '(' const_list ')' declare_statement 
{ yyval.Node = _astFactory.Declare(yypos, value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 159: // statement -> ';' 
{ yyval.Node = _astFactory.EmptyStmt(yypos); }
        return;
      case 160: // statement -> T_TRY '{' inner_statement_list '}' enter_scope catch_list finally_statement exit_scope 
{ yyval.Node = _astFactory.TryCatch(yypos, CreateBlock(CombineSpans(value_stack.array[value_stack.top-7].yypos, value_stack.array[value_stack.top-5].yypos), value_stack.array[value_stack.top-6].yyval.NodeList), value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 161: // statement -> T_GOTO T_STRING ';' 
{ yyval.Node = _astFactory.Goto(yypos, value_stack.array[value_stack.top-2].yyval.String, value_stack.array[value_stack.top-2].yypos); }
        return;
      case 162: // statement -> T_STRING ':' 
{ yyval.Node = _astFactory.Label(yypos, value_stack.array[value_stack.top-2].yyval.String, value_stack.array[value_stack.top-2].yypos); }
        return;
      case 163: // catch_list -> 
{ yyval.NodeList = new List<LangElement>(); }
        return;
      case 164: // catch_list -> catch_list T_CATCH '(' catch_name_list optional_variable ')' '{' inner_statement_list '}' 
{ 
				yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-9].yyval.NodeList, _astFactory.Catch(CombineSpans(value_stack.array[value_stack.top-8].yypos, value_stack.array[value_stack.top-1].yypos), _astFactory.TypeReference(value_stack.array[value_stack.top-6].yypos, value_stack.array[value_stack.top-6].yyval.TypeRefList), 
					(DirectVarUse)value_stack.array[value_stack.top-5].yyval.Node, CreateBlock(CombineSpans(value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-2].yyval.NodeList))); 
			}
        return;
      case 165: // optional_variable -> 
{ yyval.Node = null; }
        return;
      case 166: // optional_variable -> T_VARIABLE 
{ yyval.Node = _astFactory.Variable(value_stack.array[value_stack.top-1].yypos, value_stack.array[value_stack.top-1].yyval.String, NullLangElement, true); }
        return;
      case 167: // catch_name_list -> name 
{ yyval.TypeRefList = new List<TypeRef>() { CreateTypeRef(value_stack.array[value_stack.top-1].yyval.QualifiedNameReference) }; }
        return;
      case 168: // catch_name_list -> catch_name_list '|' name 
{ yyval.TypeRefList = AddToList<TypeRef>(value_stack.array[value_stack.top-3].yyval.TypeRefList, CreateTypeRef(value_stack.array[value_stack.top-1].yyval.QualifiedNameReference)); }
        return;
      case 169: // finally_statement -> 
{ yyval.Node = null; }
        return;
      case 170: // finally_statement -> T_FINALLY '{' inner_statement_list '}' 
{ yyval.Node =_astFactory.Finally(yypos, CreateBlock(CombineSpans(value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-2].yyval.NodeList)); }
        return;
      case 171: // unset_variables -> unset_variable 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 172: // unset_variables -> unset_variables ',' unset_variable 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 173: // unset_variable -> variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 174: // function_declaration_statement -> function returns_ref T_STRING backup_doc_comment '(' parameter_list ')' return_type backup_fn_flags enter_scope '{' inner_statement_list '}' exit_scope backup_fn_flags 
{ 
			yyval.Node = _astFactory.Function(yypos, isConditional, value_stack.array[value_stack.top-14].yyval.Long == (long)FormalParam.Flags.IsByRef, PhpMemberAttributes.None, value_stack.array[value_stack.top-8].yyval.TypeReference, 
			new Name(value_stack.array[value_stack.top-13].yyval.String), value_stack.array[value_stack.top-13].yypos, null, value_stack.array[value_stack.top-10].yyval.FormalParamList, CombineSpans(value_stack.array[value_stack.top-11].yypos, value_stack.array[value_stack.top-9].yypos), 
			CreateBlock(CombineSpans(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-3].yypos), value_stack.array[value_stack.top-4].yyval.NodeList)); 
			SetDoc(yyval.Node);
		}
        return;
      case 175: // is_reference -> 
{ yyval.Long = 0; }
        return;
      case 176: // is_reference -> '&' 
{ yyval.Long = (long)FormalParam.Flags.IsByRef; }
        return;
      case 177: // is_variadic -> 
{ yyval.Long = 0; }
        return;
      case 178: // is_variadic -> T_ELLIPSIS 
{ yyval.Long = (long)FormalParam.Flags.IsVariadic; }
        return;
      case 179: // @4 -> 
{PushClassContext(value_stack.array[value_stack.top-2].yyval.String, value_stack.array[value_stack.top-1].yyval.TypeReference, (PhpMemberAttributes)value_stack.array[value_stack.top-4].yyval.Long);}
        return;
      case 180: // class_declaration_statement -> class_modifiers T_CLASS T_STRING extends_from @4 implements_list backup_doc_comment enter_scope '{' class_statement_list '}' exit_scope 
{ 
			yyval.Node = _astFactory.Type(yypos, CombineSpans(value_stack.array[value_stack.top-12].yypos, value_stack.array[value_stack.top-11].yypos, value_stack.array[value_stack.top-10].yypos, value_stack.array[value_stack.top-9].yypos, value_stack.array[value_stack.top-7].yypos), isConditional, (PhpMemberAttributes)value_stack.array[value_stack.top-12].yyval.Long, new Name(value_stack.array[value_stack.top-10].yyval.String), value_stack.array[value_stack.top-10].yypos, null, 
				ConvertToNamedTypeRef(value_stack.array[value_stack.top-9].yyval.TypeReference), value_stack.array[value_stack.top-7].yyval.TypeRefList.Select(ConvertToNamedTypeRef), value_stack.array[value_stack.top-3].yyval.NodeList, CombineSpans(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos)); 
			SetDoc(yyval.Node);
			PopClassContext();
		}
        return;
      case 181: // class_modifiers -> 
{ yyval.Long = (long)PhpMemberAttributes.None; }
        return;
      case 182: // class_modifiers -> class_modifier class_modifiers 
{ yyval.Long = value_stack.array[value_stack.top-2].yyval.Long | value_stack.array[value_stack.top-1].yyval.Long; }
        return;
      case 183: // class_modifier -> T_ABSTRACT 
{ yyval.Long = (long)PhpMemberAttributes.Abstract; }
        return;
      case 184: // class_modifier -> T_FINAL 
{ yyval.Long = (long)PhpMemberAttributes.Final; }
        return;
      case 185: // @5 -> 
{PushClassContext(value_stack.array[value_stack.top-1].yyval.String, null, PhpMemberAttributes.Trait);}
        return;
      case 186: // trait_declaration_statement -> T_TRAIT T_STRING @5 backup_doc_comment enter_scope '{' class_statement_list '}' exit_scope 
{ 
			yyval.Node = _astFactory.Type(yypos, CombineSpans(value_stack.array[value_stack.top-9].yypos, value_stack.array[value_stack.top-8].yypos), isConditional, PhpMemberAttributes.Trait, 
				new Name(value_stack.array[value_stack.top-8].yyval.String), value_stack.array[value_stack.top-8].yypos, null, null, new List<INamedTypeRef>(), value_stack.array[value_stack.top-3].yyval.NodeList, CombineSpans(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos)); 
			SetDoc(yyval.Node);
			PopClassContext();
		}
        return;
      case 187: // @6 -> 
{PushClassContext(value_stack.array[value_stack.top-1].yyval.String, null, PhpMemberAttributes.Interface);}
        return;
      case 188: // interface_declaration_statement -> T_INTERFACE T_STRING @6 interface_extends_list backup_doc_comment enter_scope '{' class_statement_list '}' exit_scope 
{ 
			yyval.Node = _astFactory.Type(yypos, CombineSpans(value_stack.array[value_stack.top-10].yypos, value_stack.array[value_stack.top-9].yypos, value_stack.array[value_stack.top-7].yypos), isConditional, PhpMemberAttributes.Interface, 
				new Name(value_stack.array[value_stack.top-9].yyval.String), value_stack.array[value_stack.top-9].yypos, null, null, value_stack.array[value_stack.top-7].yyval.TypeRefList.Select(ConvertToNamedTypeRef), value_stack.array[value_stack.top-3].yyval.NodeList, CombineSpans(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos)); 
			SetDoc(yyval.Node);
			PopClassContext();
		}
        return;
      case 189: // extends_from -> 
{ yyval.TypeReference = null; }
        return;
      case 190: // extends_from -> T_EXTENDS name 
{ yyval.TypeReference = CreateTypeRef(value_stack.array[value_stack.top-1].yyval.QualifiedNameReference); }
        return;
      case 191: // interface_extends_list -> 
{ yyval.TypeRefList = TypeRef.EmptyList; }
        return;
      case 192: // interface_extends_list -> T_EXTENDS name_list 
{ yyval.TypeRefList = value_stack.array[value_stack.top-1].yyval.TypeRefList; }
        return;
      case 193: // implements_list -> 
{ yyval.TypeRefList = TypeRef.EmptyList; }
        return;
      case 194: // implements_list -> T_IMPLEMENTS name_list 
{ yyval.TypeRefList = value_stack.array[value_stack.top-1].yyval.TypeRefList; }
        return;
      case 195: // foreach_variable -> variable 
{ yyval.ForeachVar = _astFactory.ForeachVariable(yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 196: // foreach_variable -> '&' variable 
{ yyval.ForeachVar = _astFactory.ForeachVariable(yypos, value_stack.array[value_stack.top-1].yyval.Node, true); }
        return;
      case 197: // foreach_variable -> T_LIST '(' array_pair_list ')' 
{ yyval.ForeachVar = _astFactory.ForeachVariable(yypos, _astFactory.List(yypos, value_stack.array[value_stack.top-2].yyval.ItemList, true)); }
        return;
      case 198: // foreach_variable -> '[' array_pair_list ']' 
{ yyval.ForeachVar = _astFactory.ForeachVariable(yypos, _astFactory.List(yypos, value_stack.array[value_stack.top-2].yyval.ItemList, false)); }
        return;
      case 199: // for_statement -> statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 200: // for_statement -> ':' inner_statement_list T_ENDFOR ';' 
{ yyval.Node = StatementsToBlock(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-3].yyval.NodeList, Tokens.T_ENDFOR); }
        return;
      case 201: // foreach_statement -> statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 202: // foreach_statement -> ':' inner_statement_list T_ENDFOREACH ';' 
{ yyval.Node = StatementsToBlock(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-3].yyval.NodeList, Tokens.T_ENDFOREACH); }
        return;
      case 203: // declare_statement -> statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 204: // declare_statement -> ':' inner_statement_list T_ENDDECLARE ';' 
{ yyval.Node = StatementsToBlock(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-3].yyval.NodeList, Tokens.T_ENDDECLARE); }
        return;
      case 205: // switch_case_list -> '{' case_list '}' 
{ yyval.NodeList = value_stack.array[value_stack.top-2].yyval.NodeList; }
        return;
      case 206: // switch_case_list -> '{' ';' case_list '}' 
{ yyval.NodeList = value_stack.array[value_stack.top-2].yyval.NodeList; }
        return;
      case 207: // switch_case_list -> ':' case_list T_ENDSWITCH ';' 
{ yyval.NodeList = value_stack.array[value_stack.top-3].yyval.NodeList; }
        return;
      case 208: // switch_case_list -> ':' ';' case_list T_ENDSWITCH ';' 
{ yyval.NodeList = value_stack.array[value_stack.top-3].yyval.NodeList; }
        return;
      case 209: // case_list -> 
{ yyval.NodeList = new List<LangElement>(); }
        return;
      case 210: // case_list -> case_list T_CASE expr case_separator inner_statement_list 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-5].yyval.NodeList, _astFactory.Case(CombineSpans(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yypos), 
				value_stack.array[value_stack.top-3].yyval.Node, CreateCaseBlock(CombineSpans(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-1].yyval.NodeList))); }
        return;
      case 211: // case_list -> case_list T_DEFAULT case_separator inner_statement_list 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-4].yyval.NodeList, _astFactory.Case(CombineSpans(value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yypos), 
				null, CreateCaseBlock(CombineSpans(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-1].yyval.NodeList))); }
        return;
      case 214: // while_statement -> statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 215: // while_statement -> ':' inner_statement_list T_ENDWHILE ';' 
{ yyval.Node = StatementsToBlock(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-3].yyval.NodeList, Tokens.T_ENDWHILE); }
        return;
      case 216: // if_stmt_without_else -> T_IF '(' expr ')' statement 
{ yyval.IfItemList = new List<IfStatement>() { 
				new IfStatement(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node) }; 
			}
        return;
      case 217: // if_stmt_without_else -> if_stmt_without_else T_ELSEIF '(' expr ')' statement 
{ yyval.IfItemList = AddToList<IfStatement>(value_stack.array[value_stack.top-6].yyval.IfItemList, 
				new IfStatement(CombineSpans(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node)); 
			}
        return;
      case 218: // if_stmt -> if_stmt_without_else 
{ ((List<IfStatement>)value_stack.array[value_stack.top-1].yyval.IfItemList).Reverse(); yyval.Node = null; 
			foreach (var item in (List<IfStatement>)value_stack.array[value_stack.top-1].yyval.IfItemList) 
				yyval.Node = _astFactory.If(yyval.Node != null? CombineSpans(item.Span, (yyval.Node).Span): item.Span, item.Condition, item.Body, yyval.Node); }
        return;
      case 219: // if_stmt -> if_stmt_without_else T_ELSE statement 
{ ((List<IfStatement>)value_stack.array[value_stack.top-3].yyval.IfItemList).Reverse(); yyval.Node = _astFactory.If(CombineSpans(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yypos), null, value_stack.array[value_stack.top-1].yyval.Node, null); 
			foreach (var item in (List<IfStatement>)value_stack.array[value_stack.top-3].yyval.IfItemList) yyval.Node = _astFactory.If(CombineSpans(item.Span, (yyval.Node).Span), item.Condition, item.Body, yyval.Node); }
        return;
      case 220: // alt_if_stmt_without_else -> T_IF '(' expr ')' ':' inner_statement_list 
{ 
				yyval.IfItemList = new List<IfStatement>() { new IfStatement(yypos, value_stack.array[value_stack.top-4].yyval.Node, StatementsToBlock(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yyval.NodeList, Tokens.END)) }; 
			}
        return;
      case 221: // alt_if_stmt_without_else -> alt_if_stmt_without_else T_ELSEIF '(' expr ')' ':' inner_statement_list 
{ 
				RebuildLast(value_stack.array[value_stack.top-7].yyval.IfItemList, value_stack.array[value_stack.top-6].yypos, Tokens.T_ELSEIF);
				yyval.IfItemList = AddToList<IfStatement>(value_stack.array[value_stack.top-7].yyval.IfItemList, 
					new IfStatement(CombineSpans(value_stack.array[value_stack.top-6].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-4].yyval.Node, StatementsToBlock(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yyval.NodeList, Tokens.END))); 
			}
        return;
      case 222: // alt_if_stmt -> alt_if_stmt_without_else T_ENDIF ';' 
{ RebuildLast(value_stack.array[value_stack.top-3].yyval.IfItemList, value_stack.array[value_stack.top-2].yypos, Tokens.T_ENDIF);
			 ((List<IfStatement>)value_stack.array[value_stack.top-3].yyval.IfItemList).Reverse(); yyval.Node = null; 
			foreach (var item in (List<IfStatement>)value_stack.array[value_stack.top-3].yyval.IfItemList) 
				yyval.Node = _astFactory.If(yyval.Node != null? CombineSpans(item.Span, (yyval.Node).Span): item.Span, item.Condition, item.Body, yyval.Node); }
        return;
      case 223: // alt_if_stmt -> alt_if_stmt_without_else T_ELSE ':' inner_statement_list T_ENDIF ';' 
{ RebuildLast(value_stack.array[value_stack.top-6].yyval.IfItemList, value_stack.array[value_stack.top-5].yypos, Tokens.T_ELSE);
			((List<IfStatement>)value_stack.array[value_stack.top-6].yyval.IfItemList).Reverse(); yyval.Node = _astFactory.If(CombineSpans(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-1].yypos), null, StatementsToBlock(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-3].yyval.NodeList, Tokens.T_ENDIF), null); 
			foreach (var item in (List<IfStatement>)value_stack.array[value_stack.top-6].yyval.IfItemList) yyval.Node = _astFactory.If(CombineSpans(item.Span, (yyval.Node).Span), item.Condition, item.Body, yyval.Node); }
        return;
      case 224: // parameter_list -> non_empty_parameter_list possible_comma 
{ yyval.FormalParamList = AddTrailingComma(value_stack.array[value_stack.top-2].yyval.FormalParamList, value_stack.array[value_stack.top-1].yyval.Bool); }
        return;
      case 225: // parameter_list -> 
{ yyval.FormalParamList = new List<FormalParam>(); }
        return;
      case 226: // non_empty_parameter_list -> attributed_parameter 
{ yyval.FormalParamList = new List<FormalParam>() { (FormalParam)value_stack.array[value_stack.top-1].yyval.FormalParam }; }
        return;
      case 227: // non_empty_parameter_list -> non_empty_parameter_list ',' attributed_parameter 
{ yyval.FormalParamList = AddToList<FormalParam>(value_stack.array[value_stack.top-3].yyval.FormalParamList, value_stack.array[value_stack.top-1].yyval.FormalParam); }
        return;
      case 228: // attributed_parameter -> attributes parameter 
{ yyval.FormalParam = WithAttributes(value_stack.array[value_stack.top-1].yyval.FormalParam, value_stack.array[value_stack.top-2].yyval.NodeList); }
        return;
      case 229: // attributed_parameter -> parameter 
{ yyval.FormalParam = value_stack.array[value_stack.top-1].yyval.FormalParam; }
        return;
      case 230: // optional_visibility_modifier -> 
{ yyval.Long = 0; /* None */ }
        return;
      case 231: // optional_visibility_modifier -> T_PUBLIC 
{ yyval.Long = (long)(PhpMemberAttributes.Public | PhpMemberAttributes.Constructor); }
        return;
      case 232: // optional_visibility_modifier -> T_PROTECTED 
{ yyval.Long = (long)(PhpMemberAttributes.Protected | PhpMemberAttributes.Constructor); }
        return;
      case 233: // optional_visibility_modifier -> T_PRIVATE 
{ yyval.Long = (long)(PhpMemberAttributes.Private | PhpMemberAttributes.Constructor); }
        return;
      case 234: // parameter -> optional_visibility_modifier optional_type is_reference is_variadic T_VARIABLE 
{ yyval.FormalParam = _astFactory.Parameter(CombineSpans(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-1].yyval.String, value_stack.array[value_stack.top-1].yypos, value_stack.array[value_stack.top-4].yyval.TypeReference, (FormalParam.Flags)value_stack.array[value_stack.top-3].yyval.Long|(FormalParam.Flags)value_stack.array[value_stack.top-2].yyval.Long, null, (PhpMemberAttributes)value_stack.array[value_stack.top-5].yyval.Long); /* Important - @$ is invalid when optional_type is empty */ }
        return;
      case 235: // parameter -> optional_visibility_modifier optional_type is_reference is_variadic T_VARIABLE '=' expr 
{ yyval.FormalParam = _astFactory.Parameter(CombineSpans(value_stack.array[value_stack.top-7].yypos, value_stack.array[value_stack.top-6].yypos, value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-3].yyval.String, value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-6].yyval.TypeReference, (FormalParam.Flags)value_stack.array[value_stack.top-5].yyval.Long|(FormalParam.Flags)value_stack.array[value_stack.top-4].yyval.Long, (Expression)value_stack.array[value_stack.top-1].yyval.Node, (PhpMemberAttributes)value_stack.array[value_stack.top-7].yyval.Long); /* Important - @$ is invalid when optional_type is empty */ }
        return;
      case 236: // optional_type -> 
{ yyval.TypeReference = null; }
        return;
      case 237: // optional_type -> type_expr 
{ yyval.TypeReference = value_stack.array[value_stack.top-1].yyval.TypeReference; }
        return;
      case 238: // type_expr -> type 
{ yyval.TypeReference = value_stack.array[value_stack.top-1].yyval.TypeReference; }
        return;
      case 239: // type_expr -> '?' type 
{ yyval.TypeReference = _astFactory.NullableTypeReference(yypos, value_stack.array[value_stack.top-1].yyval.TypeReference); }
        return;
      case 240: // type_expr -> union_type 
{ yyval.TypeReference = _astFactory.TypeReference(yypos, value_stack.array[value_stack.top-1].yyval.TypeRefList); }
        return;
      case 241: // type -> T_ARRAY 
{ yyval.TypeReference = _astFactory.PrimitiveTypeReference(yypos, PrimitiveTypeRef.PrimitiveType.array); }
        return;
      case 242: // type -> T_CALLABLE 
{ yyval.TypeReference = _astFactory.PrimitiveTypeReference(yypos, PrimitiveTypeRef.PrimitiveType.callable); }
        return;
      case 243: // type -> name 
{ yyval.TypeReference = CreateTypeRef(value_stack.array[value_stack.top-1].yyval.QualifiedNameReference, true); }
        return;
      case 244: // union_type -> type '|' type 
{ yyval.TypeRefList = new List<TypeRef>(2){ value_stack.array[value_stack.top-3].yyval.TypeReference, value_stack.array[value_stack.top-1].yyval.TypeReference }; }
        return;
      case 245: // union_type -> union_type '|' type 
{ yyval.TypeRefList = AddToList<TypeRef>(value_stack.array[value_stack.top-3].yyval.TypeRefList, value_stack.array[value_stack.top-1].yyval.TypeReference); }
        return;
      case 246: // return_type -> 
{ yyval.TypeReference = null; }
        return;
      case 247: // return_type -> ':' type_expr 
{ yyval.TypeReference = value_stack.array[value_stack.top-1].yyval.TypeReference; }
        return;
      case 248: // argument_list -> '(' ')' 
{ yyval.ParamList = new List<ActualParam>(); }
        return;
      case 249: // argument_list -> '(' non_empty_argument_list possible_comma ')' 
{ yyval.ParamList = AddTrailingComma(value_stack.array[value_stack.top-3].yyval.ParamList, value_stack.array[value_stack.top-2].yyval.Bool); }
        return;
      case 250: // non_empty_argument_list -> argument 
{ yyval.ParamList = new List<ActualParam>() { value_stack.array[value_stack.top-1].yyval.Param }; }
        return;
      case 251: // non_empty_argument_list -> non_empty_argument_list ',' argument 
{ yyval.ParamList = AddToList<ActualParam>(value_stack.array[value_stack.top-3].yyval.ParamList, value_stack.array[value_stack.top-1].yyval.Param); }
        return;
      case 252: // argument -> expr 
{ yyval.Param = _astFactory.ActualParameter(yypos, value_stack.array[value_stack.top-1].yyval.Node, ActualParam.Flags.Default); }
        return;
      case 253: // argument -> T_ELLIPSIS expr 
{ yyval.Param = _astFactory.ActualParameter(yypos, value_stack.array[value_stack.top-1].yyval.Node, ActualParam.Flags.IsUnpack); }
        return;
      case 254: // global_var_list -> global_var_list ',' global_var 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 255: // global_var_list -> global_var 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 256: // global_var -> simple_variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 257: // static_var_list -> static_var_list ',' static_var 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 258: // static_var_list -> static_var 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 259: // static_var -> T_VARIABLE 
{ yyval.Node = _astFactory.StaticVarDecl(yypos, new VariableName(value_stack.array[value_stack.top-1].yyval.String), null); }
        return;
      case 260: // static_var -> T_VARIABLE '=' expr 
{ yyval.Node = _astFactory.StaticVarDecl(yypos, new VariableName(value_stack.array[value_stack.top-3].yyval.String), value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 261: // class_statement_list -> class_statement_list class_statement 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-2].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 262: // class_statement_list -> 
{ yyval.NodeList = new List<LangElement>(); }
        return;
      case 263: // attributed_class_statement -> variable_modifiers optional_type property_list ';' 
{ 
				yyval.Node = _astFactory.DeclList(yypos, (PhpMemberAttributes)value_stack.array[value_stack.top-4].yyval.Long, value_stack.array[value_stack.top-2].yyval.NodeList, value_stack.array[value_stack.top-3].yyval.TypeReference); 
				SetDoc(yyval.Node);
			}
        return;
      case 264: // attributed_class_statement -> method_modifiers T_CONST class_const_list ';' 
{ 
				yyval.Node = _astFactory.DeclList(yypos, (PhpMemberAttributes)value_stack.array[value_stack.top-4].yyval.Long, value_stack.array[value_stack.top-2].yyval.NodeList, null); 
				SetDoc(yyval.Node);
			}
        return;
      case 265: // attributed_class_statement -> method_modifiers function returns_ref identifier backup_doc_comment '(' parameter_list ')' return_type backup_fn_flags method_body backup_fn_flags 
{	
				yyval.Node = _astFactory.Method(yypos, value_stack.array[value_stack.top-10].yyval.Long == (long)FormalParam.Flags.IsByRef, (PhpMemberAttributes)value_stack.array[value_stack.top-12].yyval.Long, 
					value_stack.array[value_stack.top-4].yyval.TypeReference, value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-9].yyval.String, value_stack.array[value_stack.top-9].yypos, null, value_stack.array[value_stack.top-6].yyval.FormalParamList, CombineSpans(value_stack.array[value_stack.top-7].yypos, value_stack.array[value_stack.top-5].yypos), null, value_stack.array[value_stack.top-2].yyval.Node);
				SetDoc(yyval.Node);
			}
        return;
      case 266: // class_statement -> attributed_class_statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 267: // class_statement -> attributes attributed_class_statement 
{ yyval.Node = WithAttributes(value_stack.array[value_stack.top-1].yyval.Node, value_stack.array[value_stack.top-2].yyval.NodeList); }
        return;
      case 268: // class_statement -> T_USE name_list trait_adaptations 
{ yyval.Node = _astFactory.TraitUse(yypos, value_stack.array[value_stack.top-2].yyval.TypeRefList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 269: // name_list -> name 
{ yyval.TypeRefList = new List<TypeRef>() { CreateTypeRef(value_stack.array[value_stack.top-1].yyval.QualifiedNameReference) }; }
        return;
      case 270: // name_list -> name_list ',' name 
{ yyval.TypeRefList = AddToList<TypeRef>(value_stack.array[value_stack.top-3].yyval.TypeRefList, CreateTypeRef(value_stack.array[value_stack.top-1].yyval.QualifiedNameReference)); }
        return;
      case 271: // trait_adaptations -> ';' 
{ yyval.Node = null; }
        return;
      case 272: // trait_adaptations -> '{' '}' 
{ yyval.Node = _astFactory.TraitAdaptationBlock(yypos, new List<LangElement>()); }
        return;
      case 273: // trait_adaptations -> '{' trait_adaptation_list '}' 
{ yyval.Node = _astFactory.TraitAdaptationBlock(yypos, value_stack.array[value_stack.top-2].yyval.NodeList); }
        return;
      case 274: // trait_adaptation_list -> trait_adaptation 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node };
 }
        return;
      case 275: // trait_adaptation_list -> trait_adaptation_list trait_adaptation 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-2].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 276: // trait_adaptation -> trait_precedence 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 277: // trait_adaptation -> trait_alias 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 278: // trait_precedence -> absolute_trait_method_reference T_INSTEADOF name_list ';' 
{ yyval.Node = _astFactory.TraitAdaptationPrecedence(yypos, (Tuple<TypeRef,NameRef>)value_stack.array[value_stack.top-4].yyval.Object, value_stack.array[value_stack.top-2].yyval.TypeRefList); }
        return;
      case 279: // trait_alias -> trait_method_reference T_AS T_STRING ';' 
{ yyval.Node = _astFactory.TraitAdaptationAlias(yypos, (Tuple<TypeRef,NameRef>)value_stack.array[value_stack.top-4].yyval.Object, new NameRef(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.String), null); }
        return;
      case 280: // trait_alias -> trait_method_reference T_AS reserved_non_modifiers ';' 
{ yyval.Node = _astFactory.TraitAdaptationAlias(yypos, (Tuple<TypeRef,NameRef>)value_stack.array[value_stack.top-4].yyval.Object, new NameRef(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.String), null); }
        return;
      case 281: // trait_alias -> trait_method_reference T_AS member_modifier identifier ';' 
{ 
				yyval.Node = _astFactory.TraitAdaptationAlias(yypos, (Tuple<TypeRef,NameRef>)value_stack.array[value_stack.top-5].yyval.Object, new NameRef(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.String), (PhpMemberAttributes)value_stack.array[value_stack.top-3].yyval.Long); 
			}
        return;
      case 282: // trait_alias -> trait_method_reference T_AS member_modifier ';' 
{ 
				yyval.Node = _astFactory.TraitAdaptationAlias(yypos, (Tuple<TypeRef,NameRef>)value_stack.array[value_stack.top-4].yyval.Object, NameRef.Invalid, (PhpMemberAttributes)value_stack.array[value_stack.top-2].yyval.Long); 
			}
        return;
      case 283: // trait_method_reference -> identifier 
{ yyval.Object = new Tuple<TypeRef,NameRef>(null, new NameRef(value_stack.array[value_stack.top-1].yypos, value_stack.array[value_stack.top-1].yyval.String)); }
        return;
      case 284: // trait_method_reference -> absolute_trait_method_reference 
{ yyval.Object = value_stack.array[value_stack.top-1].yyval.Object; }
        return;
      case 285: // absolute_trait_method_reference -> name T_DOUBLE_COLON identifier 
{ yyval.Object = new Tuple<TypeRef,NameRef>(CreateTypeRef(value_stack.array[value_stack.top-3].yyval.QualifiedNameReference), new NameRef(value_stack.array[value_stack.top-1].yypos, value_stack.array[value_stack.top-1].yyval.String)); }
        return;
      case 286: // method_body -> ';' 
{ yyval.Node = null; }
        return;
      case 287: // method_body -> '{' inner_statement_list '}' 
{ yyval.Node = CreateBlock(CombineSpans(value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-2].yyval.NodeList); }
        return;
      case 288: // variable_modifiers -> non_empty_member_modifiers 
{ yyval.Long = value_stack.array[value_stack.top-1].yyval.Long; }
        return;
      case 289: // variable_modifiers -> T_VAR 
{ yyval.Long = (long)PhpMemberAttributes.None; }
        return;
      case 290: // method_modifiers -> 
{ yyval.Long = (long)PhpMemberAttributes.None; }
        return;
      case 291: // method_modifiers -> non_empty_member_modifiers 
{ yyval.Long = value_stack.array[value_stack.top-1].yyval.Long; }
        return;
      case 292: // non_empty_member_modifiers -> member_modifier 
{ yyval.Long = value_stack.array[value_stack.top-1].yyval.Long; }
        return;
      case 293: // non_empty_member_modifiers -> non_empty_member_modifiers member_modifier 
{ yyval.Long = value_stack.array[value_stack.top-2].yyval.Long | value_stack.array[value_stack.top-1].yyval.Long; }
        return;
      case 294: // member_modifier -> T_PUBLIC 
{ yyval.Long = (long)PhpMemberAttributes.Public; }
        return;
      case 295: // member_modifier -> T_PROTECTED 
{ yyval.Long = (long)PhpMemberAttributes.Protected; }
        return;
      case 296: // member_modifier -> T_PRIVATE 
{ yyval.Long = (long)PhpMemberAttributes.Private; }
        return;
      case 297: // member_modifier -> T_STATIC 
{ yyval.Long = (long)PhpMemberAttributes.Static; }
        return;
      case 298: // member_modifier -> T_ABSTRACT 
{ yyval.Long = (long)PhpMemberAttributes.Abstract; }
        return;
      case 299: // member_modifier -> T_FINAL 
{ yyval.Long = (long)PhpMemberAttributes.Final; }
        return;
      case 300: // property_list -> property_list ',' property 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 301: // property_list -> property 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 302: // property -> T_VARIABLE backup_doc_comment 
{ SetMemberDoc(yyval.Node = _astFactory.FieldDecl(yypos, new VariableName(value_stack.array[value_stack.top-2].yyval.String), null)); }
        return;
      case 303: // property -> T_VARIABLE '=' expr backup_doc_comment 
{ SetMemberDoc(yyval.Node = _astFactory.FieldDecl(yypos, new VariableName(value_stack.array[value_stack.top-4].yyval.String), (Expression)value_stack.array[value_stack.top-2].yyval.Node)); }
        return;
      case 304: // class_const_list -> class_const_list ',' class_const_decl 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 305: // class_const_list -> class_const_decl 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 306: // class_const_decl -> identifier '=' expr backup_doc_comment 
{
		yyval.Node = _astFactory.ClassConstDecl(yypos, new VariableName(value_stack.array[value_stack.top-4].yyval.String), value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yyval.Node); 
		SetMemberDoc(yyval.Node);
	}
        return;
      case 307: // const_decl -> T_STRING '=' expr backup_doc_comment 
{ yyval.Node = _astFactory.GlobalConstDecl(yypos, false, new VariableName(value_stack.array[value_stack.top-4].yyval.String), value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yyval.Node); 
		SetMemberDoc(yyval.Node);
	}
        return;
      case 308: // echo_expr_list -> echo_expr_list ',' echo_expr 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 309: // echo_expr_list -> echo_expr 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 310: // echo_expr -> expr 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 311: // for_exprs -> 
{ yyval.NodeList = LangElement.EmptyList; }
        return;
      case 312: // for_exprs -> non_empty_for_exprs 
{ yyval.NodeList = value_stack.array[value_stack.top-1].yyval.NodeList; }
        return;
      case 313: // non_empty_for_exprs -> non_empty_for_exprs ',' expr 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 314: // non_empty_for_exprs -> expr 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 315: // @7 -> 
{ PushAnonymousClassContext(value_stack.array[value_stack.top-1].yyval.TypeReference); }
        return;
      case 316: // anonymous_class -> T_CLASS ctor_arguments extends_from @7 implements_list backup_doc_comment enter_scope '{' class_statement_list '}' exit_scope 
{
			var typeRef = _astFactory.AnonymousTypeReference(yypos, CombineSpans(value_stack.array[value_stack.top-11].yypos, value_stack.array[value_stack.top-10].yypos, value_stack.array[value_stack.top-9].yypos, value_stack.array[value_stack.top-7].yypos), isConditional, PhpMemberAttributes.None, null, ConvertToNamedTypeRef(value_stack.array[value_stack.top-9].yyval.TypeReference), value_stack.array[value_stack.top-7].yyval.TypeRefList.Select(ConvertToNamedTypeRef), value_stack.array[value_stack.top-3].yyval.NodeList, CombineSpans(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos));
			SetDoc(((AnonymousTypeRef)typeRef).TypeDeclaration);
			yyval.AnonymousClass = new AnonymousClass(typeRef, value_stack.array[value_stack.top-10].yyval.ParamList, value_stack.array[value_stack.top-10].yypos); 
			PopClassContext();
		}
        return;
      case 317: // new_expr -> T_NEW class_name_reference ctor_arguments 
{ yyval.Node = _astFactory.New(yypos, value_stack.array[value_stack.top-2].yyval.TypeReference, value_stack.array[value_stack.top-1].yyval.ParamList, value_stack.array[value_stack.top-1].yypos); }
        return;
      case 318: // new_expr -> T_NEW anonymous_class 
{ yyval.Node = _astFactory.New(yypos, ((AnonymousClass)value_stack.array[value_stack.top-1].yyval.AnonymousClass).Item1, ((AnonymousClass)value_stack.array[value_stack.top-1].yyval.AnonymousClass).Item2, ((AnonymousClass)value_stack.array[value_stack.top-1].yyval.AnonymousClass).Item3); }
        return;
      case 319: // new_expr -> T_NEW attributes anonymous_class 
{ yyval.Node = _astFactory.New(yypos, WithAttributes(((AnonymousClass)value_stack.array[value_stack.top-1].yyval.AnonymousClass).Item1, value_stack.array[value_stack.top-2].yyval.NodeList), ((AnonymousClass)value_stack.array[value_stack.top-1].yyval.AnonymousClass).Item2, ((AnonymousClass)value_stack.array[value_stack.top-1].yyval.AnonymousClass).Item3); }
        return;
      case 320: // expr_without_variable -> T_LIST '(' array_pair_list ')' '=' expr 
{ yyval.Node = _astFactory.Assignment(yypos, _astFactory.List(Span.Combine(value_stack.array[value_stack.top-6].yypos, value_stack.array[value_stack.top-3].yypos), value_stack.array[value_stack.top-4].yyval.ItemList, true), value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignValue); }
        return;
      case 321: // expr_without_variable -> '[' array_pair_list ']' '=' expr 
{ yyval.Node = _astFactory.Assignment(yypos, _astFactory.List(CombineSpans(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-3].yypos), value_stack.array[value_stack.top-4].yyval.ItemList, false), value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignValue); }
        return;
      case 322: // expr_without_variable -> variable '=' expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignValue); }
        return;
      case 323: // expr_without_variable -> variable '=' '&' variable 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-4].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignRef); }
        return;
      case 324: // expr_without_variable -> variable '=' '&' new_expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-4].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignRef); _errors.Error(yypos, Warnings.AssignNewByRefDeprecated); }
        return;
      case 325: // expr_without_variable -> T_CLONE expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.Clone,   (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 326: // expr_without_variable -> variable T_PLUS_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignAdd); }
        return;
      case 327: // expr_without_variable -> variable T_MINUS_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignSub); }
        return;
      case 328: // expr_without_variable -> variable T_MUL_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignMul); }
        return;
      case 329: // expr_without_variable -> variable T_POW_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignPow); }
        return;
      case 330: // expr_without_variable -> variable T_DIV_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignDiv); }
        return;
      case 331: // expr_without_variable -> variable T_CONCAT_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignAppend); }
        return;
      case 332: // expr_without_variable -> variable T_MOD_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignMod); }
        return;
      case 333: // expr_without_variable -> variable T_AND_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignAnd); }
        return;
      case 334: // expr_without_variable -> variable T_OR_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignOr); }
        return;
      case 335: // expr_without_variable -> variable T_XOR_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignXor); }
        return;
      case 336: // expr_without_variable -> variable T_SL_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignShiftLeft); }
        return;
      case 337: // expr_without_variable -> variable T_SR_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignShiftRight); }
        return;
      case 338: // expr_without_variable -> variable T_COALESCE_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignCoalesce); }
        return;
      case 339: // expr_without_variable -> variable T_INC 
{ yyval.Node = CreateIncDec(yypos, value_stack.array[value_stack.top-2].yyval.Node, true, true); }
        return;
      case 340: // expr_without_variable -> T_INC variable 
{ yyval.Node = CreateIncDec(yypos, value_stack.array[value_stack.top-1].yyval.Node, true,  false); }
        return;
      case 341: // expr_without_variable -> variable T_DEC 
{ yyval.Node = CreateIncDec(yypos, value_stack.array[value_stack.top-2].yyval.Node, false, true); }
        return;
      case 342: // expr_without_variable -> T_DEC variable 
{ yyval.Node = CreateIncDec(yypos, value_stack.array[value_stack.top-1].yyval.Node, false, false); }
        return;
      case 343: // expr_without_variable -> expr T_BOOLEAN_OR expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Or,   value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 344: // expr_without_variable -> expr T_BOOLEAN_AND expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.And,  value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 345: // expr_without_variable -> expr T_LOGICAL_OR expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Or,   value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 346: // expr_without_variable -> expr T_LOGICAL_AND expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.And,  value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 347: // expr_without_variable -> expr T_LOGICAL_XOR expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Xor,  value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 348: // expr_without_variable -> expr '|' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.BitOr,  value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 349: // expr_without_variable -> expr '&' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.BitAnd, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 350: // expr_without_variable -> expr '^' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.BitXor, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 351: // expr_without_variable -> expr '.' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Concat, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 352: // expr_without_variable -> expr '+' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Add,    value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 353: // expr_without_variable -> expr '-' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Sub,    value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 354: // expr_without_variable -> expr '*' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Mul,    value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 355: // expr_without_variable -> expr T_POW expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Pow,    value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 356: // expr_without_variable -> expr '/' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Div,    value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 357: // expr_without_variable -> expr '%' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Mod,    value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 358: // expr_without_variable -> expr T_SL expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.ShiftLeft,  value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 359: // expr_without_variable -> expr T_SR expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.ShiftRight, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 360: // expr_without_variable -> '+' expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.Plus,   (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 361: // expr_without_variable -> '-' expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.Minus,   (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 362: // expr_without_variable -> '!' expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.LogicNegation, (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 363: // expr_without_variable -> '~' expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.BitNegation,   (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 364: // expr_without_variable -> expr T_IS_IDENTICAL expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Identical, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 365: // expr_without_variable -> expr T_IS_NOT_IDENTICAL expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.NotIdentical, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 366: // expr_without_variable -> expr T_IS_EQUAL expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Equal, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 367: // expr_without_variable -> expr T_IS_NOT_EQUAL expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.NotEqual, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 368: // expr_without_variable -> expr '<' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.LessThan, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 369: // expr_without_variable -> expr T_IS_SMALLER_OR_EQUAL expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.LessThanOrEqual, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 370: // expr_without_variable -> expr '>' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.GreaterThan, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 371: // expr_without_variable -> expr T_IS_GREATER_OR_EQUAL expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.GreaterThanOrEqual, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 372: // expr_without_variable -> expr T_SPACESHIP expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Spaceship, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 373: // expr_without_variable -> expr T_INSTANCEOF class_name_reference 
{ yyval.Node = _astFactory.InstanceOf(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.TypeReference); }
        return;
      case 374: // expr_without_variable -> '(' expr ')' 
{ yyval.Node = _astFactory.EncapsedExpression(yypos, value_stack.array[value_stack.top-2].yyval.Node, Tokens.T_LPAREN); }
        return;
      case 375: // expr_without_variable -> new_expr 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 376: // expr_without_variable -> expr '?' expr ':' expr 
{ yyval.Node = _astFactory.ConditionalEx(yypos, value_stack.array[value_stack.top-5].yyval.Node, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 377: // expr_without_variable -> expr '?' ':' expr 
{ yyval.Node = _astFactory.ConditionalEx(yypos, value_stack.array[value_stack.top-4].yyval.Node, null, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 378: // expr_without_variable -> expr T_COALESCE expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Coalesce, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 379: // expr_without_variable -> internal_functions_in_yacc 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 380: // expr_without_variable -> T_INT_CAST expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.Int64Cast,   (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 381: // expr_without_variable -> T_DOUBLE_CAST expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.DoubleCast, (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 382: // expr_without_variable -> T_STRING_CAST expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.StringCast, (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 383: // expr_without_variable -> T_ARRAY_CAST expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.ArrayCast,  (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 384: // expr_without_variable -> T_OBJECT_CAST expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.ObjectCast, (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 385: // expr_without_variable -> T_BOOL_CAST expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.BoolCast,   (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 386: // expr_without_variable -> T_UNSET_CAST expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.UnsetCast,  (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 387: // expr_without_variable -> T_EXIT exit_expr 
{ yyval.Node = _astFactory.Exit(yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 388: // expr_without_variable -> '@' expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.AtSign,     (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 389: // expr_without_variable -> scalar 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 390: // expr_without_variable -> backticks_expr 
{ yyval.Node = _astFactory.Shell(yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 391: // expr_without_variable -> T_PRINT expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.Print, (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 392: // expr_without_variable -> T_YIELD 
{ yyval.Node = _astFactory.Yield(yypos, null, null); }
        return;
      case 393: // expr_without_variable -> T_YIELD expr 
{ yyval.Node = _astFactory.Yield(yypos, null, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 394: // expr_without_variable -> T_YIELD expr T_DOUBLE_ARROW expr 
{ yyval.Node = _astFactory.Yield(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 395: // expr_without_variable -> T_YIELD_FROM expr 
{ yyval.Node = _astFactory.YieldFrom(yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 396: // expr_without_variable -> T_THROW expr 
{ yyval.Node = _astFactory.Throw(yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 397: // expr_without_variable -> inline_function 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 398: // expr_without_variable -> attributes inline_function 
{ yyval.Node = WithAttributes(value_stack.array[value_stack.top-1].yyval.Node, value_stack.array[value_stack.top-2].yyval.NodeList); }
        return;
      case 399: // expr_without_variable -> T_STATIC inline_function 
{
			var lambda = (LambdaFunctionExpr)value_stack.array[value_stack.top-1].yyval.Node;
			lambda.IsStatic = true;
			lambda.Span = yypos;
			yyval.Node = lambda;
		}
        return;
      case 400: // expr_without_variable -> attributes T_STATIC inline_function 
{
			var lambda = (LambdaFunctionExpr)value_stack.array[value_stack.top-1].yyval.Node;
			lambda.IsStatic = true;
			lambda.Span = yypos;
			yyval.Node = WithAttributes(lambda, value_stack.array[value_stack.top-3].yyval.NodeList);
		}
        return;
      case 401: // inline_function -> function returns_ref backup_doc_comment '(' parameter_list ')' lexical_vars return_type backup_fn_flags enter_scope '{' inner_statement_list '}' exit_scope backup_fn_flags 
{ 
				yyval.Node = _astFactory.Lambda(yypos, CombineSpans(value_stack.array[value_stack.top-15].yypos, value_stack.array[value_stack.top-10].yypos, value_stack.array[value_stack.top-9].yypos, value_stack.array[value_stack.top-8].yypos), value_stack.array[value_stack.top-14].yyval.Long == (long)FormalParam.Flags.IsByRef, value_stack.array[value_stack.top-8].yyval.TypeReference, 
					value_stack.array[value_stack.top-11].yyval.FormalParamList, CombineSpans(value_stack.array[value_stack.top-12].yypos, value_stack.array[value_stack.top-10].yypos), value_stack.array[value_stack.top-9].yyval.FormalParamList, CreateBlock(CombineSpans(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-3].yypos), value_stack.array[value_stack.top-4].yyval.NodeList)); 
				SetDoc(yyval.Node);
			}
        return;
      case 402: // inline_function -> fn returns_ref '(' parameter_list ')' return_type backup_doc_comment T_DOUBLE_ARROW backup_fn_flags backup_lex_pos expr backup_fn_flags 
{
				yyval.Node = _astFactory.ArrowFunc(yypos, CombineSpans(value_stack.array[value_stack.top-12].yypos, value_stack.array[value_stack.top-8].yypos, value_stack.array[value_stack.top-7].yypos), value_stack.array[value_stack.top-11].yyval.Long == (long)FormalParam.Flags.IsByRef, value_stack.array[value_stack.top-7].yyval.TypeReference, 
					value_stack.array[value_stack.top-9].yyval.FormalParamList, CombineSpans(value_stack.array[value_stack.top-10].yypos, value_stack.array[value_stack.top-8].yypos), value_stack.array[value_stack.top-2].yyval.Node); 
				SetDoc(yyval.Node);
			}
        return;
      case 405: // backup_doc_comment -> 
{ }
        return;
      case 406: // enter_scope -> 
{ _currentScope.Increment(); }
        return;
      case 407: // exit_scope -> 
{ _currentScope.Decrement(); }
        return;
      case 408: // backup_fn_flags -> 
{  }
        return;
      case 409: // backup_lex_pos -> 
{  }
        return;
      case 410: // returns_ref -> 
{ yyval.Long = 0; }
        return;
      case 411: // returns_ref -> '&' 
{ yyval.Long = (long)FormalParam.Flags.IsByRef; }
        return;
      case 412: // lexical_vars -> 
{ yyval.FormalParamList = new List<FormalParam>(); }
        return;
      case 413: // lexical_vars -> T_USE '(' lexical_var_list ')' 
{ yyval.FormalParamList = value_stack.array[value_stack.top-2].yyval.FormalParamList; }
        return;
      case 414: // lexical_var_list -> lexical_var_list ',' lexical_var 
{ yyval.FormalParamList = AddToList<FormalParam>(value_stack.array[value_stack.top-3].yyval.FormalParamList, value_stack.array[value_stack.top-1].yyval.FormalParam); }
        return;
      case 415: // lexical_var_list -> lexical_var 
{ yyval.FormalParamList = new List<FormalParam>() { (FormalParam)value_stack.array[value_stack.top-1].yyval.FormalParam }; }
        return;
      case 416: // lexical_var -> T_VARIABLE 
{ yyval.FormalParam = _astFactory.Parameter(yypos, value_stack.array[value_stack.top-1].yyval.String, value_stack.array[value_stack.top-1].yypos, null, FormalParam.Flags.Default); }
        return;
      case 417: // lexical_var -> '&' T_VARIABLE 
{ yyval.FormalParam = _astFactory.Parameter(yypos, value_stack.array[value_stack.top-1].yyval.String, value_stack.array[value_stack.top-1].yypos, null, FormalParam.Flags.IsByRef); }
        return;
      case 418: // function_call -> name argument_list 
{ yyval.Node = _astFactory.Call(yypos, TranslateQNRFunction(value_stack.array[value_stack.top-2].yyval.QualifiedNameReference), new CallSignature(value_stack.array[value_stack.top-1].yyval.ParamList, value_stack.array[value_stack.top-1].yypos), null); }
        return;
      case 419: // function_call -> class_name T_DOUBLE_COLON member_name argument_list 
{
				if(value_stack.array[value_stack.top-2].yyval.Object is Name)
					yyval.Node = _astFactory.Call(yypos, (Name)value_stack.array[value_stack.top-2].yyval.Object, value_stack.array[value_stack.top-2].yypos, new CallSignature(value_stack.array[value_stack.top-1].yyval.ParamList, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-4].yyval.TypeReference); 
				else
					yyval.Node = _astFactory.Call(yypos, (LangElement)value_stack.array[value_stack.top-2].yyval.Object, new CallSignature(value_stack.array[value_stack.top-1].yyval.ParamList, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-4].yyval.TypeReference); 
			}
        return;
      case 420: // function_call -> variable_class_name T_DOUBLE_COLON member_name argument_list 
{
				if(value_stack.array[value_stack.top-2].yyval.Object is Name)
					yyval.Node = _astFactory.Call(yypos, (Name)value_stack.array[value_stack.top-2].yyval.Object, value_stack.array[value_stack.top-2].yypos, new CallSignature(value_stack.array[value_stack.top-1].yyval.ParamList, value_stack.array[value_stack.top-1].yypos), _astFactory.TypeReference(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-4].yyval.Node)); 
				else
					yyval.Node = _astFactory.Call(yypos, (LangElement)value_stack.array[value_stack.top-2].yyval.Object, new CallSignature(value_stack.array[value_stack.top-1].yyval.ParamList, value_stack.array[value_stack.top-1].yypos), _astFactory.TypeReference(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-4].yyval.Node)); 
			}
        return;
      case 421: // function_call -> callable_expr argument_list 
{ yyval.Node = _astFactory.Call(yypos, value_stack.array[value_stack.top-2].yyval.Node, new CallSignature(value_stack.array[value_stack.top-1].yyval.ParamList, value_stack.array[value_stack.top-1].yypos), NullLangElement);}
        return;
      case 422: // class_name -> T_STATIC 
{ yyval.TypeReference = _astFactory.ReservedTypeReference(yypos, _reservedTypeStatic); }
        return;
      case 423: // class_name -> name 
{ yyval.TypeReference = CreateTypeRef(value_stack.array[value_stack.top-1].yyval.QualifiedNameReference); }
        return;
      case 424: // class_name_reference -> class_name 
{ yyval.TypeReference = value_stack.array[value_stack.top-1].yyval.TypeReference; }
        return;
      case 425: // class_name_reference -> new_variable 
{ yyval.TypeReference = _astFactory.TypeReference(yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 426: // exit_expr -> 
{ yyval.Node = null; }
        return;
      case 427: // exit_expr -> '(' optional_expr ')' 
{ yyval.Node = value_stack.array[value_stack.top-2].yyval.Node == null? null: _astFactory.EncapsedExpression(yypos, value_stack.array[value_stack.top-2].yyval.Node, Tokens.T_LPAREN); }
        return;
      case 428: // backticks_expr -> '`' '`' 
{ yyval.Node = _astFactory.Literal(yypos, string.Empty, "``"); }
        return;
      case 429: // backticks_expr -> '`' T_ENCAPSED_AND_WHITESPACE '`' 
{ yyval.Node = _astFactory.Literal(yypos, value_stack.array[value_stack.top-2].yyval.Strings.Key, string.Format("`{0}`", value_stack.array[value_stack.top-2].yyval.Strings.Value)); }
        return;
      case 430: // backticks_expr -> '`' encaps_list '`' 
{ yyval.Node = _astFactory.StringEncapsedExpression(yypos, _astFactory.Concat(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.NodeList), Tokens.T_BACKQUOTE); }
        return;
      case 431: // ctor_arguments -> 
{ yyval.ParamList = new List<ActualParam>(); }
        return;
      case 432: // ctor_arguments -> argument_list 
{ yyval.ParamList = value_stack.array[value_stack.top-1].yyval.ParamList; }
        return;
      case 433: // dereferencable_scalar -> T_ARRAY '(' array_pair_list ')' 
{ yyval.Node = _astFactory.NewArray(yypos, value_stack.array[value_stack.top-2].yyval.ItemList, true); }
        return;
      case 434: // dereferencable_scalar -> '[' array_pair_list ']' 
{ yyval.Node = _astFactory.NewArray(yypos, value_stack.array[value_stack.top-2].yyval.ItemList, false); }
        return;
      case 435: // dereferencable_scalar -> T_CONSTANT_ENCAPSED_STRING 
{ yyval.Node = _astFactory.Literal(yypos, value_stack.array[value_stack.top-1].yyval.String, _lexer.TokenText); }
        return;
      case 436: // scalar -> T_LNUMBER 
{ yyval.Node = _astFactory.Literal(yypos, value_stack.array[value_stack.top-1].yyval.Long, _lexer.TokenText); }
        return;
      case 437: // scalar -> T_DNUMBER 
{ yyval.Node = _astFactory.Literal(yypos, value_stack.array[value_stack.top-1].yyval.Double, _lexer.TokenText); }
        return;
      case 438: // scalar -> T_LINE 
{ yyval.Node = _astFactory.PseudoConstUse(yypos, PseudoConstUse.Types.Line); }
        return;
      case 439: // scalar -> T_FILE 
{ yyval.Node = _astFactory.PseudoConstUse(yypos, PseudoConstUse.Types.File); }
        return;
      case 440: // scalar -> T_DIR 
{ yyval.Node = _astFactory.PseudoConstUse(yypos, PseudoConstUse.Types.Dir); }
        return;
      case 441: // scalar -> T_TRAIT_C 
{ yyval.Node = _astFactory.PseudoConstUse(yypos, PseudoConstUse.Types.Trait); }
        return;
      case 442: // scalar -> T_METHOD_C 
{ yyval.Node = _astFactory.PseudoConstUse(yypos, PseudoConstUse.Types.Method); }
        return;
      case 443: // scalar -> T_FUNC_C 
{ yyval.Node = _astFactory.PseudoConstUse(yypos, PseudoConstUse.Types.Function); }
        return;
      case 444: // scalar -> T_NS_C 
{ yyval.Node = _astFactory.PseudoConstUse(yypos, PseudoConstUse.Types.Namespace); }
        return;
      case 445: // scalar -> T_CLASS_C 
{ yyval.Node = _astFactory.PseudoConstUse(yypos, PseudoConstUse.Types.Class); }
        return;
      case 446: // scalar -> '"' encaps_list '"' 
{ yyval.Node = _astFactory.StringEncapsedExpression(yypos, _astFactory.Concat(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.NodeList), Tokens.T_DOUBLE_QUOTES); }
        return;
      case 447: // scalar -> T_START_HEREDOC T_END_HEREDOC 
{ yyval.Node = _astFactory.HeredocExpression(yypos, _astFactory.Literal(new Span(value_stack.array[value_stack.top-2].yypos.End, 0), "", ""), value_stack.array[value_stack.top-2].yyval.QuoteToken, value_stack.array[value_stack.top-2].yyval.String); }
        return;
      case 448: // scalar -> T_START_HEREDOC T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC 
{ yyval.Node = _astFactory.HeredocExpression(yypos, _astFactory.Literal(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.Strings.Key, value_stack.array[value_stack.top-2].yyval.Strings.Value), value_stack.array[value_stack.top-3].yyval.QuoteToken, value_stack.array[value_stack.top-3].yyval.String); }
        return;
      case 449: // scalar -> T_START_HEREDOC encaps_list T_END_HEREDOC 
{ yyval.Node = _astFactory.HeredocExpression(yypos, _astFactory.Concat(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.NodeList), value_stack.array[value_stack.top-3].yyval.QuoteToken, value_stack.array[value_stack.top-3].yyval.String); }
        return;
      case 450: // scalar -> dereferencable_scalar 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 451: // scalar -> constant 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 452: // constant -> name 
{ yyval.Node = _astFactory.ConstUse(yypos, TranslateQNRConstant(value_stack.array[value_stack.top-1].yyval.QualifiedNameReference)); }
        return;
      case 453: // constant -> class_name T_DOUBLE_COLON identifier 
{ yyval.Node = _astFactory.ClassConstUse(yypos, value_stack.array[value_stack.top-3].yyval.TypeReference, new Name(value_stack.array[value_stack.top-1].yyval.String), value_stack.array[value_stack.top-1].yypos); }
        return;
      case 454: // constant -> variable_class_name T_DOUBLE_COLON identifier 
{ yyval.Node = _astFactory.ClassConstUse(yypos, _astFactory.TypeReference(value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-3].yyval.Node), new Name(value_stack.array[value_stack.top-1].yyval.String), value_stack.array[value_stack.top-1].yypos); }
        return;
      case 455: // expr -> variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 456: // expr -> expr_without_variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 457: // optional_expr -> 
{ yyval.Node = null; }
        return;
      case 458: // optional_expr -> expr 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 459: // variable_class_name -> dereferencable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; /* TODO if (!($1 is VarLikeConstructUse)) _errors.Error(@$, FatalErrors.CheckVarUseFault); */ }
        return;
      case 460: // dereferencable -> variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 461: // dereferencable -> '(' expr ')' 
{ yyval.Node = _astFactory.EncapsedExpression(yypos, value_stack.array[value_stack.top-2].yyval.Node, Tokens.T_LPAREN); }
        return;
      case 462: // dereferencable -> dereferencable_scalar 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 463: // callable_expr -> callable_variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 464: // callable_expr -> '(' expr ')' 
{ yyval.Node = _astFactory.EncapsedExpression(yypos, value_stack.array[value_stack.top-2].yyval.Node, Tokens.T_LPAREN); }
        return;
      case 465: // callable_expr -> dereferencable_scalar 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 466: // callable_variable -> simple_variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 467: // callable_variable -> dereferencable '[' optional_expr ']' 
{ yyval.Node = _astFactory.ArrayItem(yypos, false, value_stack.array[value_stack.top-4].yyval.Node, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 468: // callable_variable -> constant '[' optional_expr ']' 
{ yyval.Node = _astFactory.ArrayItem(yypos, false, value_stack.array[value_stack.top-4].yyval.Node, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 469: // callable_variable -> dereferencable '{' expr '}' 
{ yyval.Node = _astFactory.ArrayItem(yypos, true, value_stack.array[value_stack.top-4].yyval.Node, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 470: // callable_variable -> dereferencable T_OBJECT_OPERATOR property_name argument_list 
{
			if(value_stack.array[value_stack.top-2].yyval.Object is Name)
			{
				var name = new QualifiedName((Name)value_stack.array[value_stack.top-2].yyval.Object);
				yyval.Node = _astFactory.Call(yypos, new TranslatedQualifiedName(name, value_stack.array[value_stack.top-2].yypos, name, null), new CallSignature(value_stack.array[value_stack.top-1].yyval.ParamList, value_stack.array[value_stack.top-1].yypos), VerifyMemberOf(value_stack.array[value_stack.top-4].yyval.Node));
			}
			else
				yyval.Node = _astFactory.Call(yypos, (LangElement)value_stack.array[value_stack.top-2].yyval.Object, new CallSignature(value_stack.array[value_stack.top-1].yyval.ParamList, value_stack.array[value_stack.top-1].yypos), VerifyMemberOf(value_stack.array[value_stack.top-4].yyval.Node));
		}
        return;
      case 471: // callable_variable -> function_call 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 472: // variable -> callable_variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 473: // variable -> static_member 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 474: // variable -> dereferencable T_OBJECT_OPERATOR property_name 
{ yyval.Node = CreateProperty(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Object); }
        return;
      case 475: // simple_variable -> T_VARIABLE 
{ yyval.Node = _astFactory.Variable(yypos, value_stack.array[value_stack.top-1].yyval.String,	NullLangElement, true); }
        return;
      case 476: // simple_variable -> '$' '{' expr '}' 
{ yyval.Node = _astFactory.Variable(yypos, _astFactory.EncapsedExpression(Span.Combine(value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-2].yyval.Node, Tokens.T_LBRACE), NullLangElement); }
        return;
      case 477: // simple_variable -> '$' simple_variable 
{ yyval.Node = _astFactory.Variable(yypos, value_stack.array[value_stack.top-1].yyval.Node, NullLangElement); }
        return;
      case 478: // static_member -> class_name T_DOUBLE_COLON simple_variable 
{ yyval.Node = CreateStaticProperty(yypos, value_stack.array[value_stack.top-3].yyval.TypeReference, value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 479: // static_member -> variable_class_name T_DOUBLE_COLON simple_variable 
{ yyval.Node = CreateStaticProperty(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 480: // new_variable -> simple_variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 481: // new_variable -> new_variable '[' optional_expr ']' 
{ yyval.Node = _astFactory.ArrayItem(yypos, false, value_stack.array[value_stack.top-4].yyval.Node, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 482: // new_variable -> new_variable '{' expr '}' 
{ yyval.Node = _astFactory.ArrayItem(yypos, true, value_stack.array[value_stack.top-4].yyval.Node, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 483: // new_variable -> new_variable T_OBJECT_OPERATOR property_name 
{ yyval.Node = CreateProperty(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Object); }
        return;
      case 484: // new_variable -> class_name T_DOUBLE_COLON simple_variable 
{ yyval.Node = CreateStaticProperty(yypos, value_stack.array[value_stack.top-3].yyval.TypeReference, value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 485: // new_variable -> new_variable T_DOUBLE_COLON simple_variable 
{ yyval.Node = CreateStaticProperty(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 486: // member_name -> identifier 
{ yyval.Object = new Name(value_stack.array[value_stack.top-1].yyval.String); }
        return;
      case 487: // member_name -> '{' expr '}' 
{ yyval.Object = _astFactory.EncapsedExpression(yypos, value_stack.array[value_stack.top-2].yyval.Node, Tokens.T_LBRACE); }
        return;
      case 488: // member_name -> simple_variable 
{ yyval.Object = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 489: // property_name -> T_STRING 
{ yyval.Object = new Name(value_stack.array[value_stack.top-1].yyval.String); }
        return;
      case 490: // property_name -> '{' expr '}' 
{ yyval.Object = _astFactory.EncapsedExpression(yypos, value_stack.array[value_stack.top-2].yyval.Node, Tokens.T_LBRACE); }
        return;
      case 491: // property_name -> simple_variable 
{ yyval.Object = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 492: // array_pair_list -> non_empty_array_pair_list 
{ yyval.ItemList = value_stack.array[value_stack.top-1].yyval.ItemList;  }
        return;
      case 493: // possible_array_pair -> 
{ yyval.Item = null; }
        return;
      case 494: // possible_array_pair -> array_pair 
{ yyval.Item = value_stack.array[value_stack.top-1].yyval.Item; }
        return;
      case 495: // non_empty_array_pair_list -> non_empty_array_pair_list ',' possible_array_pair 
{ yyval.ItemList = AddToList<Item>(value_stack.array[value_stack.top-3].yyval.ItemList, value_stack.array[value_stack.top-1].yyval.Item); }
        return;
      case 496: // non_empty_array_pair_list -> possible_array_pair 
{ yyval.ItemList = new List<Item>() { value_stack.array[value_stack.top-1].yyval.Item }; }
        return;
      case 497: // array_pair -> expr T_DOUBLE_ARROW expr 
{ yyval.Item = _astFactory.ArrayItemValue(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 498: // array_pair -> expr 
{ yyval.Item = _astFactory.ArrayItemValue(yypos, null, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 499: // array_pair -> expr T_DOUBLE_ARROW '&' variable 
{ yyval.Item = _astFactory.ArrayItemRef(yypos, value_stack.array[value_stack.top-4].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 500: // array_pair -> '&' variable 
{ yyval.Item = _astFactory.ArrayItemRef(yypos, null, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 501: // array_pair -> T_ELLIPSIS expr 
{ yyval.Item = _astFactory.ArrayItemSpread(yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 502: // array_pair -> expr T_DOUBLE_ARROW T_LIST '(' array_pair_list ')' 
{ yyval.Item = _astFactory.ArrayItemValue(yypos, value_stack.array[value_stack.top-6].yyval.Node, _astFactory.List(Span.Combine(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-2].yyval.ItemList, true)); }
        return;
      case 503: // array_pair -> T_LIST '(' array_pair_list ')' 
{ yyval.Item = _astFactory.ArrayItemValue(yypos, null, _astFactory.List(Span.Combine(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-2].yyval.ItemList, true)); }
        return;
      case 504: // encaps_list -> encaps_list encaps_var 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-2].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 505: // encaps_list -> encaps_list T_ENCAPSED_AND_WHITESPACE 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-2].yyval.NodeList, _astFactory.Literal(value_stack.array[value_stack.top-1].yypos, value_stack.array[value_stack.top-1].yyval.Strings.Key, _lexer.TokenText)); }
        return;
      case 506: // encaps_list -> encaps_var 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 507: // encaps_list -> T_ENCAPSED_AND_WHITESPACE encaps_var 
{ yyval.NodeList = new List<LangElement>() { _astFactory.Literal(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.Strings.Key, value_stack.array[value_stack.top-2].yyval.Strings.Value), value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 508: // encaps_var -> T_VARIABLE 
{ yyval.Node = _astFactory.Variable(yypos, value_stack.array[value_stack.top-1].yyval.String, NullLangElement, true); }
        return;
      case 509: // encaps_var -> T_VARIABLE '[' encaps_var_offset ']' 
{ yyval.Node = _astFactory.ArrayItem(yypos, false,
					_astFactory.Variable(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-4].yyval.String, NullLangElement, true), value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 510: // encaps_var -> T_VARIABLE T_OBJECT_OPERATOR T_STRING 
{ yyval.Node = CreateProperty(yypos, _astFactory.Variable(value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-3].yyval.String, NullLangElement, true), new Name(value_stack.array[value_stack.top-1].yyval.String)); }
        return;
      case 511: // encaps_var -> T_DOLLAR_OPEN_CURLY_BRACES expr '}' 
{ yyval.Node = _astFactory.EncapsedExpression(yypos, _astFactory.Variable(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.Node, NullLangElement), Tokens.T_DOLLAR_OPEN_CURLY_BRACES); }
        return;
      case 512: // encaps_var -> T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '}' 
{ yyval.Node = _astFactory.EncapsedExpression(yypos, _astFactory.Variable(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.String, NullLangElement, false), Tokens.T_DOLLAR_OPEN_CURLY_BRACES); }
        return;
      case 513: // encaps_var -> T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' expr ']' '}' 
{ yyval.Node = _astFactory.EncapsedExpression(yypos, _astFactory.ArrayItem(Span.Combine(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-2].yypos), false,
					_astFactory.Variable(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-5].yyval.String, NullLangElement, false), value_stack.array[value_stack.top-3].yyval.Node), Tokens.T_DOLLAR_OPEN_CURLY_BRACES); }
        return;
      case 514: // encaps_var -> T_CURLY_OPEN variable '}' 
{ yyval.Node = _astFactory.EncapsedExpression(yypos, value_stack.array[value_stack.top-2].yyval.Node, Tokens.T_LBRACE); }
        return;
      case 515: // encaps_var_offset -> T_STRING 
{ yyval.Node = _astFactory.Literal(yypos, value_stack.array[value_stack.top-1].yyval.String, _lexer.TokenText); }
        return;
      case 516: // encaps_var_offset -> T_NUM_STRING 
{ yyval.Node = _astFactory.Literal(yypos, value_stack.array[value_stack.top-1].yyval.Long, _lexer.TokenText); }
        return;
      case 517: // encaps_var_offset -> T_VARIABLE 
{ yyval.Node = _astFactory.Variable(yypos, value_stack.array[value_stack.top-1].yyval.String, NullLangElement, true); }
        return;
      case 518: // internal_functions_in_yacc -> T_ISSET '(' isset_variables possible_comma ')' 
{ yyval.Node = _astFactory.Isset(yypos, AddTrailingComma(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-2].yyval.Bool)); }
        return;
      case 519: // internal_functions_in_yacc -> T_EMPTY '(' expr ')' 
{ yyval.Node = _astFactory.Empty(yypos, value_stack.array[value_stack.top-2].yyval.Node);}
        return;
      case 520: // internal_functions_in_yacc -> T_INCLUDE expr 
{ yyval.Node = _astFactory.Inclusion(yypos, isConditional, InclusionTypes.Include, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 521: // internal_functions_in_yacc -> T_INCLUDE_ONCE expr 
{ yyval.Node = _astFactory.Inclusion(yypos, isConditional, InclusionTypes.IncludeOnce, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 522: // internal_functions_in_yacc -> T_EVAL '(' expr ')' 
{ yyval.Node = _astFactory.Eval(yypos, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 523: // internal_functions_in_yacc -> T_REQUIRE expr 
{ yyval.Node = _astFactory.Inclusion(yypos, isConditional, InclusionTypes.Require, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 524: // internal_functions_in_yacc -> T_REQUIRE_ONCE expr 
{ yyval.Node = _astFactory.Inclusion(yypos, isConditional, InclusionTypes.RequireOnce, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 525: // isset_variables -> isset_variable 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 526: // isset_variables -> isset_variables ',' isset_variable 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 527: // isset_variable -> expr 
{ yyval.Node = CreateIssetVar(value_stack.array[value_stack.top-1].yyval.Node); }
        return;
    }
  }

  protected override string TerminalToString(int terminal)
  {
    if (((Tokens)terminal).ToString() != terminal.ToString())
      return ((Tokens)terminal).ToString();
    else
      return CharToString((char)terminal);
  }


}
}
