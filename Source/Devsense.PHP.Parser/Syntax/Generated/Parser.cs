using System;
using System.Text;
using System.Collections.Generic;

// Copyright(c) DEVSENSE s.r.o.
// All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the License); you may not use
// this file except in compliance with the License. You may obtain a copy of the
// License at http://www.apache.org/licenses/LICENSE-2.0
//
// THIS CODE IS PROVIDED ON AN  *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS
// OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY
// IMPLIED WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
// MERCHANTABILITY OR NON-INFRINGEMENT.
//
// See the Apache Version 2.0 License for specific language governing
// permissions and limitations under the License.

using System.Linq;
using System.Runtime.InteropServices;
using Devsense.PHP.Syntax.Ast;
using Devsense.PHP.Text;
using Devsense.PHP.Errors;

using CompleteAlias = System.Tuple<Devsense.PHP.Syntax.QualifiedNameRef, Devsense.PHP.Syntax.NameRef>;
using ContextAlias = System.Tuple<Devsense.PHP.Text.Span, Devsense.PHP.Syntax.QualifiedNameRef, Devsense.PHP.Syntax.NameRef, Devsense.PHP.Syntax.AliasKind>;
using AnonymousClass = System.Tuple<Devsense.PHP.Syntax.Ast.TypeRef, System.Collections.Generic.List<Devsense.PHP.Syntax.Ast.ActualParam>, Devsense.PHP.Text.Span>;
using StringPair = System.Collections.Generic.KeyValuePair<string, string>;


namespace Devsense.PHP.Syntax
{
public enum Tokens {
/// <summary>&quot;include (T_INCLUDE)&quot;</summary>
T_INCLUDE=262,
/// <summary>&quot;include_once (T_INCLUDE_ONCE)&quot;</summary>
T_INCLUDE_ONCE=261,
/// <summary>&quot;eval (T_EVAL)&quot;</summary>
T_EVAL=260,
/// <summary>&quot;require (T_REQUIRE)&quot;</summary>
T_REQUIRE=259,
/// <summary>&quot;require_once (T_REQUIRE_ONCE)&quot;</summary>
T_REQUIRE_ONCE=258,
/// <summary>&quot;or (T_LOGICAL_OR)&quot;</summary>
T_LOGICAL_OR=263,
/// <summary>&quot;xor (T_LOGICAL_XOR)&quot;</summary>
T_LOGICAL_XOR=264,
/// <summary>&quot;and (T_LOGICAL_AND)&quot;</summary>
T_LOGICAL_AND=265,
/// <summary>&quot;print (T_PRINT)&quot;</summary>
T_PRINT=266,
/// <summary>&quot;yield (T_YIELD)&quot;</summary>
T_YIELD=267,
/// <summary>&quot;=&gt; (T_DOUBLE_ARROW)&quot;</summary>
T_DOUBLE_ARROW=268,
/// <summary>&quot;yield from (T_YIELD_FROM)&quot;</summary>
T_YIELD_FROM=269,
/// <summary>&quot;+= (T_PLUS_EQUAL)&quot;</summary>
T_PLUS_EQUAL=281,
/// <summary>&quot;-= (T_MINUS_EQUAL)&quot;</summary>
T_MINUS_EQUAL=280,
/// <summary>&quot;*= (T_MUL_EQUAL)&quot;</summary>
T_MUL_EQUAL=279,
/// <summary>&quot;/= (T_DIV_EQUAL)&quot;</summary>
T_DIV_EQUAL=278,
/// <summary>&quot;.= (T_CONCAT_EQUAL)&quot;</summary>
T_CONCAT_EQUAL=277,
/// <summary>&quot;%= (T_MOD_EQUAL)&quot;</summary>
T_MOD_EQUAL=276,
/// <summary>&quot;&amp;= (T_AND_EQUAL)&quot;</summary>
T_AND_EQUAL=275,
/// <summary>&quot;|= (T_OR_EQUAL)&quot;</summary>
T_OR_EQUAL=274,
/// <summary>&quot;^= (T_XOR_EQUAL)&quot;</summary>
T_XOR_EQUAL=273,
/// <summary>&quot;&lt;&lt;= (T_SL_EQUAL)&quot;</summary>
T_SL_EQUAL=272,
/// <summary>&quot;&gt;&gt;= (T_SR_EQUAL)&quot;</summary>
T_SR_EQUAL=271,
/// <summary>&quot;**= (T_POW_EQUAL)&quot;</summary>
T_POW_EQUAL=270,
/// <summary>&quot;?? (T_COALESCE)&quot;</summary>
T_COALESCE=282,
/// <summary>&quot;|| (T_BOOLEAN_OR)&quot;</summary>
T_BOOLEAN_OR=283,
/// <summary>&quot;&amp;&amp; (T_BOOLEAN_AND)&quot;</summary>
T_BOOLEAN_AND=284,
/// <summary>&quot;== (T_IS_EQUAL)&quot;</summary>
T_IS_EQUAL=289,
/// <summary>&quot;!= (T_IS_NOT_EQUAL)&quot;</summary>
T_IS_NOT_EQUAL=288,
/// <summary>&quot;=== (T_IS_IDENTICAL)&quot;</summary>
T_IS_IDENTICAL=287,
/// <summary>&quot;!== (T_IS_NOT_IDENTICAL)&quot;</summary>
T_IS_NOT_IDENTICAL=286,
/// <summary>&quot;&lt;=&gt; (T_SPACESHIP)&quot;</summary>
T_SPACESHIP=285,
/// <summary>&quot;&lt;= (T_IS_SMALLER_OR_EQUAL)&quot;</summary>
T_IS_SMALLER_OR_EQUAL=291,
/// <summary>&quot;&gt;= (T_IS_GREATER_OR_EQUAL)&quot;</summary>
T_IS_GREATER_OR_EQUAL=290,
/// <summary>&quot;&lt;&lt; (T_SL)&quot;</summary>
T_SL=293,
/// <summary>&quot;&gt;&gt; (T_SR)&quot;</summary>
T_SR=292,
/// <summary>&quot;instanceof (T_INSTANCEOF)&quot;</summary>
T_INSTANCEOF=294,
/// <summary>&quot;++ (T_INC)&quot;</summary>
T_INC=303,
/// <summary>&quot;-- (T_DEC)&quot;</summary>
T_DEC=302,
/// <summary>&quot;(int) (T_INT_CAST)&quot;</summary>
T_INT_CAST=301,
/// <summary>&quot;(double) (T_DOUBLE_CAST)&quot;</summary>
T_DOUBLE_CAST=300,
/// <summary>&quot; (T_STRING_CAST)&quot;</summary>
T_STRING_CAST=299,
/// <summary>&quot;(array) (T_ARRAY_CAST)&quot;</summary>
T_ARRAY_CAST=298,
/// <summary>&quot;(object) (T_OBJECT_CAST)&quot;</summary>
T_OBJECT_CAST=297,
/// <summary>&quot;(bool) (T_BOOL_CAST)&quot;</summary>
T_BOOL_CAST=296,
/// <summary>&quot;(unset) (T_UNSET_CAST)&quot;</summary>
T_UNSET_CAST=295,
/// <summary>&quot;** (T_POW)&quot;</summary>
T_POW=304,
/// <summary>&quot;new (T_NEW)&quot;</summary>
T_NEW=306,
/// <summary>&quot;clone (T_CLONE)&quot;</summary>
T_CLONE=305,
T_NOELSE=176,
/// <summary>&quot;elseif (T_ELSEIF)&quot;</summary>
T_ELSEIF=308,
/// <summary>&quot;else (T_ELSE)&quot;</summary>
T_ELSE=309,
/// <summary>&quot;endif (T_ENDIF)&quot;</summary>
T_ENDIF=310,
/// <summary>&quot;static (T_STATIC)&quot;</summary>
T_STATIC=316,
/// <summary>&quot;abstract (T_ABSTRACT)&quot;</summary>
T_ABSTRACT=315,
/// <summary>&quot;final (T_FINAL)&quot;</summary>
T_FINAL=314,
/// <summary>&quot;private (T_PRIVATE)&quot;</summary>
T_PRIVATE=313,
/// <summary>&quot;protected (T_PROTECTED)&quot;</summary>
T_PROTECTED=312,
/// <summary>&quot;public (T_PUBLIC)&quot;</summary>
T_PUBLIC=311,
/// <summary>&quot;integer number (T_LNUMBER)&quot;</summary>
T_LNUMBER=317,
/// <summary>&quot;floating-point number (T_DNUMBER)&quot;</summary>
T_DNUMBER=318,
/// <summary>&quot;identifier (T_STRING)&quot;</summary>
T_STRING=319,
/// <summary>&quot;variable (T_VARIABLE)&quot;</summary>
T_VARIABLE=320,
T_INLINE_HTML=321,
/// <summary>&quot;quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)&quot;</summary>
T_ENCAPSED_AND_WHITESPACE=322,
/// <summary>&quot;quoted-string (T_CONSTANT_ENCAPSED_STRING)&quot;</summary>
T_CONSTANT_ENCAPSED_STRING=323,
/// <summary>&quot;variable name (T_STRING_VARNAME)&quot;</summary>
T_STRING_VARNAME=324,
/// <summary>&quot;number (T_NUM_STRING)&quot;</summary>
T_NUM_STRING=325,
/// <summary>&#39;!&#39;</summary>
T_EXCLAM=33,
/// <summary>&#39;&quot;&#39;</summary>
T_DOUBLE_QUOTES=34,
/// <summary>&#39;$&#39;</summary>
T_DOLLAR=36,
/// <summary>&#39;%&#39;</summary>
T_PERCENT=37,
/// <summary>&#39;&amp;&#39;</summary>
T_AMP=38,
/// <summary>&#39;\&#39;&#39;</summary>
T_SINGLE_QUOTES=39,
/// <summary>&#39;(&#39;</summary>
T_LPAREN=40,
/// <summary>&#39;)&#39;</summary>
T_RPAREN=41,
/// <summary>&#39;*&#39;</summary>
T_MUL=42,
/// <summary>&#39;+&#39;</summary>
T_PLUS=43,
/// <summary>&#39;,&#39;</summary>
T_COMMA=44,
/// <summary>&#39;-&#39;</summary>
T_MINUS=45,
/// <summary>&#39;.&#39;</summary>
T_DOT=46,
/// <summary>&#39;/&#39;</summary>
T_SLASH=47,
/// <summary>&#39;:&#39;</summary>
T_COLON=58,
/// <summary>&#39;;&#39;</summary>
T_SEMI=59,
/// <summary>&#39;&lt;&#39;</summary>
T_LT=60,
/// <summary>&#39;=&#39;</summary>
T_EQ=61,
/// <summary>&#39;&gt;&#39;</summary>
T_GT=62,
/// <summary>&#39;?&#39;</summary>
T_QUESTION=63,
/// <summary>&#39;@&#39;</summary>
T_AT=64,
/// <summary>&#39;[&#39;</summary>
T_LBRACKET=91,
/// <summary>&#39;]&#39;</summary>
T_RBRACKET=93,
/// <summary>&#39;^&#39;</summary>
T_CARET=94,
/// <summary>&#39;`&#39;</summary>
T_BACKQUOTE=96,
/// <summary>&#39;{&#39;</summary>
T_LBRACE=123,
/// <summary>&#39;|&#39;</summary>
T_PIPE=124,
/// <summary>&#39;}&#39;</summary>
T_RBRACE=125,
/// <summary>&#39;~&#39;</summary>
T_TILDE=126,
/// <summary>&quot;end of file&quot;</summary>
END=0,
/// <summary>&quot;exit (T_EXIT)&quot;</summary>
T_EXIT=326,
/// <summary>&quot;if (T_IF)&quot;</summary>
T_IF=327,
/// <summary>&quot;echo (T_ECHO)&quot;</summary>
T_ECHO=328,
/// <summary>&quot;do (T_DO)&quot;</summary>
T_DO=329,
/// <summary>&quot;while (T_WHILE)&quot;</summary>
T_WHILE=330,
/// <summary>&quot;endwhile (T_ENDWHILE)&quot;</summary>
T_ENDWHILE=331,
/// <summary>&quot;for (T_FOR)&quot;</summary>
T_FOR=332,
/// <summary>&quot;endfor (T_ENDFOR)&quot;</summary>
T_ENDFOR=333,
/// <summary>&quot;foreach (T_FOREACH)&quot;</summary>
T_FOREACH=334,
/// <summary>&quot;endforeach (T_ENDFOREACH)&quot;</summary>
T_ENDFOREACH=335,
/// <summary>&quot;declare (T_DECLARE)&quot;</summary>
T_DECLARE=336,
/// <summary>&quot;enddeclare (T_ENDDECLARE)&quot;</summary>
T_ENDDECLARE=337,
/// <summary>&quot;as (T_AS)&quot;</summary>
T_AS=338,
/// <summary>&quot;switch (T_SWITCH)&quot;</summary>
T_SWITCH=339,
/// <summary>&quot;endswitch (T_ENDSWITCH)&quot;</summary>
T_ENDSWITCH=340,
/// <summary>&quot;case (T_CASE)&quot;</summary>
T_CASE=341,
/// <summary>&quot;default (T_DEFAULT)&quot;</summary>
T_DEFAULT=342,
/// <summary>&quot;break (T_BREAK)&quot;</summary>
T_BREAK=343,
/// <summary>&quot;continue (T_CONTINUE)&quot;</summary>
T_CONTINUE=344,
/// <summary>&quot;goto (T_GOTO)&quot;</summary>
T_GOTO=345,
/// <summary>&quot;function (T_FUNCTION)&quot;</summary>
T_FUNCTION=346,
/// <summary>&quot;const (T_CONST)&quot;</summary>
T_CONST=347,
/// <summary>&quot;return (T_RETURN)&quot;</summary>
T_RETURN=348,
/// <summary>&quot;try (T_TRY)&quot;</summary>
T_TRY=349,
/// <summary>&quot;catch (T_CATCH)&quot;</summary>
T_CATCH=350,
/// <summary>&quot;finally (T_FINALLY)&quot;</summary>
T_FINALLY=351,
/// <summary>&quot;throw (T_THROW)&quot;</summary>
T_THROW=352,
/// <summary>&quot;use (T_USE)&quot;</summary>
T_USE=353,
/// <summary>&quot;insteadof (T_INSTEADOF)&quot;</summary>
T_INSTEADOF=354,
/// <summary>&quot;exit_scope (T_GLOBAL)&quot;</summary>
T_GLOBAL=355,
/// <summary>&quot;var (T_VAR)&quot;</summary>
T_VAR=356,
/// <summary>&quot;unset (T_UNSET)&quot;</summary>
T_UNSET=357,
/// <summary>&quot;isset (T_ISSET)&quot;</summary>
T_ISSET=358,
/// <summary>&quot;empty (T_EMPTY)&quot;</summary>
T_EMPTY=359,
/// <summary>&quot;__halt_compiler (T_HALT_COMPILER)&quot;</summary>
T_HALT_COMPILER=360,
/// <summary>&quot;class (T_CLASS)&quot;</summary>
T_CLASS=361,
/// <summary>&quot;trait (T_TRAIT)&quot;</summary>
T_TRAIT=362,
/// <summary>&quot;interface (T_INTERFACE)&quot;</summary>
T_INTERFACE=363,
/// <summary>&quot;extends (T_EXTENDS)&quot;</summary>
T_EXTENDS=364,
/// <summary>&quot;implements (T_IMPLEMENTS)&quot;</summary>
T_IMPLEMENTS=365,
/// <summary>&quot;-&gt; (T_OBJECT_OPERATOR)&quot;</summary>
T_OBJECT_OPERATOR=366,
/// <summary>&quot;list (T_LIST)&quot;</summary>
T_LIST=367,
/// <summary>&quot;array (T_ARRAY)&quot;</summary>
T_ARRAY=368,
/// <summary>&quot;callable (T_CALLABLE)&quot;</summary>
T_CALLABLE=369,
/// <summary>&quot;__LINE__ (T_LINE)&quot;</summary>
T_LINE=370,
/// <summary>&quot;__FILE__ (T_FILE)&quot;</summary>
T_FILE=371,
/// <summary>&quot;__DIR__ (T_DIR)&quot;</summary>
T_DIR=372,
/// <summary>&quot;__CLASS__ (T_CLASS_C)&quot;</summary>
T_CLASS_C=373,
/// <summary>&quot;__TRAIT__ (T_TRAIT_C)&quot;</summary>
T_TRAIT_C=374,
/// <summary>&quot;__METHOD__ (T_METHOD_C)&quot;</summary>
T_METHOD_C=375,
/// <summary>&quot;__FUNCTION__ (T_FUNC_C)&quot;</summary>
T_FUNC_C=376,
/// <summary>&quot;comment (T_COMMENT)&quot;</summary>
T_COMMENT=377,
/// <summary>&quot;doc comment (T_DOC_COMMENT)&quot;</summary>
T_DOC_COMMENT=378,
/// <summary>&quot;open tag (T_OPEN_TAG)&quot;</summary>
T_OPEN_TAG=379,
/// <summary>&quot;open tag with echo (T_OPEN_TAG_WITH_ECHO)&quot;</summary>
T_OPEN_TAG_WITH_ECHO=380,
/// <summary>&quot;close tag (T_CLOSE_TAG)&quot;</summary>
T_CLOSE_TAG=381,
/// <summary>&quot;whitespace (T_WHITESPACE)&quot;</summary>
T_WHITESPACE=382,
/// <summary>&quot;heredoc start (T_START_HEREDOC)&quot;</summary>
T_START_HEREDOC=383,
/// <summary>&quot;heredoc end (T_END_HEREDOC)&quot;</summary>
T_END_HEREDOC=384,
/// <summary>&quot;${ (T_DOLLAR_OPEN_CURLY_BRACES)&quot;</summary>
T_DOLLAR_OPEN_CURLY_BRACES=385,
/// <summary>&quot;{$ (T_CURLY_OPEN)&quot;</summary>
T_CURLY_OPEN=386,
/// <summary>&quot;:: (T_DOUBLE_COLON)&quot;</summary>
T_DOUBLE_COLON=387,
/// <summary>&quot;namespace (T_NAMESPACE)&quot;</summary>
T_NAMESPACE=388,
/// <summary>&quot;__NAMESPACE__ (T_NS_C)&quot;</summary>
T_NS_C=389,
/// <summary>&quot;\\ (T_NS_SEPARATOR)&quot;</summary>
T_NS_SEPARATOR=390,
/// <summary>&quot;... (T_ELLIPSIS)&quot;</summary>
T_ELLIPSIS=391,
/// <summary> type safe declaration</summary>
T_ERROR=257,
EOF=0
};

[StructLayout(LayoutKind.Explicit)]
public partial struct SemanticValueType
{
	// Integer and Offset are both used when generating code for string 
	// with 'inline' variables. Other fields are not combined.
	
	[FieldOffset(0)]		
	public int Integer;
	[FieldOffset(0)]
	public double Double;
	[FieldOffset(0)]
	public long Long;
	[FieldOffset(0)]
	public QualifiedNameRef QualifiedNameReference;
	[FieldOffset(0)]
	public AliasKind Kind;
	/// <summary>Token that encapsulates the string literal.</summary>
	[FieldOffset(0)]
	public Tokens QuoteToken;

	[FieldOffset(8)]
	public object Object;

	public TypeRef TypeReference						{ get { return (TypeRef)Object; }					set { Object = value; } }
	public IList<TypeRef> TypeRefList					{ get { return (IList<TypeRef>)Object; }			set { Object = value; } }
	public LangElement Node								{ get { return (LangElement)Object; }				set { Object = value; } }
	public List<LangElement> NodeList					{ get { return (List<LangElement>)Object; }			set { Object = value; } }
	public string String								{ get { return (string)Object; }					set { Object = value; } }
	public StringPair Strings							{ get { return (StringPair)Object; }				set { Object = value; } }
	public List<string> StringList						{ get { return (List<string>)Object; }				set { Object = value; } }
	public CompleteAlias Alias							{ get { return (CompleteAlias)Object; }				set { Object = value; } }
	public List<CompleteAlias> AliasList				{ get { return (List<CompleteAlias>)Object; }		set { Object = value; } }
	public ContextAlias ContextAlias					{ get { return (ContextAlias)Object; }				set { Object = value; } }
	public List<ContextAlias> ContextAliasList			{ get { return (List<ContextAlias>)Object; }		set { Object = value; } }
	public ActualParam Param							{ get { return (ActualParam)Object; }				set { Object = value; } }
	public List<ActualParam> ParamList					{ get { return (List<ActualParam>)Object; }			set { Object = value; } }
	public FormalParam FormalParam						{ get { return (FormalParam)Object; }				set { Object = value; } }
	public List<FormalParam> FormalParamList			{ get { return (List<FormalParam>)Object; }			set { Object = value; } }
	public Item Item									{ get { return (Item)Object; }						set { Object = value; } }
	public List<Item> ItemList							{ get { return (List<Item>)Object; }				set { Object = value; } }
	internal List<IfStatement> IfItemList				{ get { return (List<IfStatement>)Object; }			set { Object = value; } }
	public ForeachVar ForeachVar						{ get { return (ForeachVar)Object; }				set { Object = value; } }
	public AnonymousClass AnonymousClass				{ get { return (AnonymousClass)Object; }			set { Object = value; } }
	public UseBase Use									{ get { return (UseBase)Object; }					set { Object = value; } }
	public List<UseBase> UseList						{ get { return (List<UseBase>)Object; }				set { Object = value; } }
}

public partial class Parser: ShiftReduceParser<SemanticValueType,Span>
{

  protected override string[] NonTerminals { get { return nonTerminals; } }
  private static string[] nonTerminals;

  protected override State[] States { get { return states; } }
  private static readonly State[] states;

  protected override Rule[] Rules { get { return rules; } }
  private static readonly Rule[] rules;


  #region Construction

  static Parser()
  {

    #region states
    states = new State[]
    {
      new State(0, -2, new int[] {-130,1,-132,3}),
      new State(1, new int[] {0,2}),
      new State(2, -1),
      new State(3, -81, new int[] {-80,4}),
      new State(4, new int[] {123,7,330,23,329,31,332,151,339,163,343,177,344,472,348,476,355,479,316,486,328,495,321,502,320,97,36,98,319,505,388,892,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475,357,522,334,531,336,541,59,547,349,548,352,564,345,567,315,634,314,635,362,637,363,682,360,904,353,908,347,960,0,-3,327,-376,361,-171}, new int[] {-29,5,-30,6,-15,12,-38,503,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,507,-31,900,-32,901,-11,572,-10,632,-33,902,-35,903}),
      new State(5, -80),
      new State(6, -87),
      new State(7, -124, new int[] {-83,8}),
      new State(8, new int[] {125,9,123,7,330,23,329,31,332,151,339,163,343,177,344,472,348,476,355,479,316,486,328,495,321,502,320,97,36,98,319,505,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475,357,522,334,531,336,541,59,547,349,548,352,564,345,567,315,634,314,635,362,637,363,682,360,693,327,-376,361,-171}, new int[] {-78,10,-30,11,-15,12,-38,503,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,507,-31,570,-32,571,-11,572,-10,632,-33,636,-35,681}),
      new State(9, -131),
      new State(10, -123),
      new State(11, -125),
      new State(12, new int[] {327,871}, new int[] {-50,13,-51,15,-123,17,-124,878}),
      new State(13, -377, new int[] {-16,14}),
      new State(14, -132),
      new State(15, -377, new int[] {-16,16}),
      new State(16, -133),
      new State(17, new int[] {308,18,309,869,123,-207,330,-207,329,-207,332,-207,339,-207,343,-207,344,-207,348,-207,355,-207,316,-207,328,-207,321,-207,320,-207,36,-207,319,-207,388,-207,390,-207,40,-207,368,-207,91,-207,323,-207,367,-207,305,-207,303,-207,302,-207,43,-207,45,-207,33,-207,126,-207,306,-207,358,-207,359,-207,262,-207,261,-207,260,-207,259,-207,258,-207,301,-207,300,-207,299,-207,298,-207,297,-207,296,-207,295,-207,326,-207,64,-207,317,-207,318,-207,370,-207,371,-207,372,-207,374,-207,375,-207,376,-207,389,-207,373,-207,34,-207,383,-207,96,-207,266,-207,267,-207,269,-207,346,-207,357,-207,334,-207,336,-207,59,-207,349,-207,352,-207,345,-207,315,-207,314,-207,362,-207,363,-207,360,-207,353,-207,347,-207,327,-207,361,-207,0,-207,125,-207,341,-207,342,-207,340,-207,337,-207,335,-207,333,-207,331,-207,310,-207}),
      new State(18, new int[] {40,19}),
      new State(19, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,20,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(20, new int[] {41,21,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(21, new int[] {123,7,330,23,329,31,332,151,339,163,343,177,344,472,348,476,355,479,316,486,328,495,321,502,320,97,36,98,319,505,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475,357,522,334,531,336,541,59,547,349,548,352,564,345,567,327,-376}, new int[] {-30,22,-15,12,-38,503,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(22, -206),
      new State(23, new int[] {40,24}),
      new State(24, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,25,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(25, new int[] {41,26,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(26, -376, new int[] {-15,27}),
      new State(27, new int[] {123,7,330,23,329,31,332,151,339,163,343,177,344,472,348,476,355,479,316,486,328,495,321,502,320,97,36,98,319,505,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475,357,522,334,531,336,541,59,547,349,548,352,564,345,567,58,865,327,-376}, new int[] {-69,28,-30,30,-15,12,-38,503,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(28, -377, new int[] {-16,29}),
      new State(29, -134),
      new State(30, -203),
      new State(31, -376, new int[] {-15,32}),
      new State(32, new int[] {123,7,330,23,329,31,332,151,339,163,343,177,344,472,348,476,355,479,316,486,328,495,321,502,320,97,36,98,319,505,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475,357,522,334,531,336,541,59,547,349,548,352,564,345,567,327,-376}, new int[] {-30,33,-15,12,-38,503,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(33, new int[] {330,34}),
      new State(34, new int[] {40,35}),
      new State(35, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,36,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(36, new int[] {41,37,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(37, new int[] {59,38}),
      new State(38, -377, new int[] {-16,39}),
      new State(39, -135),
      new State(40, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,41,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(41, new int[] {283,-319,284,42,263,-319,265,-319,264,-319,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,-319,282,-319,59,-319,41,-319,125,-319,58,-319,93,-319,44,-319,268,-319,338,-319}),
      new State(42, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,43,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(43, new int[] {283,-320,284,-320,263,-320,265,-320,264,-320,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,-320,282,-320,59,-320,41,-320,125,-320,58,-320,93,-320,44,-320,268,-320,338,-320}),
      new State(44, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,45,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(45, new int[] {283,40,284,42,263,-321,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-321,41,-321,125,-321,58,-321,93,-321,44,-321,268,-321,338,-321}),
      new State(46, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,47,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(47, new int[] {283,40,284,42,263,-322,265,-322,264,-322,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-322,41,-322,125,-322,58,-322,93,-322,44,-322,268,-322,338,-322}),
      new State(48, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,49,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(49, new int[] {283,40,284,42,263,-323,265,46,264,-323,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-323,41,-323,125,-323,58,-323,93,-323,44,-323,268,-323,338,-323}),
      new State(50, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,51,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(51, new int[] {283,-324,284,-324,263,-324,265,-324,264,-324,124,-324,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,-324,282,-324,59,-324,41,-324,125,-324,58,-324,93,-324,44,-324,268,-324,338,-324}),
      new State(52, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,53,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(53, new int[] {283,-325,284,-325,263,-325,265,-325,264,-325,124,-325,38,-325,94,-325,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,-325,282,-325,59,-325,41,-325,125,-325,58,-325,93,-325,44,-325,268,-325,338,-325}),
      new State(54, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,55,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(55, new int[] {283,-326,284,-326,263,-326,265,-326,264,-326,124,-326,38,52,94,-326,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,-326,282,-326,59,-326,41,-326,125,-326,58,-326,93,-326,44,-326,268,-326,338,-326}),
      new State(56, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,57,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(57, new int[] {283,-327,284,-327,263,-327,265,-327,264,-327,124,-327,38,-327,94,-327,46,-327,43,-327,45,-327,42,62,304,64,47,66,37,68,293,-327,292,-327,287,-327,286,-327,289,-327,288,-327,60,-327,291,-327,62,-327,290,-327,285,-327,294,92,63,-327,282,-327,59,-327,41,-327,125,-327,58,-327,93,-327,44,-327,268,-327,338,-327}),
      new State(58, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,59,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(59, new int[] {283,-328,284,-328,263,-328,265,-328,264,-328,124,-328,38,-328,94,-328,46,-328,43,-328,45,-328,42,62,304,64,47,66,37,68,293,-328,292,-328,287,-328,286,-328,289,-328,288,-328,60,-328,291,-328,62,-328,290,-328,285,-328,294,92,63,-328,282,-328,59,-328,41,-328,125,-328,58,-328,93,-328,44,-328,268,-328,338,-328}),
      new State(60, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,61,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(61, new int[] {283,-329,284,-329,263,-329,265,-329,264,-329,124,-329,38,-329,94,-329,46,-329,43,-329,45,-329,42,62,304,64,47,66,37,68,293,-329,292,-329,287,-329,286,-329,289,-329,288,-329,60,-329,291,-329,62,-329,290,-329,285,-329,294,92,63,-329,282,-329,59,-329,41,-329,125,-329,58,-329,93,-329,44,-329,268,-329,338,-329}),
      new State(62, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,63,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(63, new int[] {283,-330,284,-330,263,-330,265,-330,264,-330,124,-330,38,-330,94,-330,46,-330,43,-330,45,-330,42,-330,304,64,47,-330,37,-330,293,-330,292,-330,287,-330,286,-330,289,-330,288,-330,60,-330,291,-330,62,-330,290,-330,285,-330,294,92,63,-330,282,-330,59,-330,41,-330,125,-330,58,-330,93,-330,44,-330,268,-330,338,-330}),
      new State(64, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,65,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(65, new int[] {283,-331,284,-331,263,-331,265,-331,264,-331,124,-331,38,-331,94,-331,46,-331,43,-331,45,-331,42,-331,304,64,47,-331,37,-331,293,-331,292,-331,287,-331,286,-331,289,-331,288,-331,60,-331,291,-331,62,-331,290,-331,285,-331,294,-331,63,-331,282,-331,59,-331,41,-331,125,-331,58,-331,93,-331,44,-331,268,-331,338,-331}),
      new State(66, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,67,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(67, new int[] {283,-332,284,-332,263,-332,265,-332,264,-332,124,-332,38,-332,94,-332,46,-332,43,-332,45,-332,42,-332,304,64,47,-332,37,-332,293,-332,292,-332,287,-332,286,-332,289,-332,288,-332,60,-332,291,-332,62,-332,290,-332,285,-332,294,92,63,-332,282,-332,59,-332,41,-332,125,-332,58,-332,93,-332,44,-332,268,-332,338,-332}),
      new State(68, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,69,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(69, new int[] {283,-333,284,-333,263,-333,265,-333,264,-333,124,-333,38,-333,94,-333,46,-333,43,-333,45,-333,42,-333,304,64,47,-333,37,-333,293,-333,292,-333,287,-333,286,-333,289,-333,288,-333,60,-333,291,-333,62,-333,290,-333,285,-333,294,92,63,-333,282,-333,59,-333,41,-333,125,-333,58,-333,93,-333,44,-333,268,-333,338,-333}),
      new State(70, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,71,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(71, new int[] {283,-334,284,-334,263,-334,265,-334,264,-334,124,-334,38,-334,94,-334,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,-334,292,-334,287,-334,286,-334,289,-334,288,-334,60,-334,291,-334,62,-334,290,-334,285,-334,294,92,63,-334,282,-334,59,-334,41,-334,125,-334,58,-334,93,-334,44,-334,268,-334,338,-334}),
      new State(72, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,73,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(73, new int[] {283,-335,284,-335,263,-335,265,-335,264,-335,124,-335,38,-335,94,-335,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,-335,292,-335,287,-335,286,-335,289,-335,288,-335,60,-335,291,-335,62,-335,290,-335,285,-335,294,92,63,-335,282,-335,59,-335,41,-335,125,-335,58,-335,93,-335,44,-335,268,-335,338,-335}),
      new State(74, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,75,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(75, new int[] {283,-340,284,-340,263,-340,265,-340,264,-340,124,-340,38,-340,94,-340,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,-340,282,-340,59,-340,41,-340,125,-340,58,-340,93,-340,44,-340,268,-340,338,-340}),
      new State(76, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,77,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(77, new int[] {283,-341,284,-341,263,-341,265,-341,264,-341,124,-341,38,-341,94,-341,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,-341,282,-341,59,-341,41,-341,125,-341,58,-341,93,-341,44,-341,268,-341,338,-341}),
      new State(78, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,79,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(79, new int[] {283,-342,284,-342,263,-342,265,-342,264,-342,124,-342,38,-342,94,-342,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,-342,282,-342,59,-342,41,-342,125,-342,58,-342,93,-342,44,-342,268,-342,338,-342}),
      new State(80, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,81,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(81, new int[] {283,-343,284,-343,263,-343,265,-343,264,-343,124,-343,38,-343,94,-343,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,-343,282,-343,59,-343,41,-343,125,-343,58,-343,93,-343,44,-343,268,-343,338,-343}),
      new State(82, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,83,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(83, new int[] {283,-344,284,-344,263,-344,265,-344,264,-344,124,-344,38,-344,94,-344,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,-344,286,-344,289,-344,288,-344,60,82,291,84,62,86,290,88,285,-344,294,92,63,-344,282,-344,59,-344,41,-344,125,-344,58,-344,93,-344,44,-344,268,-344,338,-344}),
      new State(84, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,85,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(85, new int[] {283,-345,284,-345,263,-345,265,-345,264,-345,124,-345,38,-345,94,-345,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,-345,286,-345,289,-345,288,-345,60,82,291,84,62,86,290,88,285,-345,294,92,63,-345,282,-345,59,-345,41,-345,125,-345,58,-345,93,-345,44,-345,268,-345,338,-345}),
      new State(86, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,87,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(87, new int[] {283,-346,284,-346,263,-346,265,-346,264,-346,124,-346,38,-346,94,-346,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,-346,286,-346,289,-346,288,-346,60,82,291,84,62,86,290,88,285,-346,294,92,63,-346,282,-346,59,-346,41,-346,125,-346,58,-346,93,-346,44,-346,268,-346,338,-346}),
      new State(88, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,89,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(89, new int[] {283,-347,284,-347,263,-347,265,-347,264,-347,124,-347,38,-347,94,-347,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,-347,286,-347,289,-347,288,-347,60,82,291,84,62,86,290,88,285,-347,294,92,63,-347,282,-347,59,-347,41,-347,125,-347,58,-347,93,-347,44,-347,268,-347,338,-347}),
      new State(90, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,91,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(91, new int[] {283,-348,284,-348,263,-348,265,-348,264,-348,124,-348,38,-348,94,-348,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,-348,282,-348,59,-348,41,-348,125,-348,58,-348,93,-348,44,-348,268,-348,338,-348}),
      new State(92, new int[] {316,293,319,185,388,186,390,189,320,97,36,98}, new int[] {-23,93,-24,94,-17,347,-101,182,-74,348,-44,787}),
      new State(93, -349),
      new State(94, new int[] {387,95,59,-393,283,-393,284,-393,263,-393,265,-393,264,-393,124,-393,38,-393,94,-393,46,-393,43,-393,45,-393,42,-393,304,-393,47,-393,37,-393,293,-393,292,-393,287,-393,286,-393,289,-393,288,-393,60,-393,291,-393,62,-393,290,-393,285,-393,294,-393,63,-393,282,-393,41,-393,125,-393,58,-393,93,-393,44,-393,268,-393,338,-393,40,-393}),
      new State(95, new int[] {320,97,36,98}, new int[] {-44,96}),
      new State(96, -453),
      new State(97, -444),
      new State(98, new int[] {123,99,320,97,36,98}, new int[] {-44,864}),
      new State(99, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,100,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(100, new int[] {125,101,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(101, -445),
      new State(102, new int[] {58,862,320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,103,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(103, new int[] {58,104,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(104, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,105,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(105, new int[] {283,40,284,42,263,-352,265,-352,264,-352,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,-352,282,106,59,-352,41,-352,125,-352,58,-352,93,-352,44,-352,268,-352,338,-352}),
      new State(106, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,107,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(107, new int[] {283,40,284,42,263,-354,265,-354,264,-354,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,-354,282,106,59,-354,41,-354,125,-354,58,-354,93,-354,44,-354,268,-354,338,-354}),
      new State(108, new int[] {61,109,281,836,280,838,279,840,270,842,278,844,277,846,276,848,275,850,274,852,273,854,272,856,271,858,303,860,302,861,59,-424,283,-424,284,-424,263,-424,265,-424,264,-424,124,-424,38,-424,94,-424,46,-424,43,-424,45,-424,42,-424,304,-424,47,-424,37,-424,293,-424,292,-424,287,-424,286,-424,289,-424,288,-424,60,-424,291,-424,62,-424,290,-424,285,-424,294,-424,63,-424,282,-424,41,-424,125,-424,58,-424,93,-424,44,-424,268,-424,338,-424,91,-429,366,-429,123,-429,387,-429}),
      new State(109, new int[] {38,111,320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,110,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(110, new int[] {283,40,284,42,263,-299,265,-299,264,-299,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-299,41,-299,125,-299,58,-299,93,-299,44,-299,268,-299,338,-299}),
      new State(111, new int[] {320,97,36,98,316,293,319,185,388,186,390,189,40,294,368,280,91,322,323,302,306,342}, new int[] {-39,112,-41,113,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,321,-46,332,-48,307,-75,308}),
      new State(112, new int[] {59,-300,283,-300,284,-300,263,-300,265,-300,264,-300,124,-300,38,-300,94,-300,46,-300,43,-300,45,-300,42,-300,304,-300,47,-300,37,-300,293,-300,292,-300,287,-300,286,-300,289,-300,288,-300,60,-300,291,-300,62,-300,290,-300,285,-300,294,-300,63,-300,282,-300,41,-300,125,-300,58,-300,93,-300,44,-300,268,-300,338,-300,91,-429,366,-429,123,-429,387,-429}),
      new State(113, -301),
      new State(114, new int[] {61,-441,281,-441,280,-441,279,-441,270,-441,278,-441,277,-441,276,-441,275,-441,274,-441,273,-441,272,-441,271,-441,303,-441,302,-441,59,-441,283,-441,284,-441,263,-441,265,-441,264,-441,124,-441,38,-441,94,-441,46,-441,43,-441,45,-441,42,-441,304,-441,47,-441,37,-441,293,-441,292,-441,287,-441,286,-441,289,-441,288,-441,60,-441,291,-441,62,-441,290,-441,285,-441,294,-441,63,-441,282,-441,91,-441,366,-441,123,-441,387,-441,41,-441,125,-441,58,-441,93,-441,44,-441,268,-441,338,-441,40,-432}),
      new State(115, -435),
      new State(116, new int[] {91,117,366,830,123,833,387,-428}),
      new State(117, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475,93,-426}, new int[] {-57,118,-38,120,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(118, new int[] {93,119}),
      new State(119, -436),
      new State(120, new int[] {283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,93,-427,59,-427,41,-427}),
      new State(121, -442),
      new State(122, new int[] {387,123}),
      new State(123, new int[] {320,97,36,98,319,197,262,200,261,201,260,202,259,203,258,204,263,205,264,206,265,207,294,208,306,209,305,210,326,211,327,212,308,213,309,214,310,215,328,216,329,217,330,218,331,219,332,220,333,221,334,222,335,223,336,224,337,225,338,226,349,227,350,228,351,229,352,230,353,231,354,232,355,233,356,234,357,235,358,236,359,237,344,238,345,239,346,240,347,241,348,242,266,243,267,244,367,245,339,246,340,247,341,248,342,249,343,250,368,251,369,252,364,253,365,254,388,255,362,256,363,257,361,258,373,259,374,260,376,261,375,262,370,263,371,264,372,265,389,266,316,267,315,268,314,269,313,270,312,271,311,272,123,273}, new int[] {-44,124,-98,125,-2,126,-99,198,-100,199}),
      new State(124, new int[] {61,-447,281,-447,280,-447,279,-447,270,-447,278,-447,277,-447,276,-447,275,-447,274,-447,273,-447,272,-447,271,-447,303,-447,302,-447,59,-447,283,-447,284,-447,263,-447,265,-447,264,-447,124,-447,38,-447,94,-447,46,-447,43,-447,45,-447,42,-447,304,-447,47,-447,37,-447,293,-447,292,-447,287,-447,286,-447,289,-447,288,-447,60,-447,291,-447,62,-447,290,-447,285,-447,294,-447,63,-447,282,-447,91,-447,366,-447,123,-447,387,-447,41,-447,125,-447,58,-447,93,-447,44,-447,268,-447,338,-447,40,-457}),
      new State(125, new int[] {91,-422,59,-422,283,-422,284,-422,263,-422,265,-422,264,-422,124,-422,38,-422,94,-422,46,-422,43,-422,45,-422,42,-422,304,-422,47,-422,37,-422,293,-422,292,-422,287,-422,286,-422,289,-422,288,-422,60,-422,291,-422,62,-422,290,-422,285,-422,294,-422,63,-422,282,-422,41,-422,125,-422,58,-422,93,-422,44,-422,268,-422,338,-422,40,-455}),
      new State(126, new int[] {40,128}, new int[] {-111,127}),
      new State(127, -388),
      new State(128, new int[] {41,129,320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475,391,827}, new int[] {-112,130,-109,829,-38,134,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(129, -228),
      new State(130, new int[] {41,131,44,132}),
      new State(131, -229),
      new State(132, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475,391,827}, new int[] {-109,133,-38,134,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(133, -231),
      new State(134, new int[] {283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,41,-232,44,-232}),
      new State(135, new int[] {346,475,387,-391}, new int[] {-12,136}),
      new State(136, new int[] {38,718,40,-379}, new int[] {-3,137}),
      new State(137, -375, new int[] {-14,138}),
      new State(138, new int[] {40,139}),
      new State(139, new int[] {368,700,369,701,319,185,388,186,390,189,63,703,38,-219,391,-219,320,-219,41,-214}, new int[] {-115,140,-116,705,-113,717,-21,708,-20,716,-18,699,-17,702,-101,182}),
      new State(140, new int[] {41,141}),
      new State(141, new int[] {353,763,58,-381,123,-381}, new int[] {-117,142}),
      new State(142, new int[] {58,697,123,-226}, new int[] {-19,143}),
      new State(143, -378, new int[] {-135,144}),
      new State(144, -376, new int[] {-15,145}),
      new State(145, new int[] {123,146}),
      new State(146, -124, new int[] {-83,147}),
      new State(147, new int[] {125,148,123,7,330,23,329,31,332,151,339,163,343,177,344,472,348,476,355,479,316,486,328,495,321,502,320,97,36,98,319,505,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475,357,522,334,531,336,541,59,547,349,548,352,564,345,567,315,634,314,635,362,637,363,682,360,693,327,-376,361,-171}, new int[] {-78,10,-30,11,-15,12,-38,503,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,507,-31,570,-32,571,-11,572,-10,632,-33,636,-35,681}),
      new State(148, -377, new int[] {-16,149}),
      new State(149, -378, new int[] {-135,150}),
      new State(150, -373),
      new State(151, new int[] {40,152}),
      new State(152, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475,59,-289}, new int[] {-85,153,-96,823,-38,826,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(153, new int[] {59,154}),
      new State(154, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475,59,-289}, new int[] {-85,155,-96,823,-38,826,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(155, new int[] {59,156}),
      new State(156, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475,41,-289}, new int[] {-85,157,-96,823,-38,826,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(157, new int[] {41,158}),
      new State(158, -376, new int[] {-15,159}),
      new State(159, new int[] {123,7,330,23,329,31,332,151,339,163,343,177,344,472,348,476,355,479,316,486,328,495,321,502,320,97,36,98,319,505,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475,357,522,334,531,336,541,59,547,349,548,352,564,345,567,58,819,327,-376}, new int[] {-67,160,-30,162,-15,12,-38,503,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(160, -377, new int[] {-16,161}),
      new State(161, -136),
      new State(162, -188),
      new State(163, new int[] {40,164}),
      new State(164, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,165,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(165, new int[] {41,166,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(166, -376, new int[] {-15,167}),
      new State(167, new int[] {123,170,58,811}, new int[] {-95,168}),
      new State(168, -377, new int[] {-16,169}),
      new State(169, -137),
      new State(170, new int[] {59,808,125,-198,341,-198,342,-198}, new int[] {-94,171}),
      new State(171, new int[] {125,172,341,173,342,805}),
      new State(172, -194),
      new State(173, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,174,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(174, new int[] {283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,58,803,59,804}, new int[] {-138,175}),
      new State(175, -124, new int[] {-83,176}),
      new State(176, new int[] {123,7,330,23,329,31,332,151,339,163,343,177,344,472,348,476,355,479,316,486,328,495,321,502,320,97,36,98,319,505,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475,357,522,334,531,336,541,59,547,349,548,352,564,345,567,315,634,314,635,362,637,363,682,360,693,125,-199,341,-199,342,-199,340,-199,327,-376,361,-171}, new int[] {-78,10,-30,11,-15,12,-38,503,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,507,-31,570,-32,571,-11,572,-10,632,-33,636,-35,681}),
      new State(177, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475,59,-426}, new int[] {-57,178,-38,120,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(178, new int[] {59,179}),
      new State(179, -138),
      new State(180, new int[] {40,128,387,-392,91,-421,59,-421,283,-421,284,-421,263,-421,265,-421,264,-421,124,-421,38,-421,94,-421,46,-421,43,-421,45,-421,42,-421,304,-421,47,-421,37,-421,293,-421,292,-421,287,-421,286,-421,289,-421,288,-421,60,-421,291,-421,62,-421,290,-421,285,-421,294,-421,63,-421,282,-421,41,-421,125,-421,58,-421,93,-421,44,-421,268,-421,338,-421}, new int[] {-111,181}),
      new State(181, -387),
      new State(182, new int[] {390,183,40,-84,387,-84,91,-84,59,-84,283,-84,284,-84,263,-84,265,-84,264,-84,124,-84,38,-84,94,-84,46,-84,43,-84,45,-84,42,-84,304,-84,47,-84,37,-84,293,-84,292,-84,287,-84,286,-84,289,-84,288,-84,60,-84,291,-84,62,-84,290,-84,285,-84,294,-84,63,-84,282,-84,41,-84,125,-84,58,-84,93,-84,44,-84,268,-84,338,-84,391,-84,320,-84,123,-84,365,-84}),
      new State(183, new int[] {319,184}),
      new State(184, -83),
      new State(185, -82),
      new State(186, new int[] {390,187}),
      new State(187, new int[] {319,185}, new int[] {-101,188}),
      new State(188, new int[] {390,183,40,-85,387,-85,91,-85,59,-85,283,-85,284,-85,263,-85,265,-85,264,-85,124,-85,38,-85,94,-85,46,-85,43,-85,45,-85,42,-85,304,-85,47,-85,37,-85,293,-85,292,-85,287,-85,286,-85,289,-85,288,-85,60,-85,291,-85,62,-85,290,-85,285,-85,294,-85,63,-85,282,-85,41,-85,125,-85,58,-85,93,-85,44,-85,268,-85,338,-85,391,-85,320,-85,123,-85,365,-85}),
      new State(189, new int[] {319,185}, new int[] {-101,190}),
      new State(190, new int[] {390,183,40,-86,387,-86,91,-86,59,-86,283,-86,284,-86,263,-86,265,-86,264,-86,124,-86,38,-86,94,-86,46,-86,43,-86,45,-86,42,-86,304,-86,47,-86,37,-86,293,-86,292,-86,287,-86,286,-86,289,-86,288,-86,60,-86,291,-86,62,-86,290,-86,285,-86,294,-86,63,-86,282,-86,41,-86,125,-86,58,-86,93,-86,44,-86,268,-86,338,-86,391,-86,320,-86,123,-86,365,-86}),
      new State(191, new int[] {387,192}),
      new State(192, new int[] {320,97,36,98,319,197,262,200,261,201,260,202,259,203,258,204,263,205,264,206,265,207,294,208,306,209,305,210,326,211,327,212,308,213,309,214,310,215,328,216,329,217,330,218,331,219,332,220,333,221,334,222,335,223,336,224,337,225,338,226,349,227,350,228,351,229,352,230,353,231,354,232,355,233,356,234,357,235,358,236,359,237,344,238,345,239,346,240,347,241,348,242,266,243,267,244,367,245,339,246,340,247,341,248,342,249,343,250,368,251,369,252,364,253,365,254,388,255,362,256,363,257,361,258,373,259,374,260,376,261,375,262,370,263,371,264,372,265,389,266,316,267,315,268,314,269,313,270,312,271,311,272,123,273}, new int[] {-44,193,-98,194,-2,195,-99,198,-100,199}),
      new State(193, new int[] {61,-448,281,-448,280,-448,279,-448,270,-448,278,-448,277,-448,276,-448,275,-448,274,-448,273,-448,272,-448,271,-448,303,-448,302,-448,59,-448,283,-448,284,-448,263,-448,265,-448,264,-448,124,-448,38,-448,94,-448,46,-448,43,-448,45,-448,42,-448,304,-448,47,-448,37,-448,293,-448,292,-448,287,-448,286,-448,289,-448,288,-448,60,-448,291,-448,62,-448,290,-448,285,-448,294,-448,63,-448,282,-448,91,-448,366,-448,123,-448,387,-448,41,-448,125,-448,58,-448,93,-448,44,-448,268,-448,338,-448,40,-457}),
      new State(194, new int[] {91,-423,59,-423,283,-423,284,-423,263,-423,265,-423,264,-423,124,-423,38,-423,94,-423,46,-423,43,-423,45,-423,42,-423,304,-423,47,-423,37,-423,293,-423,292,-423,287,-423,286,-423,289,-423,288,-423,60,-423,291,-423,62,-423,290,-423,285,-423,294,-423,63,-423,282,-423,41,-423,125,-423,58,-423,93,-423,44,-423,268,-423,338,-423,40,-455}),
      new State(195, new int[] {40,128}, new int[] {-111,196}),
      new State(196, -389),
      new State(197, -78),
      new State(198, -79),
      new State(199, -71),
      new State(200, -4),
      new State(201, -5),
      new State(202, -6),
      new State(203, -7),
      new State(204, -8),
      new State(205, -9),
      new State(206, -10),
      new State(207, -11),
      new State(208, -12),
      new State(209, -13),
      new State(210, -14),
      new State(211, -15),
      new State(212, -16),
      new State(213, -17),
      new State(214, -18),
      new State(215, -19),
      new State(216, -20),
      new State(217, -21),
      new State(218, -22),
      new State(219, -23),
      new State(220, -24),
      new State(221, -25),
      new State(222, -26),
      new State(223, -27),
      new State(224, -28),
      new State(225, -29),
      new State(226, -30),
      new State(227, -31),
      new State(228, -32),
      new State(229, -33),
      new State(230, -34),
      new State(231, -35),
      new State(232, -36),
      new State(233, -37),
      new State(234, -38),
      new State(235, -39),
      new State(236, -40),
      new State(237, -41),
      new State(238, -42),
      new State(239, -43),
      new State(240, -44),
      new State(241, -45),
      new State(242, -46),
      new State(243, -47),
      new State(244, -48),
      new State(245, -49),
      new State(246, -50),
      new State(247, -51),
      new State(248, -52),
      new State(249, -53),
      new State(250, -54),
      new State(251, -55),
      new State(252, -56),
      new State(253, -57),
      new State(254, -58),
      new State(255, -59),
      new State(256, -60),
      new State(257, -61),
      new State(258, -62),
      new State(259, -63),
      new State(260, -64),
      new State(261, -65),
      new State(262, -66),
      new State(263, -67),
      new State(264, -68),
      new State(265, -69),
      new State(266, -70),
      new State(267, -72),
      new State(268, -73),
      new State(269, -74),
      new State(270, -75),
      new State(271, -76),
      new State(272, -77),
      new State(273, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,274,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(274, new int[] {125,275,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(275, -456),
      new State(276, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,277,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(277, new int[] {41,278,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(278, new int[] {91,-430,366,-430,123,-430,387,-430,40,-433,59,-350,283,-350,284,-350,263,-350,265,-350,264,-350,124,-350,38,-350,94,-350,46,-350,43,-350,45,-350,42,-350,304,-350,47,-350,37,-350,293,-350,292,-350,287,-350,286,-350,289,-350,288,-350,60,-350,291,-350,62,-350,290,-350,285,-350,294,-350,63,-350,282,-350,41,-350,125,-350,58,-350,93,-350,44,-350,268,-350,338,-350}),
      new State(279, new int[] {91,-431,366,-431,123,-431,387,-431,40,-434,59,-419,283,-419,284,-419,263,-419,265,-419,264,-419,124,-419,38,-419,94,-419,46,-419,43,-419,45,-419,42,-419,304,-419,47,-419,37,-419,293,-419,292,-419,287,-419,286,-419,289,-419,288,-419,60,-419,291,-419,62,-419,290,-419,285,-419,294,-419,63,-419,282,-419,41,-419,125,-419,58,-419,93,-419,44,-419,268,-419,338,-419}),
      new State(280, new int[] {40,281}),
      new State(281, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,326,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475,38,755,44,-462,41,-462}, new int[] {-122,282,-121,284,-119,325,-120,287,-38,288,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(282, new int[] {41,283}),
      new State(283, -402),
      new State(284, new int[] {44,285,41,-461,93,-461}),
      new State(285, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,326,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475,38,755,44,-462,41,-462,93,-462}, new int[] {-119,286,-120,287,-38,288,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(286, -464),
      new State(287, -463),
      new State(288, new int[] {268,289,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,44,-467,41,-467,93,-467}),
      new State(289, new int[] {38,291,367,799,320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,290,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(290, new int[] {283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,44,-466,41,-466,93,-466}),
      new State(291, new int[] {320,97,36,98,316,293,319,185,388,186,390,189,40,294,368,280,91,322,323,302}, new int[] {-39,292,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,321,-46,332,-48,307,-75,308}),
      new State(292, new int[] {44,-468,41,-468,93,-468,91,-429,366,-429,123,-429,387,-429}),
      new State(293, -391),
      new State(294, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,295,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(295, new int[] {41,296,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(296, new int[] {91,-430,366,-430,123,-430,387,-430,40,-433}),
      new State(297, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,326,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475,38,755,44,-462,93,-462}, new int[] {-122,298,-121,284,-119,325,-120,287,-38,288,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(298, new int[] {93,299}),
      new State(299, new int[] {61,300,91,-403,366,-403,123,-403,387,-403,40,-403,59,-403,283,-403,284,-403,263,-403,265,-403,264,-403,124,-403,38,-403,94,-403,46,-403,43,-403,45,-403,42,-403,304,-403,47,-403,37,-403,293,-403,292,-403,287,-403,286,-403,289,-403,288,-403,60,-403,291,-403,62,-403,290,-403,285,-403,294,-403,63,-403,282,-403,41,-403,125,-403,58,-403,93,-403,44,-403,268,-403,338,-403}),
      new State(300, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,301,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(301, new int[] {283,40,284,42,263,-298,265,-298,264,-298,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-298,41,-298,125,-298,58,-298,93,-298,44,-298,268,-298,338,-298}),
      new State(302, -404),
      new State(303, new int[] {91,304,59,-420,283,-420,284,-420,263,-420,265,-420,264,-420,124,-420,38,-420,94,-420,46,-420,43,-420,45,-420,42,-420,304,-420,47,-420,37,-420,293,-420,292,-420,287,-420,286,-420,289,-420,288,-420,60,-420,291,-420,62,-420,290,-420,285,-420,294,-420,63,-420,282,-420,41,-420,125,-420,58,-420,93,-420,44,-420,268,-420,338,-420}),
      new State(304, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475,93,-426}, new int[] {-57,305,-38,120,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(305, new int[] {93,306}),
      new State(306, -437),
      new State(307, -440),
      new State(308, new int[] {40,128}, new int[] {-111,309}),
      new State(309, -390),
      new State(310, -425),
      new State(311, new int[] {40,312}),
      new State(312, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,326,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475,38,755,44,-462,41,-462}, new int[] {-122,313,-121,284,-119,325,-120,287,-38,288,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(313, new int[] {41,314}),
      new State(314, new int[] {61,315}),
      new State(315, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,316,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(316, new int[] {283,40,284,42,263,-297,265,-297,264,-297,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-297,41,-297,125,-297,58,-297,93,-297,44,-297,268,-297,338,-297}),
      new State(317, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,318,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(318, -302),
      new State(319, new int[] {320,97,36,98,316,293,319,185,388,186,390,189,40,294,368,280,91,322,323,302}, new int[] {-39,320,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,321,-46,332,-48,307,-75,308}),
      new State(320, new int[] {59,-316,283,-316,284,-316,263,-316,265,-316,264,-316,124,-316,38,-316,94,-316,46,-316,43,-316,45,-316,42,-316,304,-316,47,-316,37,-316,293,-316,292,-316,287,-316,286,-316,289,-316,288,-316,60,-316,291,-316,62,-316,290,-316,285,-316,294,-316,63,-316,282,-316,41,-316,125,-316,58,-316,93,-316,44,-316,268,-316,338,-316,91,-429,366,-429,123,-429,387,-429}),
      new State(321, new int[] {91,-431,366,-431,123,-431,387,-431,40,-434}),
      new State(322, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,326,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475,38,755,44,-462,93,-462}, new int[] {-122,323,-121,284,-119,325,-120,287,-38,288,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(323, new int[] {93,324}),
      new State(324, -403),
      new State(325, -465),
      new State(326, new int[] {40,327}),
      new State(327, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,326,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475,38,755,44,-462,41,-462}, new int[] {-122,328,-121,284,-119,325,-120,287,-38,288,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(328, new int[] {41,329}),
      new State(329, new int[] {61,315,44,-471,41,-471,93,-471}),
      new State(330, new int[] {320,97,36,98,316,293,319,185,388,186,390,189,40,294,368,280,91,322,323,302}, new int[] {-39,331,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,321,-46,332,-48,307,-75,308}),
      new State(331, new int[] {59,-318,283,-318,284,-318,263,-318,265,-318,264,-318,124,-318,38,-318,94,-318,46,-318,43,-318,45,-318,42,-318,304,-318,47,-318,37,-318,293,-318,292,-318,287,-318,286,-318,289,-318,288,-318,60,-318,291,-318,62,-318,290,-318,285,-318,294,-318,63,-318,282,-318,41,-318,125,-318,58,-318,93,-318,44,-318,268,-318,338,-318,91,-429,366,-429,123,-429,387,-429}),
      new State(332, new int[] {91,304}),
      new State(333, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,334,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(334, new int[] {283,-336,284,-336,263,-336,265,-336,264,-336,124,-336,38,-336,94,-336,46,-336,43,-336,45,-336,42,-336,304,64,47,-336,37,-336,293,-336,292,-336,287,-336,286,-336,289,-336,288,-336,60,-336,291,-336,62,-336,290,-336,285,-336,294,-336,63,-336,282,-336,59,-336,41,-336,125,-336,58,-336,93,-336,44,-336,268,-336,338,-336}),
      new State(335, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,336,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(336, new int[] {283,-337,284,-337,263,-337,265,-337,264,-337,124,-337,38,-337,94,-337,46,-337,43,-337,45,-337,42,-337,304,64,47,-337,37,-337,293,-337,292,-337,287,-337,286,-337,289,-337,288,-337,60,-337,291,-337,62,-337,290,-337,285,-337,294,-337,63,-337,282,-337,59,-337,41,-337,125,-337,58,-337,93,-337,44,-337,268,-337,338,-337}),
      new State(337, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,338,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(338, new int[] {283,-338,284,-338,263,-338,265,-338,264,-338,124,-338,38,-338,94,-338,46,-338,43,-338,45,-338,42,-338,304,64,47,-338,37,-338,293,-338,292,-338,287,-338,286,-338,289,-338,288,-338,60,-338,291,-338,62,-338,290,-338,285,-338,294,92,63,-338,282,-338,59,-338,41,-338,125,-338,58,-338,93,-338,44,-338,268,-338,338,-338}),
      new State(339, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,340,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(340, new int[] {283,-339,284,-339,263,-339,265,-339,264,-339,124,-339,38,-339,94,-339,46,-339,43,-339,45,-339,42,-339,304,64,47,-339,37,-339,293,-339,292,-339,287,-339,286,-339,289,-339,288,-339,60,-339,291,-339,62,-339,290,-339,285,-339,294,-339,63,-339,282,-339,59,-339,41,-339,125,-339,58,-339,93,-339,44,-339,268,-339,338,-339}),
      new State(341, -351),
      new State(342, new int[] {316,293,319,185,388,186,390,189,320,97,36,98,361,788}, new int[] {-23,343,-126,346,-24,94,-17,347,-101,182,-74,348,-44,787}),
      new State(343, new int[] {40,128,59,-400,283,-400,284,-400,263,-400,265,-400,264,-400,124,-400,38,-400,94,-400,46,-400,43,-400,45,-400,42,-400,304,-400,47,-400,37,-400,293,-400,292,-400,287,-400,286,-400,289,-400,288,-400,60,-400,291,-400,62,-400,290,-400,285,-400,294,-400,63,-400,282,-400,41,-400,125,-400,58,-400,93,-400,44,-400,268,-400,338,-400}, new int[] {-110,344,-111,345}),
      new State(344, -295),
      new State(345, -401),
      new State(346, -296),
      new State(347, -392),
      new State(348, new int[] {91,349,123,775,366,778,387,785,59,-394,283,-394,284,-394,263,-394,265,-394,264,-394,124,-394,38,-394,94,-394,46,-394,43,-394,45,-394,42,-394,304,-394,47,-394,37,-394,293,-394,292,-394,287,-394,286,-394,289,-394,288,-394,60,-394,291,-394,62,-394,290,-394,285,-394,294,-394,63,-394,282,-394,41,-394,125,-394,58,-394,93,-394,44,-394,268,-394,338,-394,40,-394}),
      new State(349, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475,93,-426}, new int[] {-57,350,-38,120,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(350, new int[] {93,351}),
      new State(351, -450),
      new State(352, -355),
      new State(353, new int[] {40,354}),
      new State(354, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-92,355,-37,774,-38,359,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(355, new int[] {41,356,44,357}),
      new State(356, -486),
      new State(357, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-37,358,-38,359,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(358, -494),
      new State(359, new int[] {283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,41,-495,44,-495}),
      new State(360, new int[] {40,361}),
      new State(361, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,362,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(362, new int[] {41,363,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(363, -487),
      new State(364, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,365,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(365, new int[] {283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-488,41,-488,125,-488,58,-488,93,-488,44,-488,268,-488,338,-488}),
      new State(366, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,367,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(367, new int[] {283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-489,41,-489,125,-489,58,-489,93,-489,44,-489,268,-489,338,-489}),
      new State(368, new int[] {40,369}),
      new State(369, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,370,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(370, new int[] {41,371,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(371, -490),
      new State(372, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,373,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(373, new int[] {283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-491,41,-491,125,-491,58,-491,93,-491,44,-491,268,-491,338,-491}),
      new State(374, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,375,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(375, new int[] {283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-492,41,-492,125,-492,58,-492,93,-492,44,-492,268,-492,338,-492}),
      new State(376, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,377,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(377, new int[] {283,-356,284,-356,263,-356,265,-356,264,-356,124,-356,38,-356,94,-356,46,-356,43,-356,45,-356,42,-356,304,64,47,-356,37,-356,293,-356,292,-356,287,-356,286,-356,289,-356,288,-356,60,-356,291,-356,62,-356,290,-356,285,-356,294,-356,63,-356,282,-356,59,-356,41,-356,125,-356,58,-356,93,-356,44,-356,268,-356,338,-356}),
      new State(378, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,379,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(379, new int[] {283,-357,284,-357,263,-357,265,-357,264,-357,124,-357,38,-357,94,-357,46,-357,43,-357,45,-357,42,-357,304,64,47,-357,37,-357,293,-357,292,-357,287,-357,286,-357,289,-357,288,-357,60,-357,291,-357,62,-357,290,-357,285,-357,294,-357,63,-357,282,-357,59,-357,41,-357,125,-357,58,-357,93,-357,44,-357,268,-357,338,-357}),
      new State(380, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,381,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(381, new int[] {283,-358,284,-358,263,-358,265,-358,264,-358,124,-358,38,-358,94,-358,46,-358,43,-358,45,-358,42,-358,304,64,47,-358,37,-358,293,-358,292,-358,287,-358,286,-358,289,-358,288,-358,60,-358,291,-358,62,-358,290,-358,285,-358,294,-358,63,-358,282,-358,59,-358,41,-358,125,-358,58,-358,93,-358,44,-358,268,-358,338,-358}),
      new State(382, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,383,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(383, new int[] {283,-359,284,-359,263,-359,265,-359,264,-359,124,-359,38,-359,94,-359,46,-359,43,-359,45,-359,42,-359,304,64,47,-359,37,-359,293,-359,292,-359,287,-359,286,-359,289,-359,288,-359,60,-359,291,-359,62,-359,290,-359,285,-359,294,-359,63,-359,282,-359,59,-359,41,-359,125,-359,58,-359,93,-359,44,-359,268,-359,338,-359}),
      new State(384, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,385,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(385, new int[] {283,-360,284,-360,263,-360,265,-360,264,-360,124,-360,38,-360,94,-360,46,-360,43,-360,45,-360,42,-360,304,64,47,-360,37,-360,293,-360,292,-360,287,-360,286,-360,289,-360,288,-360,60,-360,291,-360,62,-360,290,-360,285,-360,294,-360,63,-360,282,-360,59,-360,41,-360,125,-360,58,-360,93,-360,44,-360,268,-360,338,-360}),
      new State(386, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,387,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(387, new int[] {283,-361,284,-361,263,-361,265,-361,264,-361,124,-361,38,-361,94,-361,46,-361,43,-361,45,-361,42,-361,304,64,47,-361,37,-361,293,-361,292,-361,287,-361,286,-361,289,-361,288,-361,60,-361,291,-361,62,-361,290,-361,285,-361,294,-361,63,-361,282,-361,59,-361,41,-361,125,-361,58,-361,93,-361,44,-361,268,-361,338,-361}),
      new State(388, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,389,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(389, new int[] {283,-362,284,-362,263,-362,265,-362,264,-362,124,-362,38,-362,94,-362,46,-362,43,-362,45,-362,42,-362,304,64,47,-362,37,-362,293,-362,292,-362,287,-362,286,-362,289,-362,288,-362,60,-362,291,-362,62,-362,290,-362,285,-362,294,-362,63,-362,282,-362,59,-362,41,-362,125,-362,58,-362,93,-362,44,-362,268,-362,338,-362}),
      new State(390, new int[] {40,392,59,-395,283,-395,284,-395,263,-395,265,-395,264,-395,124,-395,38,-395,94,-395,46,-395,43,-395,45,-395,42,-395,304,-395,47,-395,37,-395,293,-395,292,-395,287,-395,286,-395,289,-395,288,-395,60,-395,291,-395,62,-395,290,-395,285,-395,294,-395,63,-395,282,-395,41,-395,125,-395,58,-395,93,-395,44,-395,268,-395,338,-395}, new int[] {-72,391}),
      new State(391, -363),
      new State(392, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475,41,-426}, new int[] {-57,393,-38,120,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(393, new int[] {41,394}),
      new State(394, -396),
      new State(395, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,396,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(396, new int[] {283,-364,284,-364,263,-364,265,-364,264,-364,124,-364,38,-364,94,-364,46,-364,43,-364,45,-364,42,-364,304,64,47,-364,37,-364,293,-364,292,-364,287,-364,286,-364,289,-364,288,-364,60,-364,291,-364,62,-364,290,-364,285,-364,294,-364,63,-364,282,-364,59,-364,41,-364,125,-364,58,-364,93,-364,44,-364,268,-364,338,-364}),
      new State(397, -365),
      new State(398, -405),
      new State(399, -406),
      new State(400, -407),
      new State(401, -408),
      new State(402, -409),
      new State(403, -410),
      new State(404, -411),
      new State(405, -412),
      new State(406, -413),
      new State(407, -414),
      new State(408, new int[] {320,413,385,422,386,436,322,773}, new int[] {-91,409,-59,441}),
      new State(409, new int[] {34,410,322,412,320,413,385,422,386,436}, new int[] {-59,411}),
      new State(410, -415),
      new State(411, -472),
      new State(412, -473),
      new State(413, new int[] {91,414,366,420,34,-476,322,-476,320,-476,385,-476,386,-476,384,-476,96,-476}),
      new State(414, new int[] {319,417,325,418,320,419}, new int[] {-60,415}),
      new State(415, new int[] {93,416}),
      new State(416, -477),
      new State(417, -483),
      new State(418, -484),
      new State(419, -485),
      new State(420, new int[] {319,421}),
      new State(421, -478),
      new State(422, new int[] {324,425,320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,423,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(423, new int[] {125,424,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(424, -479),
      new State(425, new int[] {125,426,91,427}),
      new State(426, -480),
      new State(427, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,428,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(428, new int[] {93,429,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(429, new int[] {125,430}),
      new State(430, -481),
      new State(431, new int[] {384,432,322,433,320,413,385,422,386,436}, new int[] {-91,439,-59,441}),
      new State(432, -416),
      new State(433, new int[] {384,434,320,413,385,422,386,436}, new int[] {-59,435}),
      new State(434, -417),
      new State(435, -475),
      new State(436, new int[] {320,97,36,98,316,293,319,185,388,186,390,189,40,294,368,280,91,322,323,302}, new int[] {-39,437,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,321,-46,332,-48,307,-75,308}),
      new State(437, new int[] {125,438,91,-429,366,-429,123,-429,387,-429}),
      new State(438, -482),
      new State(439, new int[] {384,440,322,412,320,413,385,422,386,436}, new int[] {-59,411}),
      new State(440, -418),
      new State(441, -474),
      new State(442, -366),
      new State(443, new int[] {96,444,322,445,320,413,385,422,386,436}, new int[] {-91,447,-59,441}),
      new State(444, -397),
      new State(445, new int[] {96,446,320,413,385,422,386,436}, new int[] {-59,435}),
      new State(446, -398),
      new State(447, new int[] {96,448,322,412,320,413,385,422,386,436}, new int[] {-59,411}),
      new State(448, -399),
      new State(449, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,450,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(450, new int[] {283,40,284,42,263,-367,265,-367,264,-367,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-367,41,-367,125,-367,58,-367,93,-367,44,-367,268,-367,338,-367}),
      new State(451, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475,59,-368,283,-368,284,-368,263,-368,265,-368,264,-368,124,-368,38,-368,94,-368,46,-368,42,-368,304,-368,47,-368,37,-368,293,-368,292,-368,287,-368,286,-368,289,-368,288,-368,60,-368,291,-368,62,-368,290,-368,285,-368,294,-368,63,-368,282,-368,41,-368,125,-368,58,-368,93,-368,44,-368,268,-368,338,-368}, new int[] {-38,452,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(452, new int[] {268,453,283,40,284,42,263,-369,265,-369,264,-369,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-369,41,-369,125,-369,58,-369,93,-369,44,-369,338,-369}),
      new State(453, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,454,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(454, new int[] {283,40,284,42,263,-370,265,-370,264,-370,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-370,41,-370,125,-370,58,-370,93,-370,44,-370,268,-370,338,-370}),
      new State(455, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,456,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(456, new int[] {283,40,284,42,263,-371,265,-371,264,-371,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-371,41,-371,125,-371,58,-371,93,-371,44,-371,268,-371,338,-371}),
      new State(457, new int[] {38,718,40,-379}, new int[] {-3,458}),
      new State(458, -375, new int[] {-14,459}),
      new State(459, new int[] {40,460}),
      new State(460, new int[] {368,700,369,701,319,185,388,186,390,189,63,703,38,-219,391,-219,320,-219,41,-214}, new int[] {-115,461,-116,705,-113,717,-21,708,-20,716,-18,699,-17,702,-101,182}),
      new State(461, new int[] {41,462}),
      new State(462, new int[] {353,763,58,-381,123,-381}, new int[] {-117,463}),
      new State(463, new int[] {58,697,123,-226}, new int[] {-19,464}),
      new State(464, -378, new int[] {-135,465}),
      new State(465, -376, new int[] {-15,466}),
      new State(466, new int[] {123,467}),
      new State(467, -124, new int[] {-83,468}),
      new State(468, new int[] {125,469,123,7,330,23,329,31,332,151,339,163,343,177,344,472,348,476,355,479,316,486,328,495,321,502,320,97,36,98,319,505,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475,357,522,334,531,336,541,59,547,349,548,352,564,345,567,315,634,314,635,362,637,363,682,360,693,327,-376,361,-171}, new int[] {-78,10,-30,11,-15,12,-38,503,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,507,-31,570,-32,571,-11,572,-10,632,-33,636,-35,681}),
      new State(469, -377, new int[] {-16,470}),
      new State(470, -378, new int[] {-135,471}),
      new State(471, -372),
      new State(472, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475,59,-426}, new int[] {-57,473,-38,120,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(473, new int[] {59,474}),
      new State(474, -139),
      new State(475, -374),
      new State(476, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475,59,-426}, new int[] {-57,477,-38,120,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(477, new int[] {59,478}),
      new State(478, -140),
      new State(479, new int[] {320,97,36,98}, new int[] {-86,480,-54,485,-44,484}),
      new State(480, new int[] {59,481,44,482}),
      new State(481, -141),
      new State(482, new int[] {320,97,36,98}, new int[] {-54,483,-44,484}),
      new State(483, -234),
      new State(484, -236),
      new State(485, -235),
      new State(486, new int[] {320,491,346,475,387,-391}, new int[] {-87,487,-12,136,-55,494}),
      new State(487, new int[] {59,488,44,489}),
      new State(488, -142),
      new State(489, new int[] {320,491}, new int[] {-55,490}),
      new State(490, -237),
      new State(491, new int[] {61,492,59,-239,44,-239}),
      new State(492, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,493,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(493, new int[] {283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-240,44,-240}),
      new State(494, -238),
      new State(495, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-88,496,-56,501,-38,500,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(496, new int[] {59,497,44,498}),
      new State(497, -143),
      new State(498, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-56,499,-38,500,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(499, -286),
      new State(500, new int[] {283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-288,44,-288}),
      new State(501, -287),
      new State(502, -144),
      new State(503, new int[] {59,504,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(504, -145),
      new State(505, new int[] {58,506,390,-82,40,-82,387,-82,91,-82,59,-82,283,-82,284,-82,263,-82,265,-82,264,-82,124,-82,38,-82,94,-82,46,-82,43,-82,45,-82,42,-82,304,-82,47,-82,37,-82,293,-82,292,-82,287,-82,286,-82,289,-82,288,-82,60,-82,291,-82,62,-82,290,-82,285,-82,294,-82,63,-82,282,-82}),
      new State(506, -154),
      new State(507, new int[] {38,718,319,-379,40,-379}, new int[] {-3,508}),
      new State(508, new int[] {319,509,40,-375}, new int[] {-14,459}),
      new State(509, -375, new int[] {-14,510}),
      new State(510, new int[] {40,511}),
      new State(511, new int[] {368,700,369,701,319,185,388,186,390,189,63,703,38,-219,391,-219,320,-219,41,-214}, new int[] {-115,512,-116,705,-113,717,-21,708,-20,716,-18,699,-17,702,-101,182}),
      new State(512, new int[] {41,513}),
      new State(513, new int[] {58,697,123,-226}, new int[] {-19,514}),
      new State(514, -378, new int[] {-135,515}),
      new State(515, -376, new int[] {-15,516}),
      new State(516, new int[] {123,517}),
      new State(517, -124, new int[] {-83,518}),
      new State(518, new int[] {125,519,123,7,330,23,329,31,332,151,339,163,343,177,344,472,348,476,355,479,316,486,328,495,321,502,320,97,36,98,319,505,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475,357,522,334,531,336,541,59,547,349,548,352,564,345,567,315,634,314,635,362,637,363,682,360,693,327,-376,361,-171}, new int[] {-78,10,-30,11,-15,12,-38,503,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,507,-31,570,-32,571,-11,572,-10,632,-33,636,-35,681}),
      new State(519, -377, new int[] {-16,520}),
      new State(520, -378, new int[] {-135,521}),
      new State(521, -164),
      new State(522, new int[] {40,523}),
      new State(523, new int[] {320,97,36,98,316,293,319,185,388,186,390,189,40,294,368,280,91,322,323,302}, new int[] {-89,524,-53,530,-39,529,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,321,-46,332,-48,307,-75,308}),
      new State(524, new int[] {41,525,44,527}),
      new State(525, new int[] {59,526}),
      new State(526, -146),
      new State(527, new int[] {320,97,36,98,316,293,319,185,388,186,390,189,40,294,368,280,91,322,323,302}, new int[] {-53,528,-39,529,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,321,-46,332,-48,307,-75,308}),
      new State(528, -162),
      new State(529, new int[] {41,-163,44,-163,91,-429,366,-429,123,-429,387,-429}),
      new State(530, -161),
      new State(531, new int[] {40,532}),
      new State(532, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,533,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(533, new int[] {338,534,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(534, new int[] {320,97,36,98,316,293,319,185,388,186,390,189,40,294,368,280,91,752,323,302,38,757,367,759}, new int[] {-125,535,-39,751,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,321,-46,332,-48,307,-75,308}),
      new State(535, new int[] {41,536,268,745}),
      new State(536, -376, new int[] {-15,537}),
      new State(537, new int[] {123,7,330,23,329,31,332,151,339,163,343,177,344,472,348,476,355,479,316,486,328,495,321,502,320,97,36,98,319,505,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475,357,522,334,531,336,541,59,547,349,548,352,564,345,567,58,741,327,-376}, new int[] {-68,538,-30,540,-15,12,-38,503,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(538, -377, new int[] {-16,539}),
      new State(539, -147),
      new State(540, -190),
      new State(541, new int[] {40,542}),
      new State(542, new int[] {319,736}, new int[] {-81,543,-52,740}),
      new State(543, new int[] {41,544,44,734}),
      new State(544, new int[] {123,7,330,23,329,31,332,151,339,163,343,177,344,472,348,476,355,479,316,486,328,495,321,502,320,97,36,98,319,505,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475,357,522,334,531,336,541,59,547,349,548,352,564,345,567,58,730,327,-376}, new int[] {-61,545,-30,546,-15,12,-38,503,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(545, -149),
      new State(546, -192),
      new State(547, -150),
      new State(548, new int[] {123,549}),
      new State(549, -124, new int[] {-83,550}),
      new State(550, new int[] {125,551,123,7,330,23,329,31,332,151,339,163,343,177,344,472,348,476,355,479,316,486,328,495,321,502,320,97,36,98,319,505,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475,357,522,334,531,336,541,59,547,349,548,352,564,345,567,315,634,314,635,362,637,363,682,360,693,327,-376,361,-171}, new int[] {-78,10,-30,11,-15,12,-38,503,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,507,-31,570,-32,571,-11,572,-10,632,-33,636,-35,681}),
      new State(551, -376, new int[] {-15,552}),
      new State(552, -155, new int[] {-97,553}),
      new State(553, new int[] {350,556,351,726,123,-159,330,-159,329,-159,332,-159,339,-159,343,-159,344,-159,348,-159,355,-159,316,-159,328,-159,321,-159,320,-159,36,-159,319,-159,388,-159,390,-159,40,-159,368,-159,91,-159,323,-159,367,-159,305,-159,303,-159,302,-159,43,-159,45,-159,33,-159,126,-159,306,-159,358,-159,359,-159,262,-159,261,-159,260,-159,259,-159,258,-159,301,-159,300,-159,299,-159,298,-159,297,-159,296,-159,295,-159,326,-159,64,-159,317,-159,318,-159,370,-159,371,-159,372,-159,374,-159,375,-159,376,-159,389,-159,373,-159,34,-159,383,-159,96,-159,266,-159,267,-159,269,-159,346,-159,357,-159,334,-159,336,-159,59,-159,349,-159,352,-159,345,-159,315,-159,314,-159,362,-159,363,-159,360,-159,353,-159,347,-159,327,-159,361,-159,0,-159,125,-159,308,-159,309,-159,341,-159,342,-159,340,-159,337,-159,335,-159,333,-159,331,-159,310,-159}, new int[] {-73,554}),
      new State(554, -377, new int[] {-16,555}),
      new State(555, -151),
      new State(556, new int[] {40,557}),
      new State(557, new int[] {319,185,388,186,390,189}, new int[] {-26,558,-17,725,-101,182}),
      new State(558, new int[] {320,559,124,723}),
      new State(559, new int[] {41,560}),
      new State(560, new int[] {123,561}),
      new State(561, -124, new int[] {-83,562}),
      new State(562, new int[] {125,563,123,7,330,23,329,31,332,151,339,163,343,177,344,472,348,476,355,479,316,486,328,495,321,502,320,97,36,98,319,505,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475,357,522,334,531,336,541,59,547,349,548,352,564,345,567,315,634,314,635,362,637,363,682,360,693,327,-376,361,-171}, new int[] {-78,10,-30,11,-15,12,-38,503,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,507,-31,570,-32,571,-11,572,-10,632,-33,636,-35,681}),
      new State(563, -156),
      new State(564, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,565,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(565, new int[] {59,566,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(566, -152),
      new State(567, new int[] {319,568}),
      new State(568, new int[] {59,569}),
      new State(569, -153),
      new State(570, -126),
      new State(571, -127),
      new State(572, new int[] {361,573}),
      new State(573, new int[] {319,574}),
      new State(574, new int[] {364,721,365,-178,123,-178}, new int[] {-22,575}),
      new State(575, -169, new int[] {-136,576}),
      new State(576, new int[] {365,719,123,-182}, new int[] {-27,577}),
      new State(577, -375, new int[] {-14,578}),
      new State(578, -376, new int[] {-15,579}),
      new State(579, new int[] {123,580}),
      new State(580, -242, new int[] {-84,581}),
      new State(581, new int[] {125,582,311,598,312,599,313,600,316,601,315,602,314,603,356,605,353,646,347,-268,346,-268}, new int[] {-79,584,-6,585,-8,596,-9,604,-7,606}),
      new State(582, -377, new int[] {-16,583}),
      new State(583, -170),
      new State(584, -241),
      new State(585, new int[] {320,590}, new int[] {-93,586,-58,595}),
      new State(586, new int[] {59,587,44,588}),
      new State(587, -243),
      new State(588, new int[] {320,590}, new int[] {-58,589}),
      new State(589, -278),
      new State(590, new int[] {61,592,59,-375,44,-375}, new int[] {-14,591}),
      new State(591, -280),
      new State(592, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,593,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(593, new int[] {283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-375,44,-375}, new int[] {-14,594}),
      new State(594, -281),
      new State(595, -279),
      new State(596, new int[] {311,598,312,599,313,600,316,601,315,602,314,603,320,-266,347,-269,346,-269}, new int[] {-9,597}),
      new State(597, -271),
      new State(598, -272),
      new State(599, -273),
      new State(600, -274),
      new State(601, -275),
      new State(602, -276),
      new State(603, -277),
      new State(604, -270),
      new State(605, -267),
      new State(606, new int[] {347,607,346,475}, new int[] {-12,617}),
      new State(607, new int[] {319,197,262,200,261,201,260,202,259,203,258,204,263,205,264,206,265,207,294,208,306,209,305,210,326,211,327,212,308,213,309,214,310,215,328,216,329,217,330,218,331,219,332,220,333,221,334,222,335,223,336,224,337,225,338,226,349,227,350,228,351,229,352,230,353,231,354,232,355,233,356,234,357,235,358,236,359,237,344,238,345,239,346,240,347,241,348,242,266,243,267,244,367,245,339,246,340,247,341,248,342,249,343,250,368,251,369,252,364,253,365,254,388,255,362,256,363,257,361,258,373,259,374,260,376,261,375,262,370,263,371,264,372,265,389,266,316,267,315,268,314,269,313,270,312,271,311,272}, new int[] {-82,608,-65,616,-98,612,-99,198,-100,199}),
      new State(608, new int[] {59,609,44,610}),
      new State(609, -244),
      new State(610, new int[] {319,197,262,200,261,201,260,202,259,203,258,204,263,205,264,206,265,207,294,208,306,209,305,210,326,211,327,212,308,213,309,214,310,215,328,216,329,217,330,218,331,219,332,220,333,221,334,222,335,223,336,224,337,225,338,226,349,227,350,228,351,229,352,230,353,231,354,232,355,233,356,234,357,235,358,236,359,237,344,238,345,239,346,240,347,241,348,242,266,243,267,244,367,245,339,246,340,247,341,248,342,249,343,250,368,251,369,252,364,253,365,254,388,255,362,256,363,257,361,258,373,259,374,260,376,261,375,262,370,263,371,264,372,265,389,266,316,267,315,268,314,269,313,270,312,271,311,272}, new int[] {-65,611,-98,612,-99,198,-100,199}),
      new State(611, -282),
      new State(612, new int[] {61,613}),
      new State(613, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,614,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(614, new int[] {283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-375,44,-375}, new int[] {-14,615}),
      new State(615, -284),
      new State(616, -283),
      new State(617, new int[] {38,718,319,-379,262,-379,261,-379,260,-379,259,-379,258,-379,263,-379,264,-379,265,-379,294,-379,306,-379,305,-379,326,-379,327,-379,308,-379,309,-379,310,-379,328,-379,329,-379,330,-379,331,-379,332,-379,333,-379,334,-379,335,-379,336,-379,337,-379,338,-379,349,-379,350,-379,351,-379,352,-379,353,-379,354,-379,355,-379,356,-379,357,-379,358,-379,359,-379,344,-379,345,-379,346,-379,347,-379,348,-379,266,-379,267,-379,367,-379,339,-379,340,-379,341,-379,342,-379,343,-379,368,-379,369,-379,364,-379,365,-379,388,-379,362,-379,363,-379,361,-379,373,-379,374,-379,376,-379,375,-379,370,-379,371,-379,372,-379,389,-379,316,-379,315,-379,314,-379,313,-379,312,-379,311,-379}, new int[] {-3,618}),
      new State(618, new int[] {319,197,262,200,261,201,260,202,259,203,258,204,263,205,264,206,265,207,294,208,306,209,305,210,326,211,327,212,308,213,309,214,310,215,328,216,329,217,330,218,331,219,332,220,333,221,334,222,335,223,336,224,337,225,338,226,349,227,350,228,351,229,352,230,353,231,354,232,355,233,356,234,357,235,358,236,359,237,344,238,345,239,346,240,347,241,348,242,266,243,267,244,367,245,339,246,340,247,341,248,342,249,343,250,368,251,369,252,364,253,365,254,388,255,362,256,363,257,361,258,373,259,374,260,376,261,375,262,370,263,371,264,372,265,389,266,316,267,315,268,314,269,313,270,312,271,311,272}, new int[] {-98,619,-99,198,-100,199}),
      new State(619, -375, new int[] {-14,620}),
      new State(620, new int[] {40,621}),
      new State(621, new int[] {368,700,369,701,319,185,388,186,390,189,63,703,38,-219,391,-219,320,-219,41,-214}, new int[] {-115,622,-116,705,-113,717,-21,708,-20,716,-18,699,-17,702,-101,182}),
      new State(622, new int[] {41,623}),
      new State(623, new int[] {58,697,59,-226,123,-226}, new int[] {-19,624}),
      new State(624, -378, new int[] {-135,625}),
      new State(625, new int[] {59,628,123,629}, new int[] {-71,626}),
      new State(626, -378, new int[] {-135,627}),
      new State(627, -246),
      new State(628, -264),
      new State(629, -124, new int[] {-83,630}),
      new State(630, new int[] {125,631,123,7,330,23,329,31,332,151,339,163,343,177,344,472,348,476,355,479,316,486,328,495,321,502,320,97,36,98,319,505,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475,357,522,334,531,336,541,59,547,349,548,352,564,345,567,315,634,314,635,362,637,363,682,360,693,327,-376,361,-171}, new int[] {-78,10,-30,11,-15,12,-38,503,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,507,-31,570,-32,571,-11,572,-10,632,-33,636,-35,681}),
      new State(631, -265),
      new State(632, new int[] {315,634,314,635,361,-171}, new int[] {-11,633,-10,632}),
      new State(633, -172),
      new State(634, -173),
      new State(635, -174),
      new State(636, -128),
      new State(637, new int[] {319,638}),
      new State(638, -175, new int[] {-137,639}),
      new State(639, -375, new int[] {-14,640}),
      new State(640, -376, new int[] {-15,641}),
      new State(641, new int[] {123,642}),
      new State(642, -242, new int[] {-84,643}),
      new State(643, new int[] {125,644,311,598,312,599,313,600,316,601,315,602,314,603,356,605,353,646,347,-268,346,-268}, new int[] {-79,584,-6,585,-8,596,-9,604,-7,606}),
      new State(644, -377, new int[] {-16,645}),
      new State(645, -176),
      new State(646, new int[] {319,185,388,186,390,189}, new int[] {-25,647,-17,662,-101,182}),
      new State(647, new int[] {44,649,59,651,123,652}, new int[] {-76,648}),
      new State(648, -245),
      new State(649, new int[] {319,185,388,186,390,189}, new int[] {-17,650,-101,182}),
      new State(650, -248),
      new State(651, -249),
      new State(652, new int[] {125,653,319,666,388,667,390,189,262,200,261,201,260,202,259,203,258,204,263,205,264,206,265,207,294,208,306,209,305,210,326,211,327,212,308,213,309,214,310,215,328,216,329,217,330,218,331,219,332,220,333,221,334,222,335,223,336,224,337,225,338,226,349,227,350,228,351,229,352,230,353,231,354,232,355,233,356,234,357,235,358,236,359,237,344,238,345,239,346,240,347,241,348,242,266,243,267,244,367,245,339,246,340,247,341,248,342,249,343,250,368,251,369,252,364,253,365,254,362,256,363,257,361,258,373,259,374,260,376,261,375,262,370,263,371,264,372,265,389,266,316,267,315,268,314,269,313,270,312,271,311,272}, new int[] {-90,654,-62,680,-63,657,-104,658,-17,663,-101,182,-64,668,-103,669,-98,679,-99,198,-100,199}),
      new State(653, -250),
      new State(654, new int[] {125,655,319,666,388,667,390,189,262,200,261,201,260,202,259,203,258,204,263,205,264,206,265,207,294,208,306,209,305,210,326,211,327,212,308,213,309,214,310,215,328,216,329,217,330,218,331,219,332,220,333,221,334,222,335,223,336,224,337,225,338,226,349,227,350,228,351,229,352,230,353,231,354,232,355,233,356,234,357,235,358,236,359,237,344,238,345,239,346,240,347,241,348,242,266,243,267,244,367,245,339,246,340,247,341,248,342,249,343,250,368,251,369,252,364,253,365,254,362,256,363,257,361,258,373,259,374,260,376,261,375,262,370,263,371,264,372,265,389,266,316,267,315,268,314,269,313,270,312,271,311,272}, new int[] {-62,656,-63,657,-104,658,-17,663,-101,182,-64,668,-103,669,-98,679,-99,198,-100,199}),
      new State(655, -251),
      new State(656, -253),
      new State(657, -254),
      new State(658, new int[] {354,659,338,-262}),
      new State(659, new int[] {319,185,388,186,390,189}, new int[] {-25,660,-17,662,-101,182}),
      new State(660, new int[] {59,661,44,649}),
      new State(661, -256),
      new State(662, -247),
      new State(663, new int[] {387,664}),
      new State(664, new int[] {319,197,262,200,261,201,260,202,259,203,258,204,263,205,264,206,265,207,294,208,306,209,305,210,326,211,327,212,308,213,309,214,310,215,328,216,329,217,330,218,331,219,332,220,333,221,334,222,335,223,336,224,337,225,338,226,349,227,350,228,351,229,352,230,353,231,354,232,355,233,356,234,357,235,358,236,359,237,344,238,345,239,346,240,347,241,348,242,266,243,267,244,367,245,339,246,340,247,341,248,342,249,343,250,368,251,369,252,364,253,365,254,388,255,362,256,363,257,361,258,373,259,374,260,376,261,375,262,370,263,371,264,372,265,389,266,316,267,315,268,314,269,313,270,312,271,311,272}, new int[] {-98,665,-99,198,-100,199}),
      new State(665, -263),
      new State(666, new int[] {390,-82,387,-82,338,-78}),
      new State(667, new int[] {390,187,338,-59}),
      new State(668, -255),
      new State(669, new int[] {338,670}),
      new State(670, new int[] {319,671,262,200,261,201,260,202,259,203,258,204,263,205,264,206,265,207,294,208,306,209,305,210,326,211,327,212,308,213,309,214,310,215,328,216,329,217,330,218,331,219,332,220,333,221,334,222,335,223,336,224,337,225,338,226,349,227,350,228,351,229,352,230,353,231,354,232,355,233,356,234,357,235,358,236,359,237,344,238,345,239,346,240,347,241,348,242,266,243,267,244,367,245,339,246,340,247,341,248,342,249,343,250,368,251,369,252,364,253,365,254,388,255,362,256,363,257,361,258,373,259,374,260,376,261,375,262,370,263,371,264,372,265,389,266,311,598,312,599,313,600,316,601,315,602,314,603}, new int[] {-100,673,-9,675}),
      new State(671, new int[] {59,672}),
      new State(672, -257),
      new State(673, new int[] {59,674}),
      new State(674, -258),
      new State(675, new int[] {59,678,319,197,262,200,261,201,260,202,259,203,258,204,263,205,264,206,265,207,294,208,306,209,305,210,326,211,327,212,308,213,309,214,310,215,328,216,329,217,330,218,331,219,332,220,333,221,334,222,335,223,336,224,337,225,338,226,349,227,350,228,351,229,352,230,353,231,354,232,355,233,356,234,357,235,358,236,359,237,344,238,345,239,346,240,347,241,348,242,266,243,267,244,367,245,339,246,340,247,341,248,342,249,343,250,368,251,369,252,364,253,365,254,388,255,362,256,363,257,361,258,373,259,374,260,376,261,375,262,370,263,371,264,372,265,389,266,316,267,315,268,314,269,313,270,312,271,311,272}, new int[] {-98,676,-99,198,-100,199}),
      new State(676, new int[] {59,677}),
      new State(677, -259),
      new State(678, -260),
      new State(679, -261),
      new State(680, -252),
      new State(681, -129),
      new State(682, new int[] {319,683}),
      new State(683, new int[] {364,691,123,-180}, new int[] {-28,684}),
      new State(684, -375, new int[] {-14,685}),
      new State(685, -376, new int[] {-15,686}),
      new State(686, new int[] {123,687}),
      new State(687, -242, new int[] {-84,688}),
      new State(688, new int[] {125,689,311,598,312,599,313,600,316,601,315,602,314,603,356,605,353,646,347,-268,346,-268}, new int[] {-79,584,-6,585,-8,596,-9,604,-7,606}),
      new State(689, -377, new int[] {-16,690}),
      new State(690, -177),
      new State(691, new int[] {319,185,388,186,390,189}, new int[] {-25,692,-17,662,-101,182}),
      new State(692, new int[] {44,649,123,-181}),
      new State(693, new int[] {40,694}),
      new State(694, new int[] {41,695}),
      new State(695, new int[] {59,696}),
      new State(696, -130),
      new State(697, new int[] {368,700,369,701,319,185,388,186,390,189,63,703}, new int[] {-20,698,-18,699,-17,702,-101,182}),
      new State(698, -227),
      new State(699, -221),
      new State(700, -223),
      new State(701, -224),
      new State(702, -225),
      new State(703, new int[] {368,700,369,701,319,185,388,186,390,189}, new int[] {-18,704,-17,702,-101,182}),
      new State(704, -222),
      new State(705, new int[] {44,706,41,-213}),
      new State(706, new int[] {368,700,369,701,319,185,388,186,390,189,63,703,38,-219,391,-219,320,-219}, new int[] {-113,707,-21,708,-20,716,-18,699,-17,702,-101,182}),
      new State(707, -216),
      new State(708, new int[] {38,715,391,-165,320,-165}, new int[] {-4,709}),
      new State(709, new int[] {391,714,320,-167}, new int[] {-5,710}),
      new State(710, new int[] {320,711}),
      new State(711, new int[] {61,712,44,-217,41,-217}),
      new State(712, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,713,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(713, new int[] {283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,44,-218,41,-218}),
      new State(714, -168),
      new State(715, -166),
      new State(716, -220),
      new State(717, -215),
      new State(718, -380),
      new State(719, new int[] {319,185,388,186,390,189}, new int[] {-25,720,-17,662,-101,182}),
      new State(720, new int[] {44,649,123,-183}),
      new State(721, new int[] {319,185,388,186,390,189}, new int[] {-17,722,-101,182}),
      new State(722, -179),
      new State(723, new int[] {319,185,388,186,390,189}, new int[] {-17,724,-101,182}),
      new State(724, -158),
      new State(725, -157),
      new State(726, new int[] {123,727}),
      new State(727, -124, new int[] {-83,728}),
      new State(728, new int[] {125,729,123,7,330,23,329,31,332,151,339,163,343,177,344,472,348,476,355,479,316,486,328,495,321,502,320,97,36,98,319,505,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475,357,522,334,531,336,541,59,547,349,548,352,564,345,567,315,634,314,635,362,637,363,682,360,693,327,-376,361,-171}, new int[] {-78,10,-30,11,-15,12,-38,503,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,507,-31,570,-32,571,-11,572,-10,632,-33,636,-35,681}),
      new State(729, -160),
      new State(730, -124, new int[] {-83,731}),
      new State(731, new int[] {337,732,123,7,330,23,329,31,332,151,339,163,343,177,344,472,348,476,355,479,316,486,328,495,321,502,320,97,36,98,319,505,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475,357,522,334,531,336,541,59,547,349,548,352,564,345,567,315,634,314,635,362,637,363,682,360,693,327,-376,361,-171}, new int[] {-78,10,-30,11,-15,12,-38,503,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,507,-31,570,-32,571,-11,572,-10,632,-33,636,-35,681}),
      new State(732, new int[] {59,733}),
      new State(733, -193),
      new State(734, new int[] {319,736}, new int[] {-52,735}),
      new State(735, -121),
      new State(736, new int[] {61,737}),
      new State(737, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,738,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(738, new int[] {283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,41,-375,44,-375,59,-375}, new int[] {-14,739}),
      new State(739, -285),
      new State(740, -122),
      new State(741, -124, new int[] {-83,742}),
      new State(742, new int[] {335,743,123,7,330,23,329,31,332,151,339,163,343,177,344,472,348,476,355,479,316,486,328,495,321,502,320,97,36,98,319,505,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475,357,522,334,531,336,541,59,547,349,548,352,564,345,567,315,634,314,635,362,637,363,682,360,693,327,-376,361,-171}, new int[] {-78,10,-30,11,-15,12,-38,503,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,507,-31,570,-32,571,-11,572,-10,632,-33,636,-35,681}),
      new State(743, new int[] {59,744}),
      new State(744, -191),
      new State(745, new int[] {320,97,36,98,316,293,319,185,388,186,390,189,40,294,368,280,91,752,323,302,38,757,367,759}, new int[] {-125,746,-39,751,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,321,-46,332,-48,307,-75,308}),
      new State(746, new int[] {41,747}),
      new State(747, -376, new int[] {-15,748}),
      new State(748, new int[] {123,7,330,23,329,31,332,151,339,163,343,177,344,472,348,476,355,479,316,486,328,495,321,502,320,97,36,98,319,505,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475,357,522,334,531,336,541,59,547,349,548,352,564,345,567,58,741,327,-376}, new int[] {-68,749,-30,540,-15,12,-38,503,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(749, -377, new int[] {-16,750}),
      new State(750, -148),
      new State(751, new int[] {41,-184,268,-184,91,-429,366,-429,123,-429,387,-429}),
      new State(752, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,326,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475,38,755,44,-462,93,-462}, new int[] {-122,753,-121,284,-119,325,-120,287,-38,288,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(753, new int[] {93,754}),
      new State(754, new int[] {91,-403,366,-403,123,-403,387,-403,40,-403,41,-187,268,-187}),
      new State(755, new int[] {320,97,36,98,316,293,319,185,388,186,390,189,40,294,368,280,91,322,323,302}, new int[] {-39,756,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,321,-46,332,-48,307,-75,308}),
      new State(756, new int[] {44,-469,41,-469,93,-469,91,-429,366,-429,123,-429,387,-429}),
      new State(757, new int[] {320,97,36,98,316,293,319,185,388,186,390,189,40,294,368,280,91,322,323,302}, new int[] {-39,758,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,321,-46,332,-48,307,-75,308}),
      new State(758, new int[] {41,-185,268,-185,91,-429,366,-429,123,-429,387,-429}),
      new State(759, new int[] {40,760}),
      new State(760, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,326,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475,38,755,44,-462,41,-462}, new int[] {-122,761,-121,284,-119,325,-120,287,-38,288,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(761, new int[] {41,762}),
      new State(762, -186),
      new State(763, new int[] {40,764}),
      new State(764, new int[] {320,769,38,770}, new int[] {-118,765,-114,772}),
      new State(765, new int[] {41,766,44,767}),
      new State(766, -382),
      new State(767, new int[] {320,769,38,770}, new int[] {-114,768}),
      new State(768, -383),
      new State(769, -385),
      new State(770, new int[] {320,771}),
      new State(771, -386),
      new State(772, -384),
      new State(773, new int[] {320,413,385,422,386,436}, new int[] {-59,435}),
      new State(774, -493),
      new State(775, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,776,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(776, new int[] {125,777,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(777, -451),
      new State(778, new int[] {319,780,123,781,320,97,36,98}, new int[] {-1,779,-44,784}),
      new State(779, -452),
      new State(780, -458),
      new State(781, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,782,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(782, new int[] {125,783,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(783, -459),
      new State(784, -460),
      new State(785, new int[] {320,97,36,98}, new int[] {-44,786}),
      new State(786, -454),
      new State(787, -449),
      new State(788, new int[] {40,128,364,-400,365,-400,123,-400}, new int[] {-110,789,-111,345}),
      new State(789, new int[] {364,721,365,-178,123,-178}, new int[] {-22,790}),
      new State(790, -293, new int[] {-139,791}),
      new State(791, new int[] {365,719,123,-182}, new int[] {-27,792}),
      new State(792, -375, new int[] {-14,793}),
      new State(793, -376, new int[] {-15,794}),
      new State(794, new int[] {123,795}),
      new State(795, -242, new int[] {-84,796}),
      new State(796, new int[] {125,797,311,598,312,599,313,600,316,601,315,602,314,603,356,605,353,646,347,-268,346,-268}, new int[] {-79,584,-6,585,-8,596,-9,604,-7,606}),
      new State(797, -377, new int[] {-16,798}),
      new State(798, -294),
      new State(799, new int[] {40,800}),
      new State(800, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,326,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475,38,755,44,-462,41,-462}, new int[] {-122,801,-121,284,-119,325,-120,287,-38,288,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(801, new int[] {41,802}),
      new State(802, new int[] {61,315,44,-470,41,-470,93,-470}),
      new State(803, -201),
      new State(804, -202),
      new State(805, new int[] {58,803,59,804}, new int[] {-138,806}),
      new State(806, -124, new int[] {-83,807}),
      new State(807, new int[] {123,7,330,23,329,31,332,151,339,163,343,177,344,472,348,476,355,479,316,486,328,495,321,502,320,97,36,98,319,505,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475,357,522,334,531,336,541,59,547,349,548,352,564,345,567,315,634,314,635,362,637,363,682,360,693,125,-200,341,-200,342,-200,340,-200,327,-376,361,-171}, new int[] {-78,10,-30,11,-15,12,-38,503,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,507,-31,570,-32,571,-11,572,-10,632,-33,636,-35,681}),
      new State(808, -198, new int[] {-94,809}),
      new State(809, new int[] {125,810,341,173,342,805}),
      new State(810, -195),
      new State(811, new int[] {59,815,340,-198,341,-198,342,-198}, new int[] {-94,812}),
      new State(812, new int[] {340,813,341,173,342,805}),
      new State(813, new int[] {59,814}),
      new State(814, -196),
      new State(815, -198, new int[] {-94,816}),
      new State(816, new int[] {340,817,341,173,342,805}),
      new State(817, new int[] {59,818}),
      new State(818, -197),
      new State(819, -124, new int[] {-83,820}),
      new State(820, new int[] {333,821,123,7,330,23,329,31,332,151,339,163,343,177,344,472,348,476,355,479,316,486,328,495,321,502,320,97,36,98,319,505,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475,357,522,334,531,336,541,59,547,349,548,352,564,345,567,315,634,314,635,362,637,363,682,360,693,327,-376,361,-171}, new int[] {-78,10,-30,11,-15,12,-38,503,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,507,-31,570,-32,571,-11,572,-10,632,-33,636,-35,681}),
      new State(821, new int[] {59,822}),
      new State(822, -189),
      new State(823, new int[] {44,824,59,-290,41,-290}),
      new State(824, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,825,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(825, new int[] {283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,44,-291,59,-291,41,-291}),
      new State(826, new int[] {283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,44,-292,59,-292,41,-292}),
      new State(827, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,828,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(828, new int[] {283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,41,-233,44,-233}),
      new State(829, -230),
      new State(830, new int[] {319,780,123,781,320,97,36,98}, new int[] {-1,831,-44,784}),
      new State(831, new int[] {40,128,61,-443,281,-443,280,-443,279,-443,270,-443,278,-443,277,-443,276,-443,275,-443,274,-443,273,-443,272,-443,271,-443,303,-443,302,-443,59,-443,283,-443,284,-443,263,-443,265,-443,264,-443,124,-443,38,-443,94,-443,46,-443,43,-443,45,-443,42,-443,304,-443,47,-443,37,-443,293,-443,292,-443,287,-443,286,-443,289,-443,288,-443,60,-443,291,-443,62,-443,290,-443,285,-443,294,-443,63,-443,282,-443,91,-443,366,-443,123,-443,387,-443,41,-443,125,-443,58,-443,93,-443,44,-443,268,-443,338,-443}, new int[] {-111,832}),
      new State(832, -439),
      new State(833, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,834,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(834, new int[] {125,835,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(835, -438),
      new State(836, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,837,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(837, new int[] {283,40,284,42,263,-303,265,-303,264,-303,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-303,41,-303,125,-303,58,-303,93,-303,44,-303,268,-303,338,-303}),
      new State(838, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,839,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(839, new int[] {283,40,284,42,263,-304,265,-304,264,-304,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-304,41,-304,125,-304,58,-304,93,-304,44,-304,268,-304,338,-304}),
      new State(840, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,841,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(841, new int[] {283,40,284,42,263,-305,265,-305,264,-305,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-305,41,-305,125,-305,58,-305,93,-305,44,-305,268,-305,338,-305}),
      new State(842, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,843,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(843, new int[] {283,40,284,42,263,-306,265,-306,264,-306,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-306,41,-306,125,-306,58,-306,93,-306,44,-306,268,-306,338,-306}),
      new State(844, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,845,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(845, new int[] {283,40,284,42,263,-307,265,-307,264,-307,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-307,41,-307,125,-307,58,-307,93,-307,44,-307,268,-307,338,-307}),
      new State(846, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,847,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(847, new int[] {283,40,284,42,263,-308,265,-308,264,-308,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-308,41,-308,125,-308,58,-308,93,-308,44,-308,268,-308,338,-308}),
      new State(848, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,849,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(849, new int[] {283,40,284,42,263,-309,265,-309,264,-309,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-309,41,-309,125,-309,58,-309,93,-309,44,-309,268,-309,338,-309}),
      new State(850, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,851,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(851, new int[] {283,40,284,42,263,-310,265,-310,264,-310,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-310,41,-310,125,-310,58,-310,93,-310,44,-310,268,-310,338,-310}),
      new State(852, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,853,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(853, new int[] {283,40,284,42,263,-311,265,-311,264,-311,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-311,41,-311,125,-311,58,-311,93,-311,44,-311,268,-311,338,-311}),
      new State(854, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,855,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(855, new int[] {283,40,284,42,263,-312,265,-312,264,-312,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-312,41,-312,125,-312,58,-312,93,-312,44,-312,268,-312,338,-312}),
      new State(856, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,857,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(857, new int[] {283,40,284,42,263,-313,265,-313,264,-313,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-313,41,-313,125,-313,58,-313,93,-313,44,-313,268,-313,338,-313}),
      new State(858, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,859,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(859, new int[] {283,40,284,42,263,-314,265,-314,264,-314,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-314,41,-314,125,-314,58,-314,93,-314,44,-314,268,-314,338,-314}),
      new State(860, -315),
      new State(861, -317),
      new State(862, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,863,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(863, new int[] {283,40,284,42,263,-353,265,-353,264,-353,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,-353,282,106,59,-353,41,-353,125,-353,58,-353,93,-353,44,-353,268,-353,338,-353}),
      new State(864, -446),
      new State(865, -124, new int[] {-83,866}),
      new State(866, new int[] {331,867,123,7,330,23,329,31,332,151,339,163,343,177,344,472,348,476,355,479,316,486,328,495,321,502,320,97,36,98,319,505,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475,357,522,334,531,336,541,59,547,349,548,352,564,345,567,315,634,314,635,362,637,363,682,360,693,327,-376,361,-171}, new int[] {-78,10,-30,11,-15,12,-38,503,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,507,-31,570,-32,571,-11,572,-10,632,-33,636,-35,681}),
      new State(867, new int[] {59,868}),
      new State(868, -204),
      new State(869, new int[] {123,7,330,23,329,31,332,151,339,163,343,177,344,472,348,476,355,479,316,486,328,495,321,502,320,97,36,98,319,505,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475,357,522,334,531,336,541,59,547,349,548,352,564,345,567,327,-376}, new int[] {-30,870,-15,12,-38,503,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(870, -208),
      new State(871, new int[] {40,872}),
      new State(872, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,873,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(873, new int[] {41,874,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(874, new int[] {58,876,123,7,330,23,329,31,332,151,339,163,343,177,344,472,348,476,355,479,316,486,328,495,321,502,320,97,36,98,319,505,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475,357,522,334,531,336,541,59,547,349,548,352,564,345,567,327,-376}, new int[] {-30,875,-15,12,-38,503,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(875, -205),
      new State(876, -124, new int[] {-83,877}),
      new State(877, new int[] {123,7,330,23,329,31,332,151,339,163,343,177,344,472,348,476,355,479,316,486,328,495,321,502,320,97,36,98,319,505,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475,357,522,334,531,336,541,59,547,349,548,352,564,345,567,315,634,314,635,362,637,363,682,360,693,310,-209,308,-209,309,-209,327,-376,361,-171}, new int[] {-78,10,-30,11,-15,12,-38,503,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,507,-31,570,-32,571,-11,572,-10,632,-33,636,-35,681}),
      new State(878, new int[] {310,879,308,881,309,887}),
      new State(879, new int[] {59,880}),
      new State(880, -211),
      new State(881, new int[] {40,882}),
      new State(882, new int[] {320,97,36,98,316,135,319,185,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475}, new int[] {-38,883,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,457}),
      new State(883, new int[] {41,884,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(884, new int[] {58,885}),
      new State(885, -124, new int[] {-83,886}),
      new State(886, new int[] {123,7,330,23,329,31,332,151,339,163,343,177,344,472,348,476,355,479,316,486,328,495,321,502,320,97,36,98,319,505,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475,357,522,334,531,336,541,59,547,349,548,352,564,345,567,315,634,314,635,362,637,363,682,360,693,310,-210,308,-210,309,-210,327,-376,361,-171}, new int[] {-78,10,-30,11,-15,12,-38,503,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,507,-31,570,-32,571,-11,572,-10,632,-33,636,-35,681}),
      new State(887, new int[] {58,888}),
      new State(888, -124, new int[] {-83,889}),
      new State(889, new int[] {310,890,123,7,330,23,329,31,332,151,339,163,343,177,344,472,348,476,355,479,316,486,328,495,321,502,320,97,36,98,319,505,388,186,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475,357,522,334,531,336,541,59,547,349,548,352,564,345,567,315,634,314,635,362,637,363,682,360,693,327,-376,361,-171}, new int[] {-78,10,-30,11,-15,12,-38,503,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,507,-31,570,-32,571,-11,572,-10,632,-33,636,-35,681}),
      new State(890, new int[] {59,891}),
      new State(891, -212),
      new State(892, new int[] {390,187,319,185,123,-375}, new int[] {-101,893,-14,963}),
      new State(893, new int[] {59,894,390,183,123,-375}, new int[] {-14,895}),
      new State(894, -93),
      new State(895, -94, new int[] {-133,896}),
      new State(896, new int[] {123,897}),
      new State(897, -81, new int[] {-80,898}),
      new State(898, new int[] {125,899,123,7,330,23,329,31,332,151,339,163,343,177,344,472,348,476,355,479,316,486,328,495,321,502,320,97,36,98,319,505,388,892,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475,357,522,334,531,336,541,59,547,349,548,352,564,345,567,315,634,314,635,362,637,363,682,360,904,353,908,347,960,327,-376,361,-171}, new int[] {-29,5,-30,6,-15,12,-38,503,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,507,-31,900,-32,901,-11,572,-10,632,-33,902,-35,903}),
      new State(899, -95),
      new State(900, -88),
      new State(901, -89),
      new State(902, -90),
      new State(903, -91),
      new State(904, new int[] {40,905}),
      new State(905, new int[] {41,906}),
      new State(906, new int[] {59,907}),
      new State(907, -92),
      new State(908, new int[] {319,185,390,954,346,951,347,952}, new int[] {-129,909,-13,911,-127,939,-101,941,-105,938,-102,918}),
      new State(909, new int[] {59,910}),
      new State(910, -98),
      new State(911, new int[] {319,185,390,932}, new int[] {-128,912,-127,914,-101,924,-105,938,-102,918}),
      new State(912, new int[] {59,913}),
      new State(913, -99),
      new State(914, new int[] {59,915,44,916}),
      new State(915, -101),
      new State(916, new int[] {319,185,390,922}, new int[] {-105,917,-102,918,-101,919}),
      new State(917, -113),
      new State(918, -119),
      new State(919, new int[] {390,183,338,920,59,-117,44,-117,125,-117}),
      new State(920, new int[] {319,921}),
      new State(921, -118),
      new State(922, new int[] {319,185}, new int[] {-102,923,-101,919}),
      new State(923, -120),
      new State(924, new int[] {390,925,338,920,59,-117,44,-117}),
      new State(925, new int[] {123,926,319,184}),
      new State(926, new int[] {319,185}, new int[] {-106,927,-102,931,-101,919}),
      new State(927, new int[] {125,928,44,929}),
      new State(928, -105),
      new State(929, new int[] {319,185}, new int[] {-102,930,-101,919}),
      new State(930, -111),
      new State(931, -112),
      new State(932, new int[] {319,185}, new int[] {-101,933,-102,923}),
      new State(933, new int[] {390,934,338,920,59,-117,44,-117}),
      new State(934, new int[] {123,935,319,184}),
      new State(935, new int[] {319,185}, new int[] {-106,936,-102,931,-101,919}),
      new State(936, new int[] {125,937,44,929}),
      new State(937, -106),
      new State(938, -114),
      new State(939, new int[] {59,940,44,916}),
      new State(940, -100),
      new State(941, new int[] {390,942,338,920,59,-117,44,-117}),
      new State(942, new int[] {123,943,319,184}),
      new State(943, new int[] {319,185,346,951,347,952}, new int[] {-108,944,-107,953,-102,948,-101,919,-13,949}),
      new State(944, new int[] {125,945,44,946}),
      new State(945, -107),
      new State(946, new int[] {319,185,346,951,347,952}, new int[] {-107,947,-102,948,-101,919,-13,949}),
      new State(947, -109),
      new State(948, -115),
      new State(949, new int[] {319,185}, new int[] {-102,950,-101,919}),
      new State(950, -116),
      new State(951, -103),
      new State(952, -104),
      new State(953, -110),
      new State(954, new int[] {319,185}, new int[] {-101,955,-102,923}),
      new State(955, new int[] {390,956,338,920,59,-117,44,-117}),
      new State(956, new int[] {123,957,319,184}),
      new State(957, new int[] {319,185,346,951,347,952}, new int[] {-108,958,-107,953,-102,948,-101,919,-13,949}),
      new State(958, new int[] {125,959,44,946}),
      new State(959, -108),
      new State(960, new int[] {319,736}, new int[] {-81,961,-52,740}),
      new State(961, new int[] {59,962,44,734}),
      new State(962, -102),
      new State(963, -96, new int[] {-134,964}),
      new State(964, new int[] {123,965}),
      new State(965, -81, new int[] {-80,966}),
      new State(966, new int[] {125,967,123,7,330,23,329,31,332,151,339,163,343,177,344,472,348,476,355,479,316,486,328,495,321,502,320,97,36,98,319,505,388,892,390,189,40,276,368,280,91,297,323,302,367,311,305,317,303,319,302,330,43,333,45,335,33,337,126,339,306,342,358,353,359,360,262,364,261,366,260,368,259,372,258,374,301,376,300,378,299,380,298,382,297,384,296,386,295,388,326,390,64,395,317,398,318,399,370,400,371,401,372,402,374,403,375,404,376,405,389,406,373,407,34,408,383,431,96,443,266,449,267,451,269,455,346,475,357,522,334,531,336,541,59,547,349,548,352,564,345,567,315,634,314,635,362,637,363,682,360,904,353,908,347,960,327,-376,361,-171}, new int[] {-29,5,-30,6,-15,12,-38,503,-39,108,-43,114,-44,115,-66,116,-49,121,-24,122,-17,180,-101,182,-77,191,-47,279,-46,303,-48,307,-75,308,-40,310,-41,341,-42,352,-45,397,-70,442,-12,507,-31,900,-32,901,-11,572,-10,632,-33,902,-35,903}),
      new State(967, -97),
    };
    #endregion

    #region rules
    rules = new Rule[]
    {
    default(Rule),
    new Rule(-131, new int[]{-130,0}),
    new Rule(-132, new int[]{}),
    new Rule(-130, new int[]{-132,-80}),
    new Rule(-100, new int[]{262}),
    new Rule(-100, new int[]{261}),
    new Rule(-100, new int[]{260}),
    new Rule(-100, new int[]{259}),
    new Rule(-100, new int[]{258}),
    new Rule(-100, new int[]{263}),
    new Rule(-100, new int[]{264}),
    new Rule(-100, new int[]{265}),
    new Rule(-100, new int[]{294}),
    new Rule(-100, new int[]{306}),
    new Rule(-100, new int[]{305}),
    new Rule(-100, new int[]{326}),
    new Rule(-100, new int[]{327}),
    new Rule(-100, new int[]{308}),
    new Rule(-100, new int[]{309}),
    new Rule(-100, new int[]{310}),
    new Rule(-100, new int[]{328}),
    new Rule(-100, new int[]{329}),
    new Rule(-100, new int[]{330}),
    new Rule(-100, new int[]{331}),
    new Rule(-100, new int[]{332}),
    new Rule(-100, new int[]{333}),
    new Rule(-100, new int[]{334}),
    new Rule(-100, new int[]{335}),
    new Rule(-100, new int[]{336}),
    new Rule(-100, new int[]{337}),
    new Rule(-100, new int[]{338}),
    new Rule(-100, new int[]{349}),
    new Rule(-100, new int[]{350}),
    new Rule(-100, new int[]{351}),
    new Rule(-100, new int[]{352}),
    new Rule(-100, new int[]{353}),
    new Rule(-100, new int[]{354}),
    new Rule(-100, new int[]{355}),
    new Rule(-100, new int[]{356}),
    new Rule(-100, new int[]{357}),
    new Rule(-100, new int[]{358}),
    new Rule(-100, new int[]{359}),
    new Rule(-100, new int[]{344}),
    new Rule(-100, new int[]{345}),
    new Rule(-100, new int[]{346}),
    new Rule(-100, new int[]{347}),
    new Rule(-100, new int[]{348}),
    new Rule(-100, new int[]{266}),
    new Rule(-100, new int[]{267}),
    new Rule(-100, new int[]{367}),
    new Rule(-100, new int[]{339}),
    new Rule(-100, new int[]{340}),
    new Rule(-100, new int[]{341}),
    new Rule(-100, new int[]{342}),
    new Rule(-100, new int[]{343}),
    new Rule(-100, new int[]{368}),
    new Rule(-100, new int[]{369}),
    new Rule(-100, new int[]{364}),
    new Rule(-100, new int[]{365}),
    new Rule(-100, new int[]{388}),
    new Rule(-100, new int[]{362}),
    new Rule(-100, new int[]{363}),
    new Rule(-100, new int[]{361}),
    new Rule(-100, new int[]{373}),
    new Rule(-100, new int[]{374}),
    new Rule(-100, new int[]{376}),
    new Rule(-100, new int[]{375}),
    new Rule(-100, new int[]{370}),
    new Rule(-100, new int[]{371}),
    new Rule(-100, new int[]{372}),
    new Rule(-100, new int[]{389}),
    new Rule(-99, new int[]{-100}),
    new Rule(-99, new int[]{316}),
    new Rule(-99, new int[]{315}),
    new Rule(-99, new int[]{314}),
    new Rule(-99, new int[]{313}),
    new Rule(-99, new int[]{312}),
    new Rule(-99, new int[]{311}),
    new Rule(-98, new int[]{319}),
    new Rule(-98, new int[]{-99}),
    new Rule(-80, new int[]{-80,-29}),
    new Rule(-80, new int[]{}),
    new Rule(-101, new int[]{319}),
    new Rule(-101, new int[]{-101,390,319}),
    new Rule(-17, new int[]{-101}),
    new Rule(-17, new int[]{388,390,-101}),
    new Rule(-17, new int[]{390,-101}),
    new Rule(-29, new int[]{-30}),
    new Rule(-29, new int[]{-31}),
    new Rule(-29, new int[]{-32}),
    new Rule(-29, new int[]{-33}),
    new Rule(-29, new int[]{-35}),
    new Rule(-29, new int[]{360,40,41,59}),
    new Rule(-29, new int[]{388,-101,59}),
    new Rule(-133, new int[]{}),
    new Rule(-29, new int[]{388,-101,-14,-133,123,-80,125}),
    new Rule(-134, new int[]{}),
    new Rule(-29, new int[]{388,-14,-134,123,-80,125}),
    new Rule(-29, new int[]{353,-129,59}),
    new Rule(-29, new int[]{353,-13,-128,59}),
    new Rule(-29, new int[]{353,-127,59}),
    new Rule(-29, new int[]{353,-13,-127,59}),
    new Rule(-29, new int[]{347,-81,59}),
    new Rule(-13, new int[]{346}),
    new Rule(-13, new int[]{347}),
    new Rule(-128, new int[]{-101,390,123,-106,125}),
    new Rule(-128, new int[]{390,-101,390,123,-106,125}),
    new Rule(-129, new int[]{-101,390,123,-108,125}),
    new Rule(-129, new int[]{390,-101,390,123,-108,125}),
    new Rule(-108, new int[]{-108,44,-107}),
    new Rule(-108, new int[]{-107}),
    new Rule(-106, new int[]{-106,44,-102}),
    new Rule(-106, new int[]{-102}),
    new Rule(-127, new int[]{-127,44,-105}),
    new Rule(-127, new int[]{-105}),
    new Rule(-107, new int[]{-102}),
    new Rule(-107, new int[]{-13,-102}),
    new Rule(-102, new int[]{-101}),
    new Rule(-102, new int[]{-101,338,319}),
    new Rule(-105, new int[]{-102}),
    new Rule(-105, new int[]{390,-102}),
    new Rule(-81, new int[]{-81,44,-52}),
    new Rule(-81, new int[]{-52}),
    new Rule(-83, new int[]{-83,-78}),
    new Rule(-83, new int[]{}),
    new Rule(-78, new int[]{-30}),
    new Rule(-78, new int[]{-31}),
    new Rule(-78, new int[]{-32}),
    new Rule(-78, new int[]{-33}),
    new Rule(-78, new int[]{-35}),
    new Rule(-78, new int[]{360,40,41,59}),
    new Rule(-30, new int[]{123,-83,125}),
    new Rule(-30, new int[]{-15,-50,-16}),
    new Rule(-30, new int[]{-15,-51,-16}),
    new Rule(-30, new int[]{330,40,-38,41,-15,-69,-16}),
    new Rule(-30, new int[]{329,-15,-30,330,40,-38,41,59,-16}),
    new Rule(-30, new int[]{332,40,-85,59,-85,59,-85,41,-15,-67,-16}),
    new Rule(-30, new int[]{339,40,-38,41,-15,-95,-16}),
    new Rule(-30, new int[]{343,-57,59}),
    new Rule(-30, new int[]{344,-57,59}),
    new Rule(-30, new int[]{348,-57,59}),
    new Rule(-30, new int[]{355,-86,59}),
    new Rule(-30, new int[]{316,-87,59}),
    new Rule(-30, new int[]{328,-88,59}),
    new Rule(-30, new int[]{321}),
    new Rule(-30, new int[]{-38,59}),
    new Rule(-30, new int[]{357,40,-89,41,59}),
    new Rule(-30, new int[]{334,40,-38,338,-125,41,-15,-68,-16}),
    new Rule(-30, new int[]{334,40,-38,338,-125,268,-125,41,-15,-68,-16}),
    new Rule(-30, new int[]{336,40,-81,41,-61}),
    new Rule(-30, new int[]{59}),
    new Rule(-30, new int[]{349,123,-83,125,-15,-97,-73,-16}),
    new Rule(-30, new int[]{352,-38,59}),
    new Rule(-30, new int[]{345,319,59}),
    new Rule(-30, new int[]{319,58}),
    new Rule(-97, new int[]{}),
    new Rule(-97, new int[]{-97,350,40,-26,320,41,123,-83,125}),
    new Rule(-26, new int[]{-17}),
    new Rule(-26, new int[]{-26,124,-17}),
    new Rule(-73, new int[]{}),
    new Rule(-73, new int[]{351,123,-83,125}),
    new Rule(-89, new int[]{-53}),
    new Rule(-89, new int[]{-89,44,-53}),
    new Rule(-53, new int[]{-39}),
    new Rule(-31, new int[]{-12,-3,319,-14,40,-115,41,-19,-135,-15,123,-83,125,-16,-135}),
    new Rule(-4, new int[]{}),
    new Rule(-4, new int[]{38}),
    new Rule(-5, new int[]{}),
    new Rule(-5, new int[]{391}),
    new Rule(-136, new int[]{}),
    new Rule(-32, new int[]{-11,361,319,-22,-136,-27,-14,-15,123,-84,125,-16}),
    new Rule(-11, new int[]{}),
    new Rule(-11, new int[]{-10,-11}),
    new Rule(-10, new int[]{315}),
    new Rule(-10, new int[]{314}),
    new Rule(-137, new int[]{}),
    new Rule(-33, new int[]{362,319,-137,-14,-15,123,-84,125,-16}),
    new Rule(-35, new int[]{363,319,-28,-14,-15,123,-84,125,-16}),
    new Rule(-22, new int[]{}),
    new Rule(-22, new int[]{364,-17}),
    new Rule(-28, new int[]{}),
    new Rule(-28, new int[]{364,-25}),
    new Rule(-27, new int[]{}),
    new Rule(-27, new int[]{365,-25}),
    new Rule(-125, new int[]{-39}),
    new Rule(-125, new int[]{38,-39}),
    new Rule(-125, new int[]{367,40,-122,41}),
    new Rule(-125, new int[]{91,-122,93}),
    new Rule(-67, new int[]{-30}),
    new Rule(-67, new int[]{58,-83,333,59}),
    new Rule(-68, new int[]{-30}),
    new Rule(-68, new int[]{58,-83,335,59}),
    new Rule(-61, new int[]{-30}),
    new Rule(-61, new int[]{58,-83,337,59}),
    new Rule(-95, new int[]{123,-94,125}),
    new Rule(-95, new int[]{123,59,-94,125}),
    new Rule(-95, new int[]{58,-94,340,59}),
    new Rule(-95, new int[]{58,59,-94,340,59}),
    new Rule(-94, new int[]{}),
    new Rule(-94, new int[]{-94,341,-38,-138,-83}),
    new Rule(-94, new int[]{-94,342,-138,-83}),
    new Rule(-138, new int[]{58}),
    new Rule(-138, new int[]{59}),
    new Rule(-69, new int[]{-30}),
    new Rule(-69, new int[]{58,-83,331,59}),
    new Rule(-123, new int[]{327,40,-38,41,-30}),
    new Rule(-123, new int[]{-123,308,40,-38,41,-30}),
    new Rule(-50, new int[]{-123}),
    new Rule(-50, new int[]{-123,309,-30}),
    new Rule(-124, new int[]{327,40,-38,41,58,-83}),
    new Rule(-124, new int[]{-124,308,40,-38,41,58,-83}),
    new Rule(-51, new int[]{-124,310,59}),
    new Rule(-51, new int[]{-124,309,58,-83,310,59}),
    new Rule(-115, new int[]{-116}),
    new Rule(-115, new int[]{}),
    new Rule(-116, new int[]{-113}),
    new Rule(-116, new int[]{-116,44,-113}),
    new Rule(-113, new int[]{-21,-4,-5,320}),
    new Rule(-113, new int[]{-21,-4,-5,320,61,-38}),
    new Rule(-21, new int[]{}),
    new Rule(-21, new int[]{-20}),
    new Rule(-20, new int[]{-18}),
    new Rule(-20, new int[]{63,-18}),
    new Rule(-18, new int[]{368}),
    new Rule(-18, new int[]{369}),
    new Rule(-18, new int[]{-17}),
    new Rule(-19, new int[]{}),
    new Rule(-19, new int[]{58,-20}),
    new Rule(-111, new int[]{40,41}),
    new Rule(-111, new int[]{40,-112,41}),
    new Rule(-112, new int[]{-109}),
    new Rule(-112, new int[]{-112,44,-109}),
    new Rule(-109, new int[]{-38}),
    new Rule(-109, new int[]{391,-38}),
    new Rule(-86, new int[]{-86,44,-54}),
    new Rule(-86, new int[]{-54}),
    new Rule(-54, new int[]{-44}),
    new Rule(-87, new int[]{-87,44,-55}),
    new Rule(-87, new int[]{-55}),
    new Rule(-55, new int[]{320}),
    new Rule(-55, new int[]{320,61,-38}),
    new Rule(-84, new int[]{-84,-79}),
    new Rule(-84, new int[]{}),
    new Rule(-79, new int[]{-6,-93,59}),
    new Rule(-79, new int[]{-7,347,-82,59}),
    new Rule(-79, new int[]{353,-25,-76}),
    new Rule(-79, new int[]{-7,-12,-3,-98,-14,40,-115,41,-19,-135,-71,-135}),
    new Rule(-25, new int[]{-17}),
    new Rule(-25, new int[]{-25,44,-17}),
    new Rule(-76, new int[]{59}),
    new Rule(-76, new int[]{123,125}),
    new Rule(-76, new int[]{123,-90,125}),
    new Rule(-90, new int[]{-62}),
    new Rule(-90, new int[]{-90,-62}),
    new Rule(-62, new int[]{-63}),
    new Rule(-62, new int[]{-64}),
    new Rule(-63, new int[]{-104,354,-25,59}),
    new Rule(-64, new int[]{-103,338,319,59}),
    new Rule(-64, new int[]{-103,338,-100,59}),
    new Rule(-64, new int[]{-103,338,-9,-98,59}),
    new Rule(-64, new int[]{-103,338,-9,59}),
    new Rule(-103, new int[]{-98}),
    new Rule(-103, new int[]{-104}),
    new Rule(-104, new int[]{-17,387,-98}),
    new Rule(-71, new int[]{59}),
    new Rule(-71, new int[]{123,-83,125}),
    new Rule(-6, new int[]{-8}),
    new Rule(-6, new int[]{356}),
    new Rule(-7, new int[]{}),
    new Rule(-7, new int[]{-8}),
    new Rule(-8, new int[]{-9}),
    new Rule(-8, new int[]{-8,-9}),
    new Rule(-9, new int[]{311}),
    new Rule(-9, new int[]{312}),
    new Rule(-9, new int[]{313}),
    new Rule(-9, new int[]{316}),
    new Rule(-9, new int[]{315}),
    new Rule(-9, new int[]{314}),
    new Rule(-93, new int[]{-93,44,-58}),
    new Rule(-93, new int[]{-58}),
    new Rule(-58, new int[]{320,-14}),
    new Rule(-58, new int[]{320,61,-38,-14}),
    new Rule(-82, new int[]{-82,44,-65}),
    new Rule(-82, new int[]{-65}),
    new Rule(-65, new int[]{-98,61,-38,-14}),
    new Rule(-52, new int[]{319,61,-38,-14}),
    new Rule(-88, new int[]{-88,44,-56}),
    new Rule(-88, new int[]{-56}),
    new Rule(-56, new int[]{-38}),
    new Rule(-85, new int[]{}),
    new Rule(-85, new int[]{-96}),
    new Rule(-96, new int[]{-96,44,-38}),
    new Rule(-96, new int[]{-38}),
    new Rule(-139, new int[]{}),
    new Rule(-126, new int[]{361,-110,-22,-139,-27,-14,-15,123,-84,125,-16}),
    new Rule(-41, new int[]{306,-23,-110}),
    new Rule(-41, new int[]{306,-126}),
    new Rule(-40, new int[]{367,40,-122,41,61,-38}),
    new Rule(-40, new int[]{91,-122,93,61,-38}),
    new Rule(-40, new int[]{-39,61,-38}),
    new Rule(-40, new int[]{-39,61,38,-39}),
    new Rule(-40, new int[]{-39,61,38,-41}),
    new Rule(-40, new int[]{305,-38}),
    new Rule(-40, new int[]{-39,281,-38}),
    new Rule(-40, new int[]{-39,280,-38}),
    new Rule(-40, new int[]{-39,279,-38}),
    new Rule(-40, new int[]{-39,270,-38}),
    new Rule(-40, new int[]{-39,278,-38}),
    new Rule(-40, new int[]{-39,277,-38}),
    new Rule(-40, new int[]{-39,276,-38}),
    new Rule(-40, new int[]{-39,275,-38}),
    new Rule(-40, new int[]{-39,274,-38}),
    new Rule(-40, new int[]{-39,273,-38}),
    new Rule(-40, new int[]{-39,272,-38}),
    new Rule(-40, new int[]{-39,271,-38}),
    new Rule(-40, new int[]{-39,303}),
    new Rule(-40, new int[]{303,-39}),
    new Rule(-40, new int[]{-39,302}),
    new Rule(-40, new int[]{302,-39}),
    new Rule(-40, new int[]{-38,283,-38}),
    new Rule(-40, new int[]{-38,284,-38}),
    new Rule(-40, new int[]{-38,263,-38}),
    new Rule(-40, new int[]{-38,265,-38}),
    new Rule(-40, new int[]{-38,264,-38}),
    new Rule(-40, new int[]{-38,124,-38}),
    new Rule(-40, new int[]{-38,38,-38}),
    new Rule(-40, new int[]{-38,94,-38}),
    new Rule(-40, new int[]{-38,46,-38}),
    new Rule(-40, new int[]{-38,43,-38}),
    new Rule(-40, new int[]{-38,45,-38}),
    new Rule(-40, new int[]{-38,42,-38}),
    new Rule(-40, new int[]{-38,304,-38}),
    new Rule(-40, new int[]{-38,47,-38}),
    new Rule(-40, new int[]{-38,37,-38}),
    new Rule(-40, new int[]{-38,293,-38}),
    new Rule(-40, new int[]{-38,292,-38}),
    new Rule(-40, new int[]{43,-38}),
    new Rule(-40, new int[]{45,-38}),
    new Rule(-40, new int[]{33,-38}),
    new Rule(-40, new int[]{126,-38}),
    new Rule(-40, new int[]{-38,287,-38}),
    new Rule(-40, new int[]{-38,286,-38}),
    new Rule(-40, new int[]{-38,289,-38}),
    new Rule(-40, new int[]{-38,288,-38}),
    new Rule(-40, new int[]{-38,60,-38}),
    new Rule(-40, new int[]{-38,291,-38}),
    new Rule(-40, new int[]{-38,62,-38}),
    new Rule(-40, new int[]{-38,290,-38}),
    new Rule(-40, new int[]{-38,285,-38}),
    new Rule(-40, new int[]{-38,294,-23}),
    new Rule(-40, new int[]{40,-38,41}),
    new Rule(-40, new int[]{-41}),
    new Rule(-40, new int[]{-38,63,-38,58,-38}),
    new Rule(-40, new int[]{-38,63,58,-38}),
    new Rule(-40, new int[]{-38,282,-38}),
    new Rule(-40, new int[]{-42}),
    new Rule(-40, new int[]{301,-38}),
    new Rule(-40, new int[]{300,-38}),
    new Rule(-40, new int[]{299,-38}),
    new Rule(-40, new int[]{298,-38}),
    new Rule(-40, new int[]{297,-38}),
    new Rule(-40, new int[]{296,-38}),
    new Rule(-40, new int[]{295,-38}),
    new Rule(-40, new int[]{326,-72}),
    new Rule(-40, new int[]{64,-38}),
    new Rule(-40, new int[]{-45}),
    new Rule(-40, new int[]{-70}),
    new Rule(-40, new int[]{266,-38}),
    new Rule(-40, new int[]{267}),
    new Rule(-40, new int[]{267,-38}),
    new Rule(-40, new int[]{267,-38,268,-38}),
    new Rule(-40, new int[]{269,-38}),
    new Rule(-40, new int[]{-12,-3,-14,40,-115,41,-117,-19,-135,-15,123,-83,125,-16,-135}),
    new Rule(-40, new int[]{316,-12,-3,-14,40,-115,41,-117,-19,-135,-15,123,-83,125,-16,-135}),
    new Rule(-12, new int[]{346}),
    new Rule(-14, new int[]{}),
    new Rule(-15, new int[]{}),
    new Rule(-16, new int[]{}),
    new Rule(-135, new int[]{}),
    new Rule(-3, new int[]{}),
    new Rule(-3, new int[]{38}),
    new Rule(-117, new int[]{}),
    new Rule(-117, new int[]{353,40,-118,41}),
    new Rule(-118, new int[]{-118,44,-114}),
    new Rule(-118, new int[]{-114}),
    new Rule(-114, new int[]{320}),
    new Rule(-114, new int[]{38,320}),
    new Rule(-48, new int[]{-17,-111}),
    new Rule(-48, new int[]{-24,387,-2,-111}),
    new Rule(-48, new int[]{-77,387,-2,-111}),
    new Rule(-48, new int[]{-75,-111}),
    new Rule(-24, new int[]{316}),
    new Rule(-24, new int[]{-17}),
    new Rule(-23, new int[]{-24}),
    new Rule(-23, new int[]{-74}),
    new Rule(-72, new int[]{}),
    new Rule(-72, new int[]{40,-57,41}),
    new Rule(-70, new int[]{96,96}),
    new Rule(-70, new int[]{96,322,96}),
    new Rule(-70, new int[]{96,-91,96}),
    new Rule(-110, new int[]{}),
    new Rule(-110, new int[]{-111}),
    new Rule(-47, new int[]{368,40,-122,41}),
    new Rule(-47, new int[]{91,-122,93}),
    new Rule(-47, new int[]{323}),
    new Rule(-45, new int[]{317}),
    new Rule(-45, new int[]{318}),
    new Rule(-45, new int[]{370}),
    new Rule(-45, new int[]{371}),
    new Rule(-45, new int[]{372}),
    new Rule(-45, new int[]{374}),
    new Rule(-45, new int[]{375}),
    new Rule(-45, new int[]{376}),
    new Rule(-45, new int[]{389}),
    new Rule(-45, new int[]{373}),
    new Rule(-45, new int[]{34,-91,34}),
    new Rule(-45, new int[]{383,384}),
    new Rule(-45, new int[]{383,322,384}),
    new Rule(-45, new int[]{383,-91,384}),
    new Rule(-45, new int[]{-47}),
    new Rule(-45, new int[]{-46}),
    new Rule(-46, new int[]{-17}),
    new Rule(-46, new int[]{-24,387,-98}),
    new Rule(-46, new int[]{-77,387,-98}),
    new Rule(-38, new int[]{-39}),
    new Rule(-38, new int[]{-40}),
    new Rule(-57, new int[]{}),
    new Rule(-57, new int[]{-38}),
    new Rule(-77, new int[]{-66}),
    new Rule(-66, new int[]{-39}),
    new Rule(-66, new int[]{40,-38,41}),
    new Rule(-66, new int[]{-47}),
    new Rule(-75, new int[]{-43}),
    new Rule(-75, new int[]{40,-38,41}),
    new Rule(-75, new int[]{-47}),
    new Rule(-43, new int[]{-44}),
    new Rule(-43, new int[]{-66,91,-57,93}),
    new Rule(-43, new int[]{-46,91,-57,93}),
    new Rule(-43, new int[]{-66,123,-38,125}),
    new Rule(-43, new int[]{-66,366,-1,-111}),
    new Rule(-43, new int[]{-48}),
    new Rule(-39, new int[]{-43}),
    new Rule(-39, new int[]{-49}),
    new Rule(-39, new int[]{-66,366,-1}),
    new Rule(-44, new int[]{320}),
    new Rule(-44, new int[]{36,123,-38,125}),
    new Rule(-44, new int[]{36,-44}),
    new Rule(-49, new int[]{-24,387,-44}),
    new Rule(-49, new int[]{-77,387,-44}),
    new Rule(-74, new int[]{-44}),
    new Rule(-74, new int[]{-74,91,-57,93}),
    new Rule(-74, new int[]{-74,123,-38,125}),
    new Rule(-74, new int[]{-74,366,-1}),
    new Rule(-74, new int[]{-24,387,-44}),
    new Rule(-74, new int[]{-74,387,-44}),
    new Rule(-2, new int[]{-98}),
    new Rule(-2, new int[]{123,-38,125}),
    new Rule(-2, new int[]{-44}),
    new Rule(-1, new int[]{319}),
    new Rule(-1, new int[]{123,-38,125}),
    new Rule(-1, new int[]{-44}),
    new Rule(-122, new int[]{-121}),
    new Rule(-119, new int[]{}),
    new Rule(-119, new int[]{-120}),
    new Rule(-121, new int[]{-121,44,-119}),
    new Rule(-121, new int[]{-119}),
    new Rule(-120, new int[]{-38,268,-38}),
    new Rule(-120, new int[]{-38}),
    new Rule(-120, new int[]{-38,268,38,-39}),
    new Rule(-120, new int[]{38,-39}),
    new Rule(-120, new int[]{-38,268,367,40,-122,41}),
    new Rule(-120, new int[]{367,40,-122,41}),
    new Rule(-91, new int[]{-91,-59}),
    new Rule(-91, new int[]{-91,322}),
    new Rule(-91, new int[]{-59}),
    new Rule(-91, new int[]{322,-59}),
    new Rule(-59, new int[]{320}),
    new Rule(-59, new int[]{320,91,-60,93}),
    new Rule(-59, new int[]{320,366,319}),
    new Rule(-59, new int[]{385,-38,125}),
    new Rule(-59, new int[]{385,324,125}),
    new Rule(-59, new int[]{385,324,91,-38,93,125}),
    new Rule(-59, new int[]{386,-39,125}),
    new Rule(-60, new int[]{319}),
    new Rule(-60, new int[]{325}),
    new Rule(-60, new int[]{320}),
    new Rule(-42, new int[]{358,40,-92,41}),
    new Rule(-42, new int[]{359,40,-38,41}),
    new Rule(-42, new int[]{262,-38}),
    new Rule(-42, new int[]{261,-38}),
    new Rule(-42, new int[]{260,40,-38,41}),
    new Rule(-42, new int[]{259,-38}),
    new Rule(-42, new int[]{258,-38}),
    new Rule(-92, new int[]{-37}),
    new Rule(-92, new int[]{-92,44,-37}),
    new Rule(-37, new int[]{-38}),
    };
    #endregion

    nonTerminals = new string[] {"", "property_name", "member_name", "returns_ref", 
      "is_reference", "is_variadic", "variable_modifiers", "method_modifiers", 
      "non_empty_member_modifiers", "member_modifier", "class_modifier", "class_modifiers", 
      "function", "use_type", "backup_doc_comment", "enter_scope", "exit_scope", 
      "name", "type", "return_type", "type_expr", "optional_type", "extends_from", 
      "class_name_reference", "class_name", "name_list", "catch_name_list", "implements_list", 
      "interface_extends_list", "top_statement", "statement", "function_declaration_statement", 
      "class_declaration_statement", "trait_declaration_statement", "interface_declaratioimplements_listn_statement", 
      "interface_declaration_statement", "inline_html", "isset_variable", "expr", 
      "variable", "expr_without_variable", "new_expr", "internal_functions_in_yacc", 
      "callable_variable", "simple_variable", "scalar", "constant", "dereferencable_scalar", 
      "function_call", "static_member", "if_stmt", "alt_if_stmt", "const_decl", 
      "unset_variable", "global_var", "static_var", "echo_expr", "optional_expr", 
      "property", "encaps_var", "encaps_var_offset", "declare_statement", "trait_adaptation", 
      "trait_precedence", "trait_alias", "class_const_decl", "dereferencable", 
      "for_statement", "foreach_statement", "while_statement", "backticks_expr", 
      "method_body", "exit_expr", "finally_statement", "new_variable", "callable_expr", 
      "trait_adaptations", "variable_class_name", "inner_statement", "class_statement", 
      "top_statement_list", "const_list", "class_const_list", "inner_statement_list", 
      "class_statement_list", "for_exprs", "global_var_list", "static_var_list", 
      "echo_expr_list", "unset_variables", "trait_adaptation_list", "encaps_list", 
      "isset_variables", "property_list", "case_list", "switch_case_list", "non_empty_for_exprs", 
      "catch_list", "identifier", "semi_reserved", "reserved_non_modifiers", 
      "namespace_name", "unprefixed_use_declaration", "trait_method_reference", 
      "absolute_trait_method_reference", "use_declaration", "unprefixed_use_declarations", 
      "inline_use_declaration", "inline_use_declarations", "argument", "ctor_arguments", 
      "argument_list", "non_empty_argument_list", "parameter", "lexical_var", 
      "parameter_list", "non_empty_parameter_list", "lexical_vars", "lexical_var_list", 
      "possible_array_pair", "array_pair", "non_empty_array_pair_list", "array_pair_list", 
      "if_stmt_without_else", "alt_if_stmt_without_else", "foreach_variable", 
      "anonymous_class", "use_declarations", "group_use_declaration", "mixed_group_use_declaration", 
      "start", "$accept", "@1", "@2", "@3", "backup_fn_flags", "@4", "@5", "case_separator", 
      "@6", };
  }

  #endregion

  protected override void DoAction(int action)
  {
    switch (action)
    {
      case 2: // @1 -> 
{ SetNamingContext(null); }
        return;
      case 3: // start -> @1 top_statement_list 
{ 
		AssignNamingContext(); 
        _lexer.DocBlockList.Merge(new Span(0, int.MaxValue), value_stack.array[value_stack.top-1].yyval.NodeList, _astFactory);
		AssignStatements(value_stack.array[value_stack.top-1].yyval.NodeList);
		_astRoot = _astFactory.GlobalCode(yypos, value_stack.array[value_stack.top-1].yyval.NodeList, namingContext);
	}
        return;
      case 71: // semi_reserved -> reserved_non_modifiers 
{ yyval.String = value_stack.array[value_stack.top-1].yyval.String; }
        return;
      case 78: // identifier -> T_STRING 
{ yyval.String = value_stack.array[value_stack.top-1].yyval.String; }
        return;
      case 79: // identifier -> semi_reserved 
{ yyval.String = value_stack.array[value_stack.top-1].yyval.String; }
        return;
      case 80: // top_statement_list -> top_statement_list top_statement 
{ yyval.NodeList = AddToTopStatementList<LangElement>(value_stack.array[value_stack.top-2].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 81: // top_statement_list -> 
{ yyval.NodeList = new List<LangElement>(); }
        return;
      case 82: // namespace_name -> T_STRING 
{ yyval.StringList = new List<string>() { value_stack.array[value_stack.top-1].yyval.String }; }
        return;
      case 83: // namespace_name -> namespace_name T_NS_SEPARATOR T_STRING 
{ yyval.StringList = AddToList<string>(value_stack.array[value_stack.top-3].yyval.StringList, value_stack.array[value_stack.top-1].yyval.String); }
        return;
      case 84: // name -> namespace_name 
{ yyval.QualifiedNameReference = new QualifiedNameRef(yypos, new QualifiedName(value_stack.array[value_stack.top-1].yyval.StringList, true, false)); }
        return;
      case 85: // name -> T_NAMESPACE T_NS_SEPARATOR namespace_name 
{ yyval.QualifiedNameReference = new QualifiedNameRef(yypos, MergeWithCurrentNamespace(namingContext.CurrentNamespace, value_stack.array[value_stack.top-1].yyval.StringList)); }
        return;
      case 86: // name -> T_NS_SEPARATOR namespace_name 
{ yyval.QualifiedNameReference = new QualifiedNameRef(yypos, new QualifiedName(value_stack.array[value_stack.top-1].yyval.StringList, true,  true)); }
        return;
      case 87: // top_statement -> statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 88: // top_statement -> function_declaration_statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 89: // top_statement -> class_declaration_statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 90: // top_statement -> trait_declaration_statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 91: // top_statement -> interface_declaration_statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 92: // top_statement -> T_HALT_COMPILER '(' ')' ';' 
{ yyval.Node = _astFactory.HaltCompiler(yypos); }
        return;
      case 93: // top_statement -> T_NAMESPACE namespace_name ';' 
{
			AssignNamingContext();
            SetNamingContext(value_stack.array[value_stack.top-2].yyval.StringList);
            SetDoc(yyval.Node = _currentNamespace = (NamespaceDecl)_astFactory.Namespace(yypos, namingContext.CurrentNamespace, value_stack.array[value_stack.top-2].yypos, namingContext));
		}
        return;
      case 94: // @2 -> 
{ SetNamingContext(value_stack.array[value_stack.top-2].yyval.StringList); }
        return;
      case 95: // top_statement -> T_NAMESPACE namespace_name backup_doc_comment @2 '{' top_statement_list '}' 
{ 
			yyval.Node = _astFactory.Namespace(yypos, namingContext.CurrentNamespace, value_stack.array[value_stack.top-6].yypos, CreateBlock(CombineSpans(value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-2].yyval.NodeList), namingContext);
			SetDoc(yyval.Node);
			ResetNamingContext(); 
		}
        return;
      case 96: // @3 -> 
{ SetNamingContext(null); }
        return;
      case 97: // top_statement -> T_NAMESPACE backup_doc_comment @3 '{' top_statement_list '}' 
{ 
			yyval.Node = _astFactory.Namespace(yypos, null, yypos, CreateBlock(CombineSpans(value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-2].yyval.NodeList), namingContext);
			SetDoc(yyval.Node);
			ResetNamingContext(); 
		}
        return;
      case 98: // top_statement -> T_USE mixed_group_use_declaration ';' 
{ yyval.Node = _astFactory.Use(yypos, value_stack.array[value_stack.top-2].yyval.UseList, AliasKind.Type); _contextType = AliasKind.Type;	/* TODO: Error - must contain only a single group use */	}
        return;
      case 99: // top_statement -> T_USE use_type group_use_declaration ';' 
{ yyval.Node = _astFactory.Use(yypos, value_stack.array[value_stack.top-2].yyval.UseList, value_stack.array[value_stack.top-3].yyval.Kind); _contextType = AliasKind.Type;				/* TODO: Error - must contain only a single group use */	}
        return;
      case 100: // top_statement -> T_USE use_declarations ';' 
{ yyval.Node = _astFactory.Use(yypos, value_stack.array[value_stack.top-2].yyval.UseList, AliasKind.Type); _contextType = AliasKind.Type;	/* TODO: Error - must contain only simple uses		  */	}
        return;
      case 101: // top_statement -> T_USE use_type use_declarations ';' 
{ yyval.Node = _astFactory.Use(yypos, value_stack.array[value_stack.top-2].yyval.UseList, value_stack.array[value_stack.top-3].yyval.Kind); _contextType = AliasKind.Type;				/* TODO: Error - must contain only simple uses		  */	}
        return;
      case 102: // top_statement -> T_CONST const_list ';' 
{
			SetDoc(yyval.Node = _astFactory.DeclList(yypos, PhpMemberAttributes.None, value_stack.array[value_stack.top-2].yyval.NodeList));
		}
        return;
      case 103: // use_type -> T_FUNCTION 
{ yyval.Kind = _contextType = AliasKind.Function; }
        return;
      case 104: // use_type -> T_CONST 
{ yyval.Kind = _contextType = AliasKind.Constant; }
        return;
      case 105: // group_use_declaration -> namespace_name T_NS_SEPARATOR '{' unprefixed_use_declarations '}' 
{ yyval.UseList = new List<UseBase>() { AddAliases(yypos, value_stack.array[value_stack.top-5].yyval.StringList, CombineSpans(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-4].yypos), value_stack.array[value_stack.top-2].yyval.AliasList, false) }; }
        return;
      case 106: // group_use_declaration -> T_NS_SEPARATOR namespace_name T_NS_SEPARATOR '{' unprefixed_use_declarations '}' 
{ yyval.UseList = new List<UseBase>() { AddAliases(yypos, value_stack.array[value_stack.top-5].yyval.StringList, CombineSpans(value_stack.array[value_stack.top-6].yypos, value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-4].yypos), value_stack.array[value_stack.top-2].yyval.AliasList, true) }; }
        return;
      case 107: // mixed_group_use_declaration -> namespace_name T_NS_SEPARATOR '{' inline_use_declarations '}' 
{ yyval.UseList = new List<UseBase>() { AddAliases(yypos, value_stack.array[value_stack.top-5].yyval.StringList, CombineSpans(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-4].yypos), value_stack.array[value_stack.top-2].yyval.ContextAliasList, false) }; }
        return;
      case 108: // mixed_group_use_declaration -> T_NS_SEPARATOR namespace_name T_NS_SEPARATOR '{' inline_use_declarations '}' 
{ yyval.UseList = new List<UseBase>() { AddAliases(yypos, value_stack.array[value_stack.top-5].yyval.StringList, CombineSpans(value_stack.array[value_stack.top-6].yypos, value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-4].yypos), value_stack.array[value_stack.top-2].yyval.ContextAliasList, true) }; }
        return;
      case 109: // inline_use_declarations -> inline_use_declarations ',' inline_use_declaration 
{ yyval.ContextAliasList = AddToList<ContextAlias>(value_stack.array[value_stack.top-3].yyval.ContextAliasList, value_stack.array[value_stack.top-1].yyval.ContextAlias); }
        return;
      case 110: // inline_use_declarations -> inline_use_declaration 
{ yyval.ContextAliasList = new List<ContextAlias>() { value_stack.array[value_stack.top-1].yyval.ContextAlias }; }
        return;
      case 111: // unprefixed_use_declarations -> unprefixed_use_declarations ',' unprefixed_use_declaration 
{ yyval.AliasList = AddToList<CompleteAlias>(value_stack.array[value_stack.top-3].yyval.AliasList, value_stack.array[value_stack.top-1].yyval.Alias); }
        return;
      case 112: // unprefixed_use_declarations -> unprefixed_use_declaration 
{ yyval.AliasList = new List<CompleteAlias>() { value_stack.array[value_stack.top-1].yyval.Alias }; }
        return;
      case 113: // use_declarations -> use_declarations ',' use_declaration 
{ yyval.UseList = AddToList<UseBase>(value_stack.array[value_stack.top-3].yyval.UseList, AddAlias(value_stack.array[value_stack.top-1].yyval.Alias)); }
        return;
      case 114: // use_declarations -> use_declaration 
{ yyval.UseList = new List<UseBase>() { AddAlias(value_stack.array[value_stack.top-1].yyval.Alias) }; }
        return;
      case 115: // inline_use_declaration -> unprefixed_use_declaration 
{ yyval.ContextAlias = JoinTuples(yypos, value_stack.array[value_stack.top-1].yyval.Alias, AliasKind.Type); }
        return;
      case 116: // inline_use_declaration -> use_type unprefixed_use_declaration 
{ yyval.ContextAlias = JoinTuples(yypos, value_stack.array[value_stack.top-1].yyval.Alias, (AliasKind)value_stack.array[value_stack.top-2].yyval.Kind);  }
        return;
      case 117: // unprefixed_use_declaration -> namespace_name 
{ yyval.Alias = new CompleteAlias(new QualifiedNameRef(yypos, new QualifiedName(value_stack.array[value_stack.top-1].yyval.StringList, true, false)), NameRef.Invalid); }
        return;
      case 118: // unprefixed_use_declaration -> namespace_name T_AS T_STRING 
{ yyval.Alias = new CompleteAlias(new QualifiedNameRef(value_stack.array[value_stack.top-3].yypos, new QualifiedName(value_stack.array[value_stack.top-3].yyval.StringList, true, false)), new NameRef(value_stack.array[value_stack.top-1].yypos, value_stack.array[value_stack.top-1].yyval.String)); }
        return;
      case 119: // use_declaration -> unprefixed_use_declaration 
{ yyval.Alias = value_stack.array[value_stack.top-1].yyval.Alias; }
        return;
      case 120: // use_declaration -> T_NS_SEPARATOR unprefixed_use_declaration 
{ 
				var src = value_stack.array[value_stack.top-1].yyval.Alias;
				yyval.Alias = new CompleteAlias(new QualifiedNameRef(CombineSpans(value_stack.array[value_stack.top-2].yypos, src.Item1.Span), 
					new QualifiedName(src.Item1.QualifiedName.Name, src.Item1.QualifiedName.Namespaces, true)), src.Item2); 
			}
        return;
      case 121: // const_list -> const_list ',' const_decl 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 122: // const_list -> const_decl 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 123: // inner_statement_list -> inner_statement_list inner_statement 
{ yyval.NodeList = AddToTopStatementList<LangElement>(value_stack.array[value_stack.top-2].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 124: // inner_statement_list -> 
{ yyval.NodeList = new List<LangElement>(); }
        return;
      case 125: // inner_statement -> statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 126: // inner_statement -> function_declaration_statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 127: // inner_statement -> class_declaration_statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 128: // inner_statement -> trait_declaration_statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 129: // inner_statement -> interface_declaration_statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 130: // inner_statement -> T_HALT_COMPILER '(' ')' ';' 
{ 
				yyval.Node = _astFactory.HaltCompiler(yypos); 
				_errors.Error(yypos, FatalErrors.InvalidHaltCompiler); 
			}
        return;
      case 131: // statement -> '{' inner_statement_list '}' 
{ yyval.Node = CreateBlock(yypos, value_stack.array[value_stack.top-2].yyval.NodeList); }
        return;
      case 132: // statement -> enter_scope if_stmt exit_scope 
{ yyval.Node = value_stack.array[value_stack.top-2].yyval.Node; }
        return;
      case 133: // statement -> enter_scope alt_if_stmt exit_scope 
{ yyval.Node = value_stack.array[value_stack.top-2].yyval.Node; }
        return;
      case 134: // statement -> T_WHILE '(' expr ')' enter_scope while_statement exit_scope 
{ yyval.Node = _astFactory.While(yypos, value_stack.array[value_stack.top-5].yyval.Node, CombineSpans(value_stack.array[value_stack.top-6].yypos, value_stack.array[value_stack.top-4].yypos), value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 135: // statement -> T_DO enter_scope statement T_WHILE '(' expr ')' ';' exit_scope 
{ yyval.Node = _astFactory.Do(yypos, value_stack.array[value_stack.top-7].yyval.Node, value_stack.array[value_stack.top-4].yyval.Node, CombineSpans(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-3].yypos)); }
        return;
      case 136: // statement -> T_FOR '(' for_exprs ';' for_exprs ';' for_exprs ')' enter_scope for_statement exit_scope 
{ yyval.Node = _astFactory.For(yypos, value_stack.array[value_stack.top-9].yyval.NodeList, value_stack.array[value_stack.top-7].yyval.NodeList, value_stack.array[value_stack.top-5].yyval.NodeList, CombineSpans(value_stack.array[value_stack.top-10].yypos, value_stack.array[value_stack.top-4].yypos), value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 137: // statement -> T_SWITCH '(' expr ')' enter_scope switch_case_list exit_scope 
{ yyval.Node = _astFactory.Switch(yypos, value_stack.array[value_stack.top-5].yyval.Node, value_stack.array[value_stack.top-2].yyval.NodeList); }
        return;
      case 138: // statement -> T_BREAK optional_expr ';' 
{ yyval.Node = _astFactory.Jump(yypos, JumpStmt.Types.Break, value_stack.array[value_stack.top-2].yyval.Node);}
        return;
      case 139: // statement -> T_CONTINUE optional_expr ';' 
{ yyval.Node = _astFactory.Jump(yypos, JumpStmt.Types.Continue, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 140: // statement -> T_RETURN optional_expr ';' 
{ yyval.Node = _astFactory.Jump(yypos, JumpStmt.Types.Return, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 141: // statement -> T_GLOBAL global_var_list ';' 
{ yyval.Node = _astFactory.Global(yypos, value_stack.array[value_stack.top-2].yyval.NodeList); }
        return;
      case 142: // statement -> T_STATIC static_var_list ';' 
{ yyval.Node = _astFactory.Static(yypos, value_stack.array[value_stack.top-2].yyval.NodeList); }
        return;
      case 143: // statement -> T_ECHO echo_expr_list ';' 
{ yyval.Node = _astFactory.Echo(yypos, value_stack.array[value_stack.top-2].yyval.NodeList); }
        return;
      case 144: // statement -> T_INLINE_HTML 
{ yyval.Node = _astFactory.InlineHtml(yypos, value_stack.array[value_stack.top-1].yyval.String); }
        return;
      case 145: // statement -> expr ';' 
{ yyval.Node = _astFactory.ExpressionStmt(yypos, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 146: // statement -> T_UNSET '(' unset_variables ')' ';' 
{ yyval.Node = _astFactory.Unset(yypos, value_stack.array[value_stack.top-3].yyval.NodeList); }
        return;
      case 147: // statement -> T_FOREACH '(' expr T_AS foreach_variable ')' enter_scope foreach_statement exit_scope 
{ yyval.Node = _astFactory.Foreach(yypos, value_stack.array[value_stack.top-7].yyval.Node, null, value_stack.array[value_stack.top-5].yyval.ForeachVar, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 148: // statement -> T_FOREACH '(' expr T_AS foreach_variable T_DOUBLE_ARROW foreach_variable ')' enter_scope foreach_statement exit_scope 
{ yyval.Node = _astFactory.Foreach(yypos, value_stack.array[value_stack.top-9].yyval.Node, value_stack.array[value_stack.top-7].yyval.ForeachVar, value_stack.array[value_stack.top-5].yyval.ForeachVar, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 149: // statement -> T_DECLARE '(' const_list ')' declare_statement 
{ yyval.Node = _astFactory.Declare(yypos, value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 150: // statement -> ';' 
{ yyval.Node = _astFactory.EmptyStmt(yypos); }
        return;
      case 151: // statement -> T_TRY '{' inner_statement_list '}' enter_scope catch_list finally_statement exit_scope 
{ yyval.Node = _astFactory.TryCatch(yypos, CreateBlock(CombineSpans(value_stack.array[value_stack.top-7].yypos, value_stack.array[value_stack.top-5].yypos), value_stack.array[value_stack.top-6].yyval.NodeList), value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 152: // statement -> T_THROW expr ';' 
{ yyval.Node = _astFactory.Throw(yypos, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 153: // statement -> T_GOTO T_STRING ';' 
{ yyval.Node = _astFactory.Goto(yypos, value_stack.array[value_stack.top-2].yyval.String, value_stack.array[value_stack.top-2].yypos); }
        return;
      case 154: // statement -> T_STRING ':' 
{ yyval.Node = _astFactory.Label(yypos, value_stack.array[value_stack.top-2].yyval.String, value_stack.array[value_stack.top-2].yypos); }
        return;
      case 155: // catch_list -> 
{ yyval.NodeList = new List<LangElement>(); }
        return;
      case 156: // catch_list -> catch_list T_CATCH '(' catch_name_list T_VARIABLE ')' '{' inner_statement_list '}' 
{ 
				yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-9].yyval.NodeList, _astFactory.Catch(CombineSpans(value_stack.array[value_stack.top-8].yypos, value_stack.array[value_stack.top-1].yypos), _astFactory.TypeReference(value_stack.array[value_stack.top-6].yypos, value_stack.array[value_stack.top-6].yyval.TypeRefList), 
					(DirectVarUse)_astFactory.Variable(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-5].yyval.String, NullLangElement, true), CreateBlock(CombineSpans(value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-2].yyval.NodeList))); 
			}
        return;
      case 157: // catch_name_list -> name 
{ yyval.TypeRefList = new List<TypeRef>() { CreateTypeRef(value_stack.array[value_stack.top-1].yyval.QualifiedNameReference) }; }
        return;
      case 158: // catch_name_list -> catch_name_list '|' name 
{ yyval.TypeRefList = AddToList<TypeRef>(value_stack.array[value_stack.top-3].yyval.TypeRefList, CreateTypeRef(value_stack.array[value_stack.top-1].yyval.QualifiedNameReference)); }
        return;
      case 159: // finally_statement -> 
{ yyval.Node = null; }
        return;
      case 160: // finally_statement -> T_FINALLY '{' inner_statement_list '}' 
{ yyval.Node =_astFactory.Finally(yypos, CreateBlock(CombineSpans(value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-2].yyval.NodeList)); }
        return;
      case 161: // unset_variables -> unset_variable 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 162: // unset_variables -> unset_variables ',' unset_variable 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 163: // unset_variable -> variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 164: // function_declaration_statement -> function returns_ref T_STRING backup_doc_comment '(' parameter_list ')' return_type backup_fn_flags enter_scope '{' inner_statement_list '}' exit_scope backup_fn_flags 
{ 
			yyval.Node = _astFactory.Function(yypos, isConditional, value_stack.array[value_stack.top-14].yyval.Long == (long)FormalParam.Flags.IsByRef, PhpMemberAttributes.None, value_stack.array[value_stack.top-8].yyval.TypeReference, 
			new Name(value_stack.array[value_stack.top-13].yyval.String), value_stack.array[value_stack.top-13].yypos, null, value_stack.array[value_stack.top-10].yyval.FormalParamList, CombineSpans(value_stack.array[value_stack.top-11].yypos, value_stack.array[value_stack.top-9].yypos), 
			CreateBlock(CombineSpans(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-3].yypos), value_stack.array[value_stack.top-4].yyval.NodeList)); 
			SetDoc(yyval.Node);
		}
        return;
      case 165: // is_reference -> 
{ yyval.Long = 0; }
        return;
      case 166: // is_reference -> '&' 
{ yyval.Long = (long)FormalParam.Flags.IsByRef; }
        return;
      case 167: // is_variadic -> 
{ yyval.Long = 0; }
        return;
      case 168: // is_variadic -> T_ELLIPSIS 
{ yyval.Long = (long)FormalParam.Flags.IsVariadic; }
        return;
      case 169: // @4 -> 
{PushClassContext(value_stack.array[value_stack.top-2].yyval.String, value_stack.array[value_stack.top-1].yyval.TypeReference, (PhpMemberAttributes)value_stack.array[value_stack.top-4].yyval.Long);}
        return;
      case 170: // class_declaration_statement -> class_modifiers T_CLASS T_STRING extends_from @4 implements_list backup_doc_comment enter_scope '{' class_statement_list '}' exit_scope 
{ 
			yyval.Node = _astFactory.Type(yypos, CombineSpans(value_stack.array[value_stack.top-12].yypos, value_stack.array[value_stack.top-11].yypos, value_stack.array[value_stack.top-10].yypos, value_stack.array[value_stack.top-9].yypos, value_stack.array[value_stack.top-7].yypos), isConditional, (PhpMemberAttributes)value_stack.array[value_stack.top-12].yyval.Long, new Name(value_stack.array[value_stack.top-10].yyval.String), value_stack.array[value_stack.top-10].yypos, null, 
				ConvertToNamedTypeRef(value_stack.array[value_stack.top-9].yyval.TypeReference), value_stack.array[value_stack.top-7].yyval.TypeRefList.Select(ConvertToNamedTypeRef), value_stack.array[value_stack.top-3].yyval.NodeList, CombineSpans(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos)); 
			SetDoc(yyval.Node);
			PopClassContext();
		}
        return;
      case 171: // class_modifiers -> 
{ yyval.Long = (long)PhpMemberAttributes.None; }
        return;
      case 172: // class_modifiers -> class_modifier class_modifiers 
{ yyval.Long = value_stack.array[value_stack.top-2].yyval.Long | value_stack.array[value_stack.top-1].yyval.Long; }
        return;
      case 173: // class_modifier -> T_ABSTRACT 
{ yyval.Long = (long)PhpMemberAttributes.Abstract; }
        return;
      case 174: // class_modifier -> T_FINAL 
{ yyval.Long = (long)PhpMemberAttributes.Final; }
        return;
      case 175: // @5 -> 
{PushClassContext(value_stack.array[value_stack.top-1].yyval.String, null, PhpMemberAttributes.Trait);}
        return;
      case 176: // trait_declaration_statement -> T_TRAIT T_STRING @5 backup_doc_comment enter_scope '{' class_statement_list '}' exit_scope 
{ 
			yyval.Node = _astFactory.Type(yypos, CombineSpans(value_stack.array[value_stack.top-9].yypos, value_stack.array[value_stack.top-8].yypos), isConditional, PhpMemberAttributes.Trait, 
				new Name(value_stack.array[value_stack.top-8].yyval.String), value_stack.array[value_stack.top-8].yypos, null, null, new List<INamedTypeRef>(), value_stack.array[value_stack.top-3].yyval.NodeList, CombineSpans(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos)); 
			SetDoc(yyval.Node);
			PopClassContext();
		}
        return;
      case 177: // interface_declaration_statement -> T_INTERFACE T_STRING interface_extends_list backup_doc_comment enter_scope '{' class_statement_list '}' exit_scope 
{ 
			yyval.Node = _astFactory.Type(yypos, CombineSpans(value_stack.array[value_stack.top-9].yypos, value_stack.array[value_stack.top-8].yypos, value_stack.array[value_stack.top-7].yypos), isConditional, PhpMemberAttributes.Interface, 
				new Name(value_stack.array[value_stack.top-8].yyval.String), value_stack.array[value_stack.top-8].yypos, null, null, value_stack.array[value_stack.top-7].yyval.TypeRefList.Select(ConvertToNamedTypeRef), value_stack.array[value_stack.top-3].yyval.NodeList, CombineSpans(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos)); 
			SetDoc(yyval.Node);
		}
        return;
      case 178: // extends_from -> 
{ yyval.TypeReference = null; }
        return;
      case 179: // extends_from -> T_EXTENDS name 
{ yyval.TypeReference = CreateTypeRef(value_stack.array[value_stack.top-1].yyval.QualifiedNameReference); }
        return;
      case 180: // interface_extends_list -> 
{ yyval.TypeRefList = TypeRef.EmptyList; }
        return;
      case 181: // interface_extends_list -> T_EXTENDS name_list 
{ yyval.TypeRefList = value_stack.array[value_stack.top-1].yyval.TypeRefList; }
        return;
      case 182: // implements_list -> 
{ yyval.TypeRefList = TypeRef.EmptyList; }
        return;
      case 183: // implements_list -> T_IMPLEMENTS name_list 
{ yyval.TypeRefList = value_stack.array[value_stack.top-1].yyval.TypeRefList; }
        return;
      case 184: // foreach_variable -> variable 
{ yyval.ForeachVar = _astFactory.ForeachVariable(yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 185: // foreach_variable -> '&' variable 
{ yyval.ForeachVar = _astFactory.ForeachVariable(yypos, value_stack.array[value_stack.top-1].yyval.Node, true); }
        return;
      case 186: // foreach_variable -> T_LIST '(' array_pair_list ')' 
{ yyval.ForeachVar = _astFactory.ForeachVariable(yypos, _astFactory.List(yypos, value_stack.array[value_stack.top-2].yyval.ItemList, true)); }
        return;
      case 187: // foreach_variable -> '[' array_pair_list ']' 
{ yyval.ForeachVar = _astFactory.ForeachVariable(yypos, _astFactory.List(yypos, value_stack.array[value_stack.top-2].yyval.ItemList, false)); }
        return;
      case 188: // for_statement -> statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 189: // for_statement -> ':' inner_statement_list T_ENDFOR ';' 
{ yyval.Node = StatementsToBlock(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-3].yyval.NodeList, Tokens.T_ENDFOR); }
        return;
      case 190: // foreach_statement -> statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 191: // foreach_statement -> ':' inner_statement_list T_ENDFOREACH ';' 
{ yyval.Node = StatementsToBlock(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-3].yyval.NodeList, Tokens.T_ENDFOREACH); }
        return;
      case 192: // declare_statement -> statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 193: // declare_statement -> ':' inner_statement_list T_ENDDECLARE ';' 
{ yyval.Node = StatementsToBlock(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-3].yyval.NodeList, Tokens.T_ENDDECLARE); }
        return;
      case 194: // switch_case_list -> '{' case_list '}' 
{ yyval.NodeList = value_stack.array[value_stack.top-2].yyval.NodeList; }
        return;
      case 195: // switch_case_list -> '{' ';' case_list '}' 
{ yyval.NodeList = value_stack.array[value_stack.top-2].yyval.NodeList; }
        return;
      case 196: // switch_case_list -> ':' case_list T_ENDSWITCH ';' 
{ yyval.NodeList = value_stack.array[value_stack.top-3].yyval.NodeList; }
        return;
      case 197: // switch_case_list -> ':' ';' case_list T_ENDSWITCH ';' 
{ yyval.NodeList = value_stack.array[value_stack.top-3].yyval.NodeList; }
        return;
      case 198: // case_list -> 
{ yyval.NodeList = new List<LangElement>(); }
        return;
      case 199: // case_list -> case_list T_CASE expr case_separator inner_statement_list 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-5].yyval.NodeList, _astFactory.Case(CombineSpans(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yypos), 
				value_stack.array[value_stack.top-3].yyval.Node, CreateCaseBlock(CombineSpans(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-1].yyval.NodeList))); }
        return;
      case 200: // case_list -> case_list T_DEFAULT case_separator inner_statement_list 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-4].yyval.NodeList, _astFactory.Case(CombineSpans(value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yypos), 
				null, CreateCaseBlock(CombineSpans(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-1].yyval.NodeList))); }
        return;
      case 203: // while_statement -> statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 204: // while_statement -> ':' inner_statement_list T_ENDWHILE ';' 
{ yyval.Node = StatementsToBlock(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-3].yyval.NodeList, Tokens.T_ENDWHILE); }
        return;
      case 205: // if_stmt_without_else -> T_IF '(' expr ')' statement 
{ yyval.IfItemList = new List<IfStatement>() { 
				new IfStatement(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node) }; 
			}
        return;
      case 206: // if_stmt_without_else -> if_stmt_without_else T_ELSEIF '(' expr ')' statement 
{ yyval.IfItemList = AddToList<IfStatement>(value_stack.array[value_stack.top-6].yyval.IfItemList, 
				new IfStatement(CombineSpans(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node)); 
			}
        return;
      case 207: // if_stmt -> if_stmt_without_else 
{ ((List<IfStatement>)value_stack.array[value_stack.top-1].yyval.IfItemList).Reverse(); yyval.Node = null; 
			foreach (var item in (List<IfStatement>)value_stack.array[value_stack.top-1].yyval.IfItemList) 
				yyval.Node = _astFactory.If(yyval.Node != null? CombineSpans(item.Span, (yyval.Node).Span): item.Span, item.Condition, item.Body, yyval.Node); }
        return;
      case 208: // if_stmt -> if_stmt_without_else T_ELSE statement 
{ ((List<IfStatement>)value_stack.array[value_stack.top-3].yyval.IfItemList).Reverse(); yyval.Node = _astFactory.If(CombineSpans(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yypos), null, value_stack.array[value_stack.top-1].yyval.Node, null); 
			foreach (var item in (List<IfStatement>)value_stack.array[value_stack.top-3].yyval.IfItemList) yyval.Node = _astFactory.If(CombineSpans(item.Span, (yyval.Node).Span), item.Condition, item.Body, yyval.Node); }
        return;
      case 209: // alt_if_stmt_without_else -> T_IF '(' expr ')' ':' inner_statement_list 
{ 
				yyval.IfItemList = new List<IfStatement>() { new IfStatement(yypos, value_stack.array[value_stack.top-4].yyval.Node, StatementsToBlock(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yyval.NodeList, Tokens.END)) }; 
			}
        return;
      case 210: // alt_if_stmt_without_else -> alt_if_stmt_without_else T_ELSEIF '(' expr ')' ':' inner_statement_list 
{ 
				RebuildLast(value_stack.array[value_stack.top-7].yyval.IfItemList, value_stack.array[value_stack.top-6].yypos, Tokens.T_ELSEIF);
				yyval.IfItemList = AddToList<IfStatement>(value_stack.array[value_stack.top-7].yyval.IfItemList, 
					new IfStatement(CombineSpans(value_stack.array[value_stack.top-6].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-4].yyval.Node, StatementsToBlock(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yyval.NodeList, Tokens.END))); 
			}
        return;
      case 211: // alt_if_stmt -> alt_if_stmt_without_else T_ENDIF ';' 
{ RebuildLast(value_stack.array[value_stack.top-3].yyval.IfItemList, value_stack.array[value_stack.top-2].yypos, Tokens.T_ENDIF);
			 ((List<IfStatement>)value_stack.array[value_stack.top-3].yyval.IfItemList).Reverse(); yyval.Node = null; 
			foreach (var item in (List<IfStatement>)value_stack.array[value_stack.top-3].yyval.IfItemList) 
				yyval.Node = _astFactory.If(yyval.Node != null? CombineSpans(item.Span, (yyval.Node).Span): item.Span, item.Condition, item.Body, yyval.Node); }
        return;
      case 212: // alt_if_stmt -> alt_if_stmt_without_else T_ELSE ':' inner_statement_list T_ENDIF ';' 
{ RebuildLast(value_stack.array[value_stack.top-6].yyval.IfItemList, value_stack.array[value_stack.top-5].yypos, Tokens.T_ELSE);
			((List<IfStatement>)value_stack.array[value_stack.top-6].yyval.IfItemList).Reverse(); yyval.Node = _astFactory.If(CombineSpans(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-1].yypos), null, StatementsToBlock(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-3].yyval.NodeList, Tokens.T_ENDIF), null); 
			foreach (var item in (List<IfStatement>)value_stack.array[value_stack.top-6].yyval.IfItemList) yyval.Node = _astFactory.If(CombineSpans(item.Span, (yyval.Node).Span), item.Condition, item.Body, yyval.Node); }
        return;
      case 213: // parameter_list -> non_empty_parameter_list 
{ yyval.FormalParamList = value_stack.array[value_stack.top-1].yyval.FormalParamList; }
        return;
      case 214: // parameter_list -> 
{ yyval.FormalParamList = new List<FormalParam>(); }
        return;
      case 215: // non_empty_parameter_list -> parameter 
{ yyval.FormalParamList = new List<FormalParam>() { (FormalParam)value_stack.array[value_stack.top-1].yyval.FormalParam }; }
        return;
      case 216: // non_empty_parameter_list -> non_empty_parameter_list ',' parameter 
{ yyval.FormalParamList = AddToList<FormalParam>(value_stack.array[value_stack.top-3].yyval.FormalParamList, value_stack.array[value_stack.top-1].yyval.FormalParam); }
        return;
      case 217: // parameter -> optional_type is_reference is_variadic T_VARIABLE 
{ yyval.FormalParam = _astFactory.Parameter(CombineSpans(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-1].yyval.String, value_stack.array[value_stack.top-1].yypos, value_stack.array[value_stack.top-4].yyval.TypeReference, (FormalParam.Flags)value_stack.array[value_stack.top-3].yyval.Long|(FormalParam.Flags)value_stack.array[value_stack.top-2].yyval.Long, null); /* Important - @$ is invalid when optional_type is empty */ }
        return;
      case 218: // parameter -> optional_type is_reference is_variadic T_VARIABLE '=' expr 
{ yyval.FormalParam = _astFactory.Parameter(CombineSpans(value_stack.array[value_stack.top-6].yypos, value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-3].yyval.String, value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-6].yyval.TypeReference, (FormalParam.Flags)value_stack.array[value_stack.top-5].yyval.Long|(FormalParam.Flags)value_stack.array[value_stack.top-4].yyval.Long|FormalParam.Flags.Default, (Expression)value_stack.array[value_stack.top-1].yyval.Node); /* Important - @$ is invalid when optional_type is empty */ }
        return;
      case 219: // optional_type -> 
{ yyval.TypeReference = null; }
        return;
      case 220: // optional_type -> type_expr 
{ yyval.TypeReference = value_stack.array[value_stack.top-1].yyval.TypeReference; }
        return;
      case 221: // type_expr -> type 
{ yyval.TypeReference = value_stack.array[value_stack.top-1].yyval.TypeReference; }
        return;
      case 222: // type_expr -> '?' type 
{ yyval.TypeReference = _astFactory.NullableTypeReference(yypos, value_stack.array[value_stack.top-1].yyval.TypeReference); }
        return;
      case 223: // type -> T_ARRAY 
{ yyval.TypeReference = _astFactory.PrimitiveTypeReference(yypos, PrimitiveTypeRef.PrimitiveType.array); }
        return;
      case 224: // type -> T_CALLABLE 
{ yyval.TypeReference = _astFactory.PrimitiveTypeReference(yypos, PrimitiveTypeRef.PrimitiveType.callable); }
        return;
      case 225: // type -> name 
{ yyval.TypeReference = CreateTypeRef(value_stack.array[value_stack.top-1].yyval.QualifiedNameReference); }
        return;
      case 226: // return_type -> 
{ yyval.TypeReference = null; }
        return;
      case 227: // return_type -> ':' type_expr 
{ yyval.TypeReference = value_stack.array[value_stack.top-1].yyval.TypeReference; }
        return;
      case 228: // argument_list -> '(' ')' 
{ yyval.ParamList = new List<ActualParam>(); }
        return;
      case 229: // argument_list -> '(' non_empty_argument_list ')' 
{ yyval.ParamList = value_stack.array[value_stack.top-2].yyval.ParamList; }
        return;
      case 230: // non_empty_argument_list -> argument 
{ yyval.ParamList = new List<ActualParam>() { value_stack.array[value_stack.top-1].yyval.Param }; }
        return;
      case 231: // non_empty_argument_list -> non_empty_argument_list ',' argument 
{ yyval.ParamList = AddToList<ActualParam>(value_stack.array[value_stack.top-3].yyval.ParamList, value_stack.array[value_stack.top-1].yyval.Param); }
        return;
      case 232: // argument -> expr 
{ yyval.Param = _astFactory.ActualParameter(yypos, value_stack.array[value_stack.top-1].yyval.Node, ActualParam.Flags.Default); }
        return;
      case 233: // argument -> T_ELLIPSIS expr 
{ yyval.Param = _astFactory.ActualParameter(yypos, value_stack.array[value_stack.top-1].yyval.Node, ActualParam.Flags.IsUnpack); }
        return;
      case 234: // global_var_list -> global_var_list ',' global_var 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 235: // global_var_list -> global_var 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 236: // global_var -> simple_variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 237: // static_var_list -> static_var_list ',' static_var 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 238: // static_var_list -> static_var 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 239: // static_var -> T_VARIABLE 
{ yyval.Node = _astFactory.StaticVarDecl(yypos, new VariableName(value_stack.array[value_stack.top-1].yyval.String), null); }
        return;
      case 240: // static_var -> T_VARIABLE '=' expr 
{ yyval.Node = _astFactory.StaticVarDecl(yypos, new VariableName(value_stack.array[value_stack.top-3].yyval.String), value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 241: // class_statement_list -> class_statement_list class_statement 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-2].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 242: // class_statement_list -> 
{ yyval.NodeList = new List<LangElement>(); }
        return;
      case 243: // class_statement -> variable_modifiers property_list ';' 
{ 
				yyval.Node = _astFactory.DeclList(yypos, (PhpMemberAttributes)value_stack.array[value_stack.top-3].yyval.Long, value_stack.array[value_stack.top-2].yyval.NodeList); 
				SetDoc(yyval.Node);
			}
        return;
      case 244: // class_statement -> method_modifiers T_CONST class_const_list ';' 
{ 
				yyval.Node = _astFactory.DeclList(yypos, (PhpMemberAttributes)value_stack.array[value_stack.top-4].yyval.Long, value_stack.array[value_stack.top-2].yyval.NodeList); 
				SetDoc(yyval.Node);
			}
        return;
      case 245: // class_statement -> T_USE name_list trait_adaptations 
{ yyval.Node = _astFactory.TraitUse(yypos, value_stack.array[value_stack.top-2].yyval.TypeRefList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 246: // class_statement -> method_modifiers function returns_ref identifier backup_doc_comment '(' parameter_list ')' return_type backup_fn_flags method_body backup_fn_flags 
{	
				yyval.Node = _astFactory.Method(yypos, value_stack.array[value_stack.top-10].yyval.Long == (long)FormalParam.Flags.IsByRef, (PhpMemberAttributes)value_stack.array[value_stack.top-12].yyval.Long, 
					value_stack.array[value_stack.top-4].yyval.TypeReference, value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-9].yyval.String, value_stack.array[value_stack.top-9].yypos, null, value_stack.array[value_stack.top-6].yyval.FormalParamList, CombineSpans(value_stack.array[value_stack.top-7].yypos, value_stack.array[value_stack.top-5].yypos), null, value_stack.array[value_stack.top-2].yyval.Node);
				SetDoc(yyval.Node);
			}
        return;
      case 247: // name_list -> name 
{ yyval.TypeRefList = new List<TypeRef>() { CreateTypeRef(value_stack.array[value_stack.top-1].yyval.QualifiedNameReference) }; }
        return;
      case 248: // name_list -> name_list ',' name 
{ yyval.TypeRefList = AddToList<TypeRef>(value_stack.array[value_stack.top-3].yyval.TypeRefList, CreateTypeRef(value_stack.array[value_stack.top-1].yyval.QualifiedNameReference)); }
        return;
      case 249: // trait_adaptations -> ';' 
{ yyval.Node = null; }
        return;
      case 250: // trait_adaptations -> '{' '}' 
{ yyval.Node = _astFactory.TraitAdaptationBlock(yypos, new List<LangElement>()); }
        return;
      case 251: // trait_adaptations -> '{' trait_adaptation_list '}' 
{ yyval.Node = _astFactory.TraitAdaptationBlock(yypos, value_stack.array[value_stack.top-2].yyval.NodeList); }
        return;
      case 252: // trait_adaptation_list -> trait_adaptation 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node };
 }
        return;
      case 253: // trait_adaptation_list -> trait_adaptation_list trait_adaptation 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-2].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 254: // trait_adaptation -> trait_precedence 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 255: // trait_adaptation -> trait_alias 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 256: // trait_precedence -> absolute_trait_method_reference T_INSTEADOF name_list ';' 
{ yyval.Node = _astFactory.TraitAdaptationPrecedence(yypos, (Tuple<TypeRef,NameRef>)value_stack.array[value_stack.top-4].yyval.Object, value_stack.array[value_stack.top-2].yyval.TypeRefList); }
        return;
      case 257: // trait_alias -> trait_method_reference T_AS T_STRING ';' 
{ yyval.Node = _astFactory.TraitAdaptationAlias(yypos, (Tuple<TypeRef,NameRef>)value_stack.array[value_stack.top-4].yyval.Object, new NameRef(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.String), null); }
        return;
      case 258: // trait_alias -> trait_method_reference T_AS reserved_non_modifiers ';' 
{ yyval.Node = _astFactory.TraitAdaptationAlias(yypos, (Tuple<TypeRef,NameRef>)value_stack.array[value_stack.top-4].yyval.Object, new NameRef(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.String), null); }
        return;
      case 259: // trait_alias -> trait_method_reference T_AS member_modifier identifier ';' 
{ 
				yyval.Node = _astFactory.TraitAdaptationAlias(yypos, (Tuple<TypeRef,NameRef>)value_stack.array[value_stack.top-5].yyval.Object, new NameRef(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.String), (PhpMemberAttributes)value_stack.array[value_stack.top-3].yyval.Long); 
			}
        return;
      case 260: // trait_alias -> trait_method_reference T_AS member_modifier ';' 
{ 
				yyval.Node = _astFactory.TraitAdaptationAlias(yypos, (Tuple<TypeRef,NameRef>)value_stack.array[value_stack.top-4].yyval.Object, NameRef.Invalid, (PhpMemberAttributes)value_stack.array[value_stack.top-2].yyval.Long); 
			}
        return;
      case 261: // trait_method_reference -> identifier 
{ yyval.Object = new Tuple<TypeRef,NameRef>(null, new NameRef(value_stack.array[value_stack.top-1].yypos, value_stack.array[value_stack.top-1].yyval.String)); }
        return;
      case 262: // trait_method_reference -> absolute_trait_method_reference 
{ yyval.Object = value_stack.array[value_stack.top-1].yyval.Object; }
        return;
      case 263: // absolute_trait_method_reference -> name T_DOUBLE_COLON identifier 
{ yyval.Object = new Tuple<TypeRef,NameRef>(CreateTypeRef(value_stack.array[value_stack.top-3].yyval.QualifiedNameReference), new NameRef(value_stack.array[value_stack.top-1].yypos, value_stack.array[value_stack.top-1].yyval.String)); }
        return;
      case 264: // method_body -> ';' 
{ yyval.Node = null; }
        return;
      case 265: // method_body -> '{' inner_statement_list '}' 
{ yyval.Node = CreateBlock(CombineSpans(value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-2].yyval.NodeList); }
        return;
      case 266: // variable_modifiers -> non_empty_member_modifiers 
{ yyval.Long = value_stack.array[value_stack.top-1].yyval.Long; }
        return;
      case 267: // variable_modifiers -> T_VAR 
{ yyval.Long = (long)PhpMemberAttributes.None; }
        return;
      case 268: // method_modifiers -> 
{ yyval.Long = (long)PhpMemberAttributes.None; }
        return;
      case 269: // method_modifiers -> non_empty_member_modifiers 
{ yyval.Long = value_stack.array[value_stack.top-1].yyval.Long; }
        return;
      case 270: // non_empty_member_modifiers -> member_modifier 
{ yyval.Long = value_stack.array[value_stack.top-1].yyval.Long; }
        return;
      case 271: // non_empty_member_modifiers -> non_empty_member_modifiers member_modifier 
{ yyval.Long = value_stack.array[value_stack.top-2].yyval.Long | value_stack.array[value_stack.top-1].yyval.Long; }
        return;
      case 272: // member_modifier -> T_PUBLIC 
{ yyval.Long = (long)PhpMemberAttributes.Public; }
        return;
      case 273: // member_modifier -> T_PROTECTED 
{ yyval.Long = (long)PhpMemberAttributes.Protected; }
        return;
      case 274: // member_modifier -> T_PRIVATE 
{ yyval.Long = (long)PhpMemberAttributes.Private; }
        return;
      case 275: // member_modifier -> T_STATIC 
{ yyval.Long = (long)PhpMemberAttributes.Static; }
        return;
      case 276: // member_modifier -> T_ABSTRACT 
{ yyval.Long = (long)PhpMemberAttributes.Abstract; }
        return;
      case 277: // member_modifier -> T_FINAL 
{ yyval.Long = (long)PhpMemberAttributes.Final; }
        return;
      case 278: // property_list -> property_list ',' property 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 279: // property_list -> property 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 280: // property -> T_VARIABLE backup_doc_comment 
{ SetMemberDoc(yyval.Node = _astFactory.FieldDecl(yypos, new VariableName(value_stack.array[value_stack.top-2].yyval.String), null)); }
        return;
      case 281: // property -> T_VARIABLE '=' expr backup_doc_comment 
{ SetMemberDoc(yyval.Node = _astFactory.FieldDecl(yypos, new VariableName(value_stack.array[value_stack.top-4].yyval.String), (Expression)value_stack.array[value_stack.top-2].yyval.Node)); }
        return;
      case 282: // class_const_list -> class_const_list ',' class_const_decl 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 283: // class_const_list -> class_const_decl 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 284: // class_const_decl -> identifier '=' expr backup_doc_comment 
{
		yyval.Node = _astFactory.ClassConstDecl(yypos, new VariableName(value_stack.array[value_stack.top-4].yyval.String), value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yyval.Node); 
		SetMemberDoc(yyval.Node);
	}
        return;
      case 285: // const_decl -> T_STRING '=' expr backup_doc_comment 
{ yyval.Node = _astFactory.GlobalConstDecl(yypos, false, new VariableName(value_stack.array[value_stack.top-4].yyval.String), value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yyval.Node); 
		SetMemberDoc(yyval.Node);
	}
        return;
      case 286: // echo_expr_list -> echo_expr_list ',' echo_expr 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 287: // echo_expr_list -> echo_expr 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 288: // echo_expr -> expr 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 289: // for_exprs -> 
{ yyval.NodeList = LangElement.EmptyList; }
        return;
      case 290: // for_exprs -> non_empty_for_exprs 
{ yyval.NodeList = value_stack.array[value_stack.top-1].yyval.NodeList; }
        return;
      case 291: // non_empty_for_exprs -> non_empty_for_exprs ',' expr 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 292: // non_empty_for_exprs -> expr 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 293: // @6 -> 
{ PushAnonymousClassContext(value_stack.array[value_stack.top-1].yyval.TypeReference); }
        return;
      case 294: // anonymous_class -> T_CLASS ctor_arguments extends_from @6 implements_list backup_doc_comment enter_scope '{' class_statement_list '}' exit_scope 
{
			var typeRef = _astFactory.AnonymousTypeReference(yypos, CombineSpans(value_stack.array[value_stack.top-11].yypos, value_stack.array[value_stack.top-10].yypos, value_stack.array[value_stack.top-9].yypos, value_stack.array[value_stack.top-7].yypos), isConditional, PhpMemberAttributes.None, null, ConvertToNamedTypeRef(value_stack.array[value_stack.top-9].yyval.TypeReference), value_stack.array[value_stack.top-7].yyval.TypeRefList.Select(ConvertToNamedTypeRef), value_stack.array[value_stack.top-3].yyval.NodeList, CombineSpans(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos));
			SetDoc(((AnonymousTypeRef)typeRef).TypeDeclaration);
			yyval.AnonymousClass = new AnonymousClass(typeRef, value_stack.array[value_stack.top-10].yyval.ParamList, value_stack.array[value_stack.top-10].yypos); 
			PopClassContext();
		}
        return;
      case 295: // new_expr -> T_NEW class_name_reference ctor_arguments 
{ yyval.Node = _astFactory.New(yypos, value_stack.array[value_stack.top-2].yyval.TypeReference, value_stack.array[value_stack.top-1].yyval.ParamList, value_stack.array[value_stack.top-1].yypos); }
        return;
      case 296: // new_expr -> T_NEW anonymous_class 
{ yyval.Node = _astFactory.New(yypos, ((AnonymousClass)value_stack.array[value_stack.top-1].yyval.AnonymousClass).Item1, ((AnonymousClass)value_stack.array[value_stack.top-1].yyval.AnonymousClass).Item2, ((AnonymousClass)value_stack.array[value_stack.top-1].yyval.AnonymousClass).Item3); }
        return;
      case 297: // expr_without_variable -> T_LIST '(' array_pair_list ')' '=' expr 
{ yyval.Node = _astFactory.Assignment(yypos, _astFactory.List(Span.Combine(value_stack.array[value_stack.top-6].yypos, value_stack.array[value_stack.top-3].yypos), value_stack.array[value_stack.top-4].yyval.ItemList, true), value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignValue); }
        return;
      case 298: // expr_without_variable -> '[' array_pair_list ']' '=' expr 
{ yyval.Node = _astFactory.Assignment(yypos, _astFactory.List(CombineSpans(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-3].yypos), value_stack.array[value_stack.top-4].yyval.ItemList, false), value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignValue); }
        return;
      case 299: // expr_without_variable -> variable '=' expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignValue); }
        return;
      case 300: // expr_without_variable -> variable '=' '&' variable 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-4].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignRef); }
        return;
      case 301: // expr_without_variable -> variable '=' '&' new_expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-4].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignRef); _errors.Error(yypos, Warnings.AssignNewByRefDeprecated); }
        return;
      case 302: // expr_without_variable -> T_CLONE expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.Clone,   (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 303: // expr_without_variable -> variable T_PLUS_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignAdd); }
        return;
      case 304: // expr_without_variable -> variable T_MINUS_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignSub); }
        return;
      case 305: // expr_without_variable -> variable T_MUL_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignMul); }
        return;
      case 306: // expr_without_variable -> variable T_POW_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignPow); }
        return;
      case 307: // expr_without_variable -> variable T_DIV_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignDiv); }
        return;
      case 308: // expr_without_variable -> variable T_CONCAT_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignAppend); }
        return;
      case 309: // expr_without_variable -> variable T_MOD_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignMod); }
        return;
      case 310: // expr_without_variable -> variable T_AND_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignAnd); }
        return;
      case 311: // expr_without_variable -> variable T_OR_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignOr); }
        return;
      case 312: // expr_without_variable -> variable T_XOR_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignXor); }
        return;
      case 313: // expr_without_variable -> variable T_SL_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignShiftLeft); }
        return;
      case 314: // expr_without_variable -> variable T_SR_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignShiftRight); }
        return;
      case 315: // expr_without_variable -> variable T_INC 
{ yyval.Node = CreateIncDec(yypos, value_stack.array[value_stack.top-2].yyval.Node, true, true); }
        return;
      case 316: // expr_without_variable -> T_INC variable 
{ yyval.Node = CreateIncDec(yypos, value_stack.array[value_stack.top-1].yyval.Node, true,  false); }
        return;
      case 317: // expr_without_variable -> variable T_DEC 
{ yyval.Node = CreateIncDec(yypos, value_stack.array[value_stack.top-2].yyval.Node, false, true); }
        return;
      case 318: // expr_without_variable -> T_DEC variable 
{ yyval.Node = CreateIncDec(yypos, value_stack.array[value_stack.top-1].yyval.Node, false, false); }
        return;
      case 319: // expr_without_variable -> expr T_BOOLEAN_OR expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Or,   value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 320: // expr_without_variable -> expr T_BOOLEAN_AND expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.And,  value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 321: // expr_without_variable -> expr T_LOGICAL_OR expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Or,   value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 322: // expr_without_variable -> expr T_LOGICAL_AND expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.And,  value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 323: // expr_without_variable -> expr T_LOGICAL_XOR expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Xor,  value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 324: // expr_without_variable -> expr '|' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.BitOr,  value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 325: // expr_without_variable -> expr '&' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.BitAnd, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 326: // expr_without_variable -> expr '^' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.BitXor, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 327: // expr_without_variable -> expr '.' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Concat, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 328: // expr_without_variable -> expr '+' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Add,    value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 329: // expr_without_variable -> expr '-' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Sub,    value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 330: // expr_without_variable -> expr '*' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Mul,    value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 331: // expr_without_variable -> expr T_POW expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Pow,    value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 332: // expr_without_variable -> expr '/' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Div,    value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 333: // expr_without_variable -> expr '%' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Mod,    value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 334: // expr_without_variable -> expr T_SL expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.ShiftLeft,  value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 335: // expr_without_variable -> expr T_SR expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.ShiftRight, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 336: // expr_without_variable -> '+' expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.Plus,   (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 337: // expr_without_variable -> '-' expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.Minus,   (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 338: // expr_without_variable -> '!' expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.LogicNegation, (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 339: // expr_without_variable -> '~' expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.BitNegation,   (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 340: // expr_without_variable -> expr T_IS_IDENTICAL expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Identical, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 341: // expr_without_variable -> expr T_IS_NOT_IDENTICAL expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.NotIdentical, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 342: // expr_without_variable -> expr T_IS_EQUAL expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Equal, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 343: // expr_without_variable -> expr T_IS_NOT_EQUAL expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.NotEqual, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 344: // expr_without_variable -> expr '<' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.LessThan, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 345: // expr_without_variable -> expr T_IS_SMALLER_OR_EQUAL expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.LessThanOrEqual, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 346: // expr_without_variable -> expr '>' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.GreaterThan, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 347: // expr_without_variable -> expr T_IS_GREATER_OR_EQUAL expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.GreaterThanOrEqual, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 348: // expr_without_variable -> expr T_SPACESHIP expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Spaceship, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 349: // expr_without_variable -> expr T_INSTANCEOF class_name_reference 
{ yyval.Node = _astFactory.InstanceOf(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.TypeReference); }
        return;
      case 350: // expr_without_variable -> '(' expr ')' 
{ yyval.Node = _astFactory.EncapsedExpression(yypos, value_stack.array[value_stack.top-2].yyval.Node, Tokens.T_LPAREN); }
        return;
      case 351: // expr_without_variable -> new_expr 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 352: // expr_without_variable -> expr '?' expr ':' expr 
{ yyval.Node = _astFactory.ConditionalEx(yypos, value_stack.array[value_stack.top-5].yyval.Node, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 353: // expr_without_variable -> expr '?' ':' expr 
{ yyval.Node = _astFactory.ConditionalEx(yypos, value_stack.array[value_stack.top-4].yyval.Node, null, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 354: // expr_without_variable -> expr T_COALESCE expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Coalesce, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 355: // expr_without_variable -> internal_functions_in_yacc 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 356: // expr_without_variable -> T_INT_CAST expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.Int64Cast,   (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 357: // expr_without_variable -> T_DOUBLE_CAST expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.DoubleCast, (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 358: // expr_without_variable -> T_STRING_CAST expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.StringCast, (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 359: // expr_without_variable -> T_ARRAY_CAST expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.ArrayCast,  (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 360: // expr_without_variable -> T_OBJECT_CAST expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.ObjectCast, (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 361: // expr_without_variable -> T_BOOL_CAST expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.BoolCast,   (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 362: // expr_without_variable -> T_UNSET_CAST expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.UnsetCast,  (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 363: // expr_without_variable -> T_EXIT exit_expr 
{ yyval.Node = _astFactory.Exit(yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 364: // expr_without_variable -> '@' expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.AtSign,     (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 365: // expr_without_variable -> scalar 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 366: // expr_without_variable -> backticks_expr 
{ yyval.Node = _astFactory.Shell(yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 367: // expr_without_variable -> T_PRINT expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.Print, (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 368: // expr_without_variable -> T_YIELD 
{ yyval.Node = _astFactory.Yield(yypos, null, null); }
        return;
      case 369: // expr_without_variable -> T_YIELD expr 
{ yyval.Node = _astFactory.Yield(yypos, null, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 370: // expr_without_variable -> T_YIELD expr T_DOUBLE_ARROW expr 
{ yyval.Node = _astFactory.Yield(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 371: // expr_without_variable -> T_YIELD_FROM expr 
{ yyval.Node = _astFactory.YieldFrom(yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 372: // expr_without_variable -> function returns_ref backup_doc_comment '(' parameter_list ')' lexical_vars return_type backup_fn_flags enter_scope '{' inner_statement_list '}' exit_scope backup_fn_flags 
{ 
				yyval.Node = _astFactory.Lambda(yypos, CombineSpans(value_stack.array[value_stack.top-15].yypos, value_stack.array[value_stack.top-10].yypos, value_stack.array[value_stack.top-9].yypos, value_stack.array[value_stack.top-8].yypos), value_stack.array[value_stack.top-14].yyval.Long == (long)FormalParam.Flags.IsByRef, PhpMemberAttributes.None, value_stack.array[value_stack.top-8].yyval.TypeReference, 
				value_stack.array[value_stack.top-11].yyval.FormalParamList, CombineSpans(value_stack.array[value_stack.top-12].yypos, value_stack.array[value_stack.top-10].yypos), value_stack.array[value_stack.top-9].yyval.FormalParamList, CreateBlock(CombineSpans(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-3].yypos), value_stack.array[value_stack.top-4].yyval.NodeList)); 
				SetDoc(yyval.Node);
			}
        return;
      case 373: // expr_without_variable -> T_STATIC function returns_ref backup_doc_comment '(' parameter_list ')' lexical_vars return_type backup_fn_flags enter_scope '{' inner_statement_list '}' exit_scope backup_fn_flags 
{ 
				yyval.Node = _astFactory.Lambda(yypos, CombineSpans(value_stack.array[value_stack.top-16].yypos, value_stack.array[value_stack.top-10].yypos, value_stack.array[value_stack.top-9].yypos, value_stack.array[value_stack.top-8].yypos), value_stack.array[value_stack.top-14].yyval.Long == (long)FormalParam.Flags.IsByRef, PhpMemberAttributes.Static, value_stack.array[value_stack.top-8].yyval.TypeReference, 
				value_stack.array[value_stack.top-11].yyval.FormalParamList, CombineSpans(value_stack.array[value_stack.top-12].yypos, value_stack.array[value_stack.top-10].yypos), value_stack.array[value_stack.top-9].yyval.FormalParamList, CreateBlock(CombineSpans(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-3].yypos), value_stack.array[value_stack.top-4].yyval.NodeList)); 
				SetDoc(yyval.Node);
			}
        return;
      case 375: // backup_doc_comment -> 
{ }
        return;
      case 376: // enter_scope -> 
{ _currentScope.Increment(); }
        return;
      case 377: // exit_scope -> 
{ _currentScope.Decrement(); }
        return;
      case 378: // backup_fn_flags -> 
{  }
        return;
      case 379: // returns_ref -> 
{ yyval.Long = 0; }
        return;
      case 380: // returns_ref -> '&' 
{ yyval.Long = (long)FormalParam.Flags.IsByRef; }
        return;
      case 381: // lexical_vars -> 
{ yyval.FormalParamList = new List<FormalParam>(); }
        return;
      case 382: // lexical_vars -> T_USE '(' lexical_var_list ')' 
{ yyval.FormalParamList = value_stack.array[value_stack.top-2].yyval.FormalParamList; }
        return;
      case 383: // lexical_var_list -> lexical_var_list ',' lexical_var 
{ yyval.FormalParamList = AddToList<FormalParam>(value_stack.array[value_stack.top-3].yyval.FormalParamList, value_stack.array[value_stack.top-1].yyval.FormalParam); }
        return;
      case 384: // lexical_var_list -> lexical_var 
{ yyval.FormalParamList = new List<FormalParam>() { (FormalParam)value_stack.array[value_stack.top-1].yyval.FormalParam }; }
        return;
      case 385: // lexical_var -> T_VARIABLE 
{ yyval.FormalParam = _astFactory.Parameter(yypos, value_stack.array[value_stack.top-1].yyval.String, value_stack.array[value_stack.top-1].yypos, null, FormalParam.Flags.Default, null); }
        return;
      case 386: // lexical_var -> '&' T_VARIABLE 
{ yyval.FormalParam = _astFactory.Parameter(yypos, value_stack.array[value_stack.top-1].yyval.String, value_stack.array[value_stack.top-1].yypos, null, FormalParam.Flags.IsByRef, null); }
        return;
      case 387: // function_call -> name argument_list 
{ yyval.Node = _astFactory.Call(yypos, TranslateQNRFunction(value_stack.array[value_stack.top-2].yyval.QualifiedNameReference), new CallSignature(value_stack.array[value_stack.top-1].yyval.ParamList, value_stack.array[value_stack.top-1].yypos) { Position = value_stack.array[value_stack.top-1].yypos }, null); }
        return;
      case 388: // function_call -> class_name T_DOUBLE_COLON member_name argument_list 
{
				if(value_stack.array[value_stack.top-2].yyval.Object is Name)
					yyval.Node = _astFactory.Call(yypos, (Name)value_stack.array[value_stack.top-2].yyval.Object, value_stack.array[value_stack.top-2].yypos, new CallSignature(value_stack.array[value_stack.top-1].yyval.ParamList, value_stack.array[value_stack.top-1].yypos) { Position = value_stack.array[value_stack.top-1].yypos }, value_stack.array[value_stack.top-4].yyval.TypeReference); 
				else
					yyval.Node = _astFactory.Call(yypos, (LangElement)value_stack.array[value_stack.top-2].yyval.Object, new CallSignature(value_stack.array[value_stack.top-1].yyval.ParamList, value_stack.array[value_stack.top-1].yypos) { Position = value_stack.array[value_stack.top-1].yypos }, value_stack.array[value_stack.top-4].yyval.TypeReference); 
			}
        return;
      case 389: // function_call -> variable_class_name T_DOUBLE_COLON member_name argument_list 
{
				if(value_stack.array[value_stack.top-2].yyval.Object is Name)
					yyval.Node = _astFactory.Call(yypos, (Name)value_stack.array[value_stack.top-2].yyval.Object, value_stack.array[value_stack.top-2].yypos, new CallSignature(value_stack.array[value_stack.top-1].yyval.ParamList, value_stack.array[value_stack.top-1].yypos) { Position = value_stack.array[value_stack.top-1].yypos }, _astFactory.TypeReference(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-4].yyval.Node)); 
				else
					yyval.Node = _astFactory.Call(yypos, (LangElement)value_stack.array[value_stack.top-2].yyval.Object, new CallSignature(value_stack.array[value_stack.top-1].yyval.ParamList, value_stack.array[value_stack.top-1].yypos) { Position = value_stack.array[value_stack.top-1].yypos }, _astFactory.TypeReference(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-4].yyval.Node)); 
			}
        return;
      case 390: // function_call -> callable_expr argument_list 
{ yyval.Node = _astFactory.Call(yypos, value_stack.array[value_stack.top-2].yyval.Node, new CallSignature(value_stack.array[value_stack.top-1].yyval.ParamList, value_stack.array[value_stack.top-1].yypos) { Position = value_stack.array[value_stack.top-1].yypos }, NullLangElement);}
        return;
      case 391: // class_name -> T_STATIC 
{ yyval.TypeReference = _astFactory.ReservedTypeReference(yypos, _reservedTypeStatic); }
        return;
      case 392: // class_name -> name 
{ yyval.TypeReference = CreateTypeRef(value_stack.array[value_stack.top-1].yyval.QualifiedNameReference); }
        return;
      case 393: // class_name_reference -> class_name 
{ yyval.TypeReference = value_stack.array[value_stack.top-1].yyval.TypeReference; }
        return;
      case 394: // class_name_reference -> new_variable 
{ yyval.TypeReference = _astFactory.TypeReference(yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 395: // exit_expr -> 
{ yyval.Node = null; }
        return;
      case 396: // exit_expr -> '(' optional_expr ')' 
{ yyval.Node = value_stack.array[value_stack.top-2].yyval.Node == null? null: _astFactory.EncapsedExpression(yypos, value_stack.array[value_stack.top-2].yyval.Node, Tokens.T_LPAREN); }
        return;
      case 397: // backticks_expr -> '`' '`' 
{ yyval.Node = _astFactory.Literal(yypos, string.Empty, "``"); }
        return;
      case 398: // backticks_expr -> '`' T_ENCAPSED_AND_WHITESPACE '`' 
{ yyval.Node = _astFactory.Literal(yypos, value_stack.array[value_stack.top-2].yyval.Strings.Key, string.Format("`{0}`", value_stack.array[value_stack.top-2].yyval.Strings.Value)); }
        return;
      case 399: // backticks_expr -> '`' encaps_list '`' 
{ yyval.Node = _astFactory.StringEncapsedExpression(yypos, _astFactory.Concat(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.NodeList), Tokens.T_BACKQUOTE); }
        return;
      case 400: // ctor_arguments -> 
{ yyval.ParamList = new List<ActualParam>(); }
        return;
      case 401: // ctor_arguments -> argument_list 
{ yyval.ParamList = value_stack.array[value_stack.top-1].yyval.ParamList; }
        return;
      case 402: // dereferencable_scalar -> T_ARRAY '(' array_pair_list ')' 
{ yyval.Node = _astFactory.NewArray(yypos, value_stack.array[value_stack.top-2].yyval.ItemList, true); }
        return;
      case 403: // dereferencable_scalar -> '[' array_pair_list ']' 
{ yyval.Node = _astFactory.NewArray(yypos, value_stack.array[value_stack.top-2].yyval.ItemList, false); }
        return;
      case 404: // dereferencable_scalar -> T_CONSTANT_ENCAPSED_STRING 
{ yyval.Node = _astFactory.Literal(yypos, value_stack.array[value_stack.top-1].yyval.String, _lexer.TokenText); }
        return;
      case 405: // scalar -> T_LNUMBER 
{ yyval.Node = _astFactory.Literal(yypos, value_stack.array[value_stack.top-1].yyval.Long, _lexer.TokenText); }
        return;
      case 406: // scalar -> T_DNUMBER 
{ yyval.Node = _astFactory.Literal(yypos, value_stack.array[value_stack.top-1].yyval.Double, _lexer.TokenText); }
        return;
      case 407: // scalar -> T_LINE 
{ yyval.Node = _astFactory.PseudoConstUse(yypos, PseudoConstUse.Types.Line); }
        return;
      case 408: // scalar -> T_FILE 
{ yyval.Node = _astFactory.PseudoConstUse(yypos, PseudoConstUse.Types.File); }
        return;
      case 409: // scalar -> T_DIR 
{ yyval.Node = _astFactory.PseudoConstUse(yypos, PseudoConstUse.Types.Dir); }
        return;
      case 410: // scalar -> T_TRAIT_C 
{ yyval.Node = _astFactory.PseudoConstUse(yypos, PseudoConstUse.Types.Trait); }
        return;
      case 411: // scalar -> T_METHOD_C 
{ yyval.Node = _astFactory.PseudoConstUse(yypos, PseudoConstUse.Types.Method); }
        return;
      case 412: // scalar -> T_FUNC_C 
{ yyval.Node = _astFactory.PseudoConstUse(yypos, PseudoConstUse.Types.Function); }
        return;
      case 413: // scalar -> T_NS_C 
{ yyval.Node = _astFactory.PseudoConstUse(yypos, PseudoConstUse.Types.Namespace); }
        return;
      case 414: // scalar -> T_CLASS_C 
{ yyval.Node = _astFactory.PseudoConstUse(yypos, PseudoConstUse.Types.Class); }
        return;
      case 415: // scalar -> '"' encaps_list '"' 
{ yyval.Node = _astFactory.StringEncapsedExpression(yypos, _astFactory.Concat(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.NodeList), Tokens.T_DOUBLE_QUOTES); }
        return;
      case 416: // scalar -> T_START_HEREDOC T_END_HEREDOC 
{ yyval.Node = _astFactory.HeredocExpression(yypos, _astFactory.Literal(new Span(value_stack.array[value_stack.top-2].yypos.End, 0), "", ""), value_stack.array[value_stack.top-2].yyval.QuoteToken, value_stack.array[value_stack.top-2].yyval.String); }
        return;
      case 417: // scalar -> T_START_HEREDOC T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC 
{ yyval.Node = _astFactory.HeredocExpression(yypos, _astFactory.Literal(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.Strings.Key, value_stack.array[value_stack.top-2].yyval.Strings.Value), value_stack.array[value_stack.top-3].yyval.QuoteToken, value_stack.array[value_stack.top-3].yyval.String); }
        return;
      case 418: // scalar -> T_START_HEREDOC encaps_list T_END_HEREDOC 
{ yyval.Node = _astFactory.HeredocExpression(yypos, _astFactory.Concat(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.NodeList), value_stack.array[value_stack.top-3].yyval.QuoteToken, value_stack.array[value_stack.top-3].yyval.String); }
        return;
      case 419: // scalar -> dereferencable_scalar 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 420: // scalar -> constant 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 421: // constant -> name 
{ yyval.Node = _astFactory.ConstUse(yypos, TranslateQNRConstant(value_stack.array[value_stack.top-1].yyval.QualifiedNameReference)); }
        return;
      case 422: // constant -> class_name T_DOUBLE_COLON identifier 
{ yyval.Node = _astFactory.ClassConstUse(yypos, value_stack.array[value_stack.top-3].yyval.TypeReference, new Name(value_stack.array[value_stack.top-1].yyval.String), value_stack.array[value_stack.top-1].yypos); }
        return;
      case 423: // constant -> variable_class_name T_DOUBLE_COLON identifier 
{ yyval.Node = _astFactory.ClassConstUse(yypos, _astFactory.TypeReference(value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-3].yyval.Node), new Name(value_stack.array[value_stack.top-1].yyval.String), value_stack.array[value_stack.top-1].yypos); }
        return;
      case 424: // expr -> variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 425: // expr -> expr_without_variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 426: // optional_expr -> 
{ yyval.Node = null; }
        return;
      case 427: // optional_expr -> expr 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 428: // variable_class_name -> dereferencable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; /* TODO if (!($1 is VarLikeConstructUse)) _errors.Error(@$, FatalErrors.CheckVarUseFault); */ }
        return;
      case 429: // dereferencable -> variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 430: // dereferencable -> '(' expr ')' 
{ yyval.Node = _astFactory.EncapsedExpression(yypos, value_stack.array[value_stack.top-2].yyval.Node, Tokens.T_LPAREN); }
        return;
      case 431: // dereferencable -> dereferencable_scalar 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 432: // callable_expr -> callable_variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 433: // callable_expr -> '(' expr ')' 
{ yyval.Node = _astFactory.EncapsedExpression(yypos, value_stack.array[value_stack.top-2].yyval.Node, Tokens.T_LPAREN); }
        return;
      case 434: // callable_expr -> dereferencable_scalar 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 435: // callable_variable -> simple_variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 436: // callable_variable -> dereferencable '[' optional_expr ']' 
{ yyval.Node = _astFactory.ArrayItem(yypos, false, value_stack.array[value_stack.top-4].yyval.Node, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 437: // callable_variable -> constant '[' optional_expr ']' 
{ yyval.Node = _astFactory.ArrayItem(yypos, false, value_stack.array[value_stack.top-4].yyval.Node, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 438: // callable_variable -> dereferencable '{' expr '}' 
{ yyval.Node = _astFactory.ArrayItem(yypos, true, value_stack.array[value_stack.top-4].yyval.Node, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 439: // callable_variable -> dereferencable T_OBJECT_OPERATOR property_name argument_list 
{
			if(value_stack.array[value_stack.top-2].yyval.Object is Name)
			{
				var name = new QualifiedName((Name)value_stack.array[value_stack.top-2].yyval.Object);
				yyval.Node = _astFactory.Call(yypos, new TranslatedQualifiedName(name, value_stack.array[value_stack.top-2].yypos, name, null), new CallSignature(value_stack.array[value_stack.top-1].yyval.ParamList, value_stack.array[value_stack.top-1].yypos) { Position = value_stack.array[value_stack.top-1].yypos }, VerifyMemberOf(value_stack.array[value_stack.top-4].yyval.Node));
			}
			else
				yyval.Node = _astFactory.Call(yypos, (LangElement)value_stack.array[value_stack.top-2].yyval.Object, new CallSignature(value_stack.array[value_stack.top-1].yyval.ParamList, value_stack.array[value_stack.top-1].yypos) { Position = value_stack.array[value_stack.top-1].yypos }, VerifyMemberOf(value_stack.array[value_stack.top-4].yyval.Node));
		}
        return;
      case 440: // callable_variable -> function_call 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 441: // variable -> callable_variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 442: // variable -> static_member 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 443: // variable -> dereferencable T_OBJECT_OPERATOR property_name 
{ yyval.Node = CreateProperty(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Object); }
        return;
      case 444: // simple_variable -> T_VARIABLE 
{ yyval.Node = _astFactory.Variable(yypos, value_stack.array[value_stack.top-1].yyval.String,	NullLangElement, true); }
        return;
      case 445: // simple_variable -> '$' '{' expr '}' 
{ yyval.Node = _astFactory.Variable(yypos, _astFactory.EncapsedExpression(Span.Combine(value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-2].yyval.Node, Tokens.T_LBRACE), NullLangElement); }
        return;
      case 446: // simple_variable -> '$' simple_variable 
{ yyval.Node = _astFactory.Variable(yypos, value_stack.array[value_stack.top-1].yyval.Node, NullLangElement); }
        return;
      case 447: // static_member -> class_name T_DOUBLE_COLON simple_variable 
{ yyval.Node = CreateStaticProperty(yypos, value_stack.array[value_stack.top-3].yyval.TypeReference, value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 448: // static_member -> variable_class_name T_DOUBLE_COLON simple_variable 
{ yyval.Node = CreateStaticProperty(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 449: // new_variable -> simple_variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 450: // new_variable -> new_variable '[' optional_expr ']' 
{ yyval.Node = _astFactory.ArrayItem(yypos, false, value_stack.array[value_stack.top-4].yyval.Node, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 451: // new_variable -> new_variable '{' expr '}' 
{ yyval.Node = _astFactory.ArrayItem(yypos, true, value_stack.array[value_stack.top-4].yyval.Node, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 452: // new_variable -> new_variable T_OBJECT_OPERATOR property_name 
{ yyval.Node = CreateProperty(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Object); }
        return;
      case 453: // new_variable -> class_name T_DOUBLE_COLON simple_variable 
{ yyval.Node = CreateStaticProperty(yypos, value_stack.array[value_stack.top-3].yyval.TypeReference, value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 454: // new_variable -> new_variable T_DOUBLE_COLON simple_variable 
{ yyval.Node = CreateStaticProperty(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 455: // member_name -> identifier 
{ yyval.Object = new Name(value_stack.array[value_stack.top-1].yyval.String); }
        return;
      case 456: // member_name -> '{' expr '}' 
{ yyval.Object = _astFactory.EncapsedExpression(yypos, value_stack.array[value_stack.top-2].yyval.Node, Tokens.T_LBRACE); }
        return;
      case 457: // member_name -> simple_variable 
{ yyval.Object = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 458: // property_name -> T_STRING 
{ yyval.Object = new Name(value_stack.array[value_stack.top-1].yyval.String); }
        return;
      case 459: // property_name -> '{' expr '}' 
{ yyval.Object = _astFactory.EncapsedExpression(yypos, value_stack.array[value_stack.top-2].yyval.Node, Tokens.T_LBRACE); }
        return;
      case 460: // property_name -> simple_variable 
{ yyval.Object = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 461: // array_pair_list -> non_empty_array_pair_list 
{ yyval.ItemList = value_stack.array[value_stack.top-1].yyval.ItemList;  }
        return;
      case 462: // possible_array_pair -> 
{ yyval.Item = null; }
        return;
      case 463: // possible_array_pair -> array_pair 
{ yyval.Item = value_stack.array[value_stack.top-1].yyval.Item; }
        return;
      case 464: // non_empty_array_pair_list -> non_empty_array_pair_list ',' possible_array_pair 
{ yyval.ItemList = AddToList<Item>(value_stack.array[value_stack.top-3].yyval.ItemList, value_stack.array[value_stack.top-1].yyval.Item); }
        return;
      case 465: // non_empty_array_pair_list -> possible_array_pair 
{ yyval.ItemList = new List<Item>() { value_stack.array[value_stack.top-1].yyval.Item }; }
        return;
      case 466: // array_pair -> expr T_DOUBLE_ARROW expr 
{ yyval.Item = _astFactory.ArrayItemValue(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 467: // array_pair -> expr 
{ yyval.Item = _astFactory.ArrayItemValue(yypos, null, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 468: // array_pair -> expr T_DOUBLE_ARROW '&' variable 
{ yyval.Item = _astFactory.ArrayItemRef(yypos, value_stack.array[value_stack.top-4].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 469: // array_pair -> '&' variable 
{ yyval.Item = _astFactory.ArrayItemRef(yypos, null, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 470: // array_pair -> expr T_DOUBLE_ARROW T_LIST '(' array_pair_list ')' 
{ yyval.Item = _astFactory.ArrayItemValue(yypos, value_stack.array[value_stack.top-6].yyval.Node, _astFactory.List(Span.Combine(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-2].yyval.ItemList, true)); }
        return;
      case 471: // array_pair -> T_LIST '(' array_pair_list ')' 
{ yyval.Item = _astFactory.ArrayItemValue(yypos, null, _astFactory.List(Span.Combine(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-2].yyval.ItemList, true)); }
        return;
      case 472: // encaps_list -> encaps_list encaps_var 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-2].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 473: // encaps_list -> encaps_list T_ENCAPSED_AND_WHITESPACE 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-2].yyval.NodeList, _astFactory.Literal(value_stack.array[value_stack.top-1].yypos, value_stack.array[value_stack.top-1].yyval.Strings.Key, _lexer.TokenText)); }
        return;
      case 474: // encaps_list -> encaps_var 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 475: // encaps_list -> T_ENCAPSED_AND_WHITESPACE encaps_var 
{ yyval.NodeList = new List<LangElement>() { _astFactory.Literal(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.Strings.Key, value_stack.array[value_stack.top-2].yyval.Strings.Value), value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 476: // encaps_var -> T_VARIABLE 
{ yyval.Node = _astFactory.Variable(yypos, value_stack.array[value_stack.top-1].yyval.String, NullLangElement, true); }
        return;
      case 477: // encaps_var -> T_VARIABLE '[' encaps_var_offset ']' 
{ yyval.Node = _astFactory.ArrayItem(yypos, false,
					_astFactory.Variable(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-4].yyval.String, NullLangElement, true), value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 478: // encaps_var -> T_VARIABLE T_OBJECT_OPERATOR T_STRING 
{ yyval.Node = CreateProperty(yypos, _astFactory.Variable(value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-3].yyval.String, NullLangElement, true), new Name(value_stack.array[value_stack.top-1].yyval.String)); }
        return;
      case 479: // encaps_var -> T_DOLLAR_OPEN_CURLY_BRACES expr '}' 
{ yyval.Node = _astFactory.EncapsedExpression(yypos, _astFactory.Variable(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.Node, NullLangElement), Tokens.T_DOLLAR_OPEN_CURLY_BRACES); }
        return;
      case 480: // encaps_var -> T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '}' 
{ yyval.Node = _astFactory.EncapsedExpression(yypos, _astFactory.Variable(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.String, NullLangElement, false), Tokens.T_DOLLAR_OPEN_CURLY_BRACES); }
        return;
      case 481: // encaps_var -> T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' expr ']' '}' 
{ yyval.Node = _astFactory.EncapsedExpression(yypos, _astFactory.ArrayItem(Span.Combine(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-2].yypos), false,
					_astFactory.Variable(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-5].yyval.String, NullLangElement, false), value_stack.array[value_stack.top-3].yyval.Node), Tokens.T_DOLLAR_OPEN_CURLY_BRACES); }
        return;
      case 482: // encaps_var -> T_CURLY_OPEN variable '}' 
{ yyval.Node = _astFactory.EncapsedExpression(yypos, value_stack.array[value_stack.top-2].yyval.Node, Tokens.T_LBRACE); }
        return;
      case 483: // encaps_var_offset -> T_STRING 
{ yyval.Node = _astFactory.Literal(yypos, value_stack.array[value_stack.top-1].yyval.String, _lexer.TokenText); }
        return;
      case 484: // encaps_var_offset -> T_NUM_STRING 
{ yyval.Node = _astFactory.Literal(yypos, value_stack.array[value_stack.top-1].yyval.Long, _lexer.TokenText); }
        return;
      case 485: // encaps_var_offset -> T_VARIABLE 
{ yyval.Node = _astFactory.Variable(yypos, value_stack.array[value_stack.top-1].yyval.String, NullLangElement, true); }
        return;
      case 486: // internal_functions_in_yacc -> T_ISSET '(' isset_variables ')' 
{ yyval.Node = _astFactory.Isset(yypos, value_stack.array[value_stack.top-2].yyval.NodeList); }
        return;
      case 487: // internal_functions_in_yacc -> T_EMPTY '(' expr ')' 
{ yyval.Node = _astFactory.Empty(yypos, value_stack.array[value_stack.top-2].yyval.Node);}
        return;
      case 488: // internal_functions_in_yacc -> T_INCLUDE expr 
{ yyval.Node = _astFactory.Inclusion(yypos, isConditional, InclusionTypes.Include, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 489: // internal_functions_in_yacc -> T_INCLUDE_ONCE expr 
{ yyval.Node = _astFactory.Inclusion(yypos, isConditional, InclusionTypes.IncludeOnce, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 490: // internal_functions_in_yacc -> T_EVAL '(' expr ')' 
{ yyval.Node = _astFactory.Eval(yypos, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 491: // internal_functions_in_yacc -> T_REQUIRE expr 
{ yyval.Node = _astFactory.Inclusion(yypos, isConditional, InclusionTypes.Require, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 492: // internal_functions_in_yacc -> T_REQUIRE_ONCE expr 
{ yyval.Node = _astFactory.Inclusion(yypos, isConditional, InclusionTypes.RequireOnce, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 493: // isset_variables -> isset_variable 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 494: // isset_variables -> isset_variables ',' isset_variable 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 495: // isset_variable -> expr 
{ yyval.Node = CreateIssetVar(value_stack.array[value_stack.top-1].yyval.Node); }
        return;
    }
  }

  protected override string TerminalToString(int terminal)
  {
    if (((Tokens)terminal).ToString() != terminal.ToString())
      return ((Tokens)terminal).ToString();
    else
      return CharToString((char)terminal);
  }


}
}
