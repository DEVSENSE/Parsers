using System;
using System.Text;
using System.Collections.Generic;

// Copyright(c) DEVSENSE s.r.o.
// All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the License); you may not use
// this file except in compliance with the License. You may obtain a copy of the
// License at http://www.apache.org/licenses/LICENSE-2.0
//
// THIS CODE IS PROVIDED ON AN  *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS
// OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY
// IMPLIED WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
// MERCHANTABILITY OR NON-INFRINGEMENT.
//
// See the Apache Version 2.0 License for specific language governing
// permissions and limitations under the License.

using System.Linq;
using System.Runtime.InteropServices;
using Devsense.PHP.Syntax.Ast;
using Devsense.PHP.Text;
using Devsense.PHP.Errors;

using Alias = System.Tuple<Devsense.PHP.Syntax.QualifiedNameRef, Devsense.PHP.Syntax.NameRef>;
using ContextAlias = System.Tuple<Devsense.PHP.Syntax.QualifiedNameRef, Devsense.PHP.Syntax.NameRef, Devsense.PHP.Syntax.ContextType>;
using IfItem = System.Tuple<Devsense.PHP.Text.Span, Devsense.PHP.Syntax.Ast.LangElement, Devsense.PHP.Syntax.Ast.LangElement>;
using AnonymousClass = System.Tuple<Devsense.PHP.Syntax.Ast.TypeRef, System.Collections.Generic.List<Devsense.PHP.Syntax.Ast.ActualParam>>;


namespace Devsense.PHP.Syntax
{
public enum Tokens {
/// <summary>&quot;include (T_INCLUDE)&quot;</summary>
T_INCLUDE=262,
/// <summary>&quot;include_once (T_INCLUDE_ONCE)&quot;</summary>
T_INCLUDE_ONCE=261,
/// <summary>&quot;eval (T_EVAL)&quot;</summary>
T_EVAL=260,
/// <summary>&quot;require (T_REQUIRE)&quot;</summary>
T_REQUIRE=259,
/// <summary>&quot;require_once (T_REQUIRE_ONCE)&quot;</summary>
T_REQUIRE_ONCE=258,
/// <summary>&quot;or (T_LOGICAL_OR)&quot;</summary>
T_LOGICAL_OR=263,
/// <summary>&quot;xor (T_LOGICAL_XOR)&quot;</summary>
T_LOGICAL_XOR=264,
/// <summary>&quot;and (T_LOGICAL_AND)&quot;</summary>
T_LOGICAL_AND=265,
/// <summary>&quot;print (T_PRINT)&quot;</summary>
T_PRINT=266,
/// <summary>&quot;yield (T_YIELD)&quot;</summary>
T_YIELD=267,
/// <summary>&quot;=&gt; (T_DOUBLE_ARROW)&quot;</summary>
T_DOUBLE_ARROW=268,
/// <summary>&quot;yield from (T_YIELD_FROM)&quot;</summary>
T_YIELD_FROM=269,
/// <summary>&quot;+= (T_PLUS_EQUAL)&quot;</summary>
T_PLUS_EQUAL=281,
/// <summary>&quot;-= (T_MINUS_EQUAL)&quot;</summary>
T_MINUS_EQUAL=280,
/// <summary>&quot;*= (T_MUL_EQUAL)&quot;</summary>
T_MUL_EQUAL=279,
/// <summary>&quot;/= (T_DIV_EQUAL)&quot;</summary>
T_DIV_EQUAL=278,
/// <summary>&quot;.= (T_CONCAT_EQUAL)&quot;</summary>
T_CONCAT_EQUAL=277,
/// <summary>&quot;%= (T_MOD_EQUAL)&quot;</summary>
T_MOD_EQUAL=276,
/// <summary>&quot;&amp;= (T_AND_EQUAL)&quot;</summary>
T_AND_EQUAL=275,
/// <summary>&quot;|= (T_OR_EQUAL)&quot;</summary>
T_OR_EQUAL=274,
/// <summary>&quot;^= (T_XOR_EQUAL)&quot;</summary>
T_XOR_EQUAL=273,
/// <summary>&quot;&lt;&lt;= (T_SL_EQUAL)&quot;</summary>
T_SL_EQUAL=272,
/// <summary>&quot;&gt;&gt;= (T_SR_EQUAL)&quot;</summary>
T_SR_EQUAL=271,
/// <summary>&quot;**= (T_POW_EQUAL)&quot;</summary>
T_POW_EQUAL=270,
/// <summary>&quot;?? (T_COALESCE)&quot;</summary>
T_COALESCE=282,
/// <summary>&quot;|| (T_BOOLEAN_OR)&quot;</summary>
T_BOOLEAN_OR=283,
/// <summary>&quot;&amp;&amp; (T_BOOLEAN_AND)&quot;</summary>
T_BOOLEAN_AND=284,
/// <summary>&quot;== (T_IS_EQUAL)&quot;</summary>
T_IS_EQUAL=289,
/// <summary>&quot;!= (T_IS_NOT_EQUAL)&quot;</summary>
T_IS_NOT_EQUAL=288,
/// <summary>&quot;=== (T_IS_IDENTICAL)&quot;</summary>
T_IS_IDENTICAL=287,
/// <summary>&quot;!== (T_IS_NOT_IDENTICAL)&quot;</summary>
T_IS_NOT_IDENTICAL=286,
/// <summary>&quot;&lt;=&gt; (T_SPACESHIP)&quot;</summary>
T_SPACESHIP=285,
/// <summary>&quot;&lt;= (T_IS_SMALLER_OR_EQUAL)&quot;</summary>
T_IS_SMALLER_OR_EQUAL=291,
/// <summary>&quot;&gt;= (T_IS_GREATER_OR_EQUAL)&quot;</summary>
T_IS_GREATER_OR_EQUAL=290,
/// <summary>&quot;&lt;&lt; (T_SL)&quot;</summary>
T_SL=293,
/// <summary>&quot;&gt;&gt; (T_SR)&quot;</summary>
T_SR=292,
/// <summary>&quot;instanceof (T_INSTANCEOF)&quot;</summary>
T_INSTANCEOF=294,
/// <summary>&quot;++ (T_INC)&quot;</summary>
T_INC=303,
/// <summary>&quot;-- (T_DEC)&quot;</summary>
T_DEC=302,
/// <summary>&quot;(int) (T_INT_CAST)&quot;</summary>
T_INT_CAST=301,
/// <summary>&quot;(double) (T_DOUBLE_CAST)&quot;</summary>
T_DOUBLE_CAST=300,
/// <summary>&quot; (T_STRING_CAST)&quot;</summary>
T_STRING_CAST=299,
/// <summary>&quot;(array) (T_ARRAY_CAST)&quot;</summary>
T_ARRAY_CAST=298,
/// <summary>&quot;(object) (T_OBJECT_CAST)&quot;</summary>
T_OBJECT_CAST=297,
/// <summary>&quot;(bool) (T_BOOL_CAST)&quot;</summary>
T_BOOL_CAST=296,
/// <summary>&quot;(unset) (T_UNSET_CAST)&quot;</summary>
T_UNSET_CAST=295,
/// <summary>&quot;** (T_POW)&quot;</summary>
T_POW=304,
/// <summary>&quot;new (T_NEW)&quot;</summary>
T_NEW=306,
/// <summary>&quot;clone (T_CLONE)&quot;</summary>
T_CLONE=305,
T_NOELSE=176,
/// <summary>&quot;elseif (T_ELSEIF)&quot;</summary>
T_ELSEIF=308,
/// <summary>&quot;else (T_ELSE)&quot;</summary>
T_ELSE=309,
/// <summary>&quot;endif (T_ENDIF)&quot;</summary>
T_ENDIF=310,
/// <summary>&quot;static (T_STATIC)&quot;</summary>
T_STATIC=316,
/// <summary>&quot;abstract (T_ABSTRACT)&quot;</summary>
T_ABSTRACT=315,
/// <summary>&quot;final (T_FINAL)&quot;</summary>
T_FINAL=314,
/// <summary>&quot;private (T_PRIVATE)&quot;</summary>
T_PRIVATE=313,
/// <summary>&quot;protected (T_PROTECTED)&quot;</summary>
T_PROTECTED=312,
/// <summary>&quot;public (T_PUBLIC)&quot;</summary>
T_PUBLIC=311,
/// <summary>&quot;integer number (T_LNUMBER)&quot;</summary>
T_LNUMBER=317,
/// <summary>&quot;floating-point number (T_DNUMBER)&quot;</summary>
T_DNUMBER=318,
/// <summary>&quot;identifier (T_STRING)&quot;</summary>
T_STRING=319,
/// <summary>&quot;variable (T_VARIABLE)&quot;</summary>
T_VARIABLE=320,
T_INLINE_HTML=321,
/// <summary>&quot;quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)&quot;</summary>
T_ENCAPSED_AND_WHITESPACE=322,
/// <summary>&quot;quoted-string (T_CONSTANT_ENCAPSED_STRING)&quot;</summary>
T_CONSTANT_ENCAPSED_STRING=323,
/// <summary>&quot;variable name (T_STRING_VARNAME)&quot;</summary>
T_STRING_VARNAME=324,
/// <summary>&quot;number (T_NUM_STRING)&quot;</summary>
T_NUM_STRING=325,
/// <summary>&#39;!&#39;</summary>
T_EXCLAM=33,
/// <summary>&#39;&quot;&#39;</summary>
T_DOUBLE_QUOTES=34,
/// <summary>&#39;$&#39;</summary>
T_DOLLAR=36,
/// <summary>&#39;%&#39;</summary>
T_PERCENT=37,
/// <summary>&#39;&amp;&#39;</summary>
T_AMP=38,
/// <summary>&#39;(&#39;</summary>
T_LPAREN=40,
/// <summary>&#39;)&#39;</summary>
T_RPAREN=41,
/// <summary>&#39;*&#39;</summary>
T_MUL=42,
/// <summary>&#39;+&#39;</summary>
T_PLUS=43,
/// <summary>&#39;&#39;</summary>
T_COMMA=44,
/// <summary>&#39;-&#39;</summary>
T_MINUS=45,
/// <summary>&#39;.&#39;</summary>
T_DOT=46,
/// <summary>&#39;/&#39;</summary>
T_SLASH=47,
/// <summary>&#39;:&#39;</summary>
T_COLON=58,
/// <summary>&#39;;&#39;</summary>
T_SEMI=59,
/// <summary>&#39;&lt;&#39;</summary>
T_LT=60,
/// <summary>&#39;=&#39;</summary>
T_EQ=61,
/// <summary>&#39;&gt;&#39;</summary>
T_GT=62,
/// <summary>&#39;?&#39;</summary>
T_QUESTION=63,
/// <summary>&#39;@&#39;</summary>
T_AT=64,
/// <summary>&#39;[&#39;</summary>
T_LBRACKET=91,
/// <summary>&#39;]&#39;</summary>
T_RBRACKET=93,
/// <summary>&#39;^&#39;</summary>
T_CARET=94,
/// <summary>&#39;`&#39;</summary>
T_BACKQUOTE=96,
/// <summary>&#39;{&#39;</summary>
T_LBRACE=123,
/// <summary>&#39;|&#39;</summary>
T_PIPE=124,
/// <summary>&#39;}&#39;</summary>
T_RBRACE=125,
/// <summary>&#39;~&#39;</summary>
T_TILDE=126,
/// <summary>&quot;end of file&quot;</summary>
END=0,
/// <summary>&quot;exit (T_EXIT)&quot;</summary>
T_EXIT=326,
/// <summary>&quot;if (T_IF)&quot;</summary>
T_IF=327,
/// <summary>&quot;echo (T_ECHO)&quot;</summary>
T_ECHO=328,
/// <summary>&quot;do (T_DO)&quot;</summary>
T_DO=329,
/// <summary>&quot;while (T_WHILE)&quot;</summary>
T_WHILE=330,
/// <summary>&quot;endwhile (T_ENDWHILE)&quot;</summary>
T_ENDWHILE=331,
/// <summary>&quot;for (T_FOR)&quot;</summary>
T_FOR=332,
/// <summary>&quot;endfor (T_ENDFOR)&quot;</summary>
T_ENDFOR=333,
/// <summary>&quot;foreach (T_FOREACH)&quot;</summary>
T_FOREACH=334,
/// <summary>&quot;endforeach (T_ENDFOREACH)&quot;</summary>
T_ENDFOREACH=335,
/// <summary>&quot;declare (T_DECLARE)&quot;</summary>
T_DECLARE=336,
/// <summary>&quot;enddeclare (T_ENDDECLARE)&quot;</summary>
T_ENDDECLARE=337,
/// <summary>&quot;as (T_AS)&quot;</summary>
T_AS=338,
/// <summary>&quot;switch (T_SWITCH)&quot;</summary>
T_SWITCH=339,
/// <summary>&quot;endswitch (T_ENDSWITCH)&quot;</summary>
T_ENDSWITCH=340,
/// <summary>&quot;case (T_CASE)&quot;</summary>
T_CASE=341,
/// <summary>&quot;default (T_DEFAULT)&quot;</summary>
T_DEFAULT=342,
/// <summary>&quot;break (T_BREAK)&quot;</summary>
T_BREAK=343,
/// <summary>&quot;continue (T_CONTINUE)&quot;</summary>
T_CONTINUE=344,
/// <summary>&quot;goto (T_GOTO)&quot;</summary>
T_GOTO=345,
/// <summary>&quot;function (T_FUNCTION)&quot;</summary>
T_FUNCTION=346,
/// <summary>&quot;const (T_CONST)&quot;</summary>
T_CONST=347,
/// <summary>&quot;return (T_RETURN)&quot;</summary>
T_RETURN=348,
/// <summary>&quot;try (T_TRY)&quot;</summary>
T_TRY=349,
/// <summary>&quot;catch (T_CATCH)&quot;</summary>
T_CATCH=350,
/// <summary>&quot;finally (T_FINALLY)&quot;</summary>
T_FINALLY=351,
/// <summary>&quot;throw (T_THROW)&quot;</summary>
T_THROW=352,
/// <summary>&quot;use (T_USE)&quot;</summary>
T_USE=353,
/// <summary>&quot;insteadof (T_INSTEADOF)&quot;</summary>
T_INSTEADOF=354,
/// <summary>&quot;exit_scope (T_GLOBAL)&quot;</summary>
T_GLOBAL=355,
/// <summary>&quot;var (T_VAR)&quot;</summary>
T_VAR=356,
/// <summary>&quot;unset (T_UNSET)&quot;</summary>
T_UNSET=357,
/// <summary>&quot;isset (T_ISSET)&quot;</summary>
T_ISSET=358,
/// <summary>&quot;empty (T_EMPTY)&quot;</summary>
T_EMPTY=359,
/// <summary>&quot;__halt_compiler (T_HALT_COMPILER)&quot;</summary>
T_HALT_COMPILER=360,
/// <summary>&quot;class (T_CLASS)&quot;</summary>
T_CLASS=361,
/// <summary>&quot;trait (T_TRAIT)&quot;</summary>
T_TRAIT=362,
/// <summary>&quot;interface (T_INTERFACE)&quot;</summary>
T_INTERFACE=363,
/// <summary>&quot;extends (T_EXTENDS)&quot;</summary>
T_EXTENDS=364,
/// <summary>&quot;implements (T_IMPLEMENTS)&quot;</summary>
T_IMPLEMENTS=365,
/// <summary>&quot;-&gt; (T_OBJECT_OPERATOR)&quot;</summary>
T_OBJECT_OPERATOR=366,
/// <summary>&quot;list (T_LIST)&quot;</summary>
T_LIST=367,
/// <summary>&quot;array (T_ARRAY)&quot;</summary>
T_ARRAY=368,
/// <summary>&quot;callable (T_CALLABLE)&quot;</summary>
T_CALLABLE=369,
/// <summary>&quot;__LINE__ (T_LINE)&quot;</summary>
T_LINE=370,
/// <summary>&quot;__FILE__ (T_FILE)&quot;</summary>
T_FILE=371,
/// <summary>&quot;__DIR__ (T_DIR)&quot;</summary>
T_DIR=372,
/// <summary>&quot;__CLASS__ (T_CLASS_C)&quot;</summary>
T_CLASS_C=373,
/// <summary>&quot;__TRAIT__ (T_TRAIT_C)&quot;</summary>
T_TRAIT_C=374,
/// <summary>&quot;__METHOD__ (T_METHOD_C)&quot;</summary>
T_METHOD_C=375,
/// <summary>&quot;__FUNCTION__ (T_FUNC_C)&quot;</summary>
T_FUNC_C=376,
/// <summary>&quot;comment (T_COMMENT)&quot;</summary>
T_COMMENT=377,
/// <summary>&quot;doc comment (T_DOC_COMMENT)&quot;</summary>
T_DOC_COMMENT=378,
/// <summary>&quot;open tag (T_OPEN_TAG)&quot;</summary>
T_OPEN_TAG=379,
/// <summary>&quot;open tag with echo (T_OPEN_TAG_WITH_ECHO)&quot;</summary>
T_OPEN_TAG_WITH_ECHO=380,
/// <summary>&quot;close tag (T_CLOSE_TAG)&quot;</summary>
T_CLOSE_TAG=381,
/// <summary>&quot;whitespace (T_WHITESPACE)&quot;</summary>
T_WHITESPACE=382,
/// <summary>&quot;heredoc start (T_START_HEREDOC)&quot;</summary>
T_START_HEREDOC=383,
/// <summary>&quot;heredoc end (T_END_HEREDOC)&quot;</summary>
T_END_HEREDOC=384,
/// <summary>&quot;${ (T_DOLLAR_OPEN_CURLY_BRACES)&quot;</summary>
T_DOLLAR_OPEN_CURLY_BRACES=385,
/// <summary>&quot;{$ (T_CURLY_OPEN)&quot;</summary>
T_CURLY_OPEN=386,
/// <summary>&quot;:: (T_DOUBLE_COLON)&quot;</summary>
T_DOUBLE_COLON=387,
/// <summary>&quot;namespace (T_NAMESPACE)&quot;</summary>
T_NAMESPACE=388,
/// <summary>&quot;__NAMESPACE__ (T_NS_C)&quot;</summary>
T_NS_C=389,
/// <summary>&quot;\\ (T_NS_SEPARATOR)&quot;</summary>
T_NS_SEPARATOR=390,
/// <summary>&quot;... (T_ELLIPSIS)&quot;</summary>
T_ELLIPSIS=391,
/// <summary> type safe declaration</summary>
T_ERROR=257,
EOF=0
};

[StructLayout(LayoutKind.Explicit)]
public partial struct SemanticValueType
{
	// Integer and Offset are both used when generating code for string 
	// with 'inline' variables. Other fields are not combined.
	
	[FieldOffset(0)]		
	public int Integer;
	[FieldOffset(0)]
	public double Double;
	[FieldOffset(0)]
	public long Long;
	[FieldOffset(0)]
	public QualifiedNameRef QualifiedNameReference;

	[FieldOffset(8)]
	public object Object;

	public List<QualifiedNameRef> QualifiedNameRefList	{ get { return (List<QualifiedNameRef>)Object; }	set { Object = value; } }
	public TypeRef TypeReference						{ get { return (TypeRef)Object; }					set { Object = value; } }
	public List<TypeRef> TypeRefList					{ get { return (List<TypeRef>)Object; }				set { Object = value; } }
	public LangElement Node								{ get { return (LangElement)Object; }				set { Object = value; } }
	public List<LangElement> NodeList					{ get { return (List<LangElement>)Object; }			set { Object = value; } }
	public string String								{ get { return (string)Object; }					set { Object = value; } }
	public List<string> StringList						{ get { return (List<string>)Object; }				set { Object = value; } }
	public Alias Alias									{ get { return (Alias)Object; }						set { Object = value; } }
	public List<Alias> AliasList						{ get { return (List<Alias>)Object; }				set { Object = value; } }
	public ContextAlias ContextAlias					{ get { return (ContextAlias)Object; }				set { Object = value; } }
	public List<ContextAlias> ContextAliasList			{ get { return (List<ContextAlias>)Object; }		set { Object = value; } }
	public ActualParam Param							{ get { return (ActualParam)Object; }				set { Object = value; } }
	public List<ActualParam> ParamList					{ get { return (List<ActualParam>)Object; }			set { Object = value; } }
	public FormalParam FormalParam						{ get { return (FormalParam)Object; }				set { Object = value; } }
	public List<FormalParam> FormalParamList			{ get { return (List<FormalParam>)Object; }			set { Object = value; } }
	public Item Item									{ get { return (Item)Object; }						set { Object = value; } }
	public List<Item> ItemList							{ get { return (List<Item>)Object; }				set { Object = value; } }
	public List<IfItem> IfItemList						{ get { return (List<IfItem>)Object; }				set { Object = value; } }
	public ForeachVar ForeachVar						{ get { return (ForeachVar)Object; }				set { Object = value; } }
	public AnonymousClass AnonymousClass				{ get { return (AnonymousClass)Object; }			set { Object = value; } }
}

public partial class Parser: ShiftReduceParser<SemanticValueType,Span>
{

  protected override string[] NonTerminals { get { return nonTerminals; } }
  private static string[] nonTerminals;

  protected override State[] States { get { return states; } }
  private static readonly State[] states;

  protected override Rule[] Rules { get { return rules; } }
  private static readonly Rule[] rules;


  #region Construction

  static Parser()
  {

    #region states
    states = new State[]
    {
      new State(0, -2, new int[] {-128,1,-130,3}),
      new State(1, new int[] {0,2}),
      new State(2, -1),
      new State(3, -81, new int[] {-81,4}),
      new State(4, new int[] {123,7,330,23,329,31,332,150,339,162,343,176,344,467,348,471,355,474,316,481,328,490,321,497,320,97,36,98,319,500,388,898,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470,357,517,334,526,336,536,59,542,349,543,352,559,345,562,315,628,314,629,361,630,362,681,363,690,360,910,353,914,347,966,0,-3,327,-375}, new int[] {-30,5,-31,6,-16,12,-39,498,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,502,-32,906,-33,907,-11,567,-12,627,-34,908,-36,909}),
      new State(5, -80),
      new State(6, -87),
      new State(7, -124, new int[] {-84,8}),
      new State(8, new int[] {125,9,123,7,330,23,329,31,332,150,339,162,343,176,344,467,348,471,355,474,316,481,328,490,321,497,320,97,36,98,319,500,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470,357,517,334,526,336,536,59,542,349,543,352,559,345,562,315,628,314,629,361,630,362,681,363,690,360,701,327,-375}, new int[] {-79,10,-31,11,-16,12,-39,498,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,502,-32,565,-33,566,-11,567,-12,627,-34,680,-36,689}),
      new State(9, -131),
      new State(10, -123),
      new State(11, -125),
      new State(12, new int[] {327,877}, new int[] {-51,13,-52,15,-124,17,-125,884}),
      new State(13, -376, new int[] {-17,14}),
      new State(14, -132),
      new State(15, -376, new int[] {-17,16}),
      new State(16, -133),
      new State(17, new int[] {308,18,309,875,123,-208,330,-208,329,-208,332,-208,339,-208,343,-208,344,-208,348,-208,355,-208,316,-208,328,-208,321,-208,320,-208,36,-208,319,-208,388,-208,390,-208,40,-208,368,-208,91,-208,323,-208,367,-208,305,-208,303,-208,302,-208,43,-208,45,-208,33,-208,126,-208,306,-208,358,-208,359,-208,262,-208,261,-208,260,-208,259,-208,258,-208,301,-208,300,-208,299,-208,298,-208,297,-208,296,-208,295,-208,326,-208,64,-208,317,-208,318,-208,370,-208,371,-208,372,-208,374,-208,375,-208,376,-208,389,-208,373,-208,383,-208,34,-208,96,-208,266,-208,267,-208,269,-208,346,-208,357,-208,334,-208,336,-208,59,-208,349,-208,352,-208,345,-208,315,-208,314,-208,361,-208,362,-208,363,-208,360,-208,353,-208,347,-208,327,-208,0,-208,125,-208,341,-208,342,-208,340,-208,337,-208,335,-208,333,-208,331,-208,310,-208}),
      new State(18, new int[] {40,19}),
      new State(19, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,20,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(20, new int[] {41,21,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(21, new int[] {123,7,330,23,329,31,332,150,339,162,343,176,344,467,348,471,355,474,316,481,328,490,321,497,320,97,36,98,319,500,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470,357,517,334,526,336,536,59,542,349,543,352,559,345,562,327,-375}, new int[] {-31,22,-16,12,-39,498,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(22, -207),
      new State(23, new int[] {40,24}),
      new State(24, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,25,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(25, new int[] {41,26,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(26, -375, new int[] {-16,27}),
      new State(27, new int[] {123,7,330,23,329,31,332,150,339,162,343,176,344,467,348,471,355,474,316,481,328,490,321,497,320,97,36,98,319,500,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470,357,517,334,526,336,536,59,542,349,543,352,559,345,562,58,871,327,-375}, new int[] {-70,28,-31,30,-16,12,-39,498,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(28, -376, new int[] {-17,29}),
      new State(29, -134),
      new State(30, -204),
      new State(31, -375, new int[] {-16,32}),
      new State(32, new int[] {123,7,330,23,329,31,332,150,339,162,343,176,344,467,348,471,355,474,316,481,328,490,321,497,320,97,36,98,319,500,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470,357,517,334,526,336,536,59,542,349,543,352,559,345,562,327,-375}, new int[] {-31,33,-16,12,-39,498,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(33, new int[] {330,34}),
      new State(34, new int[] {40,35}),
      new State(35, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,36,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(36, new int[] {41,37,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(37, new int[] {59,38}),
      new State(38, -376, new int[] {-17,39}),
      new State(39, -135),
      new State(40, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,41,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(41, new int[] {283,-318,284,42,263,-318,265,-318,264,-318,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,-318,282,-318,59,-318,41,-318,125,-318,58,-318,93,-318,44,-318,268,-318,338,-318}),
      new State(42, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,43,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(43, new int[] {283,-319,284,-319,263,-319,265,-319,264,-319,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,-319,282,-319,59,-319,41,-319,125,-319,58,-319,93,-319,44,-319,268,-319,338,-319}),
      new State(44, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,45,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(45, new int[] {283,40,284,42,263,-320,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-320,41,-320,125,-320,58,-320,93,-320,44,-320,268,-320,338,-320}),
      new State(46, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,47,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(47, new int[] {283,40,284,42,263,-321,265,-321,264,-321,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-321,41,-321,125,-321,58,-321,93,-321,44,-321,268,-321,338,-321}),
      new State(48, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,49,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(49, new int[] {283,40,284,42,263,-322,265,46,264,-322,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-322,41,-322,125,-322,58,-322,93,-322,44,-322,268,-322,338,-322}),
      new State(50, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,51,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(51, new int[] {283,-323,284,-323,263,-323,265,-323,264,-323,124,-323,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,-323,282,-323,59,-323,41,-323,125,-323,58,-323,93,-323,44,-323,268,-323,338,-323}),
      new State(52, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,53,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(53, new int[] {283,-324,284,-324,263,-324,265,-324,264,-324,124,-324,38,-324,94,-324,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,-324,282,-324,59,-324,41,-324,125,-324,58,-324,93,-324,44,-324,268,-324,338,-324}),
      new State(54, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,55,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(55, new int[] {283,-325,284,-325,263,-325,265,-325,264,-325,124,-325,38,52,94,-325,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,-325,282,-325,59,-325,41,-325,125,-325,58,-325,93,-325,44,-325,268,-325,338,-325}),
      new State(56, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,57,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(57, new int[] {283,-326,284,-326,263,-326,265,-326,264,-326,124,-326,38,-326,94,-326,46,-326,43,-326,45,-326,42,62,304,64,47,66,37,68,293,-326,292,-326,287,-326,286,-326,289,-326,288,-326,60,-326,291,-326,62,-326,290,-326,285,-326,294,92,63,-326,282,-326,59,-326,41,-326,125,-326,58,-326,93,-326,44,-326,268,-326,338,-326}),
      new State(58, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,59,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(59, new int[] {283,-327,284,-327,263,-327,265,-327,264,-327,124,-327,38,-327,94,-327,46,-327,43,-327,45,-327,42,62,304,64,47,66,37,68,293,-327,292,-327,287,-327,286,-327,289,-327,288,-327,60,-327,291,-327,62,-327,290,-327,285,-327,294,92,63,-327,282,-327,59,-327,41,-327,125,-327,58,-327,93,-327,44,-327,268,-327,338,-327}),
      new State(60, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,61,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(61, new int[] {283,-328,284,-328,263,-328,265,-328,264,-328,124,-328,38,-328,94,-328,46,-328,43,-328,45,-328,42,62,304,64,47,66,37,68,293,-328,292,-328,287,-328,286,-328,289,-328,288,-328,60,-328,291,-328,62,-328,290,-328,285,-328,294,92,63,-328,282,-328,59,-328,41,-328,125,-328,58,-328,93,-328,44,-328,268,-328,338,-328}),
      new State(62, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,63,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(63, new int[] {283,-329,284,-329,263,-329,265,-329,264,-329,124,-329,38,-329,94,-329,46,-329,43,-329,45,-329,42,-329,304,64,47,-329,37,-329,293,-329,292,-329,287,-329,286,-329,289,-329,288,-329,60,-329,291,-329,62,-329,290,-329,285,-329,294,92,63,-329,282,-329,59,-329,41,-329,125,-329,58,-329,93,-329,44,-329,268,-329,338,-329}),
      new State(64, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,65,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(65, new int[] {283,-330,284,-330,263,-330,265,-330,264,-330,124,-330,38,-330,94,-330,46,-330,43,-330,45,-330,42,-330,304,64,47,-330,37,-330,293,-330,292,-330,287,-330,286,-330,289,-330,288,-330,60,-330,291,-330,62,-330,290,-330,285,-330,294,-330,63,-330,282,-330,59,-330,41,-330,125,-330,58,-330,93,-330,44,-330,268,-330,338,-330}),
      new State(66, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,67,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(67, new int[] {283,-331,284,-331,263,-331,265,-331,264,-331,124,-331,38,-331,94,-331,46,-331,43,-331,45,-331,42,-331,304,64,47,-331,37,-331,293,-331,292,-331,287,-331,286,-331,289,-331,288,-331,60,-331,291,-331,62,-331,290,-331,285,-331,294,92,63,-331,282,-331,59,-331,41,-331,125,-331,58,-331,93,-331,44,-331,268,-331,338,-331}),
      new State(68, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,69,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(69, new int[] {283,-332,284,-332,263,-332,265,-332,264,-332,124,-332,38,-332,94,-332,46,-332,43,-332,45,-332,42,-332,304,64,47,-332,37,-332,293,-332,292,-332,287,-332,286,-332,289,-332,288,-332,60,-332,291,-332,62,-332,290,-332,285,-332,294,92,63,-332,282,-332,59,-332,41,-332,125,-332,58,-332,93,-332,44,-332,268,-332,338,-332}),
      new State(70, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,71,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(71, new int[] {283,-333,284,-333,263,-333,265,-333,264,-333,124,-333,38,-333,94,-333,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,-333,292,-333,287,-333,286,-333,289,-333,288,-333,60,-333,291,-333,62,-333,290,-333,285,-333,294,92,63,-333,282,-333,59,-333,41,-333,125,-333,58,-333,93,-333,44,-333,268,-333,338,-333}),
      new State(72, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,73,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(73, new int[] {283,-334,284,-334,263,-334,265,-334,264,-334,124,-334,38,-334,94,-334,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,-334,292,-334,287,-334,286,-334,289,-334,288,-334,60,-334,291,-334,62,-334,290,-334,285,-334,294,92,63,-334,282,-334,59,-334,41,-334,125,-334,58,-334,93,-334,44,-334,268,-334,338,-334}),
      new State(74, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,75,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(75, new int[] {283,-339,284,-339,263,-339,265,-339,264,-339,124,-339,38,-339,94,-339,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,-339,282,-339,59,-339,41,-339,125,-339,58,-339,93,-339,44,-339,268,-339,338,-339}),
      new State(76, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,77,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(77, new int[] {283,-340,284,-340,263,-340,265,-340,264,-340,124,-340,38,-340,94,-340,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,-340,282,-340,59,-340,41,-340,125,-340,58,-340,93,-340,44,-340,268,-340,338,-340}),
      new State(78, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,79,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(79, new int[] {283,-341,284,-341,263,-341,265,-341,264,-341,124,-341,38,-341,94,-341,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,-341,282,-341,59,-341,41,-341,125,-341,58,-341,93,-341,44,-341,268,-341,338,-341}),
      new State(80, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,81,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(81, new int[] {283,-342,284,-342,263,-342,265,-342,264,-342,124,-342,38,-342,94,-342,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,-342,282,-342,59,-342,41,-342,125,-342,58,-342,93,-342,44,-342,268,-342,338,-342}),
      new State(82, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,83,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(83, new int[] {283,-343,284,-343,263,-343,265,-343,264,-343,124,-343,38,-343,94,-343,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,-343,286,-343,289,-343,288,-343,60,82,291,84,62,86,290,88,285,-343,294,92,63,-343,282,-343,59,-343,41,-343,125,-343,58,-343,93,-343,44,-343,268,-343,338,-343}),
      new State(84, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,85,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(85, new int[] {283,-344,284,-344,263,-344,265,-344,264,-344,124,-344,38,-344,94,-344,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,-344,286,-344,289,-344,288,-344,60,82,291,84,62,86,290,88,285,-344,294,92,63,-344,282,-344,59,-344,41,-344,125,-344,58,-344,93,-344,44,-344,268,-344,338,-344}),
      new State(86, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,87,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(87, new int[] {283,-345,284,-345,263,-345,265,-345,264,-345,124,-345,38,-345,94,-345,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,-345,286,-345,289,-345,288,-345,60,82,291,84,62,86,290,88,285,-345,294,92,63,-345,282,-345,59,-345,41,-345,125,-345,58,-345,93,-345,44,-345,268,-345,338,-345}),
      new State(88, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,89,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(89, new int[] {283,-346,284,-346,263,-346,265,-346,264,-346,124,-346,38,-346,94,-346,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,-346,286,-346,289,-346,288,-346,60,82,291,84,62,86,290,88,285,-346,294,92,63,-346,282,-346,59,-346,41,-346,125,-346,58,-346,93,-346,44,-346,268,-346,338,-346}),
      new State(90, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,91,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(91, new int[] {283,-347,284,-347,263,-347,265,-347,264,-347,124,-347,38,-347,94,-347,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,-347,282,-347,59,-347,41,-347,125,-347,58,-347,93,-347,44,-347,268,-347,338,-347}),
      new State(92, new int[] {316,292,319,184,388,185,390,188,320,97,36,98}, new int[] {-25,93,-26,94,-18,346,-102,181,-75,347,-45,794}),
      new State(93, -348),
      new State(94, new int[] {387,95,59,-392,283,-392,284,-392,263,-392,265,-392,264,-392,124,-392,38,-392,94,-392,46,-392,43,-392,45,-392,42,-392,304,-392,47,-392,37,-392,293,-392,292,-392,287,-392,286,-392,289,-392,288,-392,60,-392,291,-392,62,-392,290,-392,285,-392,294,-392,63,-392,282,-392,41,-392,125,-392,58,-392,93,-392,44,-392,268,-392,338,-392,40,-392}),
      new State(95, new int[] {320,97,36,98}, new int[] {-45,96}),
      new State(96, -452),
      new State(97, -443),
      new State(98, new int[] {123,99,320,97,36,98}, new int[] {-45,870}),
      new State(99, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,100,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(100, new int[] {125,101,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(101, -444),
      new State(102, new int[] {58,868,320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,103,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(103, new int[] {58,104,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(104, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,105,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(105, new int[] {283,40,284,42,263,-351,265,-351,264,-351,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,-351,282,106,59,-351,41,-351,125,-351,58,-351,93,-351,44,-351,268,-351,338,-351}),
      new State(106, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,107,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(107, new int[] {283,40,284,42,263,-353,265,-353,264,-353,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,-353,282,106,59,-353,41,-353,125,-353,58,-353,93,-353,44,-353,268,-353,338,-353}),
      new State(108, new int[] {61,109,281,842,280,844,279,846,270,848,278,850,277,852,276,854,275,856,274,858,273,860,272,862,271,864,303,866,302,867,59,-423,283,-423,284,-423,263,-423,265,-423,264,-423,124,-423,38,-423,94,-423,46,-423,43,-423,45,-423,42,-423,304,-423,47,-423,37,-423,293,-423,292,-423,287,-423,286,-423,289,-423,288,-423,60,-423,291,-423,62,-423,290,-423,285,-423,294,-423,63,-423,282,-423,41,-423,125,-423,58,-423,93,-423,44,-423,268,-423,338,-423,91,-428,366,-428,123,-428,387,-428}),
      new State(109, new int[] {38,111,320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,110,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(110, new int[] {283,40,284,42,263,-299,265,-299,264,-299,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-299,41,-299,125,-299,58,-299,93,-299,44,-299,268,-299,338,-299}),
      new State(111, new int[] {320,97,36,98,316,292,319,184,388,185,390,188,40,293,368,279,91,321,323,301}, new int[] {-40,112,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,320,-47,331,-49,306,-76,307}),
      new State(112, new int[] {59,-300,283,-300,284,-300,263,-300,265,-300,264,-300,124,-300,38,-300,94,-300,46,-300,43,-300,45,-300,42,-300,304,-300,47,-300,37,-300,293,-300,292,-300,287,-300,286,-300,289,-300,288,-300,60,-300,291,-300,62,-300,290,-300,285,-300,294,-300,63,-300,282,-300,41,-300,125,-300,58,-300,93,-300,44,-300,268,-300,338,-300,91,-428,366,-428,123,-428,387,-428}),
      new State(113, new int[] {61,-440,281,-440,280,-440,279,-440,270,-440,278,-440,277,-440,276,-440,275,-440,274,-440,273,-440,272,-440,271,-440,303,-440,302,-440,59,-440,283,-440,284,-440,263,-440,265,-440,264,-440,124,-440,38,-440,94,-440,46,-440,43,-440,45,-440,42,-440,304,-440,47,-440,37,-440,293,-440,292,-440,287,-440,286,-440,289,-440,288,-440,60,-440,291,-440,62,-440,290,-440,285,-440,294,-440,63,-440,282,-440,91,-440,366,-440,123,-440,387,-440,41,-440,125,-440,58,-440,93,-440,44,-440,268,-440,338,-440,40,-431}),
      new State(114, -434),
      new State(115, new int[] {91,116,366,836,123,839,387,-427}),
      new State(116, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470,93,-425}, new int[] {-58,117,-39,119,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(117, new int[] {93,118}),
      new State(118, -435),
      new State(119, new int[] {283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,93,-426,59,-426,41,-426}),
      new State(120, -441),
      new State(121, new int[] {387,122}),
      new State(122, new int[] {320,97,36,98,319,196,262,199,261,200,260,201,259,202,258,203,263,204,264,205,265,206,294,207,306,208,305,209,326,210,327,211,308,212,309,213,310,214,328,215,329,216,330,217,331,218,332,219,333,220,334,221,335,222,336,223,337,224,338,225,349,226,350,227,351,228,352,229,353,230,354,231,355,232,356,233,357,234,358,235,359,236,344,237,345,238,346,239,347,240,348,241,266,242,267,243,367,244,339,245,340,246,341,247,342,248,343,249,368,250,369,251,364,252,365,253,388,254,362,255,363,256,361,257,373,258,374,259,376,260,375,261,370,262,371,263,372,264,389,265,316,266,315,267,314,268,313,269,312,270,311,271,123,272}, new int[] {-45,123,-99,124,-2,125,-100,197,-101,198}),
      new State(123, new int[] {61,-446,281,-446,280,-446,279,-446,270,-446,278,-446,277,-446,276,-446,275,-446,274,-446,273,-446,272,-446,271,-446,303,-446,302,-446,59,-446,283,-446,284,-446,263,-446,265,-446,264,-446,124,-446,38,-446,94,-446,46,-446,43,-446,45,-446,42,-446,304,-446,47,-446,37,-446,293,-446,292,-446,287,-446,286,-446,289,-446,288,-446,60,-446,291,-446,62,-446,290,-446,285,-446,294,-446,63,-446,282,-446,91,-446,366,-446,123,-446,387,-446,41,-446,125,-446,58,-446,93,-446,44,-446,268,-446,338,-446,40,-456}),
      new State(124, new int[] {91,-421,59,-421,283,-421,284,-421,263,-421,265,-421,264,-421,124,-421,38,-421,94,-421,46,-421,43,-421,45,-421,42,-421,304,-421,47,-421,37,-421,293,-421,292,-421,287,-421,286,-421,289,-421,288,-421,60,-421,291,-421,62,-421,290,-421,285,-421,294,-421,63,-421,282,-421,41,-421,125,-421,58,-421,93,-421,44,-421,268,-421,338,-421,40,-454}),
      new State(125, new int[] {40,127}, new int[] {-112,126}),
      new State(126, -387),
      new State(127, new int[] {41,128,320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470,391,833}, new int[] {-113,129,-110,835,-39,133,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(128, -229),
      new State(129, new int[] {41,130,44,131}),
      new State(130, -230),
      new State(131, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470,391,833}, new int[] {-110,132,-39,133,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(132, -232),
      new State(133, new int[] {283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,41,-233,44,-233}),
      new State(134, new int[] {346,470,387,-390}, new int[] {-4,135}),
      new State(135, new int[] {38,726,40,-378}, new int[] {-3,136}),
      new State(136, -374, new int[] {-15,137}),
      new State(137, new int[] {40,138}),
      new State(138, new int[] {368,708,369,709,319,184,388,185,390,188,63,711,38,-220,391,-220,320,-220,41,-215}, new int[] {-116,139,-117,713,-114,725,-23,716,-22,724,-20,707,-18,710,-102,181}),
      new State(139, new int[] {41,140}),
      new State(140, new int[] {353,768,58,-380,123,-380}, new int[] {-118,141}),
      new State(141, new int[] {58,705,123,-227}, new int[] {-21,142}),
      new State(142, -377, new int[] {-14,143}),
      new State(143, -375, new int[] {-16,144}),
      new State(144, new int[] {123,145}),
      new State(145, -124, new int[] {-84,146}),
      new State(146, new int[] {125,147,123,7,330,23,329,31,332,150,339,162,343,176,344,467,348,471,355,474,316,481,328,490,321,497,320,97,36,98,319,500,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470,357,517,334,526,336,536,59,542,349,543,352,559,345,562,315,628,314,629,361,630,362,681,363,690,360,701,327,-375}, new int[] {-79,10,-31,11,-16,12,-39,498,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,502,-32,565,-33,566,-11,567,-12,627,-34,680,-36,689}),
      new State(147, -376, new int[] {-17,148}),
      new State(148, -377, new int[] {-14,149}),
      new State(149, -372),
      new State(150, new int[] {40,151}),
      new State(151, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470,59,-290}, new int[] {-86,152,-97,829,-39,832,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(152, new int[] {59,153}),
      new State(153, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470,59,-290}, new int[] {-86,154,-97,829,-39,832,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(154, new int[] {59,155}),
      new State(155, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470,41,-290}, new int[] {-86,156,-97,829,-39,832,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(156, new int[] {41,157}),
      new State(157, -375, new int[] {-16,158}),
      new State(158, new int[] {123,7,330,23,329,31,332,150,339,162,343,176,344,467,348,471,355,474,316,481,328,490,321,497,320,97,36,98,319,500,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470,357,517,334,526,336,536,59,542,349,543,352,559,345,562,58,825,327,-375}, new int[] {-68,159,-31,161,-16,12,-39,498,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(159, -376, new int[] {-17,160}),
      new State(160, -136),
      new State(161, -189),
      new State(162, new int[] {40,163}),
      new State(163, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,164,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(164, new int[] {41,165,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(165, -375, new int[] {-16,166}),
      new State(166, new int[] {123,169,58,817}, new int[] {-96,167}),
      new State(167, -376, new int[] {-17,168}),
      new State(168, -137),
      new State(169, new int[] {59,814,125,-199,341,-199,342,-199}, new int[] {-95,170}),
      new State(170, new int[] {125,171,341,172,342,811}),
      new State(171, -195),
      new State(172, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,173,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(173, new int[] {283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,58,809,59,810}, new int[] {-138,174}),
      new State(174, -124, new int[] {-84,175}),
      new State(175, new int[] {123,7,330,23,329,31,332,150,339,162,343,176,344,467,348,471,355,474,316,481,328,490,321,497,320,97,36,98,319,500,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470,357,517,334,526,336,536,59,542,349,543,352,559,345,562,315,628,314,629,361,630,362,681,363,690,360,701,125,-200,341,-200,342,-200,340,-200,327,-375}, new int[] {-79,10,-31,11,-16,12,-39,498,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,502,-32,565,-33,566,-11,567,-12,627,-34,680,-36,689}),
      new State(176, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470,59,-425}, new int[] {-58,177,-39,119,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(177, new int[] {59,178}),
      new State(178, -138),
      new State(179, new int[] {40,127,387,-391,91,-420,59,-420,283,-420,284,-420,263,-420,265,-420,264,-420,124,-420,38,-420,94,-420,46,-420,43,-420,45,-420,42,-420,304,-420,47,-420,37,-420,293,-420,292,-420,287,-420,286,-420,289,-420,288,-420,60,-420,291,-420,62,-420,290,-420,285,-420,294,-420,63,-420,282,-420,41,-420,125,-420,58,-420,93,-420,44,-420,268,-420,338,-420}, new int[] {-112,180}),
      new State(180, -386),
      new State(181, new int[] {390,182,40,-84,387,-84,91,-84,59,-84,283,-84,284,-84,263,-84,265,-84,264,-84,124,-84,38,-84,94,-84,46,-84,43,-84,45,-84,42,-84,304,-84,47,-84,37,-84,293,-84,292,-84,287,-84,286,-84,289,-84,288,-84,60,-84,291,-84,62,-84,290,-84,285,-84,294,-84,63,-84,282,-84,41,-84,125,-84,58,-84,93,-84,44,-84,268,-84,338,-84,391,-84,320,-84,123,-84,365,-84}),
      new State(182, new int[] {319,183}),
      new State(183, -83),
      new State(184, -82),
      new State(185, new int[] {390,186}),
      new State(186, new int[] {319,184}, new int[] {-102,187}),
      new State(187, new int[] {390,182,40,-85,387,-85,91,-85,59,-85,283,-85,284,-85,263,-85,265,-85,264,-85,124,-85,38,-85,94,-85,46,-85,43,-85,45,-85,42,-85,304,-85,47,-85,37,-85,293,-85,292,-85,287,-85,286,-85,289,-85,288,-85,60,-85,291,-85,62,-85,290,-85,285,-85,294,-85,63,-85,282,-85,41,-85,125,-85,58,-85,93,-85,44,-85,268,-85,338,-85,391,-85,320,-85,123,-85,365,-85}),
      new State(188, new int[] {319,184}, new int[] {-102,189}),
      new State(189, new int[] {390,182,40,-86,387,-86,91,-86,59,-86,283,-86,284,-86,263,-86,265,-86,264,-86,124,-86,38,-86,94,-86,46,-86,43,-86,45,-86,42,-86,304,-86,47,-86,37,-86,293,-86,292,-86,287,-86,286,-86,289,-86,288,-86,60,-86,291,-86,62,-86,290,-86,285,-86,294,-86,63,-86,282,-86,41,-86,125,-86,58,-86,93,-86,44,-86,268,-86,338,-86,391,-86,320,-86,123,-86,365,-86}),
      new State(190, new int[] {387,191}),
      new State(191, new int[] {320,97,36,98,319,196,262,199,261,200,260,201,259,202,258,203,263,204,264,205,265,206,294,207,306,208,305,209,326,210,327,211,308,212,309,213,310,214,328,215,329,216,330,217,331,218,332,219,333,220,334,221,335,222,336,223,337,224,338,225,349,226,350,227,351,228,352,229,353,230,354,231,355,232,356,233,357,234,358,235,359,236,344,237,345,238,346,239,347,240,348,241,266,242,267,243,367,244,339,245,340,246,341,247,342,248,343,249,368,250,369,251,364,252,365,253,388,254,362,255,363,256,361,257,373,258,374,259,376,260,375,261,370,262,371,263,372,264,389,265,316,266,315,267,314,268,313,269,312,270,311,271,123,272}, new int[] {-45,192,-99,193,-2,194,-100,197,-101,198}),
      new State(192, new int[] {61,-447,281,-447,280,-447,279,-447,270,-447,278,-447,277,-447,276,-447,275,-447,274,-447,273,-447,272,-447,271,-447,303,-447,302,-447,59,-447,283,-447,284,-447,263,-447,265,-447,264,-447,124,-447,38,-447,94,-447,46,-447,43,-447,45,-447,42,-447,304,-447,47,-447,37,-447,293,-447,292,-447,287,-447,286,-447,289,-447,288,-447,60,-447,291,-447,62,-447,290,-447,285,-447,294,-447,63,-447,282,-447,91,-447,366,-447,123,-447,387,-447,41,-447,125,-447,58,-447,93,-447,44,-447,268,-447,338,-447,40,-456}),
      new State(193, new int[] {91,-422,59,-422,283,-422,284,-422,263,-422,265,-422,264,-422,124,-422,38,-422,94,-422,46,-422,43,-422,45,-422,42,-422,304,-422,47,-422,37,-422,293,-422,292,-422,287,-422,286,-422,289,-422,288,-422,60,-422,291,-422,62,-422,290,-422,285,-422,294,-422,63,-422,282,-422,41,-422,125,-422,58,-422,93,-422,44,-422,268,-422,338,-422,40,-454}),
      new State(194, new int[] {40,127}, new int[] {-112,195}),
      new State(195, -388),
      new State(196, -78),
      new State(197, -79),
      new State(198, -71),
      new State(199, -4),
      new State(200, -5),
      new State(201, -6),
      new State(202, -7),
      new State(203, -8),
      new State(204, -9),
      new State(205, -10),
      new State(206, -11),
      new State(207, -12),
      new State(208, -13),
      new State(209, -14),
      new State(210, -15),
      new State(211, -16),
      new State(212, -17),
      new State(213, -18),
      new State(214, -19),
      new State(215, -20),
      new State(216, -21),
      new State(217, -22),
      new State(218, -23),
      new State(219, -24),
      new State(220, -25),
      new State(221, -26),
      new State(222, -27),
      new State(223, -28),
      new State(224, -29),
      new State(225, -30),
      new State(226, -31),
      new State(227, -32),
      new State(228, -33),
      new State(229, -34),
      new State(230, -35),
      new State(231, -36),
      new State(232, -37),
      new State(233, -38),
      new State(234, -39),
      new State(235, -40),
      new State(236, -41),
      new State(237, -42),
      new State(238, -43),
      new State(239, -44),
      new State(240, -45),
      new State(241, -46),
      new State(242, -47),
      new State(243, -48),
      new State(244, -49),
      new State(245, -50),
      new State(246, -51),
      new State(247, -52),
      new State(248, -53),
      new State(249, -54),
      new State(250, -55),
      new State(251, -56),
      new State(252, -57),
      new State(253, -58),
      new State(254, -59),
      new State(255, -60),
      new State(256, -61),
      new State(257, -62),
      new State(258, -63),
      new State(259, -64),
      new State(260, -65),
      new State(261, -66),
      new State(262, -67),
      new State(263, -68),
      new State(264, -69),
      new State(265, -70),
      new State(266, -72),
      new State(267, -73),
      new State(268, -74),
      new State(269, -75),
      new State(270, -76),
      new State(271, -77),
      new State(272, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,273,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(273, new int[] {125,274,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(274, -455),
      new State(275, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,276,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(276, new int[] {41,277,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(277, new int[] {91,-429,366,-429,123,-429,387,-429,40,-432,59,-349,283,-349,284,-349,263,-349,265,-349,264,-349,124,-349,38,-349,94,-349,46,-349,43,-349,45,-349,42,-349,304,-349,47,-349,37,-349,293,-349,292,-349,287,-349,286,-349,289,-349,288,-349,60,-349,291,-349,62,-349,290,-349,285,-349,294,-349,63,-349,282,-349,41,-349,125,-349,58,-349,93,-349,44,-349,268,-349,338,-349}),
      new State(278, new int[] {91,-430,366,-430,123,-430,387,-430,40,-433,59,-418,283,-418,284,-418,263,-418,265,-418,264,-418,124,-418,38,-418,94,-418,46,-418,43,-418,45,-418,42,-418,304,-418,47,-418,37,-418,293,-418,292,-418,287,-418,286,-418,289,-418,288,-418,60,-418,291,-418,62,-418,290,-418,285,-418,294,-418,63,-418,282,-418,41,-418,125,-418,58,-418,93,-418,44,-418,268,-418,338,-418}),
      new State(279, new int[] {40,280}),
      new State(280, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,325,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470,38,760,44,-461,41,-461}, new int[] {-123,281,-122,283,-120,324,-121,286,-39,287,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(281, new int[] {41,282}),
      new State(282, -401),
      new State(283, new int[] {44,284,41,-460,93,-460}),
      new State(284, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,325,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470,38,760,44,-461,41,-461,93,-461}, new int[] {-120,285,-121,286,-39,287,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(285, -463),
      new State(286, -462),
      new State(287, new int[] {268,288,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,44,-466,41,-466,93,-466}),
      new State(288, new int[] {38,290,367,805,320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,289,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(289, new int[] {283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,44,-465,41,-465,93,-465}),
      new State(290, new int[] {320,97,36,98,316,292,319,184,388,185,390,188,40,293,368,279,91,321,323,301}, new int[] {-40,291,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,320,-47,331,-49,306,-76,307}),
      new State(291, new int[] {44,-467,41,-467,93,-467,91,-428,366,-428,123,-428,387,-428}),
      new State(292, -390),
      new State(293, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,294,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(294, new int[] {41,295,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(295, new int[] {91,-429,366,-429,123,-429,387,-429,40,-432}),
      new State(296, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,325,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470,38,760,44,-461,93,-461}, new int[] {-123,297,-122,283,-120,324,-121,286,-39,287,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(297, new int[] {93,298}),
      new State(298, new int[] {61,299,91,-402,366,-402,123,-402,387,-402,40,-402,59,-402,283,-402,284,-402,263,-402,265,-402,264,-402,124,-402,38,-402,94,-402,46,-402,43,-402,45,-402,42,-402,304,-402,47,-402,37,-402,293,-402,292,-402,287,-402,286,-402,289,-402,288,-402,60,-402,291,-402,62,-402,290,-402,285,-402,294,-402,63,-402,282,-402,41,-402,125,-402,58,-402,93,-402,44,-402,268,-402,338,-402}),
      new State(299, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,300,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(300, new int[] {283,40,284,42,263,-298,265,-298,264,-298,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-298,41,-298,125,-298,58,-298,93,-298,44,-298,268,-298,338,-298}),
      new State(301, -403),
      new State(302, new int[] {91,303,59,-419,283,-419,284,-419,263,-419,265,-419,264,-419,124,-419,38,-419,94,-419,46,-419,43,-419,45,-419,42,-419,304,-419,47,-419,37,-419,293,-419,292,-419,287,-419,286,-419,289,-419,288,-419,60,-419,291,-419,62,-419,290,-419,285,-419,294,-419,63,-419,282,-419,41,-419,125,-419,58,-419,93,-419,44,-419,268,-419,338,-419}),
      new State(303, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470,93,-425}, new int[] {-58,304,-39,119,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(304, new int[] {93,305}),
      new State(305, -436),
      new State(306, -439),
      new State(307, new int[] {40,127}, new int[] {-112,308}),
      new State(308, -389),
      new State(309, -424),
      new State(310, new int[] {40,311}),
      new State(311, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,325,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470,38,760,44,-461,41,-461}, new int[] {-123,312,-122,283,-120,324,-121,286,-39,287,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(312, new int[] {41,313}),
      new State(313, new int[] {61,314}),
      new State(314, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,315,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(315, new int[] {283,40,284,42,263,-297,265,-297,264,-297,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-297,41,-297,125,-297,58,-297,93,-297,44,-297,268,-297,338,-297}),
      new State(316, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,317,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(317, -301),
      new State(318, new int[] {320,97,36,98,316,292,319,184,388,185,390,188,40,293,368,279,91,321,323,301}, new int[] {-40,319,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,320,-47,331,-49,306,-76,307}),
      new State(319, new int[] {59,-315,283,-315,284,-315,263,-315,265,-315,264,-315,124,-315,38,-315,94,-315,46,-315,43,-315,45,-315,42,-315,304,-315,47,-315,37,-315,293,-315,292,-315,287,-315,286,-315,289,-315,288,-315,60,-315,291,-315,62,-315,290,-315,285,-315,294,-315,63,-315,282,-315,41,-315,125,-315,58,-315,93,-315,44,-315,268,-315,338,-315,91,-428,366,-428,123,-428,387,-428}),
      new State(320, new int[] {91,-430,366,-430,123,-430,387,-430,40,-433}),
      new State(321, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,325,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470,38,760,44,-461,93,-461}, new int[] {-123,322,-122,283,-120,324,-121,286,-39,287,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(322, new int[] {93,323}),
      new State(323, -402),
      new State(324, -464),
      new State(325, new int[] {40,326}),
      new State(326, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,325,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470,38,760,44,-461,41,-461}, new int[] {-123,327,-122,283,-120,324,-121,286,-39,287,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(327, new int[] {41,328}),
      new State(328, new int[] {61,314,44,-470,41,-470,93,-470}),
      new State(329, new int[] {320,97,36,98,316,292,319,184,388,185,390,188,40,293,368,279,91,321,323,301}, new int[] {-40,330,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,320,-47,331,-49,306,-76,307}),
      new State(330, new int[] {59,-317,283,-317,284,-317,263,-317,265,-317,264,-317,124,-317,38,-317,94,-317,46,-317,43,-317,45,-317,42,-317,304,-317,47,-317,37,-317,293,-317,292,-317,287,-317,286,-317,289,-317,288,-317,60,-317,291,-317,62,-317,290,-317,285,-317,294,-317,63,-317,282,-317,41,-317,125,-317,58,-317,93,-317,44,-317,268,-317,338,-317,91,-428,366,-428,123,-428,387,-428}),
      new State(331, new int[] {91,303}),
      new State(332, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,333,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(333, new int[] {283,-335,284,-335,263,-335,265,-335,264,-335,124,-335,38,-335,94,-335,46,-335,43,-335,45,-335,42,-335,304,64,47,-335,37,-335,293,-335,292,-335,287,-335,286,-335,289,-335,288,-335,60,-335,291,-335,62,-335,290,-335,285,-335,294,-335,63,-335,282,-335,59,-335,41,-335,125,-335,58,-335,93,-335,44,-335,268,-335,338,-335}),
      new State(334, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,335,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(335, new int[] {283,-336,284,-336,263,-336,265,-336,264,-336,124,-336,38,-336,94,-336,46,-336,43,-336,45,-336,42,-336,304,64,47,-336,37,-336,293,-336,292,-336,287,-336,286,-336,289,-336,288,-336,60,-336,291,-336,62,-336,290,-336,285,-336,294,-336,63,-336,282,-336,59,-336,41,-336,125,-336,58,-336,93,-336,44,-336,268,-336,338,-336}),
      new State(336, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,337,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(337, new int[] {283,-337,284,-337,263,-337,265,-337,264,-337,124,-337,38,-337,94,-337,46,-337,43,-337,45,-337,42,-337,304,64,47,-337,37,-337,293,-337,292,-337,287,-337,286,-337,289,-337,288,-337,60,-337,291,-337,62,-337,290,-337,285,-337,294,92,63,-337,282,-337,59,-337,41,-337,125,-337,58,-337,93,-337,44,-337,268,-337,338,-337}),
      new State(338, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,339,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(339, new int[] {283,-338,284,-338,263,-338,265,-338,264,-338,124,-338,38,-338,94,-338,46,-338,43,-338,45,-338,42,-338,304,64,47,-338,37,-338,293,-338,292,-338,287,-338,286,-338,289,-338,288,-338,60,-338,291,-338,62,-338,290,-338,285,-338,294,-338,63,-338,282,-338,59,-338,41,-338,125,-338,58,-338,93,-338,44,-338,268,-338,338,-338}),
      new State(340, -350),
      new State(341, new int[] {316,292,319,184,388,185,390,188,320,97,36,98,361,795}, new int[] {-25,342,-127,345,-26,94,-18,346,-102,181,-75,347,-45,794}),
      new State(342, new int[] {40,127,59,-399,283,-399,284,-399,263,-399,265,-399,264,-399,124,-399,38,-399,94,-399,46,-399,43,-399,45,-399,42,-399,304,-399,47,-399,37,-399,293,-399,292,-399,287,-399,286,-399,289,-399,288,-399,60,-399,291,-399,62,-399,290,-399,285,-399,294,-399,63,-399,282,-399,41,-399,125,-399,58,-399,93,-399,44,-399,268,-399,338,-399}, new int[] {-111,343,-112,344}),
      new State(343, -295),
      new State(344, -400),
      new State(345, -296),
      new State(346, -391),
      new State(347, new int[] {91,348,123,782,366,785,387,792,59,-393,283,-393,284,-393,263,-393,265,-393,264,-393,124,-393,38,-393,94,-393,46,-393,43,-393,45,-393,42,-393,304,-393,47,-393,37,-393,293,-393,292,-393,287,-393,286,-393,289,-393,288,-393,60,-393,291,-393,62,-393,290,-393,285,-393,294,-393,63,-393,282,-393,41,-393,125,-393,58,-393,93,-393,44,-393,268,-393,338,-393,40,-393}),
      new State(348, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470,93,-425}, new int[] {-58,349,-39,119,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(349, new int[] {93,350}),
      new State(350, -449),
      new State(351, -354),
      new State(352, new int[] {40,353}),
      new State(353, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-93,354,-38,781,-39,358,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(354, new int[] {41,355,44,356}),
      new State(355, -485),
      new State(356, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-38,357,-39,358,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(357, -493),
      new State(358, new int[] {283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,41,-494,44,-494}),
      new State(359, new int[] {40,360}),
      new State(360, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,361,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(361, new int[] {41,362,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(362, -486),
      new State(363, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,364,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(364, new int[] {283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-487,41,-487,125,-487,58,-487,93,-487,44,-487,268,-487,338,-487}),
      new State(365, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,366,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(366, new int[] {283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-488,41,-488,125,-488,58,-488,93,-488,44,-488,268,-488,338,-488}),
      new State(367, new int[] {40,368}),
      new State(368, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,369,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(369, new int[] {41,370,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(370, -489),
      new State(371, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,372,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(372, new int[] {283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-490,41,-490,125,-490,58,-490,93,-490,44,-490,268,-490,338,-490}),
      new State(373, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,374,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(374, new int[] {283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-491,41,-491,125,-491,58,-491,93,-491,44,-491,268,-491,338,-491}),
      new State(375, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,376,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(376, new int[] {283,-355,284,-355,263,-355,265,-355,264,-355,124,-355,38,-355,94,-355,46,-355,43,-355,45,-355,42,-355,304,64,47,-355,37,-355,293,-355,292,-355,287,-355,286,-355,289,-355,288,-355,60,-355,291,-355,62,-355,290,-355,285,-355,294,-355,63,-355,282,-355,59,-355,41,-355,125,-355,58,-355,93,-355,44,-355,268,-355,338,-355}),
      new State(377, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,378,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(378, new int[] {283,-356,284,-356,263,-356,265,-356,264,-356,124,-356,38,-356,94,-356,46,-356,43,-356,45,-356,42,-356,304,64,47,-356,37,-356,293,-356,292,-356,287,-356,286,-356,289,-356,288,-356,60,-356,291,-356,62,-356,290,-356,285,-356,294,-356,63,-356,282,-356,59,-356,41,-356,125,-356,58,-356,93,-356,44,-356,268,-356,338,-356}),
      new State(379, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,380,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(380, new int[] {283,-357,284,-357,263,-357,265,-357,264,-357,124,-357,38,-357,94,-357,46,-357,43,-357,45,-357,42,-357,304,64,47,-357,37,-357,293,-357,292,-357,287,-357,286,-357,289,-357,288,-357,60,-357,291,-357,62,-357,290,-357,285,-357,294,-357,63,-357,282,-357,59,-357,41,-357,125,-357,58,-357,93,-357,44,-357,268,-357,338,-357}),
      new State(381, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,382,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(382, new int[] {283,-358,284,-358,263,-358,265,-358,264,-358,124,-358,38,-358,94,-358,46,-358,43,-358,45,-358,42,-358,304,64,47,-358,37,-358,293,-358,292,-358,287,-358,286,-358,289,-358,288,-358,60,-358,291,-358,62,-358,290,-358,285,-358,294,-358,63,-358,282,-358,59,-358,41,-358,125,-358,58,-358,93,-358,44,-358,268,-358,338,-358}),
      new State(383, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,384,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(384, new int[] {283,-359,284,-359,263,-359,265,-359,264,-359,124,-359,38,-359,94,-359,46,-359,43,-359,45,-359,42,-359,304,64,47,-359,37,-359,293,-359,292,-359,287,-359,286,-359,289,-359,288,-359,60,-359,291,-359,62,-359,290,-359,285,-359,294,-359,63,-359,282,-359,59,-359,41,-359,125,-359,58,-359,93,-359,44,-359,268,-359,338,-359}),
      new State(385, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,386,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(386, new int[] {283,-360,284,-360,263,-360,265,-360,264,-360,124,-360,38,-360,94,-360,46,-360,43,-360,45,-360,42,-360,304,64,47,-360,37,-360,293,-360,292,-360,287,-360,286,-360,289,-360,288,-360,60,-360,291,-360,62,-360,290,-360,285,-360,294,-360,63,-360,282,-360,59,-360,41,-360,125,-360,58,-360,93,-360,44,-360,268,-360,338,-360}),
      new State(387, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,388,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(388, new int[] {283,-361,284,-361,263,-361,265,-361,264,-361,124,-361,38,-361,94,-361,46,-361,43,-361,45,-361,42,-361,304,64,47,-361,37,-361,293,-361,292,-361,287,-361,286,-361,289,-361,288,-361,60,-361,291,-361,62,-361,290,-361,285,-361,294,-361,63,-361,282,-361,59,-361,41,-361,125,-361,58,-361,93,-361,44,-361,268,-361,338,-361}),
      new State(389, new int[] {40,391,59,-394,283,-394,284,-394,263,-394,265,-394,264,-394,124,-394,38,-394,94,-394,46,-394,43,-394,45,-394,42,-394,304,-394,47,-394,37,-394,293,-394,292,-394,287,-394,286,-394,289,-394,288,-394,60,-394,291,-394,62,-394,290,-394,285,-394,294,-394,63,-394,282,-394,41,-394,125,-394,58,-394,93,-394,44,-394,268,-394,338,-394}, new int[] {-73,390}),
      new State(390, -362),
      new State(391, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470,41,-425}, new int[] {-58,392,-39,119,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(392, new int[] {41,393}),
      new State(393, -395),
      new State(394, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,395,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(395, new int[] {283,-363,284,-363,263,-363,265,-363,264,-363,124,-363,38,-363,94,-363,46,-363,43,-363,45,-363,42,-363,304,64,47,-363,37,-363,293,-363,292,-363,287,-363,286,-363,289,-363,288,-363,60,-363,291,-363,62,-363,290,-363,285,-363,294,-363,63,-363,282,-363,59,-363,41,-363,125,-363,58,-363,93,-363,44,-363,268,-363,338,-363}),
      new State(396, -364),
      new State(397, -404),
      new State(398, -405),
      new State(399, -406),
      new State(400, -407),
      new State(401, -408),
      new State(402, -409),
      new State(403, -410),
      new State(404, -411),
      new State(405, -412),
      new State(406, -413),
      new State(407, new int[] {322,408,384,778,320,411,385,420,386,434}, new int[] {-92,779,-60,437}),
      new State(408, new int[] {384,409,320,411,385,420,386,434}, new int[] {-60,410}),
      new State(409, -414),
      new State(410, -474),
      new State(411, new int[] {91,412,366,418,384,-475,322,-475,320,-475,385,-475,386,-475,34,-475,96,-475}),
      new State(412, new int[] {319,415,325,416,320,417}, new int[] {-61,413}),
      new State(413, new int[] {93,414}),
      new State(414, -476),
      new State(415, -482),
      new State(416, -483),
      new State(417, -484),
      new State(418, new int[] {319,419}),
      new State(419, -477),
      new State(420, new int[] {324,423,320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,421,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(421, new int[] {125,422,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(422, -478),
      new State(423, new int[] {125,424,91,425}),
      new State(424, -479),
      new State(425, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,426,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(426, new int[] {93,427,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(427, new int[] {125,428}),
      new State(428, -480),
      new State(429, new int[] {320,411,385,420,386,434,322,438}, new int[] {-92,430,-60,437}),
      new State(430, new int[] {34,431,322,433,320,411,385,420,386,434}, new int[] {-60,432}),
      new State(431, -416),
      new State(432, -471),
      new State(433, -472),
      new State(434, new int[] {320,97,36,98,316,292,319,184,388,185,390,188,40,293,368,279,91,321,323,301}, new int[] {-40,435,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,320,-47,331,-49,306,-76,307}),
      new State(435, new int[] {125,436,91,-428,366,-428,123,-428,387,-428}),
      new State(436, -481),
      new State(437, -473),
      new State(438, new int[] {320,411,385,420,386,434}, new int[] {-60,410}),
      new State(439, new int[] {322,442,320,411,385,420,386,434,96,-396}, new int[] {-71,440,-92,443,-60,437}),
      new State(440, new int[] {96,441}),
      new State(441, -365),
      new State(442, new int[] {320,411,385,420,386,434,96,-397}, new int[] {-60,410}),
      new State(443, new int[] {322,433,320,411,385,420,386,434,96,-398}, new int[] {-60,432}),
      new State(444, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,445,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(445, new int[] {283,40,284,42,263,-366,265,-366,264,-366,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-366,41,-366,125,-366,58,-366,93,-366,44,-366,268,-366,338,-366}),
      new State(446, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470,59,-367,283,-367,284,-367,263,-367,265,-367,264,-367,124,-367,38,-367,94,-367,46,-367,42,-367,304,-367,47,-367,37,-367,293,-367,292,-367,287,-367,286,-367,289,-367,288,-367,60,-367,291,-367,62,-367,290,-367,285,-367,294,-367,63,-367,282,-367,41,-367,125,-367,58,-367,93,-367,44,-367,268,-367,338,-367}, new int[] {-39,447,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(447, new int[] {268,448,283,40,284,42,263,-368,265,-368,264,-368,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-368,41,-368,125,-368,58,-368,93,-368,44,-368,338,-368}),
      new State(448, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,449,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(449, new int[] {283,40,284,42,263,-369,265,-369,264,-369,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-369,41,-369,125,-369,58,-369,93,-369,44,-369,268,-369,338,-369}),
      new State(450, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,451,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(451, new int[] {283,40,284,42,263,-370,265,-370,264,-370,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-370,41,-370,125,-370,58,-370,93,-370,44,-370,268,-370,338,-370}),
      new State(452, new int[] {38,726,40,-378}, new int[] {-3,453}),
      new State(453, -374, new int[] {-15,454}),
      new State(454, new int[] {40,455}),
      new State(455, new int[] {368,708,369,709,319,184,388,185,390,188,63,711,38,-220,391,-220,320,-220,41,-215}, new int[] {-116,456,-117,713,-114,725,-23,716,-22,724,-20,707,-18,710,-102,181}),
      new State(456, new int[] {41,457}),
      new State(457, new int[] {353,768,58,-380,123,-380}, new int[] {-118,458}),
      new State(458, new int[] {58,705,123,-227}, new int[] {-21,459}),
      new State(459, -377, new int[] {-14,460}),
      new State(460, -375, new int[] {-16,461}),
      new State(461, new int[] {123,462}),
      new State(462, -124, new int[] {-84,463}),
      new State(463, new int[] {125,464,123,7,330,23,329,31,332,150,339,162,343,176,344,467,348,471,355,474,316,481,328,490,321,497,320,97,36,98,319,500,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470,357,517,334,526,336,536,59,542,349,543,352,559,345,562,315,628,314,629,361,630,362,681,363,690,360,701,327,-375}, new int[] {-79,10,-31,11,-16,12,-39,498,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,502,-32,565,-33,566,-11,567,-12,627,-34,680,-36,689}),
      new State(464, -376, new int[] {-17,465}),
      new State(465, -377, new int[] {-14,466}),
      new State(466, -371),
      new State(467, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470,59,-425}, new int[] {-58,468,-39,119,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(468, new int[] {59,469}),
      new State(469, -139),
      new State(470, -373),
      new State(471, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470,59,-425}, new int[] {-58,472,-39,119,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(472, new int[] {59,473}),
      new State(473, -140),
      new State(474, new int[] {320,97,36,98}, new int[] {-87,475,-55,480,-45,479}),
      new State(475, new int[] {59,476,44,477}),
      new State(476, -141),
      new State(477, new int[] {320,97,36,98}, new int[] {-55,478,-45,479}),
      new State(478, -235),
      new State(479, -237),
      new State(480, -236),
      new State(481, new int[] {320,486,346,470,387,-390}, new int[] {-88,482,-4,135,-56,489}),
      new State(482, new int[] {59,483,44,484}),
      new State(483, -142),
      new State(484, new int[] {320,486}, new int[] {-56,485}),
      new State(485, -238),
      new State(486, new int[] {61,487,59,-240,44,-240}),
      new State(487, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,488,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(488, new int[] {283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-241,44,-241}),
      new State(489, -239),
      new State(490, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-89,491,-57,496,-39,495,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(491, new int[] {59,492,44,493}),
      new State(492, -143),
      new State(493, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-57,494,-39,495,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(494, -287),
      new State(495, new int[] {283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-289,44,-289}),
      new State(496, -288),
      new State(497, -144),
      new State(498, new int[] {59,499,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(499, -145),
      new State(500, new int[] {58,501,390,-82,40,-82,387,-82,91,-82,59,-82,283,-82,284,-82,263,-82,265,-82,264,-82,124,-82,38,-82,94,-82,46,-82,43,-82,45,-82,42,-82,304,-82,47,-82,37,-82,293,-82,292,-82,287,-82,286,-82,289,-82,288,-82,60,-82,291,-82,62,-82,290,-82,285,-82,294,-82,63,-82,282,-82}),
      new State(501, -154),
      new State(502, new int[] {38,726,319,-378,40,-378}, new int[] {-3,503}),
      new State(503, new int[] {319,504,40,-374}, new int[] {-15,454}),
      new State(504, -374, new int[] {-15,505}),
      new State(505, new int[] {40,506}),
      new State(506, new int[] {368,708,369,709,319,184,388,185,390,188,63,711,38,-220,391,-220,320,-220,41,-215}, new int[] {-116,507,-117,713,-114,725,-23,716,-22,724,-20,707,-18,710,-102,181}),
      new State(507, new int[] {41,508}),
      new State(508, new int[] {58,705,123,-227}, new int[] {-21,509}),
      new State(509, -377, new int[] {-14,510}),
      new State(510, -375, new int[] {-16,511}),
      new State(511, new int[] {123,512}),
      new State(512, -124, new int[] {-84,513}),
      new State(513, new int[] {125,514,123,7,330,23,329,31,332,150,339,162,343,176,344,467,348,471,355,474,316,481,328,490,321,497,320,97,36,98,319,500,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470,357,517,334,526,336,536,59,542,349,543,352,559,345,562,315,628,314,629,361,630,362,681,363,690,360,701,327,-375}, new int[] {-79,10,-31,11,-16,12,-39,498,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,502,-32,565,-33,566,-11,567,-12,627,-34,680,-36,689}),
      new State(514, -376, new int[] {-17,515}),
      new State(515, -377, new int[] {-14,516}),
      new State(516, -164),
      new State(517, new int[] {40,518}),
      new State(518, new int[] {320,97,36,98,316,292,319,184,388,185,390,188,40,293,368,279,91,321,323,301}, new int[] {-90,519,-54,525,-40,524,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,320,-47,331,-49,306,-76,307}),
      new State(519, new int[] {41,520,44,522}),
      new State(520, new int[] {59,521}),
      new State(521, -146),
      new State(522, new int[] {320,97,36,98,316,292,319,184,388,185,390,188,40,293,368,279,91,321,323,301}, new int[] {-54,523,-40,524,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,320,-47,331,-49,306,-76,307}),
      new State(523, -162),
      new State(524, new int[] {41,-163,44,-163,91,-428,366,-428,123,-428,387,-428}),
      new State(525, -161),
      new State(526, new int[] {40,527}),
      new State(527, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,528,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(528, new int[] {338,529,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(529, new int[] {320,97,36,98,316,292,319,184,388,185,390,188,40,293,368,279,91,757,323,301,38,762,367,764}, new int[] {-126,530,-40,756,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,320,-47,331,-49,306,-76,307}),
      new State(530, new int[] {41,531,268,750}),
      new State(531, -375, new int[] {-16,532}),
      new State(532, new int[] {123,7,330,23,329,31,332,150,339,162,343,176,344,467,348,471,355,474,316,481,328,490,321,497,320,97,36,98,319,500,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470,357,517,334,526,336,536,59,542,349,543,352,559,345,562,58,746,327,-375}, new int[] {-69,533,-31,535,-16,12,-39,498,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(533, -376, new int[] {-17,534}),
      new State(534, -147),
      new State(535, -191),
      new State(536, new int[] {40,537}),
      new State(537, new int[] {319,741}, new int[] {-82,538,-53,745}),
      new State(538, new int[] {41,539,44,739}),
      new State(539, new int[] {123,7,330,23,329,31,332,150,339,162,343,176,344,467,348,471,355,474,316,481,328,490,321,497,320,97,36,98,319,500,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470,357,517,334,526,336,536,59,542,349,543,352,559,345,562,58,735,327,-375}, new int[] {-62,540,-31,541,-16,12,-39,498,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(540, -149),
      new State(541, -193),
      new State(542, -150),
      new State(543, new int[] {123,544}),
      new State(544, -124, new int[] {-84,545}),
      new State(545, new int[] {125,546,123,7,330,23,329,31,332,150,339,162,343,176,344,467,348,471,355,474,316,481,328,490,321,497,320,97,36,98,319,500,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470,357,517,334,526,336,536,59,542,349,543,352,559,345,562,315,628,314,629,361,630,362,681,363,690,360,701,327,-375}, new int[] {-79,10,-31,11,-16,12,-39,498,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,502,-32,565,-33,566,-11,567,-12,627,-34,680,-36,689}),
      new State(546, -375, new int[] {-16,547}),
      new State(547, -155, new int[] {-98,548}),
      new State(548, new int[] {350,551,351,731,123,-159,330,-159,329,-159,332,-159,339,-159,343,-159,344,-159,348,-159,355,-159,316,-159,328,-159,321,-159,320,-159,36,-159,319,-159,388,-159,390,-159,40,-159,368,-159,91,-159,323,-159,367,-159,305,-159,303,-159,302,-159,43,-159,45,-159,33,-159,126,-159,306,-159,358,-159,359,-159,262,-159,261,-159,260,-159,259,-159,258,-159,301,-159,300,-159,299,-159,298,-159,297,-159,296,-159,295,-159,326,-159,64,-159,317,-159,318,-159,370,-159,371,-159,372,-159,374,-159,375,-159,376,-159,389,-159,373,-159,383,-159,34,-159,96,-159,266,-159,267,-159,269,-159,346,-159,357,-159,334,-159,336,-159,59,-159,349,-159,352,-159,345,-159,315,-159,314,-159,361,-159,362,-159,363,-159,360,-159,353,-159,347,-159,327,-159,0,-159,125,-159,308,-159,309,-159,341,-159,342,-159,340,-159,337,-159,335,-159,333,-159,331,-159,310,-159}, new int[] {-74,549}),
      new State(549, -376, new int[] {-17,550}),
      new State(550, -151),
      new State(551, new int[] {40,552}),
      new State(552, new int[] {319,184,388,185,390,188}, new int[] {-27,553,-18,730,-102,181}),
      new State(553, new int[] {320,554,124,728}),
      new State(554, new int[] {41,555}),
      new State(555, new int[] {123,556}),
      new State(556, -124, new int[] {-84,557}),
      new State(557, new int[] {125,558,123,7,330,23,329,31,332,150,339,162,343,176,344,467,348,471,355,474,316,481,328,490,321,497,320,97,36,98,319,500,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470,357,517,334,526,336,536,59,542,349,543,352,559,345,562,315,628,314,629,361,630,362,681,363,690,360,701,327,-375}, new int[] {-79,10,-31,11,-16,12,-39,498,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,502,-32,565,-33,566,-11,567,-12,627,-34,680,-36,689}),
      new State(558, -156),
      new State(559, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,560,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(560, new int[] {59,561,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(561, -152),
      new State(562, new int[] {319,563}),
      new State(563, new int[] {59,564}),
      new State(564, -153),
      new State(565, -126),
      new State(566, -127),
      new State(567, new int[] {361,568,315,628,314,629}, new int[] {-12,727}),
      new State(568, new int[] {319,569}),
      new State(569, new int[] {364,678,365,-179,123,-179}, new int[] {-24,570}),
      new State(570, -169, new int[] {-136,571}),
      new State(571, new int[] {365,676,123,-183}, new int[] {-28,572}),
      new State(572, -374, new int[] {-15,573}),
      new State(573, -375, new int[] {-16,574}),
      new State(574, new int[] {123,575}),
      new State(575, -243, new int[] {-85,576}),
      new State(576, new int[] {125,577,311,593,312,594,313,595,316,596,315,597,314,598,356,600,353,641,347,-269,346,-269}, new int[] {-80,579,-7,580,-9,591,-10,599,-8,601}),
      new State(577, -376, new int[] {-17,578}),
      new State(578, -170),
      new State(579, -242),
      new State(580, new int[] {320,585}, new int[] {-94,581,-59,590}),
      new State(581, new int[] {59,582,44,583}),
      new State(582, -244),
      new State(583, new int[] {320,585}, new int[] {-59,584}),
      new State(584, -279),
      new State(585, new int[] {61,587,59,-374,44,-374}, new int[] {-15,586}),
      new State(586, -281),
      new State(587, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,588,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(588, new int[] {283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-374,44,-374}, new int[] {-15,589}),
      new State(589, -282),
      new State(590, -280),
      new State(591, new int[] {311,593,312,594,313,595,316,596,315,597,314,598,320,-267,347,-270,346,-270}, new int[] {-10,592}),
      new State(592, -272),
      new State(593, -273),
      new State(594, -274),
      new State(595, -275),
      new State(596, -276),
      new State(597, -277),
      new State(598, -278),
      new State(599, -271),
      new State(600, -268),
      new State(601, new int[] {347,602,346,470}, new int[] {-4,612}),
      new State(602, new int[] {319,196,262,199,261,200,260,201,259,202,258,203,263,204,264,205,265,206,294,207,306,208,305,209,326,210,327,211,308,212,309,213,310,214,328,215,329,216,330,217,331,218,332,219,333,220,334,221,335,222,336,223,337,224,338,225,349,226,350,227,351,228,352,229,353,230,354,231,355,232,356,233,357,234,358,235,359,236,344,237,345,238,346,239,347,240,348,241,266,242,267,243,367,244,339,245,340,246,341,247,342,248,343,249,368,250,369,251,364,252,365,253,388,254,362,255,363,256,361,257,373,258,374,259,376,260,375,261,370,262,371,263,372,264,389,265,316,266,315,267,314,268,313,269,312,270,311,271}, new int[] {-83,603,-66,611,-99,607,-100,197,-101,198}),
      new State(603, new int[] {59,604,44,605}),
      new State(604, -245),
      new State(605, new int[] {319,196,262,199,261,200,260,201,259,202,258,203,263,204,264,205,265,206,294,207,306,208,305,209,326,210,327,211,308,212,309,213,310,214,328,215,329,216,330,217,331,218,332,219,333,220,334,221,335,222,336,223,337,224,338,225,349,226,350,227,351,228,352,229,353,230,354,231,355,232,356,233,357,234,358,235,359,236,344,237,345,238,346,239,347,240,348,241,266,242,267,243,367,244,339,245,340,246,341,247,342,248,343,249,368,250,369,251,364,252,365,253,388,254,362,255,363,256,361,257,373,258,374,259,376,260,375,261,370,262,371,263,372,264,389,265,316,266,315,267,314,268,313,269,312,270,311,271}, new int[] {-66,606,-99,607,-100,197,-101,198}),
      new State(606, -283),
      new State(607, new int[] {61,608}),
      new State(608, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,609,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(609, new int[] {283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-374,44,-374}, new int[] {-15,610}),
      new State(610, -285),
      new State(611, -284),
      new State(612, new int[] {38,726,319,-378,262,-378,261,-378,260,-378,259,-378,258,-378,263,-378,264,-378,265,-378,294,-378,306,-378,305,-378,326,-378,327,-378,308,-378,309,-378,310,-378,328,-378,329,-378,330,-378,331,-378,332,-378,333,-378,334,-378,335,-378,336,-378,337,-378,338,-378,349,-378,350,-378,351,-378,352,-378,353,-378,354,-378,355,-378,356,-378,357,-378,358,-378,359,-378,344,-378,345,-378,346,-378,347,-378,348,-378,266,-378,267,-378,367,-378,339,-378,340,-378,341,-378,342,-378,343,-378,368,-378,369,-378,364,-378,365,-378,388,-378,362,-378,363,-378,361,-378,373,-378,374,-378,376,-378,375,-378,370,-378,371,-378,372,-378,389,-378,316,-378,315,-378,314,-378,313,-378,312,-378,311,-378}, new int[] {-3,613}),
      new State(613, new int[] {319,196,262,199,261,200,260,201,259,202,258,203,263,204,264,205,265,206,294,207,306,208,305,209,326,210,327,211,308,212,309,213,310,214,328,215,329,216,330,217,331,218,332,219,333,220,334,221,335,222,336,223,337,224,338,225,349,226,350,227,351,228,352,229,353,230,354,231,355,232,356,233,357,234,358,235,359,236,344,237,345,238,346,239,347,240,348,241,266,242,267,243,367,244,339,245,340,246,341,247,342,248,343,249,368,250,369,251,364,252,365,253,388,254,362,255,363,256,361,257,373,258,374,259,376,260,375,261,370,262,371,263,372,264,389,265,316,266,315,267,314,268,313,269,312,270,311,271}, new int[] {-99,614,-100,197,-101,198}),
      new State(614, -374, new int[] {-15,615}),
      new State(615, new int[] {40,616}),
      new State(616, new int[] {368,708,369,709,319,184,388,185,390,188,63,711,38,-220,391,-220,320,-220,41,-215}, new int[] {-116,617,-117,713,-114,725,-23,716,-22,724,-20,707,-18,710,-102,181}),
      new State(617, new int[] {41,618}),
      new State(618, new int[] {58,705,59,-227,123,-227}, new int[] {-21,619}),
      new State(619, -377, new int[] {-14,620}),
      new State(620, new int[] {59,623,123,624}, new int[] {-72,621}),
      new State(621, -377, new int[] {-14,622}),
      new State(622, -247),
      new State(623, -265),
      new State(624, -124, new int[] {-84,625}),
      new State(625, new int[] {125,626,123,7,330,23,329,31,332,150,339,162,343,176,344,467,348,471,355,474,316,481,328,490,321,497,320,97,36,98,319,500,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470,357,517,334,526,336,536,59,542,349,543,352,559,345,562,315,628,314,629,361,630,362,681,363,690,360,701,327,-375}, new int[] {-79,10,-31,11,-16,12,-39,498,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,502,-32,565,-33,566,-11,567,-12,627,-34,680,-36,689}),
      new State(626, -266),
      new State(627, -173),
      new State(628, -175),
      new State(629, -176),
      new State(630, new int[] {319,631}),
      new State(631, new int[] {364,678,365,-179,123,-179}, new int[] {-24,632}),
      new State(632, -171, new int[] {-137,633}),
      new State(633, new int[] {365,676,123,-183}, new int[] {-28,634}),
      new State(634, -374, new int[] {-15,635}),
      new State(635, -375, new int[] {-16,636}),
      new State(636, new int[] {123,637}),
      new State(637, -243, new int[] {-85,638}),
      new State(638, new int[] {125,639,311,593,312,594,313,595,316,596,315,597,314,598,356,600,353,641,347,-269,346,-269}, new int[] {-80,579,-7,580,-9,591,-10,599,-8,601}),
      new State(639, -376, new int[] {-17,640}),
      new State(640, -172),
      new State(641, new int[] {319,184,388,185,390,188}, new int[] {-19,642,-18,657,-102,181}),
      new State(642, new int[] {44,644,59,646,123,647}, new int[] {-77,643}),
      new State(643, -246),
      new State(644, new int[] {319,184,388,185,390,188}, new int[] {-18,645,-102,181}),
      new State(645, -249),
      new State(646, -250),
      new State(647, new int[] {125,648,319,661,388,662,390,188,262,199,261,200,260,201,259,202,258,203,263,204,264,205,265,206,294,207,306,208,305,209,326,210,327,211,308,212,309,213,310,214,328,215,329,216,330,217,331,218,332,219,333,220,334,221,335,222,336,223,337,224,338,225,349,226,350,227,351,228,352,229,353,230,354,231,355,232,356,233,357,234,358,235,359,236,344,237,345,238,346,239,347,240,348,241,266,242,267,243,367,244,339,245,340,246,341,247,342,248,343,249,368,250,369,251,364,252,365,253,362,255,363,256,361,257,373,258,374,259,376,260,375,261,370,262,371,263,372,264,389,265,316,266,315,267,314,268,313,269,312,270,311,271}, new int[] {-91,649,-63,675,-64,652,-105,653,-18,658,-102,181,-65,663,-104,664,-99,674,-100,197,-101,198}),
      new State(648, -251),
      new State(649, new int[] {125,650,319,661,388,662,390,188,262,199,261,200,260,201,259,202,258,203,263,204,264,205,265,206,294,207,306,208,305,209,326,210,327,211,308,212,309,213,310,214,328,215,329,216,330,217,331,218,332,219,333,220,334,221,335,222,336,223,337,224,338,225,349,226,350,227,351,228,352,229,353,230,354,231,355,232,356,233,357,234,358,235,359,236,344,237,345,238,346,239,347,240,348,241,266,242,267,243,367,244,339,245,340,246,341,247,342,248,343,249,368,250,369,251,364,252,365,253,362,255,363,256,361,257,373,258,374,259,376,260,375,261,370,262,371,263,372,264,389,265,316,266,315,267,314,268,313,269,312,270,311,271}, new int[] {-63,651,-64,652,-105,653,-18,658,-102,181,-65,663,-104,664,-99,674,-100,197,-101,198}),
      new State(650, -252),
      new State(651, -254),
      new State(652, -255),
      new State(653, new int[] {354,654,338,-263}),
      new State(654, new int[] {319,184,388,185,390,188}, new int[] {-19,655,-18,657,-102,181}),
      new State(655, new int[] {59,656,44,644}),
      new State(656, -257),
      new State(657, -248),
      new State(658, new int[] {387,659}),
      new State(659, new int[] {319,196,262,199,261,200,260,201,259,202,258,203,263,204,264,205,265,206,294,207,306,208,305,209,326,210,327,211,308,212,309,213,310,214,328,215,329,216,330,217,331,218,332,219,333,220,334,221,335,222,336,223,337,224,338,225,349,226,350,227,351,228,352,229,353,230,354,231,355,232,356,233,357,234,358,235,359,236,344,237,345,238,346,239,347,240,348,241,266,242,267,243,367,244,339,245,340,246,341,247,342,248,343,249,368,250,369,251,364,252,365,253,388,254,362,255,363,256,361,257,373,258,374,259,376,260,375,261,370,262,371,263,372,264,389,265,316,266,315,267,314,268,313,269,312,270,311,271}, new int[] {-99,660,-100,197,-101,198}),
      new State(660, -264),
      new State(661, new int[] {390,-82,387,-82,338,-78}),
      new State(662, new int[] {390,186,338,-59}),
      new State(663, -256),
      new State(664, new int[] {338,665}),
      new State(665, new int[] {319,666,262,199,261,200,260,201,259,202,258,203,263,204,264,205,265,206,294,207,306,208,305,209,326,210,327,211,308,212,309,213,310,214,328,215,329,216,330,217,331,218,332,219,333,220,334,221,335,222,336,223,337,224,338,225,349,226,350,227,351,228,352,229,353,230,354,231,355,232,356,233,357,234,358,235,359,236,344,237,345,238,346,239,347,240,348,241,266,242,267,243,367,244,339,245,340,246,341,247,342,248,343,249,368,250,369,251,364,252,365,253,388,254,362,255,363,256,361,257,373,258,374,259,376,260,375,261,370,262,371,263,372,264,389,265,311,593,312,594,313,595,316,596,315,597,314,598}, new int[] {-101,668,-10,670}),
      new State(666, new int[] {59,667}),
      new State(667, -258),
      new State(668, new int[] {59,669}),
      new State(669, -259),
      new State(670, new int[] {59,673,319,196,262,199,261,200,260,201,259,202,258,203,263,204,264,205,265,206,294,207,306,208,305,209,326,210,327,211,308,212,309,213,310,214,328,215,329,216,330,217,331,218,332,219,333,220,334,221,335,222,336,223,337,224,338,225,349,226,350,227,351,228,352,229,353,230,354,231,355,232,356,233,357,234,358,235,359,236,344,237,345,238,346,239,347,240,348,241,266,242,267,243,367,244,339,245,340,246,341,247,342,248,343,249,368,250,369,251,364,252,365,253,388,254,362,255,363,256,361,257,373,258,374,259,376,260,375,261,370,262,371,263,372,264,389,265,316,266,315,267,314,268,313,269,312,270,311,271}, new int[] {-99,671,-100,197,-101,198}),
      new State(671, new int[] {59,672}),
      new State(672, -260),
      new State(673, -261),
      new State(674, -262),
      new State(675, -253),
      new State(676, new int[] {319,184,388,185,390,188}, new int[] {-19,677,-18,657,-102,181}),
      new State(677, new int[] {44,644,123,-184}),
      new State(678, new int[] {319,184,388,185,390,188}, new int[] {-18,679,-102,181}),
      new State(679, -180),
      new State(680, -128),
      new State(681, new int[] {319,682}),
      new State(682, -374, new int[] {-15,683}),
      new State(683, -375, new int[] {-16,684}),
      new State(684, new int[] {123,685}),
      new State(685, -243, new int[] {-85,686}),
      new State(686, new int[] {125,687,311,593,312,594,313,595,316,596,315,597,314,598,356,600,353,641,347,-269,346,-269}, new int[] {-80,579,-7,580,-9,591,-10,599,-8,601}),
      new State(687, -376, new int[] {-17,688}),
      new State(688, -177),
      new State(689, -129),
      new State(690, new int[] {319,691}),
      new State(691, new int[] {364,699,123,-181}, new int[] {-29,692}),
      new State(692, -374, new int[] {-15,693}),
      new State(693, -375, new int[] {-16,694}),
      new State(694, new int[] {123,695}),
      new State(695, -243, new int[] {-85,696}),
      new State(696, new int[] {125,697,311,593,312,594,313,595,316,596,315,597,314,598,356,600,353,641,347,-269,346,-269}, new int[] {-80,579,-7,580,-9,591,-10,599,-8,601}),
      new State(697, -376, new int[] {-17,698}),
      new State(698, -178),
      new State(699, new int[] {319,184,388,185,390,188}, new int[] {-19,700,-18,657,-102,181}),
      new State(700, new int[] {44,644,123,-182}),
      new State(701, new int[] {40,702}),
      new State(702, new int[] {41,703}),
      new State(703, new int[] {59,704}),
      new State(704, -130),
      new State(705, new int[] {368,708,369,709,319,184,388,185,390,188,63,711}, new int[] {-22,706,-20,707,-18,710,-102,181}),
      new State(706, -228),
      new State(707, -222),
      new State(708, -224),
      new State(709, -225),
      new State(710, -226),
      new State(711, new int[] {368,708,369,709,319,184,388,185,390,188}, new int[] {-20,712,-18,710,-102,181}),
      new State(712, -223),
      new State(713, new int[] {44,714,41,-214}),
      new State(714, new int[] {368,708,369,709,319,184,388,185,390,188,63,711,38,-220,391,-220,320,-220}, new int[] {-114,715,-23,716,-22,724,-20,707,-18,710,-102,181}),
      new State(715, -217),
      new State(716, new int[] {38,723,391,-165,320,-165}, new int[] {-5,717}),
      new State(717, new int[] {391,722,320,-167}, new int[] {-6,718}),
      new State(718, new int[] {320,719}),
      new State(719, new int[] {61,720,44,-218,41,-218}),
      new State(720, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,721,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(721, new int[] {283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,44,-219,41,-219}),
      new State(722, -168),
      new State(723, -166),
      new State(724, -221),
      new State(725, -216),
      new State(726, -379),
      new State(727, -174),
      new State(728, new int[] {319,184,388,185,390,188}, new int[] {-18,729,-102,181}),
      new State(729, -158),
      new State(730, -157),
      new State(731, new int[] {123,732}),
      new State(732, -124, new int[] {-84,733}),
      new State(733, new int[] {125,734,123,7,330,23,329,31,332,150,339,162,343,176,344,467,348,471,355,474,316,481,328,490,321,497,320,97,36,98,319,500,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470,357,517,334,526,336,536,59,542,349,543,352,559,345,562,315,628,314,629,361,630,362,681,363,690,360,701,327,-375}, new int[] {-79,10,-31,11,-16,12,-39,498,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,502,-32,565,-33,566,-11,567,-12,627,-34,680,-36,689}),
      new State(734, -160),
      new State(735, -124, new int[] {-84,736}),
      new State(736, new int[] {337,737,123,7,330,23,329,31,332,150,339,162,343,176,344,467,348,471,355,474,316,481,328,490,321,497,320,97,36,98,319,500,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470,357,517,334,526,336,536,59,542,349,543,352,559,345,562,315,628,314,629,361,630,362,681,363,690,360,701,327,-375}, new int[] {-79,10,-31,11,-16,12,-39,498,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,502,-32,565,-33,566,-11,567,-12,627,-34,680,-36,689}),
      new State(737, new int[] {59,738}),
      new State(738, -194),
      new State(739, new int[] {319,741}, new int[] {-53,740}),
      new State(740, -121),
      new State(741, new int[] {61,742}),
      new State(742, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,743,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(743, new int[] {283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,41,-374,44,-374,59,-374}, new int[] {-15,744}),
      new State(744, -286),
      new State(745, -122),
      new State(746, -124, new int[] {-84,747}),
      new State(747, new int[] {335,748,123,7,330,23,329,31,332,150,339,162,343,176,344,467,348,471,355,474,316,481,328,490,321,497,320,97,36,98,319,500,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470,357,517,334,526,336,536,59,542,349,543,352,559,345,562,315,628,314,629,361,630,362,681,363,690,360,701,327,-375}, new int[] {-79,10,-31,11,-16,12,-39,498,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,502,-32,565,-33,566,-11,567,-12,627,-34,680,-36,689}),
      new State(748, new int[] {59,749}),
      new State(749, -192),
      new State(750, new int[] {320,97,36,98,316,292,319,184,388,185,390,188,40,293,368,279,91,757,323,301,38,762,367,764}, new int[] {-126,751,-40,756,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,320,-47,331,-49,306,-76,307}),
      new State(751, new int[] {41,752}),
      new State(752, -375, new int[] {-16,753}),
      new State(753, new int[] {123,7,330,23,329,31,332,150,339,162,343,176,344,467,348,471,355,474,316,481,328,490,321,497,320,97,36,98,319,500,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470,357,517,334,526,336,536,59,542,349,543,352,559,345,562,58,746,327,-375}, new int[] {-69,754,-31,535,-16,12,-39,498,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(754, -376, new int[] {-17,755}),
      new State(755, -148),
      new State(756, new int[] {41,-185,268,-185,91,-428,366,-428,123,-428,387,-428}),
      new State(757, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,325,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470,38,760,44,-461,93,-461}, new int[] {-123,758,-122,283,-120,324,-121,286,-39,287,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(758, new int[] {93,759}),
      new State(759, new int[] {91,-402,366,-402,123,-402,387,-402,40,-402,41,-188,268,-188}),
      new State(760, new int[] {320,97,36,98,316,292,319,184,388,185,390,188,40,293,368,279,91,321,323,301}, new int[] {-40,761,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,320,-47,331,-49,306,-76,307}),
      new State(761, new int[] {44,-468,41,-468,93,-468,91,-428,366,-428,123,-428,387,-428}),
      new State(762, new int[] {320,97,36,98,316,292,319,184,388,185,390,188,40,293,368,279,91,321,323,301}, new int[] {-40,763,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,320,-47,331,-49,306,-76,307}),
      new State(763, new int[] {41,-186,268,-186,91,-428,366,-428,123,-428,387,-428}),
      new State(764, new int[] {40,765}),
      new State(765, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,325,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470,38,760,44,-461,41,-461}, new int[] {-123,766,-122,283,-120,324,-121,286,-39,287,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(766, new int[] {41,767}),
      new State(767, -187),
      new State(768, new int[] {40,769}),
      new State(769, new int[] {320,774,38,775}, new int[] {-119,770,-115,777}),
      new State(770, new int[] {41,771,44,772}),
      new State(771, -381),
      new State(772, new int[] {320,774,38,775}, new int[] {-115,773}),
      new State(773, -382),
      new State(774, -384),
      new State(775, new int[] {320,776}),
      new State(776, -385),
      new State(777, -383),
      new State(778, -415),
      new State(779, new int[] {384,780,322,433,320,411,385,420,386,434}, new int[] {-60,432}),
      new State(780, -417),
      new State(781, -492),
      new State(782, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,783,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(783, new int[] {125,784,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(784, -450),
      new State(785, new int[] {319,787,123,788,320,97,36,98}, new int[] {-1,786,-45,791}),
      new State(786, -451),
      new State(787, -457),
      new State(788, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,789,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(789, new int[] {125,790,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(790, -458),
      new State(791, -459),
      new State(792, new int[] {320,97,36,98}, new int[] {-45,793}),
      new State(793, -453),
      new State(794, -448),
      new State(795, new int[] {40,127,364,-399,365,-399,123,-399}, new int[] {-111,796,-112,344}),
      new State(796, new int[] {364,678,365,-179,123,-179}, new int[] {-24,797}),
      new State(797, new int[] {365,676,123,-183}, new int[] {-28,798}),
      new State(798, -374, new int[] {-15,799}),
      new State(799, -375, new int[] {-16,800}),
      new State(800, new int[] {123,801}),
      new State(801, -243, new int[] {-85,802}),
      new State(802, new int[] {125,803,311,593,312,594,313,595,316,596,315,597,314,598,356,600,353,641,347,-269,346,-269}, new int[] {-80,579,-7,580,-9,591,-10,599,-8,601}),
      new State(803, -376, new int[] {-17,804}),
      new State(804, -294),
      new State(805, new int[] {40,806}),
      new State(806, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,325,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470,38,760,44,-461,41,-461}, new int[] {-123,807,-122,283,-120,324,-121,286,-39,287,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(807, new int[] {41,808}),
      new State(808, new int[] {61,314,44,-469,41,-469,93,-469}),
      new State(809, -202),
      new State(810, -203),
      new State(811, new int[] {58,809,59,810}, new int[] {-138,812}),
      new State(812, -124, new int[] {-84,813}),
      new State(813, new int[] {123,7,330,23,329,31,332,150,339,162,343,176,344,467,348,471,355,474,316,481,328,490,321,497,320,97,36,98,319,500,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470,357,517,334,526,336,536,59,542,349,543,352,559,345,562,315,628,314,629,361,630,362,681,363,690,360,701,125,-201,341,-201,342,-201,340,-201,327,-375}, new int[] {-79,10,-31,11,-16,12,-39,498,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,502,-32,565,-33,566,-11,567,-12,627,-34,680,-36,689}),
      new State(814, -199, new int[] {-95,815}),
      new State(815, new int[] {125,816,341,172,342,811}),
      new State(816, -196),
      new State(817, new int[] {59,821,340,-199,341,-199,342,-199}, new int[] {-95,818}),
      new State(818, new int[] {340,819,341,172,342,811}),
      new State(819, new int[] {59,820}),
      new State(820, -197),
      new State(821, -199, new int[] {-95,822}),
      new State(822, new int[] {340,823,341,172,342,811}),
      new State(823, new int[] {59,824}),
      new State(824, -198),
      new State(825, -124, new int[] {-84,826}),
      new State(826, new int[] {333,827,123,7,330,23,329,31,332,150,339,162,343,176,344,467,348,471,355,474,316,481,328,490,321,497,320,97,36,98,319,500,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470,357,517,334,526,336,536,59,542,349,543,352,559,345,562,315,628,314,629,361,630,362,681,363,690,360,701,327,-375}, new int[] {-79,10,-31,11,-16,12,-39,498,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,502,-32,565,-33,566,-11,567,-12,627,-34,680,-36,689}),
      new State(827, new int[] {59,828}),
      new State(828, -190),
      new State(829, new int[] {44,830,59,-291,41,-291}),
      new State(830, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,831,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(831, new int[] {283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,44,-292,59,-292,41,-292}),
      new State(832, new int[] {283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,44,-293,59,-293,41,-293}),
      new State(833, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,834,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(834, new int[] {283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,41,-234,44,-234}),
      new State(835, -231),
      new State(836, new int[] {319,787,123,788,320,97,36,98}, new int[] {-1,837,-45,791}),
      new State(837, new int[] {40,127,61,-442,281,-442,280,-442,279,-442,270,-442,278,-442,277,-442,276,-442,275,-442,274,-442,273,-442,272,-442,271,-442,303,-442,302,-442,59,-442,283,-442,284,-442,263,-442,265,-442,264,-442,124,-442,38,-442,94,-442,46,-442,43,-442,45,-442,42,-442,304,-442,47,-442,37,-442,293,-442,292,-442,287,-442,286,-442,289,-442,288,-442,60,-442,291,-442,62,-442,290,-442,285,-442,294,-442,63,-442,282,-442,91,-442,366,-442,123,-442,387,-442,41,-442,125,-442,58,-442,93,-442,44,-442,268,-442,338,-442}, new int[] {-112,838}),
      new State(838, -438),
      new State(839, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,840,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(840, new int[] {125,841,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(841, -437),
      new State(842, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,843,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(843, new int[] {283,40,284,42,263,-302,265,-302,264,-302,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-302,41,-302,125,-302,58,-302,93,-302,44,-302,268,-302,338,-302}),
      new State(844, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,845,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(845, new int[] {283,40,284,42,263,-303,265,-303,264,-303,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-303,41,-303,125,-303,58,-303,93,-303,44,-303,268,-303,338,-303}),
      new State(846, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,847,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(847, new int[] {283,40,284,42,263,-304,265,-304,264,-304,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-304,41,-304,125,-304,58,-304,93,-304,44,-304,268,-304,338,-304}),
      new State(848, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,849,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(849, new int[] {283,40,284,42,263,-305,265,-305,264,-305,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-305,41,-305,125,-305,58,-305,93,-305,44,-305,268,-305,338,-305}),
      new State(850, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,851,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(851, new int[] {283,40,284,42,263,-306,265,-306,264,-306,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-306,41,-306,125,-306,58,-306,93,-306,44,-306,268,-306,338,-306}),
      new State(852, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,853,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(853, new int[] {283,40,284,42,263,-307,265,-307,264,-307,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-307,41,-307,125,-307,58,-307,93,-307,44,-307,268,-307,338,-307}),
      new State(854, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,855,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(855, new int[] {283,40,284,42,263,-308,265,-308,264,-308,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-308,41,-308,125,-308,58,-308,93,-308,44,-308,268,-308,338,-308}),
      new State(856, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,857,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(857, new int[] {283,40,284,42,263,-309,265,-309,264,-309,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-309,41,-309,125,-309,58,-309,93,-309,44,-309,268,-309,338,-309}),
      new State(858, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,859,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(859, new int[] {283,40,284,42,263,-310,265,-310,264,-310,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-310,41,-310,125,-310,58,-310,93,-310,44,-310,268,-310,338,-310}),
      new State(860, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,861,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(861, new int[] {283,40,284,42,263,-311,265,-311,264,-311,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-311,41,-311,125,-311,58,-311,93,-311,44,-311,268,-311,338,-311}),
      new State(862, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,863,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(863, new int[] {283,40,284,42,263,-312,265,-312,264,-312,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-312,41,-312,125,-312,58,-312,93,-312,44,-312,268,-312,338,-312}),
      new State(864, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,865,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(865, new int[] {283,40,284,42,263,-313,265,-313,264,-313,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-313,41,-313,125,-313,58,-313,93,-313,44,-313,268,-313,338,-313}),
      new State(866, -314),
      new State(867, -316),
      new State(868, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,869,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(869, new int[] {283,40,284,42,263,-352,265,-352,264,-352,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,-352,282,106,59,-352,41,-352,125,-352,58,-352,93,-352,44,-352,268,-352,338,-352}),
      new State(870, -445),
      new State(871, -124, new int[] {-84,872}),
      new State(872, new int[] {331,873,123,7,330,23,329,31,332,150,339,162,343,176,344,467,348,471,355,474,316,481,328,490,321,497,320,97,36,98,319,500,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470,357,517,334,526,336,536,59,542,349,543,352,559,345,562,315,628,314,629,361,630,362,681,363,690,360,701,327,-375}, new int[] {-79,10,-31,11,-16,12,-39,498,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,502,-32,565,-33,566,-11,567,-12,627,-34,680,-36,689}),
      new State(873, new int[] {59,874}),
      new State(874, -205),
      new State(875, new int[] {123,7,330,23,329,31,332,150,339,162,343,176,344,467,348,471,355,474,316,481,328,490,321,497,320,97,36,98,319,500,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470,357,517,334,526,336,536,59,542,349,543,352,559,345,562,327,-375}, new int[] {-31,876,-16,12,-39,498,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(876, -209),
      new State(877, new int[] {40,878}),
      new State(878, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,879,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(879, new int[] {41,880,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(880, new int[] {58,882,123,7,330,23,329,31,332,150,339,162,343,176,344,467,348,471,355,474,316,481,328,490,321,497,320,97,36,98,319,500,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470,357,517,334,526,336,536,59,542,349,543,352,559,345,562,327,-375}, new int[] {-31,881,-16,12,-39,498,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(881, -206),
      new State(882, -124, new int[] {-84,883}),
      new State(883, new int[] {123,7,330,23,329,31,332,150,339,162,343,176,344,467,348,471,355,474,316,481,328,490,321,497,320,97,36,98,319,500,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470,357,517,334,526,336,536,59,542,349,543,352,559,345,562,315,628,314,629,361,630,362,681,363,690,360,701,310,-210,308,-210,309,-210,327,-375}, new int[] {-79,10,-31,11,-16,12,-39,498,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,502,-32,565,-33,566,-11,567,-12,627,-34,680,-36,689}),
      new State(884, new int[] {310,885,308,887,309,893}),
      new State(885, new int[] {59,886}),
      new State(886, -212),
      new State(887, new int[] {40,888}),
      new State(888, new int[] {320,97,36,98,316,134,319,184,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470}, new int[] {-39,889,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,452}),
      new State(889, new int[] {41,890,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(890, new int[] {58,891}),
      new State(891, -124, new int[] {-84,892}),
      new State(892, new int[] {123,7,330,23,329,31,332,150,339,162,343,176,344,467,348,471,355,474,316,481,328,490,321,497,320,97,36,98,319,500,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470,357,517,334,526,336,536,59,542,349,543,352,559,345,562,315,628,314,629,361,630,362,681,363,690,360,701,310,-211,308,-211,309,-211,327,-375}, new int[] {-79,10,-31,11,-16,12,-39,498,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,502,-32,565,-33,566,-11,567,-12,627,-34,680,-36,689}),
      new State(893, new int[] {58,894}),
      new State(894, -124, new int[] {-84,895}),
      new State(895, new int[] {310,896,123,7,330,23,329,31,332,150,339,162,343,176,344,467,348,471,355,474,316,481,328,490,321,497,320,97,36,98,319,500,388,185,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470,357,517,334,526,336,536,59,542,349,543,352,559,345,562,315,628,314,629,361,630,362,681,363,690,360,701,327,-375}, new int[] {-79,10,-31,11,-16,12,-39,498,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,502,-32,565,-33,566,-11,567,-12,627,-34,680,-36,689}),
      new State(896, new int[] {59,897}),
      new State(897, -213),
      new State(898, new int[] {390,186,319,184,123,-374}, new int[] {-102,899,-15,969}),
      new State(899, new int[] {59,900,390,182,123,-374}, new int[] {-15,901}),
      new State(900, -93),
      new State(901, -94, new int[] {-131,902}),
      new State(902, new int[] {123,903}),
      new State(903, -81, new int[] {-81,904}),
      new State(904, new int[] {125,905,123,7,330,23,329,31,332,150,339,162,343,176,344,467,348,471,355,474,316,481,328,490,321,497,320,97,36,98,319,500,388,898,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470,357,517,334,526,336,536,59,542,349,543,352,559,345,562,315,628,314,629,361,630,362,681,363,690,360,910,353,914,347,966,327,-375}, new int[] {-30,5,-31,6,-16,12,-39,498,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,502,-32,906,-33,907,-11,567,-12,627,-34,908,-36,909}),
      new State(905, -95),
      new State(906, -88),
      new State(907, -89),
      new State(908, -90),
      new State(909, -91),
      new State(910, new int[] {40,911}),
      new State(911, new int[] {41,912}),
      new State(912, new int[] {59,913}),
      new State(913, -92),
      new State(914, new int[] {319,184,390,960,346,957,347,958}, new int[] {-133,915,-13,917,-135,945,-102,947,-106,944,-103,924}),
      new State(915, new int[] {59,916}),
      new State(916, -98),
      new State(917, new int[] {319,184,390,938}, new int[] {-134,918,-135,920,-102,930,-106,944,-103,924}),
      new State(918, new int[] {59,919}),
      new State(919, -99),
      new State(920, new int[] {59,921,44,922}),
      new State(921, -101),
      new State(922, new int[] {319,184,390,928}, new int[] {-106,923,-103,924,-102,925}),
      new State(923, -113),
      new State(924, -119),
      new State(925, new int[] {390,182,338,926,59,-117,44,-117,125,-117}),
      new State(926, new int[] {319,927}),
      new State(927, -118),
      new State(928, new int[] {319,184}, new int[] {-103,929,-102,925}),
      new State(929, -120),
      new State(930, new int[] {390,931,338,926,59,-117,44,-117}),
      new State(931, new int[] {123,932,319,183}),
      new State(932, new int[] {319,184}, new int[] {-107,933,-103,937,-102,925}),
      new State(933, new int[] {125,934,44,935}),
      new State(934, -105),
      new State(935, new int[] {319,184}, new int[] {-103,936,-102,925}),
      new State(936, -111),
      new State(937, -112),
      new State(938, new int[] {319,184}, new int[] {-102,939,-103,929}),
      new State(939, new int[] {390,940,338,926,59,-117,44,-117}),
      new State(940, new int[] {123,941,319,183}),
      new State(941, new int[] {319,184}, new int[] {-107,942,-103,937,-102,925}),
      new State(942, new int[] {125,943,44,935}),
      new State(943, -106),
      new State(944, -114),
      new State(945, new int[] {59,946,44,922}),
      new State(946, -100),
      new State(947, new int[] {390,948,338,926,59,-117,44,-117}),
      new State(948, new int[] {123,949,319,183}),
      new State(949, new int[] {319,184,346,957,347,958}, new int[] {-109,950,-108,959,-103,954,-102,925,-13,955}),
      new State(950, new int[] {125,951,44,952}),
      new State(951, -107),
      new State(952, new int[] {319,184,346,957,347,958}, new int[] {-108,953,-103,954,-102,925,-13,955}),
      new State(953, -109),
      new State(954, -115),
      new State(955, new int[] {319,184}, new int[] {-103,956,-102,925}),
      new State(956, -116),
      new State(957, -103),
      new State(958, -104),
      new State(959, -110),
      new State(960, new int[] {319,184}, new int[] {-102,961,-103,929}),
      new State(961, new int[] {390,962,338,926,59,-117,44,-117}),
      new State(962, new int[] {123,963,319,183}),
      new State(963, new int[] {319,184,346,957,347,958}, new int[] {-109,964,-108,959,-103,954,-102,925,-13,955}),
      new State(964, new int[] {125,965,44,952}),
      new State(965, -108),
      new State(966, new int[] {319,741}, new int[] {-82,967,-53,745}),
      new State(967, new int[] {59,968,44,739}),
      new State(968, -102),
      new State(969, -96, new int[] {-132,970}),
      new State(970, new int[] {123,971}),
      new State(971, -81, new int[] {-81,972}),
      new State(972, new int[] {125,973,123,7,330,23,329,31,332,150,339,162,343,176,344,467,348,471,355,474,316,481,328,490,321,497,320,97,36,98,319,500,388,898,390,188,40,275,368,279,91,296,323,301,367,310,305,316,303,318,302,329,43,332,45,334,33,336,126,338,306,341,358,352,359,359,262,363,261,365,260,367,259,371,258,373,301,375,300,377,299,379,298,381,297,383,296,385,295,387,326,389,64,394,317,397,318,398,370,399,371,400,372,401,374,402,375,403,376,404,389,405,373,406,383,407,34,429,96,439,266,444,267,446,269,450,346,470,357,517,334,526,336,536,59,542,349,543,352,559,345,562,315,628,314,629,361,630,362,681,363,690,360,910,353,914,347,966,327,-375}, new int[] {-30,5,-31,6,-16,12,-39,498,-40,108,-44,113,-45,114,-67,115,-50,120,-26,121,-18,179,-102,181,-78,190,-48,278,-47,302,-49,306,-76,307,-41,309,-42,340,-43,351,-46,396,-4,502,-32,906,-33,907,-11,567,-12,627,-34,908,-36,909}),
      new State(973, -97),
    };
    #endregion

    #region rules
    rules = new Rule[]
    {
    default(Rule),
    new Rule(-129, new int[]{-128,0}),
    new Rule(-130, new int[]{}),
    new Rule(-128, new int[]{-130,-81}),
    new Rule(-101, new int[]{262}),
    new Rule(-101, new int[]{261}),
    new Rule(-101, new int[]{260}),
    new Rule(-101, new int[]{259}),
    new Rule(-101, new int[]{258}),
    new Rule(-101, new int[]{263}),
    new Rule(-101, new int[]{264}),
    new Rule(-101, new int[]{265}),
    new Rule(-101, new int[]{294}),
    new Rule(-101, new int[]{306}),
    new Rule(-101, new int[]{305}),
    new Rule(-101, new int[]{326}),
    new Rule(-101, new int[]{327}),
    new Rule(-101, new int[]{308}),
    new Rule(-101, new int[]{309}),
    new Rule(-101, new int[]{310}),
    new Rule(-101, new int[]{328}),
    new Rule(-101, new int[]{329}),
    new Rule(-101, new int[]{330}),
    new Rule(-101, new int[]{331}),
    new Rule(-101, new int[]{332}),
    new Rule(-101, new int[]{333}),
    new Rule(-101, new int[]{334}),
    new Rule(-101, new int[]{335}),
    new Rule(-101, new int[]{336}),
    new Rule(-101, new int[]{337}),
    new Rule(-101, new int[]{338}),
    new Rule(-101, new int[]{349}),
    new Rule(-101, new int[]{350}),
    new Rule(-101, new int[]{351}),
    new Rule(-101, new int[]{352}),
    new Rule(-101, new int[]{353}),
    new Rule(-101, new int[]{354}),
    new Rule(-101, new int[]{355}),
    new Rule(-101, new int[]{356}),
    new Rule(-101, new int[]{357}),
    new Rule(-101, new int[]{358}),
    new Rule(-101, new int[]{359}),
    new Rule(-101, new int[]{344}),
    new Rule(-101, new int[]{345}),
    new Rule(-101, new int[]{346}),
    new Rule(-101, new int[]{347}),
    new Rule(-101, new int[]{348}),
    new Rule(-101, new int[]{266}),
    new Rule(-101, new int[]{267}),
    new Rule(-101, new int[]{367}),
    new Rule(-101, new int[]{339}),
    new Rule(-101, new int[]{340}),
    new Rule(-101, new int[]{341}),
    new Rule(-101, new int[]{342}),
    new Rule(-101, new int[]{343}),
    new Rule(-101, new int[]{368}),
    new Rule(-101, new int[]{369}),
    new Rule(-101, new int[]{364}),
    new Rule(-101, new int[]{365}),
    new Rule(-101, new int[]{388}),
    new Rule(-101, new int[]{362}),
    new Rule(-101, new int[]{363}),
    new Rule(-101, new int[]{361}),
    new Rule(-101, new int[]{373}),
    new Rule(-101, new int[]{374}),
    new Rule(-101, new int[]{376}),
    new Rule(-101, new int[]{375}),
    new Rule(-101, new int[]{370}),
    new Rule(-101, new int[]{371}),
    new Rule(-101, new int[]{372}),
    new Rule(-101, new int[]{389}),
    new Rule(-100, new int[]{-101}),
    new Rule(-100, new int[]{316}),
    new Rule(-100, new int[]{315}),
    new Rule(-100, new int[]{314}),
    new Rule(-100, new int[]{313}),
    new Rule(-100, new int[]{312}),
    new Rule(-100, new int[]{311}),
    new Rule(-99, new int[]{319}),
    new Rule(-99, new int[]{-100}),
    new Rule(-81, new int[]{-81,-30}),
    new Rule(-81, new int[]{}),
    new Rule(-102, new int[]{319}),
    new Rule(-102, new int[]{-102,390,319}),
    new Rule(-18, new int[]{-102}),
    new Rule(-18, new int[]{388,390,-102}),
    new Rule(-18, new int[]{390,-102}),
    new Rule(-30, new int[]{-31}),
    new Rule(-30, new int[]{-32}),
    new Rule(-30, new int[]{-33}),
    new Rule(-30, new int[]{-34}),
    new Rule(-30, new int[]{-36}),
    new Rule(-30, new int[]{360,40,41,59}),
    new Rule(-30, new int[]{388,-102,59}),
    new Rule(-131, new int[]{}),
    new Rule(-30, new int[]{388,-102,-15,-131,123,-81,125}),
    new Rule(-132, new int[]{}),
    new Rule(-30, new int[]{388,-15,-132,123,-81,125}),
    new Rule(-30, new int[]{353,-133,59}),
    new Rule(-30, new int[]{353,-13,-134,59}),
    new Rule(-30, new int[]{353,-135,59}),
    new Rule(-30, new int[]{353,-13,-135,59}),
    new Rule(-30, new int[]{347,-82,59}),
    new Rule(-13, new int[]{346}),
    new Rule(-13, new int[]{347}),
    new Rule(-134, new int[]{-102,390,123,-107,125}),
    new Rule(-134, new int[]{390,-102,390,123,-107,125}),
    new Rule(-133, new int[]{-102,390,123,-109,125}),
    new Rule(-133, new int[]{390,-102,390,123,-109,125}),
    new Rule(-109, new int[]{-109,44,-108}),
    new Rule(-109, new int[]{-108}),
    new Rule(-107, new int[]{-107,44,-103}),
    new Rule(-107, new int[]{-103}),
    new Rule(-135, new int[]{-135,44,-106}),
    new Rule(-135, new int[]{-106}),
    new Rule(-108, new int[]{-103}),
    new Rule(-108, new int[]{-13,-103}),
    new Rule(-103, new int[]{-102}),
    new Rule(-103, new int[]{-102,338,319}),
    new Rule(-106, new int[]{-103}),
    new Rule(-106, new int[]{390,-103}),
    new Rule(-82, new int[]{-82,44,-53}),
    new Rule(-82, new int[]{-53}),
    new Rule(-84, new int[]{-84,-79}),
    new Rule(-84, new int[]{}),
    new Rule(-79, new int[]{-31}),
    new Rule(-79, new int[]{-32}),
    new Rule(-79, new int[]{-33}),
    new Rule(-79, new int[]{-34}),
    new Rule(-79, new int[]{-36}),
    new Rule(-79, new int[]{360,40,41,59}),
    new Rule(-31, new int[]{123,-84,125}),
    new Rule(-31, new int[]{-16,-51,-17}),
    new Rule(-31, new int[]{-16,-52,-17}),
    new Rule(-31, new int[]{330,40,-39,41,-16,-70,-17}),
    new Rule(-31, new int[]{329,-16,-31,330,40,-39,41,59,-17}),
    new Rule(-31, new int[]{332,40,-86,59,-86,59,-86,41,-16,-68,-17}),
    new Rule(-31, new int[]{339,40,-39,41,-16,-96,-17}),
    new Rule(-31, new int[]{343,-58,59}),
    new Rule(-31, new int[]{344,-58,59}),
    new Rule(-31, new int[]{348,-58,59}),
    new Rule(-31, new int[]{355,-87,59}),
    new Rule(-31, new int[]{316,-88,59}),
    new Rule(-31, new int[]{328,-89,59}),
    new Rule(-31, new int[]{321}),
    new Rule(-31, new int[]{-39,59}),
    new Rule(-31, new int[]{357,40,-90,41,59}),
    new Rule(-31, new int[]{334,40,-39,338,-126,41,-16,-69,-17}),
    new Rule(-31, new int[]{334,40,-39,338,-126,268,-126,41,-16,-69,-17}),
    new Rule(-31, new int[]{336,40,-82,41,-62}),
    new Rule(-31, new int[]{59}),
    new Rule(-31, new int[]{349,123,-84,125,-16,-98,-74,-17}),
    new Rule(-31, new int[]{352,-39,59}),
    new Rule(-31, new int[]{345,319,59}),
    new Rule(-31, new int[]{319,58}),
    new Rule(-98, new int[]{}),
    new Rule(-98, new int[]{-98,350,40,-27,320,41,123,-84,125}),
    new Rule(-27, new int[]{-18}),
    new Rule(-27, new int[]{-27,124,-18}),
    new Rule(-74, new int[]{}),
    new Rule(-74, new int[]{351,123,-84,125}),
    new Rule(-90, new int[]{-54}),
    new Rule(-90, new int[]{-90,44,-54}),
    new Rule(-54, new int[]{-40}),
    new Rule(-32, new int[]{-4,-3,319,-15,40,-116,41,-21,-14,-16,123,-84,125,-17,-14}),
    new Rule(-5, new int[]{}),
    new Rule(-5, new int[]{38}),
    new Rule(-6, new int[]{}),
    new Rule(-6, new int[]{391}),
    new Rule(-136, new int[]{}),
    new Rule(-33, new int[]{-11,361,319,-24,-136,-28,-15,-16,123,-85,125,-17}),
    new Rule(-137, new int[]{}),
    new Rule(-33, new int[]{361,319,-24,-137,-28,-15,-16,123,-85,125,-17}),
    new Rule(-11, new int[]{-12}),
    new Rule(-11, new int[]{-11,-12}),
    new Rule(-12, new int[]{315}),
    new Rule(-12, new int[]{314}),
    new Rule(-34, new int[]{362,319,-15,-16,123,-85,125,-17}),
    new Rule(-36, new int[]{363,319,-29,-15,-16,123,-85,125,-17}),
    new Rule(-24, new int[]{}),
    new Rule(-24, new int[]{364,-18}),
    new Rule(-29, new int[]{}),
    new Rule(-29, new int[]{364,-19}),
    new Rule(-28, new int[]{}),
    new Rule(-28, new int[]{365,-19}),
    new Rule(-126, new int[]{-40}),
    new Rule(-126, new int[]{38,-40}),
    new Rule(-126, new int[]{367,40,-123,41}),
    new Rule(-126, new int[]{91,-123,93}),
    new Rule(-68, new int[]{-31}),
    new Rule(-68, new int[]{58,-84,333,59}),
    new Rule(-69, new int[]{-31}),
    new Rule(-69, new int[]{58,-84,335,59}),
    new Rule(-62, new int[]{-31}),
    new Rule(-62, new int[]{58,-84,337,59}),
    new Rule(-96, new int[]{123,-95,125}),
    new Rule(-96, new int[]{123,59,-95,125}),
    new Rule(-96, new int[]{58,-95,340,59}),
    new Rule(-96, new int[]{58,59,-95,340,59}),
    new Rule(-95, new int[]{}),
    new Rule(-95, new int[]{-95,341,-39,-138,-84}),
    new Rule(-95, new int[]{-95,342,-138,-84}),
    new Rule(-138, new int[]{58}),
    new Rule(-138, new int[]{59}),
    new Rule(-70, new int[]{-31}),
    new Rule(-70, new int[]{58,-84,331,59}),
    new Rule(-124, new int[]{327,40,-39,41,-31}),
    new Rule(-124, new int[]{-124,308,40,-39,41,-31}),
    new Rule(-51, new int[]{-124}),
    new Rule(-51, new int[]{-124,309,-31}),
    new Rule(-125, new int[]{327,40,-39,41,58,-84}),
    new Rule(-125, new int[]{-125,308,40,-39,41,58,-84}),
    new Rule(-52, new int[]{-125,310,59}),
    new Rule(-52, new int[]{-125,309,58,-84,310,59}),
    new Rule(-116, new int[]{-117}),
    new Rule(-116, new int[]{}),
    new Rule(-117, new int[]{-114}),
    new Rule(-117, new int[]{-117,44,-114}),
    new Rule(-114, new int[]{-23,-5,-6,320}),
    new Rule(-114, new int[]{-23,-5,-6,320,61,-39}),
    new Rule(-23, new int[]{}),
    new Rule(-23, new int[]{-22}),
    new Rule(-22, new int[]{-20}),
    new Rule(-22, new int[]{63,-20}),
    new Rule(-20, new int[]{368}),
    new Rule(-20, new int[]{369}),
    new Rule(-20, new int[]{-18}),
    new Rule(-21, new int[]{}),
    new Rule(-21, new int[]{58,-22}),
    new Rule(-112, new int[]{40,41}),
    new Rule(-112, new int[]{40,-113,41}),
    new Rule(-113, new int[]{-110}),
    new Rule(-113, new int[]{-113,44,-110}),
    new Rule(-110, new int[]{-39}),
    new Rule(-110, new int[]{391,-39}),
    new Rule(-87, new int[]{-87,44,-55}),
    new Rule(-87, new int[]{-55}),
    new Rule(-55, new int[]{-45}),
    new Rule(-88, new int[]{-88,44,-56}),
    new Rule(-88, new int[]{-56}),
    new Rule(-56, new int[]{320}),
    new Rule(-56, new int[]{320,61,-39}),
    new Rule(-85, new int[]{-85,-80}),
    new Rule(-85, new int[]{}),
    new Rule(-80, new int[]{-7,-94,59}),
    new Rule(-80, new int[]{-8,347,-83,59}),
    new Rule(-80, new int[]{353,-19,-77}),
    new Rule(-80, new int[]{-8,-4,-3,-99,-15,40,-116,41,-21,-14,-72,-14}),
    new Rule(-19, new int[]{-18}),
    new Rule(-19, new int[]{-19,44,-18}),
    new Rule(-77, new int[]{59}),
    new Rule(-77, new int[]{123,125}),
    new Rule(-77, new int[]{123,-91,125}),
    new Rule(-91, new int[]{-63}),
    new Rule(-91, new int[]{-91,-63}),
    new Rule(-63, new int[]{-64}),
    new Rule(-63, new int[]{-65}),
    new Rule(-64, new int[]{-105,354,-19,59}),
    new Rule(-65, new int[]{-104,338,319,59}),
    new Rule(-65, new int[]{-104,338,-101,59}),
    new Rule(-65, new int[]{-104,338,-10,-99,59}),
    new Rule(-65, new int[]{-104,338,-10,59}),
    new Rule(-104, new int[]{-99}),
    new Rule(-104, new int[]{-105}),
    new Rule(-105, new int[]{-18,387,-99}),
    new Rule(-72, new int[]{59}),
    new Rule(-72, new int[]{123,-84,125}),
    new Rule(-7, new int[]{-9}),
    new Rule(-7, new int[]{356}),
    new Rule(-8, new int[]{}),
    new Rule(-8, new int[]{-9}),
    new Rule(-9, new int[]{-10}),
    new Rule(-9, new int[]{-9,-10}),
    new Rule(-10, new int[]{311}),
    new Rule(-10, new int[]{312}),
    new Rule(-10, new int[]{313}),
    new Rule(-10, new int[]{316}),
    new Rule(-10, new int[]{315}),
    new Rule(-10, new int[]{314}),
    new Rule(-94, new int[]{-94,44,-59}),
    new Rule(-94, new int[]{-59}),
    new Rule(-59, new int[]{320,-15}),
    new Rule(-59, new int[]{320,61,-39,-15}),
    new Rule(-83, new int[]{-83,44,-66}),
    new Rule(-83, new int[]{-66}),
    new Rule(-66, new int[]{-99,61,-39,-15}),
    new Rule(-53, new int[]{319,61,-39,-15}),
    new Rule(-89, new int[]{-89,44,-57}),
    new Rule(-89, new int[]{-57}),
    new Rule(-57, new int[]{-39}),
    new Rule(-86, new int[]{}),
    new Rule(-86, new int[]{-97}),
    new Rule(-97, new int[]{-97,44,-39}),
    new Rule(-97, new int[]{-39}),
    new Rule(-127, new int[]{361,-111,-24,-28,-15,-16,123,-85,125,-17}),
    new Rule(-42, new int[]{306,-25,-111}),
    new Rule(-42, new int[]{306,-127}),
    new Rule(-41, new int[]{367,40,-123,41,61,-39}),
    new Rule(-41, new int[]{91,-123,93,61,-39}),
    new Rule(-41, new int[]{-40,61,-39}),
    new Rule(-41, new int[]{-40,61,38,-40}),
    new Rule(-41, new int[]{305,-39}),
    new Rule(-41, new int[]{-40,281,-39}),
    new Rule(-41, new int[]{-40,280,-39}),
    new Rule(-41, new int[]{-40,279,-39}),
    new Rule(-41, new int[]{-40,270,-39}),
    new Rule(-41, new int[]{-40,278,-39}),
    new Rule(-41, new int[]{-40,277,-39}),
    new Rule(-41, new int[]{-40,276,-39}),
    new Rule(-41, new int[]{-40,275,-39}),
    new Rule(-41, new int[]{-40,274,-39}),
    new Rule(-41, new int[]{-40,273,-39}),
    new Rule(-41, new int[]{-40,272,-39}),
    new Rule(-41, new int[]{-40,271,-39}),
    new Rule(-41, new int[]{-40,303}),
    new Rule(-41, new int[]{303,-40}),
    new Rule(-41, new int[]{-40,302}),
    new Rule(-41, new int[]{302,-40}),
    new Rule(-41, new int[]{-39,283,-39}),
    new Rule(-41, new int[]{-39,284,-39}),
    new Rule(-41, new int[]{-39,263,-39}),
    new Rule(-41, new int[]{-39,265,-39}),
    new Rule(-41, new int[]{-39,264,-39}),
    new Rule(-41, new int[]{-39,124,-39}),
    new Rule(-41, new int[]{-39,38,-39}),
    new Rule(-41, new int[]{-39,94,-39}),
    new Rule(-41, new int[]{-39,46,-39}),
    new Rule(-41, new int[]{-39,43,-39}),
    new Rule(-41, new int[]{-39,45,-39}),
    new Rule(-41, new int[]{-39,42,-39}),
    new Rule(-41, new int[]{-39,304,-39}),
    new Rule(-41, new int[]{-39,47,-39}),
    new Rule(-41, new int[]{-39,37,-39}),
    new Rule(-41, new int[]{-39,293,-39}),
    new Rule(-41, new int[]{-39,292,-39}),
    new Rule(-41, new int[]{43,-39}),
    new Rule(-41, new int[]{45,-39}),
    new Rule(-41, new int[]{33,-39}),
    new Rule(-41, new int[]{126,-39}),
    new Rule(-41, new int[]{-39,287,-39}),
    new Rule(-41, new int[]{-39,286,-39}),
    new Rule(-41, new int[]{-39,289,-39}),
    new Rule(-41, new int[]{-39,288,-39}),
    new Rule(-41, new int[]{-39,60,-39}),
    new Rule(-41, new int[]{-39,291,-39}),
    new Rule(-41, new int[]{-39,62,-39}),
    new Rule(-41, new int[]{-39,290,-39}),
    new Rule(-41, new int[]{-39,285,-39}),
    new Rule(-41, new int[]{-39,294,-25}),
    new Rule(-41, new int[]{40,-39,41}),
    new Rule(-41, new int[]{-42}),
    new Rule(-41, new int[]{-39,63,-39,58,-39}),
    new Rule(-41, new int[]{-39,63,58,-39}),
    new Rule(-41, new int[]{-39,282,-39}),
    new Rule(-41, new int[]{-43}),
    new Rule(-41, new int[]{301,-39}),
    new Rule(-41, new int[]{300,-39}),
    new Rule(-41, new int[]{299,-39}),
    new Rule(-41, new int[]{298,-39}),
    new Rule(-41, new int[]{297,-39}),
    new Rule(-41, new int[]{296,-39}),
    new Rule(-41, new int[]{295,-39}),
    new Rule(-41, new int[]{326,-73}),
    new Rule(-41, new int[]{64,-39}),
    new Rule(-41, new int[]{-46}),
    new Rule(-41, new int[]{96,-71,96}),
    new Rule(-41, new int[]{266,-39}),
    new Rule(-41, new int[]{267}),
    new Rule(-41, new int[]{267,-39}),
    new Rule(-41, new int[]{267,-39,268,-39}),
    new Rule(-41, new int[]{269,-39}),
    new Rule(-41, new int[]{-4,-3,-15,40,-116,41,-118,-21,-14,-16,123,-84,125,-17,-14}),
    new Rule(-41, new int[]{316,-4,-3,-15,40,-116,41,-118,-21,-14,-16,123,-84,125,-17,-14}),
    new Rule(-4, new int[]{346}),
    new Rule(-15, new int[]{}),
    new Rule(-16, new int[]{}),
    new Rule(-17, new int[]{}),
    new Rule(-14, new int[]{}),
    new Rule(-3, new int[]{}),
    new Rule(-3, new int[]{38}),
    new Rule(-118, new int[]{}),
    new Rule(-118, new int[]{353,40,-119,41}),
    new Rule(-119, new int[]{-119,44,-115}),
    new Rule(-119, new int[]{-115}),
    new Rule(-115, new int[]{320}),
    new Rule(-115, new int[]{38,320}),
    new Rule(-49, new int[]{-18,-112}),
    new Rule(-49, new int[]{-26,387,-2,-112}),
    new Rule(-49, new int[]{-78,387,-2,-112}),
    new Rule(-49, new int[]{-76,-112}),
    new Rule(-26, new int[]{316}),
    new Rule(-26, new int[]{-18}),
    new Rule(-25, new int[]{-26}),
    new Rule(-25, new int[]{-75}),
    new Rule(-73, new int[]{}),
    new Rule(-73, new int[]{40,-58,41}),
    new Rule(-71, new int[]{}),
    new Rule(-71, new int[]{322}),
    new Rule(-71, new int[]{-92}),
    new Rule(-111, new int[]{}),
    new Rule(-111, new int[]{-112}),
    new Rule(-48, new int[]{368,40,-123,41}),
    new Rule(-48, new int[]{91,-123,93}),
    new Rule(-48, new int[]{323}),
    new Rule(-46, new int[]{317}),
    new Rule(-46, new int[]{318}),
    new Rule(-46, new int[]{370}),
    new Rule(-46, new int[]{371}),
    new Rule(-46, new int[]{372}),
    new Rule(-46, new int[]{374}),
    new Rule(-46, new int[]{375}),
    new Rule(-46, new int[]{376}),
    new Rule(-46, new int[]{389}),
    new Rule(-46, new int[]{373}),
    new Rule(-46, new int[]{383,322,384}),
    new Rule(-46, new int[]{383,384}),
    new Rule(-46, new int[]{34,-92,34}),
    new Rule(-46, new int[]{383,-92,384}),
    new Rule(-46, new int[]{-48}),
    new Rule(-46, new int[]{-47}),
    new Rule(-47, new int[]{-18}),
    new Rule(-47, new int[]{-26,387,-99}),
    new Rule(-47, new int[]{-78,387,-99}),
    new Rule(-39, new int[]{-40}),
    new Rule(-39, new int[]{-41}),
    new Rule(-58, new int[]{}),
    new Rule(-58, new int[]{-39}),
    new Rule(-78, new int[]{-67}),
    new Rule(-67, new int[]{-40}),
    new Rule(-67, new int[]{40,-39,41}),
    new Rule(-67, new int[]{-48}),
    new Rule(-76, new int[]{-44}),
    new Rule(-76, new int[]{40,-39,41}),
    new Rule(-76, new int[]{-48}),
    new Rule(-44, new int[]{-45}),
    new Rule(-44, new int[]{-67,91,-58,93}),
    new Rule(-44, new int[]{-47,91,-58,93}),
    new Rule(-44, new int[]{-67,123,-39,125}),
    new Rule(-44, new int[]{-67,366,-1,-112}),
    new Rule(-44, new int[]{-49}),
    new Rule(-40, new int[]{-44}),
    new Rule(-40, new int[]{-50}),
    new Rule(-40, new int[]{-67,366,-1}),
    new Rule(-45, new int[]{320}),
    new Rule(-45, new int[]{36,123,-39,125}),
    new Rule(-45, new int[]{36,-45}),
    new Rule(-50, new int[]{-26,387,-45}),
    new Rule(-50, new int[]{-78,387,-45}),
    new Rule(-75, new int[]{-45}),
    new Rule(-75, new int[]{-75,91,-58,93}),
    new Rule(-75, new int[]{-75,123,-39,125}),
    new Rule(-75, new int[]{-75,366,-1}),
    new Rule(-75, new int[]{-26,387,-45}),
    new Rule(-75, new int[]{-75,387,-45}),
    new Rule(-2, new int[]{-99}),
    new Rule(-2, new int[]{123,-39,125}),
    new Rule(-2, new int[]{-45}),
    new Rule(-1, new int[]{319}),
    new Rule(-1, new int[]{123,-39,125}),
    new Rule(-1, new int[]{-45}),
    new Rule(-123, new int[]{-122}),
    new Rule(-120, new int[]{}),
    new Rule(-120, new int[]{-121}),
    new Rule(-122, new int[]{-122,44,-120}),
    new Rule(-122, new int[]{-120}),
    new Rule(-121, new int[]{-39,268,-39}),
    new Rule(-121, new int[]{-39}),
    new Rule(-121, new int[]{-39,268,38,-40}),
    new Rule(-121, new int[]{38,-40}),
    new Rule(-121, new int[]{-39,268,367,40,-123,41}),
    new Rule(-121, new int[]{367,40,-123,41}),
    new Rule(-92, new int[]{-92,-60}),
    new Rule(-92, new int[]{-92,322}),
    new Rule(-92, new int[]{-60}),
    new Rule(-92, new int[]{322,-60}),
    new Rule(-60, new int[]{320}),
    new Rule(-60, new int[]{320,91,-61,93}),
    new Rule(-60, new int[]{320,366,319}),
    new Rule(-60, new int[]{385,-39,125}),
    new Rule(-60, new int[]{385,324,125}),
    new Rule(-60, new int[]{385,324,91,-39,93,125}),
    new Rule(-60, new int[]{386,-40,125}),
    new Rule(-61, new int[]{319}),
    new Rule(-61, new int[]{325}),
    new Rule(-61, new int[]{320}),
    new Rule(-43, new int[]{358,40,-93,41}),
    new Rule(-43, new int[]{359,40,-39,41}),
    new Rule(-43, new int[]{262,-39}),
    new Rule(-43, new int[]{261,-39}),
    new Rule(-43, new int[]{260,40,-39,41}),
    new Rule(-43, new int[]{259,-39}),
    new Rule(-43, new int[]{258,-39}),
    new Rule(-93, new int[]{-38}),
    new Rule(-93, new int[]{-93,44,-38}),
    new Rule(-38, new int[]{-39}),
    };
    #endregion

    nonTerminals = new string[] {"", "property_name", "member_name", "returns_ref", 
      "function", "is_reference", "is_variadic", "variable_modifiers", "method_modifiers", 
      "non_empty_member_modifiers", "member_modifier", "class_modifiers", "class_modifier", 
      "use_type", "backup_fn_flags", "backup_doc_comment", "enter_scope", "exit_scope", 
      "name", "name_list", "type", "return_type", "type_expr", "optional_type", 
      "extends_from", "class_name_reference", "class_name", "catch_name_list", 
      "implements_list", "interface_extends_list", "top_statement", "statement", 
      "function_declaration_statement", "class_declaration_statement", "trait_declaration_statement", 
      "interface_declaratioimplements_listn_statement", "interface_declaration_statement", 
      "inline_html", "isset_variable", "expr", "variable", "expr_without_variable", 
      "new_expr", "internal_functions_in_yacc", "callable_variable", "simple_variable", 
      "scalar", "constant", "dereferencable_scalar", "function_call", "static_member", 
      "if_stmt", "alt_if_stmt", "const_decl", "unset_variable", "global_var", 
      "static_var", "echo_expr", "optional_expr", "property", "encaps_var", "encaps_var_offset", 
      "declare_statement", "trait_adaptation", "trait_precedence", "trait_alias", 
      "class_const_decl", "dereferencable", "for_statement", "foreach_statement", 
      "while_statement", "backticks_expr", "method_body", "exit_expr", "finally_statement", 
      "new_variable", "callable_expr", "trait_adaptations", "variable_class_name", 
      "inner_statement", "class_statement", "top_statement_list", "const_list", 
      "class_const_list", "inner_statement_list", "class_statement_list", "for_exprs", 
      "global_var_list", "static_var_list", "echo_expr_list", "unset_variables", 
      "trait_adaptation_list", "encaps_list", "isset_variables", "property_list", 
      "case_list", "switch_case_list", "non_empty_for_exprs", "catch_list", "identifier", 
      "semi_reserved", "reserved_non_modifiers", "namespace_name", "unprefixed_use_declaration", 
      "trait_method_reference", "absolute_trait_method_reference", "use_declaration", 
      "unprefixed_use_declarations", "inline_use_declaration", "inline_use_declarations", 
      "argument", "ctor_arguments", "argument_list", "non_empty_argument_list", 
      "parameter", "lexical_var", "parameter_list", "non_empty_parameter_list", 
      "lexical_vars", "lexical_var_list", "possible_array_pair", "array_pair", 
      "non_empty_array_pair_list", "array_pair_list", "if_stmt_without_else", 
      "alt_if_stmt_without_else", "foreach_variable", "anonymous_class", "start", 
      "$accept", "@1", "@2", "@3", "mixed_group_use_declaration", "group_use_declaration", 
      "use_declarations", "@4", "@5", "case_separator", };
  }

  #endregion

  protected override void DoAction(int action)
  {
    switch (action)
    {
      case 2: // @1 -> 
{ SetNamingContext(null); }
        return;
      case 3: // start -> @1 top_statement_list 
{ 
		AssignNamingContext(); 
        _lexer.DocBlockList.Merge(new Span(0, int.MaxValue), value_stack.array[value_stack.top-1].yyval.NodeList, _astFactory);
		AssignStatements(value_stack.array[value_stack.top-1].yyval.NodeList);
		_astRoot = _astFactory.GlobalCode(yypos, value_stack.array[value_stack.top-1].yyval.NodeList, namingContext);
	}
        return;
      case 71: // semi_reserved -> reserved_non_modifiers 
{ yyval.String = value_stack.array[value_stack.top-1].yyval.String; }
        return;
      case 78: // identifier -> T_STRING 
{ yyval.String = value_stack.array[value_stack.top-1].yyval.String; }
        return;
      case 79: // identifier -> semi_reserved 
{ yyval.String = value_stack.array[value_stack.top-1].yyval.String; }
        return;
      case 80: // top_statement_list -> top_statement_list top_statement 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-2].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 81: // top_statement_list -> 
{ yyval.NodeList = new List<LangElement>(); }
        return;
      case 82: // namespace_name -> T_STRING 
{ yyval.StringList = new List<string>() { value_stack.array[value_stack.top-1].yyval.String }; }
        return;
      case 83: // namespace_name -> namespace_name T_NS_SEPARATOR T_STRING 
{ yyval.StringList = AddToList<string>(value_stack.array[value_stack.top-3].yyval.StringList, value_stack.array[value_stack.top-1].yyval.String); }
        return;
      case 84: // name -> namespace_name 
{ yyval.QualifiedNameReference = new QualifiedNameRef(yypos, new QualifiedName(value_stack.array[value_stack.top-1].yyval.StringList, true, false)); }
        return;
      case 85: // name -> T_NAMESPACE T_NS_SEPARATOR namespace_name 
{ yyval.QualifiedNameReference = new QualifiedNameRef(yypos, MergeWithCurrentNamespace(namingContext.CurrentNamespace, value_stack.array[value_stack.top-1].yyval.StringList)); }
        return;
      case 86: // name -> T_NS_SEPARATOR namespace_name 
{ yyval.QualifiedNameReference = new QualifiedNameRef(yypos, new QualifiedName(value_stack.array[value_stack.top-1].yyval.StringList, true,  true)); }
        return;
      case 87: // top_statement -> statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 88: // top_statement -> function_declaration_statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 89: // top_statement -> class_declaration_statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 90: // top_statement -> trait_declaration_statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 91: // top_statement -> interface_declaration_statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 92: // top_statement -> T_HALT_COMPILER '(' ')' ';' 
{ yyval.Node = _astFactory.HaltCompiler(yypos); }
        return;
      case 93: // top_statement -> T_NAMESPACE namespace_name ';' 
{
			AssignNamingContext();
            SetNamingContext(value_stack.array[value_stack.top-2].yyval.StringList);
            SetDoc(yyval.Node = _currentNamespace = (NamespaceDecl)_astFactory.Namespace(yypos, namingContext.CurrentNamespace, value_stack.array[value_stack.top-2].yypos, namingContext));
		}
        return;
      case 94: // @2 -> 
{ SetNamingContext(value_stack.array[value_stack.top-2].yyval.StringList); }
        return;
      case 95: // top_statement -> T_NAMESPACE namespace_name backup_doc_comment @2 '{' top_statement_list '}' 
{ 
			yyval.Node = _astFactory.Namespace(yypos, namingContext.CurrentNamespace, value_stack.array[value_stack.top-6].yypos, CreateBlock(CombineSpans(value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-2].yyval.NodeList), namingContext);
			SetDoc(yyval.Node);
			ResetNamingContext(); 
		}
        return;
      case 96: // @3 -> 
{ SetNamingContext(null); }
        return;
      case 97: // top_statement -> T_NAMESPACE backup_doc_comment @3 '{' top_statement_list '}' 
{ 
			yyval.Node = _astFactory.Namespace(yypos, null, yypos, CreateBlock(CombineSpans(value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-2].yyval.NodeList), namingContext);
			SetDoc(yyval.Node);
			ResetNamingContext(); 
		}
        return;
      case 98: // top_statement -> T_USE mixed_group_use_declaration ';' 
{ _contextType = ContextType.Class; }
        return;
      case 99: // top_statement -> T_USE use_type group_use_declaration ';' 
{ _contextType = ContextType.Class; }
        return;
      case 100: // top_statement -> T_USE use_declarations ';' 
{ _contextType = ContextType.Class; }
        return;
      case 101: // top_statement -> T_USE use_type use_declarations ';' 
{ _contextType = ContextType.Class; }
        return;
      case 102: // top_statement -> T_CONST const_list ';' 
{
			SetDoc(yyval.Node = _astFactory.DeclList(yypos, PhpMemberAttributes.None, value_stack.array[value_stack.top-2].yyval.NodeList));
		}
        return;
      case 103: // use_type -> T_FUNCTION 
{ yyval.Long = (long)ContextType.Function; _contextType = (ContextType)yyval.Long; }
        return;
      case 104: // use_type -> T_CONST 
{ yyval.Long = (long)ContextType.Constant; _contextType = (ContextType)yyval.Long; }
        return;
      case 105: // group_use_declaration -> namespace_name T_NS_SEPARATOR '{' unprefixed_use_declarations '}' 
{ foreach (var item in value_stack.array[value_stack.top-2].yyval.AliasList) AddAlias(value_stack.array[value_stack.top-5].yyval.StringList, item); }
        return;
      case 106: // group_use_declaration -> T_NS_SEPARATOR namespace_name T_NS_SEPARATOR '{' unprefixed_use_declarations '}' 
{ foreach (var item in value_stack.array[value_stack.top-2].yyval.AliasList) AddAlias(value_stack.array[value_stack.top-5].yyval.StringList, item); }
        return;
      case 107: // mixed_group_use_declaration -> namespace_name T_NS_SEPARATOR '{' inline_use_declarations '}' 
{ foreach (var item in value_stack.array[value_stack.top-2].yyval.ContextAliasList) AddAlias(value_stack.array[value_stack.top-5].yyval.StringList, item); }
        return;
      case 108: // mixed_group_use_declaration -> T_NS_SEPARATOR namespace_name T_NS_SEPARATOR '{' inline_use_declarations '}' 
{ foreach (var item in value_stack.array[value_stack.top-2].yyval.ContextAliasList) AddAlias(value_stack.array[value_stack.top-5].yyval.StringList, item); }
        return;
      case 109: // inline_use_declarations -> inline_use_declarations ',' inline_use_declaration 
{ yyval.ContextAliasList = AddToList<ContextAlias>(value_stack.array[value_stack.top-3].yyval.ContextAliasList, value_stack.array[value_stack.top-1].yyval.ContextAlias); }
        return;
      case 110: // inline_use_declarations -> inline_use_declaration 
{ yyval.ContextAliasList = new List<ContextAlias>() { value_stack.array[value_stack.top-1].yyval.ContextAlias }; }
        return;
      case 111: // unprefixed_use_declarations -> unprefixed_use_declarations ',' unprefixed_use_declaration 
{ yyval.AliasList = AddToList<Alias>(value_stack.array[value_stack.top-3].yyval.AliasList, value_stack.array[value_stack.top-1].yyval.Alias); }
        return;
      case 112: // unprefixed_use_declarations -> unprefixed_use_declaration 
{ yyval.AliasList = new List<Alias>() { value_stack.array[value_stack.top-1].yyval.Alias }; }
        return;
      case 113: // use_declarations -> use_declarations ',' use_declaration 
{ AddAlias(value_stack.array[value_stack.top-1].yyval.Alias); }
        return;
      case 114: // use_declarations -> use_declaration 
{ AddAlias(value_stack.array[value_stack.top-1].yyval.Alias); }
        return;
      case 115: // inline_use_declaration -> unprefixed_use_declaration 
{ yyval.ContextAlias = JoinTuples(value_stack.array[value_stack.top-1].yyval.Alias, ContextType.Class); }
        return;
      case 116: // inline_use_declaration -> use_type unprefixed_use_declaration 
{ yyval.ContextAlias = JoinTuples(value_stack.array[value_stack.top-1].yyval.Alias, (ContextType)value_stack.array[value_stack.top-2].yyval.Long);  }
        return;
      case 117: // unprefixed_use_declaration -> namespace_name 
{ yyval.Alias = new Alias(new QualifiedNameRef(yypos, new QualifiedName(value_stack.array[value_stack.top-1].yyval.StringList, true, false)), NameRef.Invalid); }
        return;
      case 118: // unprefixed_use_declaration -> namespace_name T_AS T_STRING 
{ yyval.Alias = new Alias(new QualifiedNameRef(value_stack.array[value_stack.top-3].yypos, new QualifiedName(value_stack.array[value_stack.top-3].yyval.StringList, true, false)), new NameRef(value_stack.array[value_stack.top-1].yypos, value_stack.array[value_stack.top-1].yyval.String)); }
        return;
      case 119: // use_declaration -> unprefixed_use_declaration 
{ yyval.Alias = value_stack.array[value_stack.top-1].yyval.Alias; }
        return;
      case 120: // use_declaration -> T_NS_SEPARATOR unprefixed_use_declaration 
{ 
				var src = value_stack.array[value_stack.top-1].yyval.Alias;
				yyval.Alias = new Alias(new QualifiedNameRef(CombineSpans(value_stack.array[value_stack.top-2].yypos, src.Item1.Span), 
					new QualifiedName(src.Item1.QualifiedName.Name, src.Item1.QualifiedName.Namespaces, true)), src.Item2); 
			}
        return;
      case 121: // const_list -> const_list ',' const_decl 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 122: // const_list -> const_decl 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 123: // inner_statement_list -> inner_statement_list inner_statement 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-2].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 124: // inner_statement_list -> 
{ yyval.NodeList = new List<LangElement>(); }
        return;
      case 125: // inner_statement -> statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 126: // inner_statement -> function_declaration_statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 127: // inner_statement -> class_declaration_statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 128: // inner_statement -> trait_declaration_statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 129: // inner_statement -> interface_declaration_statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 130: // inner_statement -> T_HALT_COMPILER '(' ')' ';' 
{ 
				yyval.Node = _astFactory.HaltCompiler(yypos); 
				_errors.Error(yypos, FatalErrors.InvalidHaltCompiler); 
			}
        return;
      case 131: // statement -> '{' inner_statement_list '}' 
{ yyval.Node = CreateBlock(yypos, value_stack.array[value_stack.top-2].yyval.NodeList); }
        return;
      case 132: // statement -> enter_scope if_stmt exit_scope 
{ yyval.Node = value_stack.array[value_stack.top-2].yyval.Node; }
        return;
      case 133: // statement -> enter_scope alt_if_stmt exit_scope 
{ yyval.Node = value_stack.array[value_stack.top-2].yyval.Node; }
        return;
      case 134: // statement -> T_WHILE '(' expr ')' enter_scope while_statement exit_scope 
{ yyval.Node = _astFactory.While(yypos, value_stack.array[value_stack.top-5].yyval.Node, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 135: // statement -> T_DO enter_scope statement T_WHILE '(' expr ')' ';' exit_scope 
{ yyval.Node = _astFactory.Do(yypos, value_stack.array[value_stack.top-7].yyval.Node, value_stack.array[value_stack.top-4].yyval.Node); }
        return;
      case 136: // statement -> T_FOR '(' for_exprs ';' for_exprs ';' for_exprs ')' enter_scope for_statement exit_scope 
{ yyval.Node = _astFactory.For(yypos, value_stack.array[value_stack.top-9].yyval.NodeList, value_stack.array[value_stack.top-7].yyval.NodeList, value_stack.array[value_stack.top-5].yyval.NodeList, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 137: // statement -> T_SWITCH '(' expr ')' enter_scope switch_case_list exit_scope 
{ yyval.Node = _astFactory.Switch(yypos, value_stack.array[value_stack.top-5].yyval.Node, value_stack.array[value_stack.top-2].yyval.NodeList); }
        return;
      case 138: // statement -> T_BREAK optional_expr ';' 
{ yyval.Node = _astFactory.Jump(yypos, JumpStmt.Types.Break, value_stack.array[value_stack.top-2].yyval.Node);}
        return;
      case 139: // statement -> T_CONTINUE optional_expr ';' 
{ yyval.Node = _astFactory.Jump(yypos, JumpStmt.Types.Continue, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 140: // statement -> T_RETURN optional_expr ';' 
{ yyval.Node = _astFactory.Jump(yypos, JumpStmt.Types.Return, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 141: // statement -> T_GLOBAL global_var_list ';' 
{ yyval.Node = _astFactory.Global(yypos, value_stack.array[value_stack.top-2].yyval.NodeList); }
        return;
      case 142: // statement -> T_STATIC static_var_list ';' 
{ yyval.Node = _astFactory.Static(yypos, value_stack.array[value_stack.top-2].yyval.NodeList); }
        return;
      case 143: // statement -> T_ECHO echo_expr_list ';' 
{ yyval.Node = _astFactory.Echo(yypos, value_stack.array[value_stack.top-2].yyval.NodeList); }
        return;
      case 144: // statement -> T_INLINE_HTML 
{ yyval.Node = _astFactory.InlineHtml(yypos, value_stack.array[value_stack.top-1].yyval.String); }
        return;
      case 145: // statement -> expr ';' 
{ yyval.Node = _astFactory.ExpressionStmt(yypos, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 146: // statement -> T_UNSET '(' unset_variables ')' ';' 
{ yyval.Node = _astFactory.Unset(yypos, value_stack.array[value_stack.top-3].yyval.NodeList); }
        return;
      case 147: // statement -> T_FOREACH '(' expr T_AS foreach_variable ')' enter_scope foreach_statement exit_scope 
{ yyval.Node = _astFactory.Foreach(yypos, value_stack.array[value_stack.top-7].yyval.Node, null, value_stack.array[value_stack.top-5].yyval.ForeachVar, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 148: // statement -> T_FOREACH '(' expr T_AS foreach_variable T_DOUBLE_ARROW foreach_variable ')' enter_scope foreach_statement exit_scope 
{ yyval.Node = _astFactory.Foreach(yypos, value_stack.array[value_stack.top-9].yyval.Node, value_stack.array[value_stack.top-7].yyval.ForeachVar, value_stack.array[value_stack.top-5].yyval.ForeachVar, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 149: // statement -> T_DECLARE '(' const_list ')' declare_statement 
{ yyval.Node = _astFactory.Declare(yypos, value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 150: // statement -> ';' 
{ yyval.Node = _astFactory.EmptyStmt(yypos); }
        return;
      case 151: // statement -> T_TRY '{' inner_statement_list '}' enter_scope catch_list finally_statement exit_scope 
{ yyval.Node = _astFactory.TryCatch(yypos, CreateBlock(CombineSpans(value_stack.array[value_stack.top-7].yypos, value_stack.array[value_stack.top-5].yypos), value_stack.array[value_stack.top-6].yyval.NodeList), value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 152: // statement -> T_THROW expr ';' 
{ yyval.Node = _astFactory.Throw(yypos, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 153: // statement -> T_GOTO T_STRING ';' 
{ yyval.Node = _astFactory.Goto(yypos, value_stack.array[value_stack.top-2].yyval.String, value_stack.array[value_stack.top-2].yypos); }
        return;
      case 154: // statement -> T_STRING ':' 
{ yyval.Node = _astFactory.Label(yypos, value_stack.array[value_stack.top-2].yyval.String, value_stack.array[value_stack.top-2].yypos); }
        return;
      case 155: // catch_list -> 
{ yyval.NodeList = new List<LangElement>(); }
        return;
      case 156: // catch_list -> catch_list T_CATCH '(' catch_name_list T_VARIABLE ')' '{' inner_statement_list '}' 
{ 
				yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-9].yyval.NodeList, _astFactory.Catch(CombineSpans(value_stack.array[value_stack.top-8].yypos, value_stack.array[value_stack.top-1].yypos), _astFactory.TypeReference(value_stack.array[value_stack.top-6].yypos, value_stack.array[value_stack.top-6].yyval.TypeRefList), 
					(DirectVarUse)_astFactory.Variable(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-5].yyval.String, NullLangElement), CreateBlock(CombineSpans(value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-2].yyval.NodeList))); 
			}
        return;
      case 157: // catch_name_list -> name 
{ yyval.TypeRefList = new List<TypeRef>() { CreateTypeRef(value_stack.array[value_stack.top-1].yypos, value_stack.array[value_stack.top-1].yyval.QualifiedNameReference) }; }
        return;
      case 158: // catch_name_list -> catch_name_list '|' name 
{ yyval.TypeRefList = AddToList<TypeRef>(value_stack.array[value_stack.top-3].yyval.TypeRefList, CreateTypeRef(value_stack.array[value_stack.top-1].yypos, value_stack.array[value_stack.top-1].yyval.QualifiedNameReference)); }
        return;
      case 159: // finally_statement -> 
{ yyval.Node = null; }
        return;
      case 160: // finally_statement -> T_FINALLY '{' inner_statement_list '}' 
{ yyval.Node =_astFactory.Finally(yypos, CreateBlock(CombineSpans(value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-2].yyval.NodeList)); }
        return;
      case 161: // unset_variables -> unset_variable 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 162: // unset_variables -> unset_variables ',' unset_variable 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 163: // unset_variable -> variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 164: // function_declaration_statement -> function returns_ref T_STRING backup_doc_comment '(' parameter_list ')' return_type backup_fn_flags enter_scope '{' inner_statement_list '}' exit_scope backup_fn_flags 
{ yyval.Node = _astFactory.Function(yypos, isConditional, value_stack.array[value_stack.top-14].yyval.Long == (long)FormalParam.Flags.IsByRef, PhpMemberAttributes.None, value_stack.array[value_stack.top-8].yyval.TypeReference, 
			new Name(value_stack.array[value_stack.top-13].yyval.String), value_stack.array[value_stack.top-13].yypos, null, value_stack.array[value_stack.top-10].yyval.FormalParamList, CombineSpans(value_stack.array[value_stack.top-11].yypos, value_stack.array[value_stack.top-9].yypos), 
			CreateBlock(CombineSpans(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-3].yypos), value_stack.array[value_stack.top-4].yyval.NodeList)); 
			SetDoc(yyval.Node);
		}
        return;
      case 165: // is_reference -> 
{ yyval.Long = 0; }
        return;
      case 166: // is_reference -> '&' 
{ yyval.Long = (long)FormalParam.Flags.IsByRef; }
        return;
      case 167: // is_variadic -> 
{ yyval.Long = 0; }
        return;
      case 168: // is_variadic -> T_ELLIPSIS 
{ yyval.Long = (long)FormalParam.Flags.IsVariadic; }
        return;
      case 169: // @4 -> 
{PushClassContext(value_stack.array[value_stack.top-2].yyval.String, value_stack.array[value_stack.top-1].yyval.TypeReference);}
        return;
      case 170: // class_declaration_statement -> class_modifiers T_CLASS T_STRING extends_from @4 implements_list backup_doc_comment enter_scope '{' class_statement_list '}' exit_scope 
{ 
				yyval.Node = _astFactory.Type(yypos, CombineSpans(value_stack.array[value_stack.top-12].yypos, value_stack.array[value_stack.top-11].yypos, value_stack.array[value_stack.top-10].yypos, value_stack.array[value_stack.top-9].yypos, value_stack.array[value_stack.top-7].yypos), isConditional, (PhpMemberAttributes)value_stack.array[value_stack.top-12].yyval.Long, new Name(value_stack.array[value_stack.top-10].yyval.String), value_stack.array[value_stack.top-10].yypos, null, 
				(INamedTypeRef)value_stack.array[value_stack.top-9].yyval.TypeReference, value_stack.array[value_stack.top-7].yyval.TypeRefList.Cast<INamedTypeRef>(), value_stack.array[value_stack.top-3].yyval.NodeList, CombineSpans(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos)); 
				SetDoc(yyval.Node);
				PopClassContext();
			}
        return;
      case 171: // @5 -> 
{PushClassContext(value_stack.array[value_stack.top-2].yyval.String, value_stack.array[value_stack.top-1].yyval.TypeReference);}
        return;
      case 172: // class_declaration_statement -> T_CLASS T_STRING extends_from @5 implements_list backup_doc_comment enter_scope '{' class_statement_list '}' exit_scope 
{ 
				yyval.Node = _astFactory.Type(yypos, CombineSpans(value_stack.array[value_stack.top-11].yypos, value_stack.array[value_stack.top-10].yypos, value_stack.array[value_stack.top-9].yypos, value_stack.array[value_stack.top-7].yypos), isConditional, PhpMemberAttributes.None, new Name(value_stack.array[value_stack.top-10].yyval.String), value_stack.array[value_stack.top-10].yypos, null, 
				(INamedTypeRef)value_stack.array[value_stack.top-9].yyval.TypeReference, value_stack.array[value_stack.top-7].yyval.TypeRefList.Cast<INamedTypeRef>(), value_stack.array[value_stack.top-3].yyval.NodeList, CombineSpans(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos)); 
				SetDoc(yyval.Node);
				PopClassContext();
			}
        return;
      case 173: // class_modifiers -> class_modifier 
{ yyval.Long = value_stack.array[value_stack.top-1].yyval.Long; }
        return;
      case 174: // class_modifiers -> class_modifiers class_modifier 
{ yyval.Long = value_stack.array[value_stack.top-2].yyval.Long | value_stack.array[value_stack.top-1].yyval.Long; }
        return;
      case 175: // class_modifier -> T_ABSTRACT 
{ yyval.Long = (long)PhpMemberAttributes.Abstract; }
        return;
      case 176: // class_modifier -> T_FINAL 
{ yyval.Long = (long)PhpMemberAttributes.Final; }
        return;
      case 177: // trait_declaration_statement -> T_TRAIT T_STRING backup_doc_comment enter_scope '{' class_statement_list '}' exit_scope 
{ 
				yyval.Node = _astFactory.Type(yypos, CombineSpans(value_stack.array[value_stack.top-8].yypos, value_stack.array[value_stack.top-7].yypos), isConditional, PhpMemberAttributes.Trait, new Name(value_stack.array[value_stack.top-7].yyval.String), value_stack.array[value_stack.top-7].yypos, null, 
					null, new List<INamedTypeRef>(), value_stack.array[value_stack.top-3].yyval.NodeList, CombineSpans(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos)); 
				SetDoc(yyval.Node);
			}
        return;
      case 178: // interface_declaration_statement -> T_INTERFACE T_STRING interface_extends_list backup_doc_comment enter_scope '{' class_statement_list '}' exit_scope 
{ 
				yyval.Node = _astFactory.Type(yypos, CombineSpans(value_stack.array[value_stack.top-9].yypos, value_stack.array[value_stack.top-8].yypos, value_stack.array[value_stack.top-7].yypos), isConditional, PhpMemberAttributes.Interface, new Name(value_stack.array[value_stack.top-8].yyval.String), value_stack.array[value_stack.top-8].yypos, null, 
					null, value_stack.array[value_stack.top-7].yyval.TypeRefList.Cast<INamedTypeRef>(), value_stack.array[value_stack.top-3].yyval.NodeList, CombineSpans(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos)); 
				SetDoc(yyval.Node);
			}
        return;
      case 179: // extends_from -> 
{ yyval.TypeReference = null; }
        return;
      case 180: // extends_from -> T_EXTENDS name 
{ yyval.TypeReference = CreateTypeRef(value_stack.array[value_stack.top-1].yypos, value_stack.array[value_stack.top-1].yyval.QualifiedNameReference); }
        return;
      case 181: // interface_extends_list -> 
{ yyval.TypeRefList = TypeRef.EmptyList; }
        return;
      case 182: // interface_extends_list -> T_EXTENDS name_list 
{ yyval.TypeRefList = TypeRefListFromQNRList(value_stack.array[value_stack.top-1].yyval.QualifiedNameRefList); }
        return;
      case 183: // implements_list -> 
{ yyval.TypeRefList = TypeRef.EmptyList; }
        return;
      case 184: // implements_list -> T_IMPLEMENTS name_list 
{ yyval.TypeRefList = TypeRefListFromQNRList(value_stack.array[value_stack.top-1].yyval.QualifiedNameRefList); }
        return;
      case 185: // foreach_variable -> variable 
{ yyval.ForeachVar = _astFactory.ForeachVariable(yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 186: // foreach_variable -> '&' variable 
{ yyval.ForeachVar = _astFactory.ForeachVariable(yypos, value_stack.array[value_stack.top-1].yyval.Node, true); }
        return;
      case 187: // foreach_variable -> T_LIST '(' array_pair_list ')' 
{ yyval.ForeachVar = _astFactory.ForeachVariable(yypos, _astFactory.List(yypos, value_stack.array[value_stack.top-2].yyval.ItemList)); }
        return;
      case 188: // foreach_variable -> '[' array_pair_list ']' 
{ yyval.ForeachVar = _astFactory.ForeachVariable(yypos, _astFactory.List(yypos, value_stack.array[value_stack.top-2].yyval.ItemList)); }
        return;
      case 189: // for_statement -> statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 190: // for_statement -> ':' inner_statement_list T_ENDFOR ';' 
{ yyval.Node = StatementsToBlock(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-3].yyval.NodeList, Tokens.T_ENDFOR); }
        return;
      case 191: // foreach_statement -> statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 192: // foreach_statement -> ':' inner_statement_list T_ENDFOREACH ';' 
{ yyval.Node = StatementsToBlock(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-3].yyval.NodeList, Tokens.T_ENDFOREACH); }
        return;
      case 193: // declare_statement -> statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 194: // declare_statement -> ':' inner_statement_list T_ENDDECLARE ';' 
{ yyval.Node = StatementsToBlock(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-3].yyval.NodeList, Tokens.T_ENDDECLARE); }
        return;
      case 195: // switch_case_list -> '{' case_list '}' 
{ yyval.NodeList = value_stack.array[value_stack.top-2].yyval.NodeList; }
        return;
      case 196: // switch_case_list -> '{' ';' case_list '}' 
{ yyval.NodeList = value_stack.array[value_stack.top-2].yyval.NodeList; }
        return;
      case 197: // switch_case_list -> ':' case_list T_ENDSWITCH ';' 
{ yyval.NodeList = value_stack.array[value_stack.top-3].yyval.NodeList; }
        return;
      case 198: // switch_case_list -> ':' ';' case_list T_ENDSWITCH ';' 
{ yyval.NodeList = value_stack.array[value_stack.top-3].yyval.NodeList; }
        return;
      case 199: // case_list -> 
{ yyval.NodeList = new List<LangElement>(); }
        return;
      case 200: // case_list -> case_list T_CASE expr case_separator inner_statement_list 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-5].yyval.NodeList, _astFactory.Case(Span.FromBounds(value_stack.array[value_stack.top-4].yypos.Start, (value_stack.array[value_stack.top-1].yyval.NodeList).Count > 0? (value_stack.array[value_stack.top-1].yyval.NodeList).Last().Span.End: yypos.End), 
				value_stack.array[value_stack.top-3].yyval.Node, CreateCaseBlock(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yyval.NodeList))); }
        return;
      case 201: // case_list -> case_list T_DEFAULT case_separator inner_statement_list 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-4].yyval.NodeList, _astFactory.Case(Span.FromBounds(value_stack.array[value_stack.top-3].yypos.Start, (value_stack.array[value_stack.top-1].yyval.NodeList).Count > 0? (value_stack.array[value_stack.top-1].yyval.NodeList).Last().Span.End: yypos.End), 
				null, CreateCaseBlock(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yyval.NodeList))); }
        return;
      case 204: // while_statement -> statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 205: // while_statement -> ':' inner_statement_list T_ENDWHILE ';' 
{ yyval.Node = StatementsToBlock(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-3].yyval.NodeList, Tokens.T_ENDWHILE); }
        return;
      case 206: // if_stmt_without_else -> T_IF '(' expr ')' statement 
{ yyval.IfItemList = new List<Tuple<Span, LangElement, LangElement>>() { 
				new Tuple<Span, LangElement, LangElement>(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node) }; 
			}
        return;
      case 207: // if_stmt_without_else -> if_stmt_without_else T_ELSEIF '(' expr ')' statement 
{ yyval.IfItemList = AddToList<Tuple<Span, LangElement, LangElement>>(value_stack.array[value_stack.top-6].yyval.IfItemList, 
				new Tuple<Span, LangElement, LangElement>(CombineSpans(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node)); 
			}
        return;
      case 208: // if_stmt -> if_stmt_without_else 
{ ((List<Tuple<Span, LangElement, LangElement>>)value_stack.array[value_stack.top-1].yyval.IfItemList).Reverse(); yyval.Node = null; 
			foreach (var item in (List<Tuple<Span, LangElement, LangElement>>)value_stack.array[value_stack.top-1].yyval.IfItemList) 
				yyval.Node = _astFactory.If(yyval.Node != null? CombineSpans(item.Item1, (yyval.Node).Span): item.Item1, item.Item2, item.Item3, yyval.Node); }
        return;
      case 209: // if_stmt -> if_stmt_without_else T_ELSE statement 
{ ((List<Tuple<Span, LangElement, LangElement>>)value_stack.array[value_stack.top-3].yyval.IfItemList).Reverse(); yyval.Node = _astFactory.If(CombineSpans(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yypos), null, value_stack.array[value_stack.top-1].yyval.Node, null); 
			foreach (var item in (List<Tuple<Span, LangElement, LangElement>>)value_stack.array[value_stack.top-3].yyval.IfItemList) yyval.Node = _astFactory.If(CombineSpans(item.Item1, (yyval.Node).Span), item.Item2, item.Item3, yyval.Node); }
        return;
      case 210: // alt_if_stmt_without_else -> T_IF '(' expr ')' ':' inner_statement_list 
{ 
				yyval.IfItemList = new List<Tuple<Span, LangElement, LangElement>>() { 
					new Tuple<Span, LangElement, LangElement>(yypos, value_stack.array[value_stack.top-4].yyval.Node, StatementsToBlock(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yyval.NodeList, Tokens.END)) }; 
			}
        return;
      case 211: // alt_if_stmt_without_else -> alt_if_stmt_without_else T_ELSEIF '(' expr ')' ':' inner_statement_list 
{ 
				RebuildLast(value_stack.array[value_stack.top-7].yyval.IfItemList, value_stack.array[value_stack.top-6].yypos, Tokens.T_ELSEIF);
				yyval.IfItemList = AddToList<Tuple<Span, LangElement, LangElement>>(value_stack.array[value_stack.top-7].yyval.IfItemList, 
					new Tuple<Span, LangElement, LangElement>(CombineSpans(value_stack.array[value_stack.top-6].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-4].yyval.Node, StatementsToBlock(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yyval.NodeList, Tokens.END))); 
			}
        return;
      case 212: // alt_if_stmt -> alt_if_stmt_without_else T_ENDIF ';' 
{ RebuildLast(value_stack.array[value_stack.top-3].yyval.IfItemList, value_stack.array[value_stack.top-2].yypos, Tokens.T_ENDIF);
			 ((List<Tuple<Span, LangElement, LangElement>>)value_stack.array[value_stack.top-3].yyval.IfItemList).Reverse(); yyval.Node = null; 
			foreach (var item in (List<Tuple<Span, LangElement, LangElement>>)value_stack.array[value_stack.top-3].yyval.IfItemList) 
				yyval.Node = _astFactory.If(yyval.Node != null? CombineSpans(item.Item1, (yyval.Node).Span): item.Item1, item.Item2, item.Item3, yyval.Node); }
        return;
      case 213: // alt_if_stmt -> alt_if_stmt_without_else T_ELSE ':' inner_statement_list T_ENDIF ';' 
{ RebuildLast(value_stack.array[value_stack.top-6].yyval.IfItemList, value_stack.array[value_stack.top-5].yypos, Tokens.T_ELSE);
			((List<Tuple<Span, LangElement, LangElement>>)value_stack.array[value_stack.top-6].yyval.IfItemList).Reverse(); yyval.Node = _astFactory.If(CombineSpans(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-1].yypos), null, StatementsToBlock(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-3].yyval.NodeList, Tokens.T_ENDIF), null); 
			foreach (var item in (List<Tuple<Span, LangElement, LangElement>>)value_stack.array[value_stack.top-6].yyval.IfItemList) yyval.Node = _astFactory.If(CombineSpans(item.Item1, (yyval.Node).Span), item.Item2, item.Item3, yyval.Node); }
        return;
      case 214: // parameter_list -> non_empty_parameter_list 
{ yyval.FormalParamList = value_stack.array[value_stack.top-1].yyval.FormalParamList; }
        return;
      case 215: // parameter_list -> 
{ yyval.FormalParamList = new List<FormalParam>(); }
        return;
      case 216: // non_empty_parameter_list -> parameter 
{ yyval.FormalParamList = new List<FormalParam>() { (FormalParam)value_stack.array[value_stack.top-1].yyval.FormalParam }; }
        return;
      case 217: // non_empty_parameter_list -> non_empty_parameter_list ',' parameter 
{ yyval.FormalParamList = AddToList<FormalParam>(value_stack.array[value_stack.top-3].yyval.FormalParamList, value_stack.array[value_stack.top-1].yyval.FormalParam); }
        return;
      case 218: // parameter -> optional_type is_reference is_variadic T_VARIABLE 
{ yyval.FormalParam = _astFactory.Parameter(CombineSpans(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-1].yyval.String, value_stack.array[value_stack.top-1].yypos, value_stack.array[value_stack.top-4].yyval.TypeReference, (FormalParam.Flags)value_stack.array[value_stack.top-3].yyval.Long|(FormalParam.Flags)value_stack.array[value_stack.top-2].yyval.Long, null); /* Important - @$ is invalid when optional_type is empty */ }
        return;
      case 219: // parameter -> optional_type is_reference is_variadic T_VARIABLE '=' expr 
{ yyval.FormalParam = _astFactory.Parameter(CombineSpans(value_stack.array[value_stack.top-6].yypos, value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-3].yyval.String, value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-6].yyval.TypeReference, (FormalParam.Flags)value_stack.array[value_stack.top-5].yyval.Long|(FormalParam.Flags)value_stack.array[value_stack.top-4].yyval.Long|FormalParam.Flags.Default, (Expression)value_stack.array[value_stack.top-1].yyval.Node); /* Important - @$ is invalid when optional_type is empty */ }
        return;
      case 220: // optional_type -> 
{ yyval.TypeReference = null; }
        return;
      case 221: // optional_type -> type_expr 
{ yyval.TypeReference = value_stack.array[value_stack.top-1].yyval.TypeReference; }
        return;
      case 222: // type_expr -> type 
{ yyval.TypeReference = value_stack.array[value_stack.top-1].yyval.TypeReference; }
        return;
      case 223: // type_expr -> '?' type 
{ yyval.TypeReference = _astFactory.NullableTypeReference(yypos, value_stack.array[value_stack.top-1].yyval.TypeReference); }
        return;
      case 224: // type -> T_ARRAY 
{ yyval.TypeReference = _astFactory.PrimitiveTypeReference(yypos, new PrimitiveTypeName(QualifiedName.Array)); }
        return;
      case 225: // type -> T_CALLABLE 
{ yyval.TypeReference = _astFactory.PrimitiveTypeReference(yypos, new PrimitiveTypeName(QualifiedName.Callable)); }
        return;
      case 226: // type -> name 
{ yyval.TypeReference = CreateTypeRef(yypos, value_stack.array[value_stack.top-1].yyval.QualifiedNameReference); }
        return;
      case 227: // return_type -> 
{ yyval.TypeReference = null; }
        return;
      case 228: // return_type -> ':' type_expr 
{ yyval.TypeReference = value_stack.array[value_stack.top-1].yyval.TypeReference; }
        return;
      case 229: // argument_list -> '(' ')' 
{ yyval.ParamList = new List<ActualParam>(); }
        return;
      case 230: // argument_list -> '(' non_empty_argument_list ')' 
{ yyval.ParamList = value_stack.array[value_stack.top-2].yyval.ParamList; }
        return;
      case 231: // non_empty_argument_list -> argument 
{ yyval.ParamList = new List<ActualParam>() { value_stack.array[value_stack.top-1].yyval.Param }; }
        return;
      case 232: // non_empty_argument_list -> non_empty_argument_list ',' argument 
{ yyval.ParamList = AddToList<ActualParam>(value_stack.array[value_stack.top-3].yyval.ParamList, value_stack.array[value_stack.top-1].yyval.Param); }
        return;
      case 233: // argument -> expr 
{ yyval.Param = _astFactory.ActualParameter(yypos, value_stack.array[value_stack.top-1].yyval.Node, ActualParam.Flags.Default); }
        return;
      case 234: // argument -> T_ELLIPSIS expr 
{ yyval.Param = _astFactory.ActualParameter(yypos, value_stack.array[value_stack.top-1].yyval.Node, ActualParam.Flags.IsUnpack); }
        return;
      case 235: // global_var_list -> global_var_list ',' global_var 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 236: // global_var_list -> global_var 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 237: // global_var -> simple_variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 238: // static_var_list -> static_var_list ',' static_var 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 239: // static_var_list -> static_var 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 240: // static_var -> T_VARIABLE 
{ yyval.Node = _astFactory.StaticVarDecl(yypos, new VariableName(value_stack.array[value_stack.top-1].yyval.String), null); }
        return;
      case 241: // static_var -> T_VARIABLE '=' expr 
{ yyval.Node = _astFactory.StaticVarDecl(yypos, new VariableName(value_stack.array[value_stack.top-3].yyval.String), value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 242: // class_statement_list -> class_statement_list class_statement 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-2].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 243: // class_statement_list -> 
{ yyval.NodeList = new List<LangElement>(); }
        return;
      case 244: // class_statement -> variable_modifiers property_list ';' 
{ 
				yyval.Node = _astFactory.DeclList(yypos, (PhpMemberAttributes)value_stack.array[value_stack.top-3].yyval.Long, value_stack.array[value_stack.top-2].yyval.NodeList); 
				SetDoc(yyval.Node);
			}
        return;
      case 245: // class_statement -> method_modifiers T_CONST class_const_list ';' 
{ 
				yyval.Node = _astFactory.DeclList(yypos, (PhpMemberAttributes)value_stack.array[value_stack.top-4].yyval.Long, value_stack.array[value_stack.top-2].yyval.NodeList); 
				SetDoc(yyval.Node);
			}
        return;
      case 246: // class_statement -> T_USE name_list trait_adaptations 
{ yyval.Node = _astFactory.TraitUse(yypos, value_stack.array[value_stack.top-2].yyval.QualifiedNameRefList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 247: // class_statement -> method_modifiers function returns_ref identifier backup_doc_comment '(' parameter_list ')' return_type backup_fn_flags method_body backup_fn_flags 
{ yyval.Node = _astFactory.Method(yypos, value_stack.array[value_stack.top-10].yyval.Long == (long)FormalParam.Flags.IsByRef, (PhpMemberAttributes)value_stack.array[value_stack.top-12].yyval.Long, 
				value_stack.array[value_stack.top-4].yyval.TypeReference, value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-9].yyval.String, value_stack.array[value_stack.top-9].yypos, null, value_stack.array[value_stack.top-6].yyval.FormalParamList, value_stack.array[value_stack.top-5].yypos, 
				null, value_stack.array[value_stack.top-2].yyval.Node); 
			SetDoc(yyval.Node);
			}
        return;
      case 248: // name_list -> name 
{ yyval.QualifiedNameRefList = new List<QualifiedNameRef>() { value_stack.array[value_stack.top-1].yyval.QualifiedNameReference }; }
        return;
      case 249: // name_list -> name_list ',' name 
{ yyval.QualifiedNameRefList = AddToList<QualifiedNameRef>(value_stack.array[value_stack.top-3].yyval.QualifiedNameRefList, value_stack.array[value_stack.top-1].yyval.QualifiedNameReference); }
        return;
      case 250: // trait_adaptations -> ';' 
{ yyval.Node = null; }
        return;
      case 251: // trait_adaptations -> '{' '}' 
{ yyval.Node = _astFactory.TraitAdaptationBlock(yypos, new List<LangElement>()); }
        return;
      case 252: // trait_adaptations -> '{' trait_adaptation_list '}' 
{ yyval.Node = _astFactory.TraitAdaptationBlock(yypos, value_stack.array[value_stack.top-2].yyval.NodeList); }
        return;
      case 253: // trait_adaptation_list -> trait_adaptation 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node };
 }
        return;
      case 254: // trait_adaptation_list -> trait_adaptation_list trait_adaptation 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-2].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 255: // trait_adaptation -> trait_precedence 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 256: // trait_adaptation -> trait_alias 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 257: // trait_precedence -> absolute_trait_method_reference T_INSTEADOF name_list ';' 
{ yyval.Node = _astFactory.TraitAdaptationPrecedence(yypos, (Tuple<QualifiedNameRef,NameRef>)value_stack.array[value_stack.top-4].yyval.Alias, value_stack.array[value_stack.top-2].yyval.QualifiedNameRefList); }
        return;
      case 258: // trait_alias -> trait_method_reference T_AS T_STRING ';' 
{ yyval.Node = _astFactory.TraitAdaptationAlias(yypos, value_stack.array[value_stack.top-4].yyval.Alias, new NameRef(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.String), null); }
        return;
      case 259: // trait_alias -> trait_method_reference T_AS reserved_non_modifiers ';' 
{ yyval.Node = _astFactory.TraitAdaptationAlias(yypos, value_stack.array[value_stack.top-4].yyval.Alias, new NameRef(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.String), null); }
        return;
      case 260: // trait_alias -> trait_method_reference T_AS member_modifier identifier ';' 
{ yyval.Node = _astFactory.TraitAdaptationAlias(yypos, value_stack.array[value_stack.top-5].yyval.Alias, new NameRef(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.String), (PhpMemberAttributes)value_stack.array[value_stack.top-3].yyval.Long); }
        return;
      case 261: // trait_alias -> trait_method_reference T_AS member_modifier ';' 
{ yyval.Node = _astFactory.TraitAdaptationAlias(yypos, value_stack.array[value_stack.top-4].yyval.Alias, NameRef.Invalid, (PhpMemberAttributes)value_stack.array[value_stack.top-2].yyval.Long); }
        return;
      case 262: // trait_method_reference -> identifier 
{ yyval.Alias = new Tuple<QualifiedNameRef,NameRef>(QualifiedNameRef.Invalid, new NameRef(value_stack.array[value_stack.top-1].yypos, value_stack.array[value_stack.top-1].yyval.String)); }
        return;
      case 263: // trait_method_reference -> absolute_trait_method_reference 
{ yyval.Alias = value_stack.array[value_stack.top-1].yyval.Alias; }
        return;
      case 264: // absolute_trait_method_reference -> name T_DOUBLE_COLON identifier 
{ yyval.Alias = new Tuple<QualifiedNameRef,NameRef>(value_stack.array[value_stack.top-3].yyval.QualifiedNameReference, new NameRef(value_stack.array[value_stack.top-1].yypos, value_stack.array[value_stack.top-1].yyval.String)); }
        return;
      case 265: // method_body -> ';' 
{ yyval.Node = null; }
        return;
      case 266: // method_body -> '{' inner_statement_list '}' 
{ yyval.Node = CreateBlock(CombineSpans(value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-2].yyval.NodeList); }
        return;
      case 267: // variable_modifiers -> non_empty_member_modifiers 
{ yyval.Long = value_stack.array[value_stack.top-1].yyval.Long; }
        return;
      case 268: // variable_modifiers -> T_VAR 
{ yyval.Long = (long)PhpMemberAttributes.Public; }
        return;
      case 269: // method_modifiers -> 
{ yyval.Long = (long)PhpMemberAttributes.Public; }
        return;
      case 270: // method_modifiers -> non_empty_member_modifiers 
{ yyval.Long = value_stack.array[value_stack.top-1].yyval.Long; if ((yyval.Long & (long)PhpMemberAttributes.VisibilityMask) == 0) { yyval.Long |= (long)PhpMemberAttributes.Public; } }
        return;
      case 271: // non_empty_member_modifiers -> member_modifier 
{ yyval.Long = value_stack.array[value_stack.top-1].yyval.Long; }
        return;
      case 272: // non_empty_member_modifiers -> non_empty_member_modifiers member_modifier 
{ yyval.Long = value_stack.array[value_stack.top-2].yyval.Long | value_stack.array[value_stack.top-1].yyval.Long; }
        return;
      case 273: // member_modifier -> T_PUBLIC 
{ yyval.Long = (long)PhpMemberAttributes.Public; }
        return;
      case 274: // member_modifier -> T_PROTECTED 
{ yyval.Long = (long)PhpMemberAttributes.Protected; }
        return;
      case 275: // member_modifier -> T_PRIVATE 
{ yyval.Long = (long)PhpMemberAttributes.Private; }
        return;
      case 276: // member_modifier -> T_STATIC 
{ yyval.Long = (long)PhpMemberAttributes.Static; }
        return;
      case 277: // member_modifier -> T_ABSTRACT 
{ yyval.Long = (long)PhpMemberAttributes.Abstract; }
        return;
      case 278: // member_modifier -> T_FINAL 
{ yyval.Long = (long)PhpMemberAttributes.Final; }
        return;
      case 279: // property_list -> property_list ',' property 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 280: // property_list -> property 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 281: // property -> T_VARIABLE backup_doc_comment 
{ SetMemberDoc(yyval.Node = _astFactory.FieldDecl(yypos, new VariableName(value_stack.array[value_stack.top-2].yyval.String), null)); }
        return;
      case 282: // property -> T_VARIABLE '=' expr backup_doc_comment 
{ SetMemberDoc(yyval.Node = _astFactory.FieldDecl(yypos, new VariableName(value_stack.array[value_stack.top-4].yyval.String), (Expression)value_stack.array[value_stack.top-2].yyval.Node)); }
        return;
      case 283: // class_const_list -> class_const_list ',' class_const_decl 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 284: // class_const_list -> class_const_decl 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 285: // class_const_decl -> identifier '=' expr backup_doc_comment 
{
		yyval.Node = _astFactory.ClassConstDecl(yypos, new VariableName(value_stack.array[value_stack.top-4].yyval.String), value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yyval.Node); 
		SetMemberDoc(yyval.Node);
	}
        return;
      case 286: // const_decl -> T_STRING '=' expr backup_doc_comment 
{ yyval.Node = _astFactory.GlobalConstDecl(yypos, false, new VariableName(value_stack.array[value_stack.top-4].yyval.String), value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yyval.Node); 
		SetMemberDoc(yyval.Node);
	}
        return;
      case 287: // echo_expr_list -> echo_expr_list ',' echo_expr 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 288: // echo_expr_list -> echo_expr 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 289: // echo_expr -> expr 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 290: // for_exprs -> 
{ yyval.NodeList = LangElement.EmptyList; }
        return;
      case 291: // for_exprs -> non_empty_for_exprs 
{ yyval.NodeList = value_stack.array[value_stack.top-1].yyval.NodeList; }
        return;
      case 292: // non_empty_for_exprs -> non_empty_for_exprs ',' expr 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 293: // non_empty_for_exprs -> expr 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 294: // anonymous_class -> T_CLASS ctor_arguments extends_from implements_list backup_doc_comment enter_scope '{' class_statement_list '}' exit_scope 
{
			var typeRef = _astFactory.AnonymousTypeReference(yypos, CombineSpans(value_stack.array[value_stack.top-10].yypos, value_stack.array[value_stack.top-9].yypos, value_stack.array[value_stack.top-8].yypos, value_stack.array[value_stack.top-7].yypos), isConditional, PhpMemberAttributes.None, null, (INamedTypeRef)value_stack.array[value_stack.top-8].yyval.TypeReference, value_stack.array[value_stack.top-7].yyval.TypeRefList.Cast<INamedTypeRef>(), value_stack.array[value_stack.top-3].yyval.NodeList, CombineSpans(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos));
			SetDoc(((AnonymousTypeRef)typeRef).TypeDeclaration);
			yyval.AnonymousClass = new Tuple<TypeRef, List<ActualParam>>(typeRef, value_stack.array[value_stack.top-9].yyval.ParamList); 
		}
        return;
      case 295: // new_expr -> T_NEW class_name_reference ctor_arguments 
{ yyval.Node = _astFactory.New(yypos, value_stack.array[value_stack.top-2].yyval.TypeReference, value_stack.array[value_stack.top-1].yyval.ParamList); }
        return;
      case 296: // new_expr -> T_NEW anonymous_class 
{ yyval.Node = _astFactory.New(yypos, ((Tuple<TypeRef, List<ActualParam>>)value_stack.array[value_stack.top-1].yyval.AnonymousClass).Item1, ((Tuple<TypeRef, List<ActualParam>>)value_stack.array[value_stack.top-1].yyval.AnonymousClass).Item2); }
        return;
      case 297: // expr_without_variable -> T_LIST '(' array_pair_list ')' '=' expr 
{ yyval.Node = _astFactory.Assignment(yypos, _astFactory.List(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-4].yyval.ItemList), value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignValue); }
        return;
      case 298: // expr_without_variable -> '[' array_pair_list ']' '=' expr 
{ yyval.Node = _astFactory.Assignment(yypos, _astFactory.NewArray(CombineSpans(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-3].yypos), value_stack.array[value_stack.top-4].yyval.ItemList), value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignValue); }
        return;
      case 299: // expr_without_variable -> variable '=' expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignValue); }
        return;
      case 300: // expr_without_variable -> variable '=' '&' variable 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-4].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignRef); }
        return;
      case 301: // expr_without_variable -> T_CLONE expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.Clone,   (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 302: // expr_without_variable -> variable T_PLUS_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignAdd); }
        return;
      case 303: // expr_without_variable -> variable T_MINUS_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignSub); }
        return;
      case 304: // expr_without_variable -> variable T_MUL_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignMul); }
        return;
      case 305: // expr_without_variable -> variable T_POW_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignPow); }
        return;
      case 306: // expr_without_variable -> variable T_DIV_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignDiv); }
        return;
      case 307: // expr_without_variable -> variable T_CONCAT_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignAppend); }
        return;
      case 308: // expr_without_variable -> variable T_MOD_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignMod); }
        return;
      case 309: // expr_without_variable -> variable T_AND_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignAnd); }
        return;
      case 310: // expr_without_variable -> variable T_OR_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignOr); }
        return;
      case 311: // expr_without_variable -> variable T_XOR_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignXor); }
        return;
      case 312: // expr_without_variable -> variable T_SL_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignShiftLeft); }
        return;
      case 313: // expr_without_variable -> variable T_SR_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignShiftRight); }
        return;
      case 314: // expr_without_variable -> variable T_INC 
{ yyval.Node = _astFactory.IncrementDecrement(yypos, (Expression)value_stack.array[value_stack.top-2].yyval.Node, true,  true); }
        return;
      case 315: // expr_without_variable -> T_INC variable 
{ yyval.Node = _astFactory.IncrementDecrement(yypos, (Expression)value_stack.array[value_stack.top-1].yyval.Node, true,  false); }
        return;
      case 316: // expr_without_variable -> variable T_DEC 
{ yyval.Node = _astFactory.IncrementDecrement(yypos, (Expression)value_stack.array[value_stack.top-2].yyval.Node, false, true); }
        return;
      case 317: // expr_without_variable -> T_DEC variable 
{ yyval.Node = _astFactory.IncrementDecrement(yypos, (Expression)value_stack.array[value_stack.top-1].yyval.Node, false, false); }
        return;
      case 318: // expr_without_variable -> expr T_BOOLEAN_OR expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Or,   value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 319: // expr_without_variable -> expr T_BOOLEAN_AND expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.And,  value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 320: // expr_without_variable -> expr T_LOGICAL_OR expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Or,   value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 321: // expr_without_variable -> expr T_LOGICAL_AND expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.And,  value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 322: // expr_without_variable -> expr T_LOGICAL_XOR expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Xor,  value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 323: // expr_without_variable -> expr '|' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.BitOr,  value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 324: // expr_without_variable -> expr '&' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.BitAnd, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 325: // expr_without_variable -> expr '^' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.BitXor, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 326: // expr_without_variable -> expr '.' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Concat, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 327: // expr_without_variable -> expr '+' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Add,    value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 328: // expr_without_variable -> expr '-' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Sub,    value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 329: // expr_without_variable -> expr '*' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Mul,    value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 330: // expr_without_variable -> expr T_POW expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Pow,    value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 331: // expr_without_variable -> expr '/' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Div,    value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 332: // expr_without_variable -> expr '%' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Mod,    value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 333: // expr_without_variable -> expr T_SL expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.ShiftLeft,  value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 334: // expr_without_variable -> expr T_SR expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.ShiftRight, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 335: // expr_without_variable -> '+' expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.Plus,   (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 336: // expr_without_variable -> '-' expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.Plus,   (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 337: // expr_without_variable -> '!' expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.LogicNegation, (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 338: // expr_without_variable -> '~' expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.BitNegation,   (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 339: // expr_without_variable -> expr T_IS_IDENTICAL expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Identical, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 340: // expr_without_variable -> expr T_IS_NOT_IDENTICAL expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.NotIdentical, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 341: // expr_without_variable -> expr T_IS_EQUAL expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Equal, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 342: // expr_without_variable -> expr T_IS_NOT_EQUAL expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.NotEqual, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 343: // expr_without_variable -> expr '<' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.LessThan, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 344: // expr_without_variable -> expr T_IS_SMALLER_OR_EQUAL expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.LessThanOrEqual, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 345: // expr_without_variable -> expr '>' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.GreaterThan, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 346: // expr_without_variable -> expr T_IS_GREATER_OR_EQUAL expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.GreaterThanOrEqual, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 347: // expr_without_variable -> expr T_SPACESHIP expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Spaceship, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 348: // expr_without_variable -> expr T_INSTANCEOF class_name_reference 
{ yyval.Node = _astFactory.InstanceOf(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.TypeReference); }
        return;
      case 349: // expr_without_variable -> '(' expr ')' 
{ yyval.Node = _astFactory.ParenthesisExpression(yypos, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 350: // expr_without_variable -> new_expr 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 351: // expr_without_variable -> expr '?' expr ':' expr 
{ yyval.Node = _astFactory.ConditionalEx(yypos, value_stack.array[value_stack.top-5].yyval.Node, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 352: // expr_without_variable -> expr '?' ':' expr 
{ yyval.Node = _astFactory.ConditionalEx(yypos, value_stack.array[value_stack.top-4].yyval.Node, null, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 353: // expr_without_variable -> expr T_COALESCE expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Coalesce, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 354: // expr_without_variable -> internal_functions_in_yacc 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 355: // expr_without_variable -> T_INT_CAST expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.Int64Cast,   (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 356: // expr_without_variable -> T_DOUBLE_CAST expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.DoubleCast, (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 357: // expr_without_variable -> T_STRING_CAST expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.StringCast, (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 358: // expr_without_variable -> T_ARRAY_CAST expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.ArrayCast,  (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 359: // expr_without_variable -> T_OBJECT_CAST expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.ObjectCast, (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 360: // expr_without_variable -> T_BOOL_CAST expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.BoolCast,   (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 361: // expr_without_variable -> T_UNSET_CAST expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.UnsetCast,  (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 362: // expr_without_variable -> T_EXIT exit_expr 
{ yyval.Node = _astFactory.Exit(yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 363: // expr_without_variable -> '@' expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.AtSign,     (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 364: // expr_without_variable -> scalar 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 365: // expr_without_variable -> '`' backticks_expr '`' 
{ yyval.Node = _astFactory.Shell(yypos, value_stack.array[value_stack.top-2].yyval.Node == null? _astFactory.Literal(new Span(value_stack.array[value_stack.top-3].yypos.End, 0), string.Empty): value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 366: // expr_without_variable -> T_PRINT expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.Print, (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 367: // expr_without_variable -> T_YIELD 
{ yyval.Node = _astFactory.Yield(yypos, null, null); }
        return;
      case 368: // expr_without_variable -> T_YIELD expr 
{ yyval.Node = _astFactory.Yield(yypos, null, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 369: // expr_without_variable -> T_YIELD expr T_DOUBLE_ARROW expr 
{ yyval.Node = _astFactory.Yield(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 370: // expr_without_variable -> T_YIELD_FROM expr 
{ yyval.Node = _astFactory.YieldFrom(yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 371: // expr_without_variable -> function returns_ref backup_doc_comment '(' parameter_list ')' lexical_vars return_type backup_fn_flags enter_scope '{' inner_statement_list '}' exit_scope backup_fn_flags 
{ yyval.Node = _astFactory.Lambda(yypos, CombineSpans(value_stack.array[value_stack.top-15].yypos, value_stack.array[value_stack.top-10].yypos, value_stack.array[value_stack.top-9].yypos, value_stack.array[value_stack.top-8].yypos), value_stack.array[value_stack.top-14].yyval.Long == (long)FormalParam.Flags.IsByRef, value_stack.array[value_stack.top-8].yyval.TypeReference, 
				value_stack.array[value_stack.top-11].yyval.FormalParamList, CombineSpans(value_stack.array[value_stack.top-12].yypos, value_stack.array[value_stack.top-10].yypos), 
				value_stack.array[value_stack.top-9].yyval.FormalParamList, CreateBlock(CombineSpans(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-3].yypos), value_stack.array[value_stack.top-4].yyval.NodeList)); 
				SetDoc(yyval.Node);
			}
        return;
      case 372: // expr_without_variable -> T_STATIC function returns_ref backup_doc_comment '(' parameter_list ')' lexical_vars return_type backup_fn_flags enter_scope '{' inner_statement_list '}' exit_scope backup_fn_flags 
{ yyval.Node = _astFactory.Lambda(yypos, CombineSpans(value_stack.array[value_stack.top-16].yypos, value_stack.array[value_stack.top-10].yypos, value_stack.array[value_stack.top-9].yypos, value_stack.array[value_stack.top-8].yypos), value_stack.array[value_stack.top-14].yyval.Long == (long)FormalParam.Flags.IsByRef, value_stack.array[value_stack.top-8].yyval.TypeReference, 
				value_stack.array[value_stack.top-11].yyval.FormalParamList, CombineSpans(value_stack.array[value_stack.top-12].yypos, value_stack.array[value_stack.top-10].yypos), 
				value_stack.array[value_stack.top-9].yyval.FormalParamList, CreateBlock(CombineSpans(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-3].yypos), value_stack.array[value_stack.top-4].yyval.NodeList)); 
				SetDoc(yyval.Node);
			}
        return;
      case 374: // backup_doc_comment -> 
{ }
        return;
      case 375: // enter_scope -> 
{ _currentScope.Increment(); }
        return;
      case 376: // exit_scope -> 
{ _currentScope.Decrement(); }
        return;
      case 377: // backup_fn_flags -> 
{  }
        return;
      case 378: // returns_ref -> 
{ yyval.Long = 0; }
        return;
      case 379: // returns_ref -> '&' 
{ yyval.Long = (long)FormalParam.Flags.IsByRef; }
        return;
      case 380: // lexical_vars -> 
{ yyval.FormalParamList = new List<FormalParam>(); }
        return;
      case 381: // lexical_vars -> T_USE '(' lexical_var_list ')' 
{ yyval.FormalParamList = value_stack.array[value_stack.top-2].yyval.FormalParamList; }
        return;
      case 382: // lexical_var_list -> lexical_var_list ',' lexical_var 
{ yyval.FormalParamList = AddToList<FormalParam>(value_stack.array[value_stack.top-3].yyval.FormalParamList, value_stack.array[value_stack.top-1].yyval.FormalParam); }
        return;
      case 383: // lexical_var_list -> lexical_var 
{ yyval.FormalParamList = new List<FormalParam>() { (FormalParam)value_stack.array[value_stack.top-1].yyval.FormalParam }; }
        return;
      case 384: // lexical_var -> T_VARIABLE 
{ yyval.FormalParam = _astFactory.Parameter(yypos, value_stack.array[value_stack.top-1].yyval.String, value_stack.array[value_stack.top-1].yypos, null, FormalParam.Flags.Default, null); }
        return;
      case 385: // lexical_var -> '&' T_VARIABLE 
{ yyval.FormalParam = _astFactory.Parameter(yypos, value_stack.array[value_stack.top-1].yyval.String, value_stack.array[value_stack.top-1].yypos, null, FormalParam.Flags.IsByRef, null); }
        return;
      case 386: // function_call -> name argument_list 
{ 
				var name = TranslateQNRFunction(value_stack.array[value_stack.top-2].yyval.QualifiedNameReference);
				yyval.Node = _astFactory.Call(yypos, name.Item1, name.Item2, value_stack.array[value_stack.top-2].yypos, new CallSignature(value_stack.array[value_stack.top-1].yyval.ParamList), null); 
			}
        return;
      case 387: // function_call -> class_name T_DOUBLE_COLON member_name argument_list 
{
				if(value_stack.array[value_stack.top-2].yyval.Object is Name)
					yyval.Node = _astFactory.Call(yypos, (Name)value_stack.array[value_stack.top-2].yyval.Object, value_stack.array[value_stack.top-2].yypos, new CallSignature(value_stack.array[value_stack.top-1].yyval.ParamList), value_stack.array[value_stack.top-4].yyval.TypeReference); 
				else
					yyval.Node = _astFactory.Call(yypos, (LangElement)value_stack.array[value_stack.top-2].yyval.Object, new CallSignature(value_stack.array[value_stack.top-1].yyval.ParamList), value_stack.array[value_stack.top-4].yyval.TypeReference); 
			}
        return;
      case 388: // function_call -> variable_class_name T_DOUBLE_COLON member_name argument_list 
{
				if(value_stack.array[value_stack.top-2].yyval.Object is Name)
					yyval.Node = _astFactory.Call(yypos, (Name)value_stack.array[value_stack.top-2].yyval.Object, value_stack.array[value_stack.top-2].yypos, new CallSignature(value_stack.array[value_stack.top-1].yyval.ParamList), _astFactory.TypeReference(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-4].yyval.Node)); 
				else
					yyval.Node = _astFactory.Call(yypos, (LangElement)value_stack.array[value_stack.top-2].yyval.Object, new CallSignature(value_stack.array[value_stack.top-1].yyval.ParamList), _astFactory.TypeReference(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-4].yyval.Node)); 
			}
        return;
      case 389: // function_call -> callable_expr argument_list 
{ yyval.Node = _astFactory.Call(yypos, value_stack.array[value_stack.top-2].yyval.Node, new CallSignature(value_stack.array[value_stack.top-1].yyval.ParamList), NullLangElement);}
        return;
      case 390: // class_name -> T_STATIC 
{ yyval.TypeReference = _astFactory.ReservedTypeReference(yypos, _reservedTypeStatic); }
        return;
      case 391: // class_name -> name 
{ yyval.TypeReference = CreateTypeRef(yypos, value_stack.array[value_stack.top-1].yyval.QualifiedNameReference); }
        return;
      case 392: // class_name_reference -> class_name 
{ yyval.TypeReference = value_stack.array[value_stack.top-1].yyval.TypeReference; }
        return;
      case 393: // class_name_reference -> new_variable 
{ yyval.TypeReference = _astFactory.TypeReference(yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 394: // exit_expr -> 
{ yyval.Node = null; }
        return;
      case 395: // exit_expr -> '(' optional_expr ')' 
{ yyval.Node = value_stack.array[value_stack.top-2].yyval.Node; }
        return;
      case 396: // backticks_expr -> 
{ yyval.Node = null; }
        return;
      case 397: // backticks_expr -> T_ENCAPSED_AND_WHITESPACE 
{ yyval.Node = _astFactory.Literal(yypos, value_stack.array[value_stack.top-1].yyval.Object); }
        return;
      case 398: // backticks_expr -> encaps_list 
{ yyval.Node = _astFactory.Concat(yypos, value_stack.array[value_stack.top-1].yyval.NodeList); }
        return;
      case 399: // ctor_arguments -> 
{ yyval.ParamList = new List<ActualParam>(); }
        return;
      case 400: // ctor_arguments -> argument_list 
{ yyval.ParamList = value_stack.array[value_stack.top-1].yyval.ParamList; }
        return;
      case 401: // dereferencable_scalar -> T_ARRAY '(' array_pair_list ')' 
{ yyval.Node = _astFactory.NewArray(yypos, value_stack.array[value_stack.top-2].yyval.ItemList); }
        return;
      case 402: // dereferencable_scalar -> '[' array_pair_list ']' 
{ yyval.Node = _astFactory.NewArray(yypos, value_stack.array[value_stack.top-2].yyval.ItemList); }
        return;
      case 403: // dereferencable_scalar -> T_CONSTANT_ENCAPSED_STRING 
{ yyval.Node = _astFactory.Literal(yypos, value_stack.array[value_stack.top-1].yyval.Object); }
        return;
      case 404: // scalar -> T_LNUMBER 
{ yyval.Node = _astFactory.Literal(yypos, value_stack.array[value_stack.top-1].yyval.Long); }
        return;
      case 405: // scalar -> T_DNUMBER 
{ yyval.Node = _astFactory.Literal(yypos, value_stack.array[value_stack.top-1].yyval.Double); }
        return;
      case 406: // scalar -> T_LINE 
{ yyval.Node = _astFactory.PseudoConstUse(yypos, PseudoConstUse.Types.Line); }
        return;
      case 407: // scalar -> T_FILE 
{ yyval.Node = _astFactory.PseudoConstUse(yypos, PseudoConstUse.Types.File); }
        return;
      case 408: // scalar -> T_DIR 
{ yyval.Node = _astFactory.PseudoConstUse(yypos, PseudoConstUse.Types.Dir); }
        return;
      case 409: // scalar -> T_TRAIT_C 
{ yyval.Node = _astFactory.PseudoConstUse(yypos, PseudoConstUse.Types.Trait); }
        return;
      case 410: // scalar -> T_METHOD_C 
{ yyval.Node = _astFactory.PseudoConstUse(yypos, PseudoConstUse.Types.Method); }
        return;
      case 411: // scalar -> T_FUNC_C 
{ yyval.Node = _astFactory.PseudoConstUse(yypos, PseudoConstUse.Types.Function); }
        return;
      case 412: // scalar -> T_NS_C 
{ yyval.Node = _astFactory.PseudoConstUse(yypos, PseudoConstUse.Types.Namespace); }
        return;
      case 413: // scalar -> T_CLASS_C 
{ yyval.Node = _astFactory.PseudoConstUse(yypos, PseudoConstUse.Types.Class); }
        return;
      case 414: // scalar -> T_START_HEREDOC T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC 
{ yyval.Node = _astFactory.Literal(yypos, value_stack.array[value_stack.top-2].yyval.Object); }
        return;
      case 415: // scalar -> T_START_HEREDOC T_END_HEREDOC 
{ yyval.Node = _astFactory.Literal(new Span(value_stack.array[value_stack.top-2].yypos.End, 0), string.Empty); }
        return;
      case 416: // scalar -> '"' encaps_list '"' 
{ yyval.Node = _astFactory.Concat(yypos, value_stack.array[value_stack.top-2].yyval.NodeList); }
        return;
      case 417: // scalar -> T_START_HEREDOC encaps_list T_END_HEREDOC 
{ yyval.Node = _astFactory.Concat(yypos, value_stack.array[value_stack.top-2].yyval.NodeList); }
        return;
      case 418: // scalar -> dereferencable_scalar 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 419: // scalar -> constant 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 420: // constant -> name 
{ 
				var name = TranslateQNRConstant(value_stack.array[value_stack.top-1].yyval.QualifiedNameReference);
				yyval.Node = _astFactory.ConstUse(yypos, name.Item1, name.Item2); 
			}
        return;
      case 421: // constant -> class_name T_DOUBLE_COLON identifier 
{ yyval.Node = _astFactory.ClassConstUse(yypos, value_stack.array[value_stack.top-3].yyval.TypeReference, new Name(value_stack.array[value_stack.top-1].yyval.String), value_stack.array[value_stack.top-1].yypos); }
        return;
      case 422: // constant -> variable_class_name T_DOUBLE_COLON identifier 
{ yyval.Node = _astFactory.ClassConstUse(yypos, _astFactory.TypeReference(yypos, value_stack.array[value_stack.top-3].yyval.Node), new Name(value_stack.array[value_stack.top-1].yyval.String), value_stack.array[value_stack.top-1].yypos); }
        return;
      case 423: // expr -> variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 424: // expr -> expr_without_variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 425: // optional_expr -> 
{ yyval.Node = null; }
        return;
      case 426: // optional_expr -> expr 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 427: // variable_class_name -> dereferencable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 428: // dereferencable -> variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 429: // dereferencable -> '(' expr ')' 
{ yyval.Node = _astFactory.Variable(yypos, value_stack.array[value_stack.top-2].yyval.Node, NullLangElement); }
        return;
      case 430: // dereferencable -> dereferencable_scalar 
{ yyval.Node = _astFactory.Variable(yypos, value_stack.array[value_stack.top-1].yyval.Node, NullLangElement); }
        return;
      case 431: // callable_expr -> callable_variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 432: // callable_expr -> '(' expr ')' 
{ yyval.Node = value_stack.array[value_stack.top-2].yyval.Node; }
        return;
      case 433: // callable_expr -> dereferencable_scalar 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 434: // callable_variable -> simple_variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 435: // callable_variable -> dereferencable '[' optional_expr ']' 
{ yyval.Node = _astFactory.ArrayItem(yypos, value_stack.array[value_stack.top-4].yyval.Node, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 436: // callable_variable -> constant '[' optional_expr ']' 
{ yyval.Node = _astFactory.ArrayItem(yypos, value_stack.array[value_stack.top-4].yyval.Node, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 437: // callable_variable -> dereferencable '{' expr '}' 
{ yyval.Node = _astFactory.ArrayItem(yypos, value_stack.array[value_stack.top-4].yyval.Node, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 438: // callable_variable -> dereferencable T_OBJECT_OPERATOR property_name argument_list 
{
			if(value_stack.array[value_stack.top-2].yyval.Object is Name)
				yyval.Node = _astFactory.Call(yypos, new QualifiedName((Name)value_stack.array[value_stack.top-2].yyval.Object), null, value_stack.array[value_stack.top-2].yypos, new CallSignature(value_stack.array[value_stack.top-1].yyval.ParamList), value_stack.array[value_stack.top-4].yyval.Node);
			else
				yyval.Node = _astFactory.Call(yypos, (LangElement)value_stack.array[value_stack.top-2].yyval.Object, new CallSignature(value_stack.array[value_stack.top-1].yyval.ParamList), value_stack.array[value_stack.top-4].yyval.Node);
		}
        return;
      case 439: // callable_variable -> function_call 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 440: // variable -> callable_variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 441: // variable -> static_member 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 442: // variable -> dereferencable T_OBJECT_OPERATOR property_name 
{ yyval.Node = CreateProperty(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Object); }
        return;
      case 443: // simple_variable -> T_VARIABLE 
{ yyval.Node = _astFactory.Variable(yypos, value_stack.array[value_stack.top-1].yyval.String,	NullLangElement); }
        return;
      case 444: // simple_variable -> '$' '{' expr '}' 
{ yyval.Node = _astFactory.Variable(yypos, value_stack.array[value_stack.top-2].yyval.Node, NullLangElement); }
        return;
      case 445: // simple_variable -> '$' simple_variable 
{ yyval.Node = _astFactory.Variable(yypos, value_stack.array[value_stack.top-1].yyval.Node, NullLangElement); }
        return;
      case 446: // static_member -> class_name T_DOUBLE_COLON simple_variable 
{ yyval.Node = CreateStaticProperty(yypos, value_stack.array[value_stack.top-3].yyval.TypeReference, value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 447: // static_member -> variable_class_name T_DOUBLE_COLON simple_variable 
{ yyval.Node = CreateStaticProperty(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 448: // new_variable -> simple_variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 449: // new_variable -> new_variable '[' optional_expr ']' 
{ yyval.Node = _astFactory.ArrayItem(yypos, value_stack.array[value_stack.top-4].yyval.Node, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 450: // new_variable -> new_variable '{' expr '}' 
{ yyval.Node = _astFactory.ArrayItem(yypos, value_stack.array[value_stack.top-4].yyval.Node, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 451: // new_variable -> new_variable T_OBJECT_OPERATOR property_name 
{ yyval.Node = CreateProperty(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Object); }
        return;
      case 452: // new_variable -> class_name T_DOUBLE_COLON simple_variable 
{ yyval.Node = CreateStaticProperty(yypos, value_stack.array[value_stack.top-3].yyval.TypeReference, value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 453: // new_variable -> new_variable T_DOUBLE_COLON simple_variable 
{ yyval.Node = CreateStaticProperty(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 454: // member_name -> identifier 
{ yyval.Object = new Name(value_stack.array[value_stack.top-1].yyval.String); }
        return;
      case 455: // member_name -> '{' expr '}' 
{ yyval.Object = value_stack.array[value_stack.top-2].yyval.Node; }
        return;
      case 456: // member_name -> simple_variable 
{ yyval.Object = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 457: // property_name -> T_STRING 
{ yyval.Object = new Name(value_stack.array[value_stack.top-1].yyval.String); }
        return;
      case 458: // property_name -> '{' expr '}' 
{ yyval.Object = value_stack.array[value_stack.top-2].yyval.Node; }
        return;
      case 459: // property_name -> simple_variable 
{ yyval.Object = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 460: // array_pair_list -> non_empty_array_pair_list 
{ yyval.ItemList = RightTrimList(value_stack.array[value_stack.top-1].yyval.ItemList);  }
        return;
      case 461: // possible_array_pair -> 
{ yyval.Item = null; }
        return;
      case 462: // possible_array_pair -> array_pair 
{ yyval.Item = value_stack.array[value_stack.top-1].yyval.Item; }
        return;
      case 463: // non_empty_array_pair_list -> non_empty_array_pair_list ',' possible_array_pair 
{ yyval.ItemList = AddToList<Item>(value_stack.array[value_stack.top-3].yyval.ItemList, value_stack.array[value_stack.top-1].yyval.Item); }
        return;
      case 464: // non_empty_array_pair_list -> possible_array_pair 
{ yyval.ItemList = new List<Item>() { value_stack.array[value_stack.top-1].yyval.Item }; }
        return;
      case 465: // array_pair -> expr T_DOUBLE_ARROW expr 
{ yyval.Item = _astFactory.ArrayItemValue(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 466: // array_pair -> expr 
{ yyval.Item = _astFactory.ArrayItemValue(yypos, null, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 467: // array_pair -> expr T_DOUBLE_ARROW '&' variable 
{ yyval.Item = _astFactory.ArrayItemRef(yypos, value_stack.array[value_stack.top-4].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 468: // array_pair -> '&' variable 
{ yyval.Item = _astFactory.ArrayItemRef(yypos, null, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 469: // array_pair -> expr T_DOUBLE_ARROW T_LIST '(' array_pair_list ')' 
{ yyval.Item = _astFactory.ArrayItemValue(yypos, value_stack.array[value_stack.top-6].yyval.Node, _astFactory.List(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.ItemList)); }
        return;
      case 470: // array_pair -> T_LIST '(' array_pair_list ')' 
{ yyval.Item = _astFactory.ArrayItemValue(yypos, null, _astFactory.List(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.ItemList)); }
        return;
      case 471: // encaps_list -> encaps_list encaps_var 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-2].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 472: // encaps_list -> encaps_list T_ENCAPSED_AND_WHITESPACE 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-2].yyval.NodeList, _astFactory.Literal(value_stack.array[value_stack.top-1].yypos, value_stack.array[value_stack.top-1].yyval.Object)); }
        return;
      case 473: // encaps_list -> encaps_var 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 474: // encaps_list -> T_ENCAPSED_AND_WHITESPACE encaps_var 
{ yyval.NodeList = new List<LangElement>() { _astFactory.Literal(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.Object), value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 475: // encaps_var -> T_VARIABLE 
{ yyval.Node = _astFactory.Variable(yypos, value_stack.array[value_stack.top-1].yyval.String, NullLangElement); }
        return;
      case 476: // encaps_var -> T_VARIABLE '[' encaps_var_offset ']' 
{ yyval.Node = _astFactory.ArrayItem(yypos, 
					_astFactory.Variable(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-4].yyval.String, NullLangElement), value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 477: // encaps_var -> T_VARIABLE T_OBJECT_OPERATOR T_STRING 
{ yyval.Node = CreateProperty(yypos, _astFactory.Variable(value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-3].yyval.String, NullLangElement), new Name(value_stack.array[value_stack.top-1].yyval.String)); }
        return;
      case 478: // encaps_var -> T_DOLLAR_OPEN_CURLY_BRACES expr '}' 
{ yyval.Node = _astFactory.Variable(yypos, value_stack.array[value_stack.top-2].yyval.Node, NullLangElement); }
        return;
      case 479: // encaps_var -> T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '}' 
{ yyval.Node = _astFactory.Variable(yypos, value_stack.array[value_stack.top-2].yyval.String, NullLangElement); }
        return;
      case 480: // encaps_var -> T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' expr ']' '}' 
{ yyval.Node = _astFactory.ArrayItem(yypos, 
					_astFactory.Variable(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-5].yyval.String, NullLangElement), value_stack.array[value_stack.top-3].yyval.Node); }
        return;
      case 481: // encaps_var -> T_CURLY_OPEN variable '}' 
{ yyval.Node = value_stack.array[value_stack.top-2].yyval.Node; }
        return;
      case 482: // encaps_var_offset -> T_STRING 
{ yyval.Node = _astFactory.Literal(yypos, value_stack.array[value_stack.top-1].yyval.String); }
        return;
      case 483: // encaps_var_offset -> T_NUM_STRING 
{ yyval.Node = _astFactory.Literal(yypos, value_stack.array[value_stack.top-1].yyval.Double); }
        return;
      case 484: // encaps_var_offset -> T_VARIABLE 
{ yyval.Node = _astFactory.Variable(yypos, value_stack.array[value_stack.top-1].yyval.String, NullLangElement); }
        return;
      case 485: // internal_functions_in_yacc -> T_ISSET '(' isset_variables ')' 
{ yyval.Node = _astFactory.Isset(yypos, value_stack.array[value_stack.top-2].yyval.NodeList); }
        return;
      case 486: // internal_functions_in_yacc -> T_EMPTY '(' expr ')' 
{ yyval.Node = _astFactory.Empty(yypos, value_stack.array[value_stack.top-2].yyval.Node);}
        return;
      case 487: // internal_functions_in_yacc -> T_INCLUDE expr 
{ yyval.Node = _astFactory.Inclusion(yypos, isConditional, InclusionTypes.Include, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 488: // internal_functions_in_yacc -> T_INCLUDE_ONCE expr 
{ yyval.Node = _astFactory.Inclusion(yypos, isConditional, InclusionTypes.IncludeOnce, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 489: // internal_functions_in_yacc -> T_EVAL '(' expr ')' 
{ yyval.Node = _astFactory.Eval(yypos, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 490: // internal_functions_in_yacc -> T_REQUIRE expr 
{ yyval.Node = _astFactory.Inclusion(yypos, isConditional, InclusionTypes.Require, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 491: // internal_functions_in_yacc -> T_REQUIRE_ONCE expr 
{ yyval.Node = _astFactory.Inclusion(yypos, isConditional, InclusionTypes.RequireOnce, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 492: // isset_variables -> isset_variable 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 493: // isset_variables -> isset_variables ',' isset_variable 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 494: // isset_variable -> expr 
{ System.Diagnostics.Debug.Assert(value_stack.array[value_stack.top-1].yyval.Node is VarLikeConstructUse); yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
    }
  }

  protected override string TerminalToString(int terminal)
  {
    if (((Tokens)terminal).ToString() != terminal.ToString())
      return ((Tokens)terminal).ToString();
    else
      return CharToString((char)terminal);
  }


}
}
