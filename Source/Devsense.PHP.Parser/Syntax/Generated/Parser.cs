using System;
using System.Text;
using System.Collections.Generic;

// Copyright(c) DEVSENSE s.r.o.
// All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the License); you may not use
// this file except in compliance with the License. You may obtain a copy of the
// License at http://www.apache.org/licenses/LICENSE-2.0
//
// THIS CODE IS PROVIDED ON AN  *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS
// OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY
// IMPLIED WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
// MERCHANTABILITY OR NON-INFRINGEMENT.
//
// See the Apache Version 2.0 License for specific language governing
// permissions and limitations under the License.

using System.Linq;
using System.Runtime.InteropServices;
using Devsense.PHP.Syntax.Ast;
using Devsense.PHP.Text;
using Devsense.PHP.Errors;

using CompleteAlias = System.Tuple<Devsense.PHP.Syntax.QualifiedNameRef, Devsense.PHP.Syntax.NameRef>;
using ContextAlias = System.Tuple<Devsense.PHP.Text.Span, Devsense.PHP.Syntax.QualifiedNameRef, Devsense.PHP.Syntax.NameRef, Devsense.PHP.Syntax.AliasKind>;
using AnonymousClass = System.Tuple<Devsense.PHP.Syntax.Ast.TypeRef, System.Collections.Generic.List<Devsense.PHP.Syntax.Ast.ActualParam>, Devsense.PHP.Text.Span>;
using StringPair = System.Collections.Generic.KeyValuePair<string, string>;


namespace Devsense.PHP.Syntax
{
public enum Tokens {
/// <summary>&quot;include (T_INCLUDE)&quot;</summary>
T_INCLUDE=262,
/// <summary>&quot;include_once (T_INCLUDE_ONCE)&quot;</summary>
T_INCLUDE_ONCE=261,
/// <summary>&quot;eval (T_EVAL)&quot;</summary>
T_EVAL=260,
/// <summary>&quot;require (T_REQUIRE)&quot;</summary>
T_REQUIRE=259,
/// <summary>&quot;require_once (T_REQUIRE_ONCE)&quot;</summary>
T_REQUIRE_ONCE=258,
/// <summary>&quot;or (T_LOGICAL_OR)&quot;</summary>
T_LOGICAL_OR=263,
/// <summary>&quot;xor (T_LOGICAL_XOR)&quot;</summary>
T_LOGICAL_XOR=264,
/// <summary>&quot;and (T_LOGICAL_AND)&quot;</summary>
T_LOGICAL_AND=265,
/// <summary>&quot;print (T_PRINT)&quot;</summary>
T_PRINT=266,
/// <summary>&quot;yield (T_YIELD)&quot;</summary>
T_YIELD=267,
/// <summary>&quot;=&gt; (T_DOUBLE_ARROW)&quot;</summary>
T_DOUBLE_ARROW=268,
/// <summary>&quot;yield from (T_YIELD_FROM)&quot;</summary>
T_YIELD_FROM=269,
/// <summary>&quot;+= (T_PLUS_EQUAL)&quot;</summary>
T_PLUS_EQUAL=270,
/// <summary>&quot;-= (T_MINUS_EQUAL)&quot;</summary>
T_MINUS_EQUAL=271,
/// <summary>&quot;*= (T_MUL_EQUAL)&quot;</summary>
T_MUL_EQUAL=279,
/// <summary>&quot;/= (T_DIV_EQUAL)&quot;</summary>
T_DIV_EQUAL=278,
/// <summary>&quot;.= (T_CONCAT_EQUAL)&quot;</summary>
T_CONCAT_EQUAL=277,
/// <summary>&quot;%= (T_MOD_EQUAL)&quot;</summary>
T_MOD_EQUAL=276,
/// <summary>&quot;&amp;= (T_AND_EQUAL)&quot;</summary>
T_AND_EQUAL=275,
/// <summary>&quot;|= (T_OR_EQUAL)&quot;</summary>
T_OR_EQUAL=274,
/// <summary>&quot;^= (T_XOR_EQUAL)&quot;</summary>
T_XOR_EQUAL=273,
/// <summary>&quot;&lt;&lt;= (T_SL_EQUAL)&quot;</summary>
T_SL_EQUAL=272,
/// <summary>&quot;&gt;&gt;= (T_SR_EQUAL)&quot;</summary>
T_SR_EQUAL=280,
/// <summary>&quot;**= (T_POW_EQUAL)&quot;</summary>
T_POW_EQUAL=281,
/// <summary> &quot;??= (T_COALESCE_EQUAL)&quot;</summary>
T_COALESCE_EQUAL=282,
/// <summary>&quot;?? (T_COALESCE)&quot;</summary>
T_COALESCE=283,
/// <summary>&quot;|| (T_BOOLEAN_OR)&quot;</summary>
T_BOOLEAN_OR=284,
/// <summary>&quot;&amp;&amp; (T_BOOLEAN_AND)&quot;</summary>
T_BOOLEAN_AND=285,
/// <summary>&quot;== (T_IS_EQUAL)&quot;</summary>
T_IS_EQUAL=289,
/// <summary>&quot;!= (T_IS_NOT_EQUAL)&quot;</summary>
T_IS_NOT_EQUAL=288,
/// <summary>&quot;=== (T_IS_IDENTICAL)&quot;</summary>
T_IS_IDENTICAL=287,
/// <summary>&quot;!== (T_IS_NOT_IDENTICAL)&quot;</summary>
T_IS_NOT_IDENTICAL=286,
/// <summary>&quot;&lt;=&gt; (T_SPACESHIP)&quot;</summary>
T_SPACESHIP=290,
/// <summary>&quot;&lt;= (T_IS_SMALLER_OR_EQUAL)&quot;</summary>
T_IS_SMALLER_OR_EQUAL=291,
/// <summary>&quot;&gt;= (T_IS_GREATER_OR_EQUAL)&quot;</summary>
T_IS_GREATER_OR_EQUAL=292,
/// <summary>&quot;&lt;&lt; (T_SL)&quot;</summary>
T_SL=293,
/// <summary>&quot;&gt;&gt; (T_SR)&quot;</summary>
T_SR=294,
/// <summary>&quot;instanceof (T_INSTANCEOF)&quot;</summary>
T_INSTANCEOF=295,
/// <summary>&quot;++ (T_INC)&quot;</summary>
T_INC=303,
/// <summary>&quot;-- (T_DEC)&quot;</summary>
T_DEC=302,
/// <summary>&quot;(int) (T_INT_CAST)&quot;</summary>
T_INT_CAST=301,
/// <summary>&quot;(double) (T_DOUBLE_CAST)&quot;</summary>
T_DOUBLE_CAST=300,
/// <summary>&quot; (T_STRING_CAST)&quot;</summary>
T_STRING_CAST=299,
/// <summary>&quot;(array) (T_ARRAY_CAST)&quot;</summary>
T_ARRAY_CAST=298,
/// <summary>&quot;(object) (T_OBJECT_CAST)&quot;</summary>
T_OBJECT_CAST=297,
/// <summary>&quot;(bool) (T_BOOL_CAST)&quot;</summary>
T_BOOL_CAST=296,
/// <summary>&quot;(unset) (T_UNSET_CAST)&quot;</summary>
T_UNSET_CAST=304,
/// <summary>&quot;** (T_POW)&quot;</summary>
T_POW=305,
/// <summary>&quot;new (T_NEW)&quot;</summary>
T_NEW=306,
/// <summary>&quot;clone (T_CLONE)&quot;</summary>
T_CLONE=307,
T_NOELSE=177,
/// <summary>&quot;elseif (T_ELSEIF)&quot;</summary>
T_ELSEIF=308,
/// <summary>&quot;else (T_ELSE)&quot;</summary>
T_ELSE=309,
/// <summary>&quot;endif (T_ENDIF)&quot;</summary>
T_ENDIF=310,
/// <summary>&quot;static (T_STATIC)&quot;</summary>
T_STATIC=353,
/// <summary>&quot;abstract (T_ABSTRACT)&quot;</summary>
T_ABSTRACT=315,
/// <summary>&quot;final (T_FINAL)&quot;</summary>
T_FINAL=314,
/// <summary>&quot;private (T_PRIVATE)&quot;</summary>
T_PRIVATE=313,
/// <summary>&quot;protected (T_PROTECTED)&quot;</summary>
T_PROTECTED=357,
/// <summary>&quot;public (T_PUBLIC)&quot;</summary>
T_PUBLIC=311,
/// <summary>&quot;integer number (T_LNUMBER)&quot;</summary>
T_LNUMBER=317,
/// <summary>&quot;floating-point number (T_DNUMBER)&quot;</summary>
T_DNUMBER=312,
/// <summary>&quot;identifier (T_STRING)&quot;</summary>
T_STRING=319,
/// <summary>&quot;variable (T_VARIABLE)&quot;</summary>
T_VARIABLE=320,
T_INLINE_HTML=321,
/// <summary>&quot;quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)&quot;</summary>
T_ENCAPSED_AND_WHITESPACE=316,
/// <summary>&quot;quoted-string (T_CONSTANT_ENCAPSED_STRING)&quot;</summary>
T_CONSTANT_ENCAPSED_STRING=323,
/// <summary>&quot;variable name (T_STRING_VARNAME)&quot;</summary>
T_STRING_VARNAME=318,
/// <summary>&quot;number (T_NUM_STRING)&quot;</summary>
T_NUM_STRING=325,
/// <summary>&#39;!&#39;</summary>
T_EXCLAM=33,
/// <summary>&#39;&quot;&#39;</summary>
T_DOUBLE_QUOTES=34,
/// <summary>&#39;$&#39;</summary>
T_DOLLAR=36,
/// <summary>&#39;%&#39;</summary>
T_PERCENT=37,
/// <summary>&#39;&amp;&#39;</summary>
T_AMP=38,
/// <summary>&#39;\&#39;&#39;</summary>
T_SINGLE_QUOTES=39,
/// <summary>&#39;(&#39;</summary>
T_LPAREN=40,
/// <summary>&#39;)&#39;</summary>
T_RPAREN=41,
/// <summary>&#39;*&#39;</summary>
T_MUL=42,
/// <summary>&#39;+&#39;</summary>
T_PLUS=43,
/// <summary>&#39;,&#39;</summary>
T_COMMA=44,
/// <summary>&#39;-&#39;</summary>
T_MINUS=45,
/// <summary>&#39;.&#39;</summary>
T_DOT=46,
/// <summary>&#39;/&#39;</summary>
T_SLASH=47,
/// <summary>&#39;:&#39;</summary>
T_COLON=58,
/// <summary>&#39;;&#39;</summary>
T_SEMI=59,
/// <summary>&#39;&lt;&#39;</summary>
T_LT=60,
/// <summary>&#39;=&#39;</summary>
T_EQ=61,
/// <summary>&#39;&gt;&#39;</summary>
T_GT=62,
/// <summary>&#39;?&#39;</summary>
T_QUESTION=63,
/// <summary>&#39;@&#39;</summary>
T_AT=64,
/// <summary>&#39;[&#39;</summary>
T_LBRACKET=91,
/// <summary>&#39;]&#39;</summary>
T_RBRACKET=93,
/// <summary>&#39;^&#39;</summary>
T_CARET=94,
/// <summary>&#39;`&#39;</summary>
T_BACKQUOTE=96,
/// <summary>&#39;{&#39;</summary>
T_LBRACE=123,
/// <summary>&#39;|&#39;</summary>
T_PIPE=124,
/// <summary>&#39;}&#39;</summary>
T_RBRACE=125,
/// <summary>&#39;~&#39;</summary>
T_TILDE=126,
/// <summary>&quot;end of file&quot;</summary>
END=0,
/// <summary>&quot;exit (T_EXIT)&quot;</summary>
T_EXIT=326,
/// <summary>&quot;if (T_IF)&quot;</summary>
T_IF=322,
/// <summary>&quot;echo (T_ECHO)&quot;</summary>
T_ECHO=324,
/// <summary>&quot;do (T_DO)&quot;</summary>
T_DO=329,
/// <summary>&quot;while (T_WHILE)&quot;</summary>
T_WHILE=330,
/// <summary>&quot;endwhile (T_ENDWHILE)&quot;</summary>
T_ENDWHILE=327,
/// <summary>&quot;for (T_FOR)&quot;</summary>
T_FOR=328,
/// <summary>&quot;endfor (T_ENDFOR)&quot;</summary>
T_ENDFOR=333,
/// <summary>&quot;foreach (T_FOREACH)&quot;</summary>
T_FOREACH=334,
/// <summary>&quot;endforeach (T_ENDFOREACH)&quot;</summary>
T_ENDFOREACH=331,
/// <summary>&quot;declare (T_DECLARE)&quot;</summary>
T_DECLARE=332,
/// <summary>&quot;enddeclare (T_ENDDECLARE)&quot;</summary>
T_ENDDECLARE=337,
/// <summary>&quot;as (T_AS)&quot;</summary>
T_AS=338,
/// <summary>&quot;switch (T_SWITCH)&quot;</summary>
T_SWITCH=335,
/// <summary>&quot;endswitch (T_ENDSWITCH)&quot;</summary>
T_ENDSWITCH=336,
/// <summary>&quot;case (T_CASE)&quot;</summary>
T_CASE=341,
/// <summary>&quot;default (T_DEFAULT)&quot;</summary>
T_DEFAULT=342,
/// <summary>&quot;break (T_BREAK)&quot;</summary>
T_BREAK=339,
/// <summary>&quot;continue (T_CONTINUE)&quot;</summary>
T_CONTINUE=340,
/// <summary>&quot;goto (T_GOTO)&quot;</summary>
T_GOTO=345,
/// <summary>&quot;function (T_FUNCTION)&quot;</summary>
T_FUNCTION=346,
/// <summary> &quot;fn (T_FN)&quot;</summary>
T_FN=343,
/// <summary>&quot;const (T_CONST)&quot;</summary>
T_CONST=344,
/// <summary>&quot;return (T_RETURN)&quot;</summary>
T_RETURN=348,
/// <summary>&quot;try (T_TRY)&quot;</summary>
T_TRY=349,
/// <summary>&quot;catch (T_CATCH)&quot;</summary>
T_CATCH=347,
/// <summary>&quot;finally (T_FINALLY)&quot;</summary>
T_FINALLY=351,
/// <summary>&quot;throw (T_THROW)&quot;</summary>
T_THROW=352,
/// <summary>&quot;use (T_USE)&quot;</summary>
T_USE=350,
/// <summary>&quot;insteadof (T_INSTEADOF)&quot;</summary>
T_INSTEADOF=354,
/// <summary>&quot;exit_scope (T_GLOBAL)&quot;</summary>
T_GLOBAL=355,
/// <summary>&quot;var (T_VAR)&quot;</summary>
T_VAR=356,
/// <summary>&quot;unset (T_UNSET)&quot;</summary>
T_UNSET=360,
/// <summary>&quot;isset (T_ISSET)&quot;</summary>
T_ISSET=358,
/// <summary>&quot;empty (T_EMPTY)&quot;</summary>
T_EMPTY=359,
/// <summary>&quot;__halt_compiler (T_HALT_COMPILER)&quot;</summary>
T_HALT_COMPILER=363,
/// <summary>&quot;class (T_CLASS)&quot;</summary>
T_CLASS=361,
/// <summary>&quot;trait (T_TRAIT)&quot;</summary>
T_TRAIT=362,
/// <summary>&quot;interface (T_INTERFACE)&quot;</summary>
T_INTERFACE=366,
/// <summary>&quot;extends (T_EXTENDS)&quot;</summary>
T_EXTENDS=364,
/// <summary>&quot;implements (T_IMPLEMENTS)&quot;</summary>
T_IMPLEMENTS=365,
/// <summary>&quot;-&gt; (T_OBJECT_OPERATOR)&quot;</summary>
T_OBJECT_OPERATOR=369,
/// <summary>&quot;list (T_LIST)&quot;</summary>
T_LIST=367,
/// <summary>&quot;array (T_ARRAY)&quot;</summary>
T_ARRAY=368,
/// <summary>&quot;callable (T_CALLABLE)&quot;</summary>
T_CALLABLE=372,
/// <summary>&quot;__LINE__ (T_LINE)&quot;</summary>
T_LINE=370,
/// <summary>&quot;__FILE__ (T_FILE)&quot;</summary>
T_FILE=371,
/// <summary>&quot;__DIR__ (T_DIR)&quot;</summary>
T_DIR=375,
/// <summary>&quot;__CLASS__ (T_CLASS_C)&quot;</summary>
T_CLASS_C=373,
/// <summary>&quot;__TRAIT__ (T_TRAIT_C)&quot;</summary>
T_TRAIT_C=374,
/// <summary>&quot;__METHOD__ (T_METHOD_C)&quot;</summary>
T_METHOD_C=378,
/// <summary>&quot;__FUNCTION__ (T_FUNC_C)&quot;</summary>
T_FUNC_C=376,
/// <summary>&quot;comment (T_COMMENT)&quot;</summary>
T_COMMENT=377,
/// <summary>&quot;doc comment (T_DOC_COMMENT)&quot;</summary>
T_DOC_COMMENT=381,
/// <summary>&quot;open tag (T_OPEN_TAG)&quot;</summary>
T_OPEN_TAG=379,
/// <summary>&quot;open tag with echo (T_OPEN_TAG_WITH_ECHO)&quot;</summary>
T_OPEN_TAG_WITH_ECHO=380,
/// <summary>&quot;close tag (T_CLOSE_TAG)&quot;</summary>
T_CLOSE_TAG=384,
/// <summary>&quot;whitespace (T_WHITESPACE)&quot;</summary>
T_WHITESPACE=382,
/// <summary>&quot;heredoc start (T_START_HEREDOC)&quot;</summary>
T_START_HEREDOC=383,
/// <summary>&quot;heredoc end (T_END_HEREDOC)&quot;</summary>
T_END_HEREDOC=387,
/// <summary>&quot;${ (T_DOLLAR_OPEN_CURLY_BRACES)&quot;</summary>
T_DOLLAR_OPEN_CURLY_BRACES=385,
/// <summary>&quot;{$ (T_CURLY_OPEN)&quot;</summary>
T_CURLY_OPEN=386,
/// <summary>&quot;:: (T_DOUBLE_COLON)&quot;</summary>
T_DOUBLE_COLON=390,
/// <summary>&quot;namespace (T_NAMESPACE)&quot;</summary>
T_NAMESPACE=391,
/// <summary>&quot;__NAMESPACE__ (T_NS_C)&quot;</summary>
T_NS_C=392,
/// <summary>&quot;\\ (T_NS_SEPARATOR)&quot;</summary>
T_NS_SEPARATOR=393,
/// <summary>&quot;... (T_ELLIPSIS)&quot;</summary>
T_ELLIPSIS=394,
/// <summary> type safe declaration</summary>
T_ERROR=257,
EOF=0
};

[StructLayout(LayoutKind.Explicit)]
public partial struct SemanticValueType
{
	// Integer and Offset are both used when generating code for string 
	// with 'inline' variables. Other fields are not combined.
	
	[FieldOffset(0)]		
	public bool Bool;
	[FieldOffset(0)]		
	public int Integer;
	[FieldOffset(0)]
	public double Double;
	[FieldOffset(0)]
	public long Long;
	[FieldOffset(0)]
	public QualifiedNameRef QualifiedNameReference;
	[FieldOffset(0)]
	public AliasKind Kind;
	/// <summary>Token that encapsulates the string literal.</summary>
	[FieldOffset(0)]
	public Tokens QuoteToken;

	[FieldOffset(8)]
	public object Object;

	public TypeRef TypeReference						{ get { return (TypeRef)Object; }					set { Object = value; } }
	public IList<TypeRef> TypeRefList					{ get { return (IList<TypeRef>)Object; }			set { Object = value; } }
	public LangElement Node								{ get { return (LangElement)Object; }				set { Object = value; } }
	public List<LangElement> NodeList					{ get { return (List<LangElement>)Object; }			set { Object = value; } }
	public string String								{ get { return (string)Object; }					set { Object = value; } }
	public StringPair Strings							{ get { return (StringPair)Object; }				set { Object = value; } }
	public List<string> StringList						{ get { return (List<string>)Object; }				set { Object = value; } }
	public CompleteAlias Alias							{ get { return (CompleteAlias)Object; }				set { Object = value; } }
	public List<CompleteAlias> AliasList				{ get { return (List<CompleteAlias>)Object; }		set { Object = value; } }
	public ContextAlias ContextAlias					{ get { return (ContextAlias)Object; }				set { Object = value; } }
	public List<ContextAlias> ContextAliasList			{ get { return (List<ContextAlias>)Object; }		set { Object = value; } }
	public ActualParam Param							{ get { return (ActualParam)Object; }				set { Object = value; } }
	public List<ActualParam> ParamList					{ get { return (List<ActualParam>)Object; }			set { Object = value; } }
	public FormalParam FormalParam						{ get { return (FormalParam)Object; }				set { Object = value; } }
	public List<FormalParam> FormalParamList			{ get { return (List<FormalParam>)Object; }			set { Object = value; } }
	public Item Item									{ get { return (Item)Object; }						set { Object = value; } }
	public List<Item> ItemList							{ get { return (List<Item>)Object; }				set { Object = value; } }
	internal List<IfStatement> IfItemList				{ get { return (List<IfStatement>)Object; }			set { Object = value; } }
	public ForeachVar ForeachVar						{ get { return (ForeachVar)Object; }				set { Object = value; } }
	public AnonymousClass AnonymousClass				{ get { return (AnonymousClass)Object; }			set { Object = value; } }
	public UseBase Use									{ get { return (UseBase)Object; }					set { Object = value; } }
	public List<UseBase> UseList						{ get { return (List<UseBase>)Object; }				set { Object = value; } }
}

public partial class Parser: ShiftReduceParser<SemanticValueType,Span>
{

  protected override string[] NonTerminals { get { return nonTerminals; } }
  private static string[] nonTerminals;

  protected override State[] States { get { return states; } }
  private static readonly State[] states;

  protected override Rule[] Rules { get { return rules; } }
  private static readonly Rule[] rules;


  #region Construction

  static Parser()
  {

    #region states
    states = new State[]
    {
      new State(0, -2, new int[] {-132,1,-134,3}),
      new State(1, new int[] {0,2}),
      new State(2, -1),
      new State(3, -82, new int[] {-82,4}),
      new State(4, new int[] {123,7,330,23,329,31,328,152,335,164,339,178,340,475,348,479,355,482,353,489,324,498,321,505,320,97,36,98,319,508,391,902,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478,360,525,334,535,332,545,59,551,349,552,352,568,345,571,315,646,314,647,362,649,366,694,363,914,350,918,344,974,0,-3,322,-382,361,-174}, new int[] {-31,5,-32,6,-17,12,-40,506,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,510,-33,910,-34,911,-14,576,-13,644,-35,912,-37,913}),
      new State(5, -81),
      new State(6, -88),
      new State(7, -127, new int[] {-85,8}),
      new State(8, new int[] {125,9,123,7,330,23,329,31,328,152,335,164,339,178,340,475,348,479,355,482,353,489,324,498,321,505,320,97,36,98,319,508,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478,360,525,334,535,332,545,59,551,349,552,352,568,345,571,315,646,314,647,362,649,366,694,363,706,322,-382,361,-174}, new int[] {-80,10,-32,11,-17,12,-40,506,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,510,-33,574,-34,575,-14,576,-13,644,-35,648,-37,693}),
      new State(9, -134),
      new State(10, -126),
      new State(11, -128),
      new State(12, new int[] {322,881}, new int[] {-52,13,-53,15,-125,17,-126,888}),
      new State(13, -383, new int[] {-18,14}),
      new State(14, -135),
      new State(15, -383, new int[] {-18,16}),
      new State(16, -136),
      new State(17, new int[] {308,18,309,879,123,-211,330,-211,329,-211,328,-211,335,-211,339,-211,340,-211,348,-211,355,-211,353,-211,324,-211,321,-211,320,-211,36,-211,319,-211,391,-211,393,-211,40,-211,368,-211,91,-211,323,-211,367,-211,307,-211,303,-211,302,-211,43,-211,45,-211,33,-211,126,-211,306,-211,358,-211,359,-211,262,-211,261,-211,260,-211,259,-211,258,-211,301,-211,300,-211,299,-211,298,-211,297,-211,296,-211,304,-211,326,-211,64,-211,317,-211,312,-211,370,-211,371,-211,375,-211,374,-211,378,-211,376,-211,392,-211,373,-211,34,-211,383,-211,96,-211,266,-211,267,-211,269,-211,346,-211,360,-211,334,-211,332,-211,59,-211,349,-211,352,-211,345,-211,315,-211,314,-211,362,-211,366,-211,363,-211,350,-211,344,-211,322,-211,361,-211,0,-211,125,-211,341,-211,342,-211,336,-211,337,-211,331,-211,333,-211,327,-211,310,-211}),
      new State(18, new int[] {40,19}),
      new State(19, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,20,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(20, new int[] {41,21,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(21, new int[] {123,7,330,23,329,31,328,152,335,164,339,178,340,475,348,479,355,482,353,489,324,498,321,505,320,97,36,98,319,508,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478,360,525,334,535,332,545,59,551,349,552,352,568,345,571,322,-382}, new int[] {-32,22,-17,12,-40,506,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(22, -210),
      new State(23, new int[] {40,24}),
      new State(24, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,25,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(25, new int[] {41,26,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(26, -382, new int[] {-17,27}),
      new State(27, new int[] {123,7,330,23,329,31,328,152,335,164,339,178,340,475,348,479,355,482,353,489,324,498,321,505,320,97,36,98,319,508,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478,360,525,334,535,332,545,59,551,349,552,352,568,345,571,58,875,322,-382}, new int[] {-71,28,-32,30,-17,12,-40,506,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(28, -383, new int[] {-18,29}),
      new State(29, -137),
      new State(30, -207),
      new State(31, -382, new int[] {-17,32}),
      new State(32, new int[] {123,7,330,23,329,31,328,152,335,164,339,178,340,475,348,479,355,482,353,489,324,498,321,505,320,97,36,98,319,508,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478,360,525,334,535,332,545,59,551,349,552,352,568,345,571,322,-382}, new int[] {-32,33,-17,12,-40,506,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(33, new int[] {330,34}),
      new State(34, new int[] {40,35}),
      new State(35, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,36,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(36, new int[] {41,37,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(37, new int[] {59,38}),
      new State(38, -383, new int[] {-18,39}),
      new State(39, -138),
      new State(40, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,41,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(41, new int[] {284,-324,285,42,263,-324,265,-324,264,-324,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,-324,283,-324,59,-324,41,-324,125,-324,58,-324,93,-324,44,-324,268,-324,338,-324}),
      new State(42, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,43,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(43, new int[] {284,-325,285,-325,263,-325,265,-325,264,-325,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,-325,283,-325,59,-325,41,-325,125,-325,58,-325,93,-325,44,-325,268,-325,338,-325}),
      new State(44, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,45,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(45, new int[] {284,40,285,42,263,-326,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-326,41,-326,125,-326,58,-326,93,-326,44,-326,268,-326,338,-326}),
      new State(46, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,47,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(47, new int[] {284,40,285,42,263,-327,265,-327,264,-327,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-327,41,-327,125,-327,58,-327,93,-327,44,-327,268,-327,338,-327}),
      new State(48, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,49,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(49, new int[] {284,40,285,42,263,-328,265,46,264,-328,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-328,41,-328,125,-328,58,-328,93,-328,44,-328,268,-328,338,-328}),
      new State(50, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,51,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(51, new int[] {284,-329,285,-329,263,-329,265,-329,264,-329,124,-329,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,-329,283,-329,59,-329,41,-329,125,-329,58,-329,93,-329,44,-329,268,-329,338,-329}),
      new State(52, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,53,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(53, new int[] {284,-330,285,-330,263,-330,265,-330,264,-330,124,-330,38,-330,94,-330,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,-330,283,-330,59,-330,41,-330,125,-330,58,-330,93,-330,44,-330,268,-330,338,-330}),
      new State(54, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,55,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(55, new int[] {284,-331,285,-331,263,-331,265,-331,264,-331,124,-331,38,52,94,-331,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,-331,283,-331,59,-331,41,-331,125,-331,58,-331,93,-331,44,-331,268,-331,338,-331}),
      new State(56, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,57,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(57, new int[] {284,-332,285,-332,263,-332,265,-332,264,-332,124,-332,38,-332,94,-332,46,-332,43,-332,45,-332,42,62,305,64,47,66,37,68,293,-332,294,-332,287,-332,286,-332,289,-332,288,-332,60,-332,291,-332,62,-332,292,-332,290,-332,295,92,63,-332,283,-332,59,-332,41,-332,125,-332,58,-332,93,-332,44,-332,268,-332,338,-332}),
      new State(58, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,59,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(59, new int[] {284,-333,285,-333,263,-333,265,-333,264,-333,124,-333,38,-333,94,-333,46,-333,43,-333,45,-333,42,62,305,64,47,66,37,68,293,-333,294,-333,287,-333,286,-333,289,-333,288,-333,60,-333,291,-333,62,-333,292,-333,290,-333,295,92,63,-333,283,-333,59,-333,41,-333,125,-333,58,-333,93,-333,44,-333,268,-333,338,-333}),
      new State(60, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,61,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(61, new int[] {284,-334,285,-334,263,-334,265,-334,264,-334,124,-334,38,-334,94,-334,46,-334,43,-334,45,-334,42,62,305,64,47,66,37,68,293,-334,294,-334,287,-334,286,-334,289,-334,288,-334,60,-334,291,-334,62,-334,292,-334,290,-334,295,92,63,-334,283,-334,59,-334,41,-334,125,-334,58,-334,93,-334,44,-334,268,-334,338,-334}),
      new State(62, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,63,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(63, new int[] {284,-335,285,-335,263,-335,265,-335,264,-335,124,-335,38,-335,94,-335,46,-335,43,-335,45,-335,42,-335,305,64,47,-335,37,-335,293,-335,294,-335,287,-335,286,-335,289,-335,288,-335,60,-335,291,-335,62,-335,292,-335,290,-335,295,92,63,-335,283,-335,59,-335,41,-335,125,-335,58,-335,93,-335,44,-335,268,-335,338,-335}),
      new State(64, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,65,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(65, new int[] {284,-336,285,-336,263,-336,265,-336,264,-336,124,-336,38,-336,94,-336,46,-336,43,-336,45,-336,42,-336,305,64,47,-336,37,-336,293,-336,294,-336,287,-336,286,-336,289,-336,288,-336,60,-336,291,-336,62,-336,292,-336,290,-336,295,-336,63,-336,283,-336,59,-336,41,-336,125,-336,58,-336,93,-336,44,-336,268,-336,338,-336}),
      new State(66, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,67,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(67, new int[] {284,-337,285,-337,263,-337,265,-337,264,-337,124,-337,38,-337,94,-337,46,-337,43,-337,45,-337,42,-337,305,64,47,-337,37,-337,293,-337,294,-337,287,-337,286,-337,289,-337,288,-337,60,-337,291,-337,62,-337,292,-337,290,-337,295,92,63,-337,283,-337,59,-337,41,-337,125,-337,58,-337,93,-337,44,-337,268,-337,338,-337}),
      new State(68, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,69,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(69, new int[] {284,-338,285,-338,263,-338,265,-338,264,-338,124,-338,38,-338,94,-338,46,-338,43,-338,45,-338,42,-338,305,64,47,-338,37,-338,293,-338,294,-338,287,-338,286,-338,289,-338,288,-338,60,-338,291,-338,62,-338,292,-338,290,-338,295,92,63,-338,283,-338,59,-338,41,-338,125,-338,58,-338,93,-338,44,-338,268,-338,338,-338}),
      new State(70, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,71,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(71, new int[] {284,-339,285,-339,263,-339,265,-339,264,-339,124,-339,38,-339,94,-339,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,-339,294,-339,287,-339,286,-339,289,-339,288,-339,60,-339,291,-339,62,-339,292,-339,290,-339,295,92,63,-339,283,-339,59,-339,41,-339,125,-339,58,-339,93,-339,44,-339,268,-339,338,-339}),
      new State(72, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,73,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(73, new int[] {284,-340,285,-340,263,-340,265,-340,264,-340,124,-340,38,-340,94,-340,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,-340,294,-340,287,-340,286,-340,289,-340,288,-340,60,-340,291,-340,62,-340,292,-340,290,-340,295,92,63,-340,283,-340,59,-340,41,-340,125,-340,58,-340,93,-340,44,-340,268,-340,338,-340}),
      new State(74, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,75,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(75, new int[] {284,-345,285,-345,263,-345,265,-345,264,-345,124,-345,38,-345,94,-345,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,-345,283,-345,59,-345,41,-345,125,-345,58,-345,93,-345,44,-345,268,-345,338,-345}),
      new State(76, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,77,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(77, new int[] {284,-346,285,-346,263,-346,265,-346,264,-346,124,-346,38,-346,94,-346,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,-346,283,-346,59,-346,41,-346,125,-346,58,-346,93,-346,44,-346,268,-346,338,-346}),
      new State(78, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,79,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(79, new int[] {284,-347,285,-347,263,-347,265,-347,264,-347,124,-347,38,-347,94,-347,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,-347,283,-347,59,-347,41,-347,125,-347,58,-347,93,-347,44,-347,268,-347,338,-347}),
      new State(80, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,81,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(81, new int[] {284,-348,285,-348,263,-348,265,-348,264,-348,124,-348,38,-348,94,-348,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,-348,283,-348,59,-348,41,-348,125,-348,58,-348,93,-348,44,-348,268,-348,338,-348}),
      new State(82, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,83,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(83, new int[] {284,-349,285,-349,263,-349,265,-349,264,-349,124,-349,38,-349,94,-349,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,-349,286,-349,289,-349,288,-349,60,82,291,84,62,86,292,88,290,-349,295,92,63,-349,283,-349,59,-349,41,-349,125,-349,58,-349,93,-349,44,-349,268,-349,338,-349}),
      new State(84, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,85,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(85, new int[] {284,-350,285,-350,263,-350,265,-350,264,-350,124,-350,38,-350,94,-350,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,-350,286,-350,289,-350,288,-350,60,82,291,84,62,86,292,88,290,-350,295,92,63,-350,283,-350,59,-350,41,-350,125,-350,58,-350,93,-350,44,-350,268,-350,338,-350}),
      new State(86, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,87,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(87, new int[] {284,-351,285,-351,263,-351,265,-351,264,-351,124,-351,38,-351,94,-351,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,-351,286,-351,289,-351,288,-351,60,82,291,84,62,86,292,88,290,-351,295,92,63,-351,283,-351,59,-351,41,-351,125,-351,58,-351,93,-351,44,-351,268,-351,338,-351}),
      new State(88, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,89,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(89, new int[] {284,-352,285,-352,263,-352,265,-352,264,-352,124,-352,38,-352,94,-352,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,-352,286,-352,289,-352,288,-352,60,82,291,84,62,86,292,88,290,-352,295,92,63,-352,283,-352,59,-352,41,-352,125,-352,58,-352,93,-352,44,-352,268,-352,338,-352}),
      new State(90, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,91,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(91, new int[] {284,-353,285,-353,263,-353,265,-353,264,-353,124,-353,38,-353,94,-353,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,-353,283,-353,59,-353,41,-353,125,-353,58,-353,93,-353,44,-353,268,-353,338,-353}),
      new State(92, new int[] {353,295,319,186,391,187,393,190,320,97,36,98}, new int[] {-25,93,-26,94,-19,349,-103,183,-76,350,-46,795}),
      new State(93, -354),
      new State(94, new int[] {390,95,59,-399,284,-399,285,-399,263,-399,265,-399,264,-399,124,-399,38,-399,94,-399,46,-399,43,-399,45,-399,42,-399,305,-399,47,-399,37,-399,293,-399,294,-399,287,-399,286,-399,289,-399,288,-399,60,-399,291,-399,62,-399,292,-399,290,-399,295,-399,63,-399,283,-399,41,-399,125,-399,58,-399,93,-399,44,-399,268,-399,338,-399,40,-399}),
      new State(95, new int[] {320,97,36,98}, new int[] {-46,96}),
      new State(96, -459),
      new State(97, -450),
      new State(98, new int[] {123,99,320,97,36,98}, new int[] {-46,874}),
      new State(99, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,100,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(100, new int[] {125,101,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(101, -451),
      new State(102, new int[] {58,872,320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,103,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(103, new int[] {58,104,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(104, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,105,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(105, new int[] {284,40,285,42,263,-357,265,-357,264,-357,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,-357,283,106,59,-357,41,-357,125,-357,58,-357,93,-357,44,-357,268,-357,338,-357}),
      new State(106, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,107,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(107, new int[] {284,40,285,42,263,-359,265,-359,264,-359,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,-359,283,106,59,-359,41,-359,125,-359,58,-359,93,-359,44,-359,268,-359,338,-359}),
      new State(108, new int[] {61,109,270,844,271,846,279,848,281,850,278,852,277,854,276,856,275,858,274,860,273,862,272,864,280,866,282,868,303,870,302,871,59,-430,284,-430,285,-430,263,-430,265,-430,264,-430,124,-430,38,-430,94,-430,46,-430,43,-430,45,-430,42,-430,305,-430,47,-430,37,-430,293,-430,294,-430,287,-430,286,-430,289,-430,288,-430,60,-430,291,-430,62,-430,292,-430,290,-430,295,-430,63,-430,283,-430,41,-430,125,-430,58,-430,93,-430,44,-430,268,-430,338,-430,91,-435,369,-435,123,-435,390,-435}),
      new State(109, new int[] {38,111,320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,110,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(110, new int[] {284,40,285,42,263,-303,265,-303,264,-303,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-303,41,-303,125,-303,58,-303,93,-303,44,-303,268,-303,338,-303}),
      new State(111, new int[] {320,97,36,98,353,295,319,186,391,187,393,190,40,296,368,282,91,324,323,304,306,344}, new int[] {-41,112,-43,113,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,323,-48,334,-50,309,-77,310}),
      new State(112, new int[] {59,-304,284,-304,285,-304,263,-304,265,-304,264,-304,124,-304,38,-304,94,-304,46,-304,43,-304,45,-304,42,-304,305,-304,47,-304,37,-304,293,-304,294,-304,287,-304,286,-304,289,-304,288,-304,60,-304,291,-304,62,-304,292,-304,290,-304,295,-304,63,-304,283,-304,41,-304,125,-304,58,-304,93,-304,44,-304,268,-304,338,-304,91,-435,369,-435,123,-435,390,-435}),
      new State(113, -305),
      new State(114, new int[] {61,-447,270,-447,271,-447,279,-447,281,-447,278,-447,277,-447,276,-447,275,-447,274,-447,273,-447,272,-447,280,-447,282,-447,303,-447,302,-447,59,-447,284,-447,285,-447,263,-447,265,-447,264,-447,124,-447,38,-447,94,-447,46,-447,43,-447,45,-447,42,-447,305,-447,47,-447,37,-447,293,-447,294,-447,287,-447,286,-447,289,-447,288,-447,60,-447,291,-447,62,-447,292,-447,290,-447,295,-447,63,-447,283,-447,91,-447,369,-447,123,-447,390,-447,41,-447,125,-447,58,-447,93,-447,44,-447,268,-447,338,-447,40,-438}),
      new State(115, -441),
      new State(116, new int[] {91,117,369,838,123,841,390,-434}),
      new State(117, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478,93,-432}, new int[] {-59,118,-40,120,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(118, new int[] {93,119}),
      new State(119, -442),
      new State(120, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,93,-433,59,-433,41,-433}),
      new State(121, -448),
      new State(122, new int[] {390,123}),
      new State(123, new int[] {320,97,36,98,319,198,262,201,261,202,260,203,259,204,258,205,263,206,264,207,265,208,295,209,306,210,307,211,326,212,322,213,308,214,309,215,310,216,324,217,329,218,330,219,327,220,328,221,333,222,334,223,331,224,332,225,337,226,338,227,349,228,347,229,351,230,352,231,350,232,354,233,355,234,356,235,360,236,358,237,359,238,340,239,345,240,346,241,344,242,348,243,266,244,267,245,367,246,335,247,336,248,341,249,342,250,339,251,368,252,372,253,364,254,365,255,391,256,362,257,366,258,361,259,373,260,374,261,376,262,378,263,370,264,371,265,375,266,392,267,343,268,353,269,315,270,314,271,313,272,357,273,311,274,123,275}, new int[] {-46,124,-100,125,-2,126,-101,199,-102,200}),
      new State(124, new int[] {61,-453,270,-453,271,-453,279,-453,281,-453,278,-453,277,-453,276,-453,275,-453,274,-453,273,-453,272,-453,280,-453,282,-453,303,-453,302,-453,59,-453,284,-453,285,-453,263,-453,265,-453,264,-453,124,-453,38,-453,94,-453,46,-453,43,-453,45,-453,42,-453,305,-453,47,-453,37,-453,293,-453,294,-453,287,-453,286,-453,289,-453,288,-453,60,-453,291,-453,62,-453,292,-453,290,-453,295,-453,63,-453,283,-453,91,-453,369,-453,123,-453,390,-453,41,-453,125,-453,58,-453,93,-453,44,-453,268,-453,338,-453,40,-463}),
      new State(125, new int[] {91,-428,59,-428,284,-428,285,-428,263,-428,265,-428,264,-428,124,-428,38,-428,94,-428,46,-428,43,-428,45,-428,42,-428,305,-428,47,-428,37,-428,293,-428,294,-428,287,-428,286,-428,289,-428,288,-428,60,-428,291,-428,62,-428,292,-428,290,-428,295,-428,63,-428,283,-428,41,-428,125,-428,58,-428,93,-428,44,-428,268,-428,338,-428,40,-461}),
      new State(126, new int[] {40,128}, new int[] {-113,127}),
      new State(127, -394),
      new State(128, new int[] {41,129,320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478,394,835}, new int[] {-114,130,-111,837,-40,135,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(129, -232),
      new State(130, new int[] {44,133,41,-110}, new int[] {-3,131}),
      new State(131, new int[] {41,132}),
      new State(132, -233),
      new State(133, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478,394,835,41,-111}, new int[] {-111,134,-40,135,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(134, -235),
      new State(135, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,44,-236,41,-236}),
      new State(136, new int[] {346,478,390,-397}, new int[] {-5,137}),
      new State(137, new int[] {38,724,40,-385}, new int[] {-4,138}),
      new State(138, -381, new int[] {-16,139}),
      new State(139, new int[] {40,140}),
      new State(140, new int[] {368,603,372,604,319,186,391,187,393,190,63,606,38,-223,394,-223,320,-223,41,-218}, new int[] {-117,141,-118,712,-115,723,-23,715,-22,601,-20,602,-19,605,-103,183}),
      new State(141, new int[] {41,142}),
      new State(142, new int[] {350,771,58,-387,123,-387}, new int[] {-119,143}),
      new State(143, new int[] {58,710,123,-230}, new int[] {-21,144}),
      new State(144, -384, new int[] {-137,145}),
      new State(145, -382, new int[] {-17,146}),
      new State(146, new int[] {123,147}),
      new State(147, -127, new int[] {-85,148}),
      new State(148, new int[] {125,149,123,7,330,23,329,31,328,152,335,164,339,178,340,475,348,479,355,482,353,489,324,498,321,505,320,97,36,98,319,508,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478,360,525,334,535,332,545,59,551,349,552,352,568,345,571,315,646,314,647,362,649,366,694,363,706,322,-382,361,-174}, new int[] {-80,10,-32,11,-17,12,-40,506,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,510,-33,574,-34,575,-14,576,-13,644,-35,648,-37,693}),
      new State(149, -383, new int[] {-18,150}),
      new State(150, -384, new int[] {-137,151}),
      new State(151, -378),
      new State(152, new int[] {40,153}),
      new State(153, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478,59,-293}, new int[] {-87,154,-98,831,-40,834,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(154, new int[] {59,155}),
      new State(155, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478,59,-293}, new int[] {-87,156,-98,831,-40,834,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(156, new int[] {59,157}),
      new State(157, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478,41,-293}, new int[] {-87,158,-98,831,-40,834,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(158, new int[] {41,159}),
      new State(159, -382, new int[] {-17,160}),
      new State(160, new int[] {123,7,330,23,329,31,328,152,335,164,339,178,340,475,348,479,355,482,353,489,324,498,321,505,320,97,36,98,319,508,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478,360,525,334,535,332,545,59,551,349,552,352,568,345,571,58,827,322,-382}, new int[] {-69,161,-32,163,-17,12,-40,506,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(161, -383, new int[] {-18,162}),
      new State(162, -139),
      new State(163, -192),
      new State(164, new int[] {40,165}),
      new State(165, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,166,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(166, new int[] {41,167,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(167, -382, new int[] {-17,168}),
      new State(168, new int[] {123,171,58,819}, new int[] {-97,169}),
      new State(169, -383, new int[] {-18,170}),
      new State(170, -140),
      new State(171, new int[] {59,816,125,-202,341,-202,342,-202}, new int[] {-96,172}),
      new State(172, new int[] {125,173,341,174,342,813}),
      new State(173, -198),
      new State(174, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,175,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(175, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,58,811,59,812}, new int[] {-141,176}),
      new State(176, -127, new int[] {-85,177}),
      new State(177, new int[] {123,7,330,23,329,31,328,152,335,164,339,178,340,475,348,479,355,482,353,489,324,498,321,505,320,97,36,98,319,508,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478,360,525,334,535,332,545,59,551,349,552,352,568,345,571,315,646,314,647,362,649,366,694,363,706,125,-203,341,-203,342,-203,336,-203,322,-382,361,-174}, new int[] {-80,10,-32,11,-17,12,-40,506,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,510,-33,574,-34,575,-14,576,-13,644,-35,648,-37,693}),
      new State(178, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478,59,-432}, new int[] {-59,179,-40,120,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(179, new int[] {59,180}),
      new State(180, -141),
      new State(181, new int[] {40,128,390,-398,91,-427,59,-427,284,-427,285,-427,263,-427,265,-427,264,-427,124,-427,38,-427,94,-427,46,-427,43,-427,45,-427,42,-427,305,-427,47,-427,37,-427,293,-427,294,-427,287,-427,286,-427,289,-427,288,-427,60,-427,291,-427,62,-427,292,-427,290,-427,295,-427,63,-427,283,-427,41,-427,125,-427,58,-427,93,-427,44,-427,268,-427,338,-427}, new int[] {-113,182}),
      new State(182, -393),
      new State(183, new int[] {393,184,40,-85,390,-85,91,-85,59,-85,284,-85,285,-85,263,-85,265,-85,264,-85,124,-85,38,-85,94,-85,46,-85,43,-85,45,-85,42,-85,305,-85,47,-85,37,-85,293,-85,294,-85,287,-85,286,-85,289,-85,288,-85,60,-85,291,-85,62,-85,292,-85,290,-85,295,-85,63,-85,283,-85,41,-85,125,-85,58,-85,93,-85,44,-85,268,-85,338,-85,394,-85,320,-85,123,-85,365,-85}),
      new State(184, new int[] {319,185}),
      new State(185, -84),
      new State(186, -83),
      new State(187, new int[] {393,188}),
      new State(188, new int[] {319,186}, new int[] {-103,189}),
      new State(189, new int[] {393,184,40,-86,390,-86,91,-86,59,-86,284,-86,285,-86,263,-86,265,-86,264,-86,124,-86,38,-86,94,-86,46,-86,43,-86,45,-86,42,-86,305,-86,47,-86,37,-86,293,-86,294,-86,287,-86,286,-86,289,-86,288,-86,60,-86,291,-86,62,-86,292,-86,290,-86,295,-86,63,-86,283,-86,41,-86,125,-86,58,-86,93,-86,44,-86,268,-86,338,-86,394,-86,320,-86,123,-86,365,-86}),
      new State(190, new int[] {319,186}, new int[] {-103,191}),
      new State(191, new int[] {393,184,40,-87,390,-87,91,-87,59,-87,284,-87,285,-87,263,-87,265,-87,264,-87,124,-87,38,-87,94,-87,46,-87,43,-87,45,-87,42,-87,305,-87,47,-87,37,-87,293,-87,294,-87,287,-87,286,-87,289,-87,288,-87,60,-87,291,-87,62,-87,292,-87,290,-87,295,-87,63,-87,283,-87,41,-87,125,-87,58,-87,93,-87,44,-87,268,-87,338,-87,394,-87,320,-87,123,-87,365,-87}),
      new State(192, new int[] {390,193}),
      new State(193, new int[] {320,97,36,98,319,198,262,201,261,202,260,203,259,204,258,205,263,206,264,207,265,208,295,209,306,210,307,211,326,212,322,213,308,214,309,215,310,216,324,217,329,218,330,219,327,220,328,221,333,222,334,223,331,224,332,225,337,226,338,227,349,228,347,229,351,230,352,231,350,232,354,233,355,234,356,235,360,236,358,237,359,238,340,239,345,240,346,241,344,242,348,243,266,244,267,245,367,246,335,247,336,248,341,249,342,250,339,251,368,252,372,253,364,254,365,255,391,256,362,257,366,258,361,259,373,260,374,261,376,262,378,263,370,264,371,265,375,266,392,267,343,268,353,269,315,270,314,271,313,272,357,273,311,274,123,275}, new int[] {-46,194,-100,195,-2,196,-101,199,-102,200}),
      new State(194, new int[] {61,-454,270,-454,271,-454,279,-454,281,-454,278,-454,277,-454,276,-454,275,-454,274,-454,273,-454,272,-454,280,-454,282,-454,303,-454,302,-454,59,-454,284,-454,285,-454,263,-454,265,-454,264,-454,124,-454,38,-454,94,-454,46,-454,43,-454,45,-454,42,-454,305,-454,47,-454,37,-454,293,-454,294,-454,287,-454,286,-454,289,-454,288,-454,60,-454,291,-454,62,-454,292,-454,290,-454,295,-454,63,-454,283,-454,91,-454,369,-454,123,-454,390,-454,41,-454,125,-454,58,-454,93,-454,44,-454,268,-454,338,-454,40,-463}),
      new State(195, new int[] {91,-429,59,-429,284,-429,285,-429,263,-429,265,-429,264,-429,124,-429,38,-429,94,-429,46,-429,43,-429,45,-429,42,-429,305,-429,47,-429,37,-429,293,-429,294,-429,287,-429,286,-429,289,-429,288,-429,60,-429,291,-429,62,-429,292,-429,290,-429,295,-429,63,-429,283,-429,41,-429,125,-429,58,-429,93,-429,44,-429,268,-429,338,-429,40,-461}),
      new State(196, new int[] {40,128}, new int[] {-113,197}),
      new State(197, -395),
      new State(198, -79),
      new State(199, -80),
      new State(200, -72),
      new State(201, -4),
      new State(202, -5),
      new State(203, -6),
      new State(204, -7),
      new State(205, -8),
      new State(206, -9),
      new State(207, -10),
      new State(208, -11),
      new State(209, -12),
      new State(210, -13),
      new State(211, -14),
      new State(212, -15),
      new State(213, -16),
      new State(214, -17),
      new State(215, -18),
      new State(216, -19),
      new State(217, -20),
      new State(218, -21),
      new State(219, -22),
      new State(220, -23),
      new State(221, -24),
      new State(222, -25),
      new State(223, -26),
      new State(224, -27),
      new State(225, -28),
      new State(226, -29),
      new State(227, -30),
      new State(228, -31),
      new State(229, -32),
      new State(230, -33),
      new State(231, -34),
      new State(232, -35),
      new State(233, -36),
      new State(234, -37),
      new State(235, -38),
      new State(236, -39),
      new State(237, -40),
      new State(238, -41),
      new State(239, -42),
      new State(240, -43),
      new State(241, -44),
      new State(242, -45),
      new State(243, -46),
      new State(244, -47),
      new State(245, -48),
      new State(246, -49),
      new State(247, -50),
      new State(248, -51),
      new State(249, -52),
      new State(250, -53),
      new State(251, -54),
      new State(252, -55),
      new State(253, -56),
      new State(254, -57),
      new State(255, -58),
      new State(256, -59),
      new State(257, -60),
      new State(258, -61),
      new State(259, -62),
      new State(260, -63),
      new State(261, -64),
      new State(262, -65),
      new State(263, -66),
      new State(264, -67),
      new State(265, -68),
      new State(266, -69),
      new State(267, -70),
      new State(268, -71),
      new State(269, -73),
      new State(270, -74),
      new State(271, -75),
      new State(272, -76),
      new State(273, -77),
      new State(274, -78),
      new State(275, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,276,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(276, new int[] {125,277,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(277, -462),
      new State(278, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,279,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(279, new int[] {41,280,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(280, new int[] {91,-436,369,-436,123,-436,390,-436,40,-439,59,-355,284,-355,285,-355,263,-355,265,-355,264,-355,124,-355,38,-355,94,-355,46,-355,43,-355,45,-355,42,-355,305,-355,47,-355,37,-355,293,-355,294,-355,287,-355,286,-355,289,-355,288,-355,60,-355,291,-355,62,-355,292,-355,290,-355,295,-355,63,-355,283,-355,41,-355,125,-355,58,-355,93,-355,44,-355,268,-355,338,-355}),
      new State(281, new int[] {91,-437,369,-437,123,-437,390,-437,40,-440,59,-425,284,-425,285,-425,263,-425,265,-425,264,-425,124,-425,38,-425,94,-425,46,-425,43,-425,45,-425,42,-425,305,-425,47,-425,37,-425,293,-425,294,-425,287,-425,286,-425,289,-425,288,-425,60,-425,291,-425,62,-425,292,-425,290,-425,295,-425,63,-425,283,-425,41,-425,125,-425,58,-425,93,-425,44,-425,268,-425,338,-425}),
      new State(282, new int[] {40,283}),
      new State(283, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,328,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478,38,761,394,763,44,-468,41,-468}, new int[] {-124,284,-123,286,-121,327,-122,289,-40,290,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(284, new int[] {41,285}),
      new State(285, -408),
      new State(286, new int[] {44,287,41,-467,93,-467}),
      new State(287, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,328,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478,38,761,394,763,44,-468,41,-468,93,-468}, new int[] {-121,288,-122,289,-40,290,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(288, -470),
      new State(289, -469),
      new State(290, new int[] {268,291,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,44,-473,41,-473,93,-473}),
      new State(291, new int[] {38,293,367,807,320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,292,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(292, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,44,-472,41,-472,93,-472}),
      new State(293, new int[] {320,97,36,98,353,295,319,186,391,187,393,190,40,296,368,282,91,324,323,304}, new int[] {-41,294,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,323,-48,334,-50,309,-77,310}),
      new State(294, new int[] {44,-474,41,-474,93,-474,91,-435,369,-435,123,-435,390,-435}),
      new State(295, -397),
      new State(296, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,297,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(297, new int[] {41,298,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(298, new int[] {91,-436,369,-436,123,-436,390,-436,40,-439}),
      new State(299, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,328,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478,38,761,394,763,44,-468,93,-468}, new int[] {-124,300,-123,286,-121,327,-122,289,-40,290,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(300, new int[] {93,301}),
      new State(301, new int[] {61,302,91,-409,369,-409,123,-409,390,-409,40,-409,59,-409,284,-409,285,-409,263,-409,265,-409,264,-409,124,-409,38,-409,94,-409,46,-409,43,-409,45,-409,42,-409,305,-409,47,-409,37,-409,293,-409,294,-409,287,-409,286,-409,289,-409,288,-409,60,-409,291,-409,62,-409,292,-409,290,-409,295,-409,63,-409,283,-409,41,-409,125,-409,58,-409,93,-409,44,-409,268,-409,338,-409}),
      new State(302, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,303,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(303, new int[] {284,40,285,42,263,-302,265,-302,264,-302,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-302,41,-302,125,-302,58,-302,93,-302,44,-302,268,-302,338,-302}),
      new State(304, -410),
      new State(305, new int[] {91,306,59,-426,284,-426,285,-426,263,-426,265,-426,264,-426,124,-426,38,-426,94,-426,46,-426,43,-426,45,-426,42,-426,305,-426,47,-426,37,-426,293,-426,294,-426,287,-426,286,-426,289,-426,288,-426,60,-426,291,-426,62,-426,292,-426,290,-426,295,-426,63,-426,283,-426,41,-426,125,-426,58,-426,93,-426,44,-426,268,-426,338,-426}),
      new State(306, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478,93,-432}, new int[] {-59,307,-40,120,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(307, new int[] {93,308}),
      new State(308, -443),
      new State(309, -446),
      new State(310, new int[] {40,128}, new int[] {-113,311}),
      new State(311, -396),
      new State(312, -431),
      new State(313, new int[] {40,314}),
      new State(314, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,328,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478,38,761,394,763,44,-468,41,-468}, new int[] {-124,315,-123,286,-121,327,-122,289,-40,290,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(315, new int[] {41,316}),
      new State(316, new int[] {61,317}),
      new State(317, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,318,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(318, new int[] {284,40,285,42,263,-301,265,-301,264,-301,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-301,41,-301,125,-301,58,-301,93,-301,44,-301,268,-301,338,-301}),
      new State(319, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,320,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(320, -306),
      new State(321, new int[] {320,97,36,98,353,295,319,186,391,187,393,190,40,296,368,282,91,324,323,304}, new int[] {-41,322,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,323,-48,334,-50,309,-77,310}),
      new State(322, new int[] {59,-321,284,-321,285,-321,263,-321,265,-321,264,-321,124,-321,38,-321,94,-321,46,-321,43,-321,45,-321,42,-321,305,-321,47,-321,37,-321,293,-321,294,-321,287,-321,286,-321,289,-321,288,-321,60,-321,291,-321,62,-321,292,-321,290,-321,295,-321,63,-321,283,-321,41,-321,125,-321,58,-321,93,-321,44,-321,268,-321,338,-321,91,-435,369,-435,123,-435,390,-435}),
      new State(323, new int[] {91,-437,369,-437,123,-437,390,-437,40,-440}),
      new State(324, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,328,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478,38,761,394,763,44,-468,93,-468}, new int[] {-124,325,-123,286,-121,327,-122,289,-40,290,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(325, new int[] {93,326}),
      new State(326, -409),
      new State(327, -471),
      new State(328, new int[] {40,329}),
      new State(329, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,328,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478,38,761,394,763,44,-468,41,-468}, new int[] {-124,330,-123,286,-121,327,-122,289,-40,290,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(330, new int[] {41,331}),
      new State(331, new int[] {61,317,44,-478,41,-478,93,-478}),
      new State(332, new int[] {320,97,36,98,353,295,319,186,391,187,393,190,40,296,368,282,91,324,323,304}, new int[] {-41,333,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,323,-48,334,-50,309,-77,310}),
      new State(333, new int[] {59,-323,284,-323,285,-323,263,-323,265,-323,264,-323,124,-323,38,-323,94,-323,46,-323,43,-323,45,-323,42,-323,305,-323,47,-323,37,-323,293,-323,294,-323,287,-323,286,-323,289,-323,288,-323,60,-323,291,-323,62,-323,292,-323,290,-323,295,-323,63,-323,283,-323,41,-323,125,-323,58,-323,93,-323,44,-323,268,-323,338,-323,91,-435,369,-435,123,-435,390,-435}),
      new State(334, new int[] {91,306}),
      new State(335, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,336,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(336, new int[] {284,-341,285,-341,263,-341,265,-341,264,-341,124,-341,38,-341,94,-341,46,-341,43,-341,45,-341,42,-341,305,64,47,-341,37,-341,293,-341,294,-341,287,-341,286,-341,289,-341,288,-341,60,-341,291,-341,62,-341,292,-341,290,-341,295,-341,63,-341,283,-341,59,-341,41,-341,125,-341,58,-341,93,-341,44,-341,268,-341,338,-341}),
      new State(337, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,338,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(338, new int[] {284,-342,285,-342,263,-342,265,-342,264,-342,124,-342,38,-342,94,-342,46,-342,43,-342,45,-342,42,-342,305,64,47,-342,37,-342,293,-342,294,-342,287,-342,286,-342,289,-342,288,-342,60,-342,291,-342,62,-342,292,-342,290,-342,295,-342,63,-342,283,-342,59,-342,41,-342,125,-342,58,-342,93,-342,44,-342,268,-342,338,-342}),
      new State(339, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,340,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(340, new int[] {284,-343,285,-343,263,-343,265,-343,264,-343,124,-343,38,-343,94,-343,46,-343,43,-343,45,-343,42,-343,305,64,47,-343,37,-343,293,-343,294,-343,287,-343,286,-343,289,-343,288,-343,60,-343,291,-343,62,-343,292,-343,290,-343,295,92,63,-343,283,-343,59,-343,41,-343,125,-343,58,-343,93,-343,44,-343,268,-343,338,-343}),
      new State(341, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,342,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(342, new int[] {284,-344,285,-344,263,-344,265,-344,264,-344,124,-344,38,-344,94,-344,46,-344,43,-344,45,-344,42,-344,305,64,47,-344,37,-344,293,-344,294,-344,287,-344,286,-344,289,-344,288,-344,60,-344,291,-344,62,-344,292,-344,290,-344,295,-344,63,-344,283,-344,59,-344,41,-344,125,-344,58,-344,93,-344,44,-344,268,-344,338,-344}),
      new State(343, -356),
      new State(344, new int[] {353,295,319,186,391,187,393,190,320,97,36,98,361,796}, new int[] {-25,345,-128,348,-26,94,-19,349,-103,183,-76,350,-46,795}),
      new State(345, new int[] {40,128,59,-406,284,-406,285,-406,263,-406,265,-406,264,-406,124,-406,38,-406,94,-406,46,-406,43,-406,45,-406,42,-406,305,-406,47,-406,37,-406,293,-406,294,-406,287,-406,286,-406,289,-406,288,-406,60,-406,291,-406,62,-406,292,-406,290,-406,295,-406,63,-406,283,-406,41,-406,125,-406,58,-406,93,-406,44,-406,268,-406,338,-406}, new int[] {-112,346,-113,347}),
      new State(346, -299),
      new State(347, -407),
      new State(348, -300),
      new State(349, -398),
      new State(350, new int[] {91,351,123,783,369,786,390,793,59,-400,284,-400,285,-400,263,-400,265,-400,264,-400,124,-400,38,-400,94,-400,46,-400,43,-400,45,-400,42,-400,305,-400,47,-400,37,-400,293,-400,294,-400,287,-400,286,-400,289,-400,288,-400,60,-400,291,-400,62,-400,292,-400,290,-400,295,-400,63,-400,283,-400,41,-400,125,-400,58,-400,93,-400,44,-400,268,-400,338,-400,40,-400}),
      new State(351, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478,93,-432}, new int[] {-59,352,-40,120,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(352, new int[] {93,353}),
      new State(353, -456),
      new State(354, -360),
      new State(355, new int[] {40,356}),
      new State(356, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-94,357,-39,782,-40,362,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(357, new int[] {44,360,41,-110}, new int[] {-3,358}),
      new State(358, new int[] {41,359}),
      new State(359, -493),
      new State(360, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478,41,-111}, new int[] {-39,361,-40,362,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(361, -501),
      new State(362, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,44,-502,41,-502}),
      new State(363, new int[] {40,364}),
      new State(364, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,365,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(365, new int[] {41,366,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(366, -494),
      new State(367, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,368,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(368, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-495,41,-495,125,-495,58,-495,93,-495,44,-495,268,-495,338,-495}),
      new State(369, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,370,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(370, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-496,41,-496,125,-496,58,-496,93,-496,44,-496,268,-496,338,-496}),
      new State(371, new int[] {40,372}),
      new State(372, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,373,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(373, new int[] {41,374,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(374, -497),
      new State(375, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,376,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(376, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-498,41,-498,125,-498,58,-498,93,-498,44,-498,268,-498,338,-498}),
      new State(377, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,378,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(378, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-499,41,-499,125,-499,58,-499,93,-499,44,-499,268,-499,338,-499}),
      new State(379, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,380,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(380, new int[] {284,-361,285,-361,263,-361,265,-361,264,-361,124,-361,38,-361,94,-361,46,-361,43,-361,45,-361,42,-361,305,64,47,-361,37,-361,293,-361,294,-361,287,-361,286,-361,289,-361,288,-361,60,-361,291,-361,62,-361,292,-361,290,-361,295,-361,63,-361,283,-361,59,-361,41,-361,125,-361,58,-361,93,-361,44,-361,268,-361,338,-361}),
      new State(381, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,382,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(382, new int[] {284,-362,285,-362,263,-362,265,-362,264,-362,124,-362,38,-362,94,-362,46,-362,43,-362,45,-362,42,-362,305,64,47,-362,37,-362,293,-362,294,-362,287,-362,286,-362,289,-362,288,-362,60,-362,291,-362,62,-362,292,-362,290,-362,295,-362,63,-362,283,-362,59,-362,41,-362,125,-362,58,-362,93,-362,44,-362,268,-362,338,-362}),
      new State(383, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,384,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(384, new int[] {284,-363,285,-363,263,-363,265,-363,264,-363,124,-363,38,-363,94,-363,46,-363,43,-363,45,-363,42,-363,305,64,47,-363,37,-363,293,-363,294,-363,287,-363,286,-363,289,-363,288,-363,60,-363,291,-363,62,-363,292,-363,290,-363,295,-363,63,-363,283,-363,59,-363,41,-363,125,-363,58,-363,93,-363,44,-363,268,-363,338,-363}),
      new State(385, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,386,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(386, new int[] {284,-364,285,-364,263,-364,265,-364,264,-364,124,-364,38,-364,94,-364,46,-364,43,-364,45,-364,42,-364,305,64,47,-364,37,-364,293,-364,294,-364,287,-364,286,-364,289,-364,288,-364,60,-364,291,-364,62,-364,292,-364,290,-364,295,-364,63,-364,283,-364,59,-364,41,-364,125,-364,58,-364,93,-364,44,-364,268,-364,338,-364}),
      new State(387, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,388,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(388, new int[] {284,-365,285,-365,263,-365,265,-365,264,-365,124,-365,38,-365,94,-365,46,-365,43,-365,45,-365,42,-365,305,64,47,-365,37,-365,293,-365,294,-365,287,-365,286,-365,289,-365,288,-365,60,-365,291,-365,62,-365,292,-365,290,-365,295,-365,63,-365,283,-365,59,-365,41,-365,125,-365,58,-365,93,-365,44,-365,268,-365,338,-365}),
      new State(389, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,390,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(390, new int[] {284,-366,285,-366,263,-366,265,-366,264,-366,124,-366,38,-366,94,-366,46,-366,43,-366,45,-366,42,-366,305,64,47,-366,37,-366,293,-366,294,-366,287,-366,286,-366,289,-366,288,-366,60,-366,291,-366,62,-366,292,-366,290,-366,295,-366,63,-366,283,-366,59,-366,41,-366,125,-366,58,-366,93,-366,44,-366,268,-366,338,-366}),
      new State(391, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,392,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(392, new int[] {284,-367,285,-367,263,-367,265,-367,264,-367,124,-367,38,-367,94,-367,46,-367,43,-367,45,-367,42,-367,305,64,47,-367,37,-367,293,-367,294,-367,287,-367,286,-367,289,-367,288,-367,60,-367,291,-367,62,-367,292,-367,290,-367,295,-367,63,-367,283,-367,59,-367,41,-367,125,-367,58,-367,93,-367,44,-367,268,-367,338,-367}),
      new State(393, new int[] {40,395,59,-401,284,-401,285,-401,263,-401,265,-401,264,-401,124,-401,38,-401,94,-401,46,-401,43,-401,45,-401,42,-401,305,-401,47,-401,37,-401,293,-401,294,-401,287,-401,286,-401,289,-401,288,-401,60,-401,291,-401,62,-401,292,-401,290,-401,295,-401,63,-401,283,-401,41,-401,125,-401,58,-401,93,-401,44,-401,268,-401,338,-401}, new int[] {-74,394}),
      new State(394, -368),
      new State(395, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478,41,-432}, new int[] {-59,396,-40,120,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(396, new int[] {41,397}),
      new State(397, -402),
      new State(398, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,399,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(399, new int[] {284,-369,285,-369,263,-369,265,-369,264,-369,124,-369,38,-369,94,-369,46,-369,43,-369,45,-369,42,-369,305,64,47,-369,37,-369,293,-369,294,-369,287,-369,286,-369,289,-369,288,-369,60,-369,291,-369,62,-369,292,-369,290,-369,295,-369,63,-369,283,-369,59,-369,41,-369,125,-369,58,-369,93,-369,44,-369,268,-369,338,-369}),
      new State(400, -370),
      new State(401, -411),
      new State(402, -412),
      new State(403, -413),
      new State(404, -414),
      new State(405, -415),
      new State(406, -416),
      new State(407, -417),
      new State(408, -418),
      new State(409, -419),
      new State(410, -420),
      new State(411, new int[] {320,416,385,425,386,439,316,781}, new int[] {-93,412,-61,444}),
      new State(412, new int[] {34,413,316,415,320,416,385,425,386,439}, new int[] {-61,414}),
      new State(413, -421),
      new State(414, -479),
      new State(415, -480),
      new State(416, new int[] {91,417,369,423,34,-483,316,-483,320,-483,385,-483,386,-483,387,-483,96,-483}),
      new State(417, new int[] {319,420,325,421,320,422}, new int[] {-62,418}),
      new State(418, new int[] {93,419}),
      new State(419, -484),
      new State(420, -490),
      new State(421, -491),
      new State(422, -492),
      new State(423, new int[] {319,424}),
      new State(424, -485),
      new State(425, new int[] {318,428,320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,426,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(426, new int[] {125,427,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(427, -486),
      new State(428, new int[] {125,429,91,430}),
      new State(429, -487),
      new State(430, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,431,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(431, new int[] {93,432,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(432, new int[] {125,433}),
      new State(433, -488),
      new State(434, new int[] {387,435,316,436,320,416,385,425,386,439}, new int[] {-93,442,-61,444}),
      new State(435, -422),
      new State(436, new int[] {387,437,320,416,385,425,386,439}, new int[] {-61,438}),
      new State(437, -423),
      new State(438, -482),
      new State(439, new int[] {320,97,36,98,353,295,319,186,391,187,393,190,40,296,368,282,91,324,323,304}, new int[] {-41,440,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,323,-48,334,-50,309,-77,310}),
      new State(440, new int[] {125,441,91,-435,369,-435,123,-435,390,-435}),
      new State(441, -489),
      new State(442, new int[] {387,443,316,415,320,416,385,425,386,439}, new int[] {-61,414}),
      new State(443, -424),
      new State(444, -481),
      new State(445, -371),
      new State(446, new int[] {96,447,316,448,320,416,385,425,386,439}, new int[] {-93,450,-61,444}),
      new State(447, -403),
      new State(448, new int[] {96,449,320,416,385,425,386,439}, new int[] {-61,438}),
      new State(449, -404),
      new State(450, new int[] {96,451,316,415,320,416,385,425,386,439}, new int[] {-61,414}),
      new State(451, -405),
      new State(452, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,453,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(453, new int[] {284,40,285,42,263,-372,265,-372,264,-372,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-372,41,-372,125,-372,58,-372,93,-372,44,-372,268,-372,338,-372}),
      new State(454, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478,59,-373,284,-373,285,-373,263,-373,265,-373,264,-373,124,-373,38,-373,94,-373,46,-373,42,-373,305,-373,47,-373,37,-373,293,-373,294,-373,287,-373,286,-373,289,-373,288,-373,60,-373,291,-373,62,-373,292,-373,290,-373,295,-373,63,-373,283,-373,41,-373,125,-373,58,-373,93,-373,44,-373,268,-373,338,-373}, new int[] {-40,455,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(455, new int[] {268,456,284,40,285,42,263,-374,265,-374,264,-374,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-374,41,-374,125,-374,58,-374,93,-374,44,-374,338,-374}),
      new State(456, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,457,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(457, new int[] {284,40,285,42,263,-375,265,-375,264,-375,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-375,41,-375,125,-375,58,-375,93,-375,44,-375,268,-375,338,-375}),
      new State(458, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,459,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(459, new int[] {284,40,285,42,263,-376,265,-376,264,-376,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-376,41,-376,125,-376,58,-376,93,-376,44,-376,268,-376,338,-376}),
      new State(460, new int[] {38,724,40,-385}, new int[] {-4,461}),
      new State(461, -381, new int[] {-16,462}),
      new State(462, new int[] {40,463}),
      new State(463, new int[] {368,603,372,604,319,186,391,187,393,190,63,606,38,-223,394,-223,320,-223,41,-218}, new int[] {-117,464,-118,712,-115,723,-23,715,-22,601,-20,602,-19,605,-103,183}),
      new State(464, new int[] {41,465}),
      new State(465, new int[] {350,771,58,-387,123,-387}, new int[] {-119,466}),
      new State(466, new int[] {58,710,123,-230}, new int[] {-21,467}),
      new State(467, -384, new int[] {-137,468}),
      new State(468, -382, new int[] {-17,469}),
      new State(469, new int[] {123,470}),
      new State(470, -127, new int[] {-85,471}),
      new State(471, new int[] {125,472,123,7,330,23,329,31,328,152,335,164,339,178,340,475,348,479,355,482,353,489,324,498,321,505,320,97,36,98,319,508,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478,360,525,334,535,332,545,59,551,349,552,352,568,345,571,315,646,314,647,362,649,366,694,363,706,322,-382,361,-174}, new int[] {-80,10,-32,11,-17,12,-40,506,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,510,-33,574,-34,575,-14,576,-13,644,-35,648,-37,693}),
      new State(472, -383, new int[] {-18,473}),
      new State(473, -384, new int[] {-137,474}),
      new State(474, -377),
      new State(475, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478,59,-432}, new int[] {-59,476,-40,120,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(476, new int[] {59,477}),
      new State(477, -142),
      new State(478, -380),
      new State(479, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478,59,-432}, new int[] {-59,480,-40,120,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(480, new int[] {59,481}),
      new State(481, -143),
      new State(482, new int[] {320,97,36,98}, new int[] {-88,483,-56,488,-46,487}),
      new State(483, new int[] {59,484,44,485}),
      new State(484, -144),
      new State(485, new int[] {320,97,36,98}, new int[] {-56,486,-46,487}),
      new State(486, -238),
      new State(487, -240),
      new State(488, -239),
      new State(489, new int[] {320,494,346,478,390,-397}, new int[] {-89,490,-5,137,-57,497}),
      new State(490, new int[] {59,491,44,492}),
      new State(491, -145),
      new State(492, new int[] {320,494}, new int[] {-57,493}),
      new State(493, -241),
      new State(494, new int[] {61,495,59,-243,44,-243}),
      new State(495, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,496,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(496, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-244,44,-244}),
      new State(497, -242),
      new State(498, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-90,499,-58,504,-40,503,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(499, new int[] {59,500,44,501}),
      new State(500, -146),
      new State(501, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-58,502,-40,503,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(502, -290),
      new State(503, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-292,44,-292}),
      new State(504, -291),
      new State(505, -147),
      new State(506, new int[] {59,507,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(507, -148),
      new State(508, new int[] {58,509,393,-83,40,-83,390,-83,91,-83,59,-83,284,-83,285,-83,263,-83,265,-83,264,-83,124,-83,38,-83,94,-83,46,-83,43,-83,45,-83,42,-83,305,-83,47,-83,37,-83,293,-83,294,-83,287,-83,286,-83,289,-83,288,-83,60,-83,291,-83,62,-83,292,-83,290,-83,295,-83,63,-83,283,-83}),
      new State(509, -157),
      new State(510, new int[] {38,724,319,-385,40,-385}, new int[] {-4,511}),
      new State(511, new int[] {319,512,40,-381}, new int[] {-16,462}),
      new State(512, -381, new int[] {-16,513}),
      new State(513, new int[] {40,514}),
      new State(514, new int[] {368,603,372,604,319,186,391,187,393,190,63,606,38,-223,394,-223,320,-223,41,-218}, new int[] {-117,515,-118,712,-115,723,-23,715,-22,601,-20,602,-19,605,-103,183}),
      new State(515, new int[] {41,516}),
      new State(516, new int[] {58,710,123,-230}, new int[] {-21,517}),
      new State(517, -384, new int[] {-137,518}),
      new State(518, -382, new int[] {-17,519}),
      new State(519, new int[] {123,520}),
      new State(520, -127, new int[] {-85,521}),
      new State(521, new int[] {125,522,123,7,330,23,329,31,328,152,335,164,339,178,340,475,348,479,355,482,353,489,324,498,321,505,320,97,36,98,319,508,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478,360,525,334,535,332,545,59,551,349,552,352,568,345,571,315,646,314,647,362,649,366,694,363,706,322,-382,361,-174}, new int[] {-80,10,-32,11,-17,12,-40,506,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,510,-33,574,-34,575,-14,576,-13,644,-35,648,-37,693}),
      new State(522, -383, new int[] {-18,523}),
      new State(523, -384, new int[] {-137,524}),
      new State(524, -167),
      new State(525, new int[] {40,526}),
      new State(526, new int[] {320,97,36,98,353,295,319,186,391,187,393,190,40,296,368,282,91,324,323,304}, new int[] {-91,527,-55,534,-41,533,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,323,-48,334,-50,309,-77,310}),
      new State(527, new int[] {44,531,41,-110}, new int[] {-3,528}),
      new State(528, new int[] {41,529}),
      new State(529, new int[] {59,530}),
      new State(530, -149),
      new State(531, new int[] {320,97,36,98,353,295,319,186,391,187,393,190,40,296,368,282,91,324,323,304,41,-111}, new int[] {-55,532,-41,533,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,323,-48,334,-50,309,-77,310}),
      new State(532, -165),
      new State(533, new int[] {44,-166,41,-166,91,-435,369,-435,123,-435,390,-435}),
      new State(534, -164),
      new State(535, new int[] {40,536}),
      new State(536, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,537,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(537, new int[] {338,538,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(538, new int[] {320,97,36,98,353,295,319,186,391,187,393,190,40,296,368,282,91,758,323,304,38,765,367,767}, new int[] {-127,539,-41,757,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,323,-48,334,-50,309,-77,310}),
      new State(539, new int[] {41,540,268,751}),
      new State(540, -382, new int[] {-17,541}),
      new State(541, new int[] {123,7,330,23,329,31,328,152,335,164,339,178,340,475,348,479,355,482,353,489,324,498,321,505,320,97,36,98,319,508,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478,360,525,334,535,332,545,59,551,349,552,352,568,345,571,58,747,322,-382}, new int[] {-70,542,-32,544,-17,12,-40,506,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(542, -383, new int[] {-18,543}),
      new State(543, -150),
      new State(544, -194),
      new State(545, new int[] {40,546}),
      new State(546, new int[] {319,742}, new int[] {-83,547,-54,746}),
      new State(547, new int[] {41,548,44,740}),
      new State(548, new int[] {123,7,330,23,329,31,328,152,335,164,339,178,340,475,348,479,355,482,353,489,324,498,321,505,320,97,36,98,319,508,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478,360,525,334,535,332,545,59,551,349,552,352,568,345,571,58,736,322,-382}, new int[] {-63,549,-32,550,-17,12,-40,506,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(549, -152),
      new State(550, -196),
      new State(551, -153),
      new State(552, new int[] {123,553}),
      new State(553, -127, new int[] {-85,554}),
      new State(554, new int[] {125,555,123,7,330,23,329,31,328,152,335,164,339,178,340,475,348,479,355,482,353,489,324,498,321,505,320,97,36,98,319,508,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478,360,525,334,535,332,545,59,551,349,552,352,568,345,571,315,646,314,647,362,649,366,694,363,706,322,-382,361,-174}, new int[] {-80,10,-32,11,-17,12,-40,506,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,510,-33,574,-34,575,-14,576,-13,644,-35,648,-37,693}),
      new State(555, -382, new int[] {-17,556}),
      new State(556, -158, new int[] {-99,557}),
      new State(557, new int[] {347,560,351,732,123,-162,330,-162,329,-162,328,-162,335,-162,339,-162,340,-162,348,-162,355,-162,353,-162,324,-162,321,-162,320,-162,36,-162,319,-162,391,-162,393,-162,40,-162,368,-162,91,-162,323,-162,367,-162,307,-162,303,-162,302,-162,43,-162,45,-162,33,-162,126,-162,306,-162,358,-162,359,-162,262,-162,261,-162,260,-162,259,-162,258,-162,301,-162,300,-162,299,-162,298,-162,297,-162,296,-162,304,-162,326,-162,64,-162,317,-162,312,-162,370,-162,371,-162,375,-162,374,-162,378,-162,376,-162,392,-162,373,-162,34,-162,383,-162,96,-162,266,-162,267,-162,269,-162,346,-162,360,-162,334,-162,332,-162,59,-162,349,-162,352,-162,345,-162,315,-162,314,-162,362,-162,366,-162,363,-162,350,-162,344,-162,322,-162,361,-162,0,-162,125,-162,308,-162,309,-162,341,-162,342,-162,336,-162,337,-162,331,-162,333,-162,327,-162,310,-162}, new int[] {-75,558}),
      new State(558, -383, new int[] {-18,559}),
      new State(559, -154),
      new State(560, new int[] {40,561}),
      new State(561, new int[] {319,186,391,187,393,190}, new int[] {-28,562,-19,731,-103,183}),
      new State(562, new int[] {320,563,124,729}),
      new State(563, new int[] {41,564}),
      new State(564, new int[] {123,565}),
      new State(565, -127, new int[] {-85,566}),
      new State(566, new int[] {125,567,123,7,330,23,329,31,328,152,335,164,339,178,340,475,348,479,355,482,353,489,324,498,321,505,320,97,36,98,319,508,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478,360,525,334,535,332,545,59,551,349,552,352,568,345,571,315,646,314,647,362,649,366,694,363,706,322,-382,361,-174}, new int[] {-80,10,-32,11,-17,12,-40,506,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,510,-33,574,-34,575,-14,576,-13,644,-35,648,-37,693}),
      new State(567, -159),
      new State(568, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,569,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(569, new int[] {59,570,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(570, -155),
      new State(571, new int[] {319,572}),
      new State(572, new int[] {59,573}),
      new State(573, -156),
      new State(574, -129),
      new State(575, -130),
      new State(576, new int[] {361,577}),
      new State(577, new int[] {319,578}),
      new State(578, new int[] {364,727,365,-182,123,-182}, new int[] {-24,579}),
      new State(579, -172, new int[] {-138,580}),
      new State(580, new int[] {365,725,123,-186}, new int[] {-29,581}),
      new State(581, -381, new int[] {-16,582}),
      new State(582, -382, new int[] {-17,583}),
      new State(583, new int[] {123,584}),
      new State(584, -246, new int[] {-86,585}),
      new State(585, new int[] {125,586,311,610,357,611,313,612,353,613,315,614,314,615,356,617,350,658,344,-272,346,-272}, new int[] {-81,588,-9,589,-11,608,-12,616,-10,618}),
      new State(586, -383, new int[] {-18,587}),
      new State(587, -173),
      new State(588, -245),
      new State(589, new int[] {368,603,372,604,319,186,391,187,393,190,63,606,320,-223}, new int[] {-23,590,-22,601,-20,602,-19,605,-103,183}),
      new State(590, new int[] {320,595}, new int[] {-95,591,-60,600}),
      new State(591, new int[] {59,592,44,593}),
      new State(592, -247),
      new State(593, new int[] {320,595}, new int[] {-60,594}),
      new State(594, -282),
      new State(595, new int[] {61,597,59,-381,44,-381}, new int[] {-16,596}),
      new State(596, -284),
      new State(597, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,598,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(598, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-381,44,-381}, new int[] {-16,599}),
      new State(599, -285),
      new State(600, -283),
      new State(601, -224),
      new State(602, -225),
      new State(603, -227),
      new State(604, -228),
      new State(605, -229),
      new State(606, new int[] {368,603,372,604,319,186,391,187,393,190}, new int[] {-20,607,-19,605,-103,183}),
      new State(607, -226),
      new State(608, new int[] {311,610,357,611,313,612,353,613,315,614,314,615,368,-270,372,-270,319,-270,391,-270,393,-270,63,-270,320,-270,344,-273,346,-273}, new int[] {-12,609}),
      new State(609, -275),
      new State(610, -276),
      new State(611, -277),
      new State(612, -278),
      new State(613, -279),
      new State(614, -280),
      new State(615, -281),
      new State(616, -274),
      new State(617, -271),
      new State(618, new int[] {344,619,346,478}, new int[] {-5,629}),
      new State(619, new int[] {319,198,262,201,261,202,260,203,259,204,258,205,263,206,264,207,265,208,295,209,306,210,307,211,326,212,322,213,308,214,309,215,310,216,324,217,329,218,330,219,327,220,328,221,333,222,334,223,331,224,332,225,337,226,338,227,349,228,347,229,351,230,352,231,350,232,354,233,355,234,356,235,360,236,358,237,359,238,340,239,345,240,346,241,344,242,348,243,266,244,267,245,367,246,335,247,336,248,341,249,342,250,339,251,368,252,372,253,364,254,365,255,391,256,362,257,366,258,361,259,373,260,374,261,376,262,378,263,370,264,371,265,375,266,392,267,343,268,353,269,315,270,314,271,313,272,357,273,311,274}, new int[] {-84,620,-67,628,-100,624,-101,199,-102,200}),
      new State(620, new int[] {59,621,44,622}),
      new State(621, -248),
      new State(622, new int[] {319,198,262,201,261,202,260,203,259,204,258,205,263,206,264,207,265,208,295,209,306,210,307,211,326,212,322,213,308,214,309,215,310,216,324,217,329,218,330,219,327,220,328,221,333,222,334,223,331,224,332,225,337,226,338,227,349,228,347,229,351,230,352,231,350,232,354,233,355,234,356,235,360,236,358,237,359,238,340,239,345,240,346,241,344,242,348,243,266,244,267,245,367,246,335,247,336,248,341,249,342,250,339,251,368,252,372,253,364,254,365,255,391,256,362,257,366,258,361,259,373,260,374,261,376,262,378,263,370,264,371,265,375,266,392,267,343,268,353,269,315,270,314,271,313,272,357,273,311,274}, new int[] {-67,623,-100,624,-101,199,-102,200}),
      new State(623, -286),
      new State(624, new int[] {61,625}),
      new State(625, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,626,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(626, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-381,44,-381}, new int[] {-16,627}),
      new State(627, -288),
      new State(628, -287),
      new State(629, new int[] {38,724,319,-385,262,-385,261,-385,260,-385,259,-385,258,-385,263,-385,264,-385,265,-385,295,-385,306,-385,307,-385,326,-385,322,-385,308,-385,309,-385,310,-385,324,-385,329,-385,330,-385,327,-385,328,-385,333,-385,334,-385,331,-385,332,-385,337,-385,338,-385,349,-385,347,-385,351,-385,352,-385,350,-385,354,-385,355,-385,356,-385,360,-385,358,-385,359,-385,340,-385,345,-385,346,-385,344,-385,348,-385,266,-385,267,-385,367,-385,335,-385,336,-385,341,-385,342,-385,339,-385,368,-385,372,-385,364,-385,365,-385,391,-385,362,-385,366,-385,361,-385,373,-385,374,-385,376,-385,378,-385,370,-385,371,-385,375,-385,392,-385,343,-385,353,-385,315,-385,314,-385,313,-385,357,-385,311,-385}, new int[] {-4,630}),
      new State(630, new int[] {319,198,262,201,261,202,260,203,259,204,258,205,263,206,264,207,265,208,295,209,306,210,307,211,326,212,322,213,308,214,309,215,310,216,324,217,329,218,330,219,327,220,328,221,333,222,334,223,331,224,332,225,337,226,338,227,349,228,347,229,351,230,352,231,350,232,354,233,355,234,356,235,360,236,358,237,359,238,340,239,345,240,346,241,344,242,348,243,266,244,267,245,367,246,335,247,336,248,341,249,342,250,339,251,368,252,372,253,364,254,365,255,391,256,362,257,366,258,361,259,373,260,374,261,376,262,378,263,370,264,371,265,375,266,392,267,343,268,353,269,315,270,314,271,313,272,357,273,311,274}, new int[] {-100,631,-101,199,-102,200}),
      new State(631, -381, new int[] {-16,632}),
      new State(632, new int[] {40,633}),
      new State(633, new int[] {368,603,372,604,319,186,391,187,393,190,63,606,38,-223,394,-223,320,-223,41,-218}, new int[] {-117,634,-118,712,-115,723,-23,715,-22,601,-20,602,-19,605,-103,183}),
      new State(634, new int[] {41,635}),
      new State(635, new int[] {58,710,59,-230,123,-230}, new int[] {-21,636}),
      new State(636, -384, new int[] {-137,637}),
      new State(637, new int[] {59,640,123,641}, new int[] {-73,638}),
      new State(638, -384, new int[] {-137,639}),
      new State(639, -250),
      new State(640, -268),
      new State(641, -127, new int[] {-85,642}),
      new State(642, new int[] {125,643,123,7,330,23,329,31,328,152,335,164,339,178,340,475,348,479,355,482,353,489,324,498,321,505,320,97,36,98,319,508,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478,360,525,334,535,332,545,59,551,349,552,352,568,345,571,315,646,314,647,362,649,366,694,363,706,322,-382,361,-174}, new int[] {-80,10,-32,11,-17,12,-40,506,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,510,-33,574,-34,575,-14,576,-13,644,-35,648,-37,693}),
      new State(643, -269),
      new State(644, new int[] {315,646,314,647,361,-174}, new int[] {-14,645,-13,644}),
      new State(645, -175),
      new State(646, -176),
      new State(647, -177),
      new State(648, -131),
      new State(649, new int[] {319,650}),
      new State(650, -178, new int[] {-139,651}),
      new State(651, -381, new int[] {-16,652}),
      new State(652, -382, new int[] {-17,653}),
      new State(653, new int[] {123,654}),
      new State(654, -246, new int[] {-86,655}),
      new State(655, new int[] {125,656,311,610,357,611,313,612,353,613,315,614,314,615,356,617,350,658,344,-272,346,-272}, new int[] {-81,588,-9,589,-11,608,-12,616,-10,618}),
      new State(656, -383, new int[] {-18,657}),
      new State(657, -179),
      new State(658, new int[] {319,186,391,187,393,190}, new int[] {-27,659,-19,674,-103,183}),
      new State(659, new int[] {44,661,59,663,123,664}, new int[] {-78,660}),
      new State(660, -249),
      new State(661, new int[] {319,186,391,187,393,190}, new int[] {-19,662,-103,183}),
      new State(662, -252),
      new State(663, -253),
      new State(664, new int[] {125,665,319,678,391,679,393,190,262,201,261,202,260,203,259,204,258,205,263,206,264,207,265,208,295,209,306,210,307,211,326,212,322,213,308,214,309,215,310,216,324,217,329,218,330,219,327,220,328,221,333,222,334,223,331,224,332,225,337,226,338,227,349,228,347,229,351,230,352,231,350,232,354,233,355,234,356,235,360,236,358,237,359,238,340,239,345,240,346,241,344,242,348,243,266,244,267,245,367,246,335,247,336,248,341,249,342,250,339,251,368,252,372,253,364,254,365,255,362,257,366,258,361,259,373,260,374,261,376,262,378,263,370,264,371,265,375,266,392,267,343,268,353,269,315,270,314,271,313,272,357,273,311,274}, new int[] {-92,666,-64,692,-65,669,-106,670,-19,675,-103,183,-66,680,-105,681,-100,691,-101,199,-102,200}),
      new State(665, -254),
      new State(666, new int[] {125,667,319,678,391,679,393,190,262,201,261,202,260,203,259,204,258,205,263,206,264,207,265,208,295,209,306,210,307,211,326,212,322,213,308,214,309,215,310,216,324,217,329,218,330,219,327,220,328,221,333,222,334,223,331,224,332,225,337,226,338,227,349,228,347,229,351,230,352,231,350,232,354,233,355,234,356,235,360,236,358,237,359,238,340,239,345,240,346,241,344,242,348,243,266,244,267,245,367,246,335,247,336,248,341,249,342,250,339,251,368,252,372,253,364,254,365,255,362,257,366,258,361,259,373,260,374,261,376,262,378,263,370,264,371,265,375,266,392,267,343,268,353,269,315,270,314,271,313,272,357,273,311,274}, new int[] {-64,668,-65,669,-106,670,-19,675,-103,183,-66,680,-105,681,-100,691,-101,199,-102,200}),
      new State(667, -255),
      new State(668, -257),
      new State(669, -258),
      new State(670, new int[] {354,671,338,-266}),
      new State(671, new int[] {319,186,391,187,393,190}, new int[] {-27,672,-19,674,-103,183}),
      new State(672, new int[] {59,673,44,661}),
      new State(673, -260),
      new State(674, -251),
      new State(675, new int[] {390,676}),
      new State(676, new int[] {319,198,262,201,261,202,260,203,259,204,258,205,263,206,264,207,265,208,295,209,306,210,307,211,326,212,322,213,308,214,309,215,310,216,324,217,329,218,330,219,327,220,328,221,333,222,334,223,331,224,332,225,337,226,338,227,349,228,347,229,351,230,352,231,350,232,354,233,355,234,356,235,360,236,358,237,359,238,340,239,345,240,346,241,344,242,348,243,266,244,267,245,367,246,335,247,336,248,341,249,342,250,339,251,368,252,372,253,364,254,365,255,391,256,362,257,366,258,361,259,373,260,374,261,376,262,378,263,370,264,371,265,375,266,392,267,343,268,353,269,315,270,314,271,313,272,357,273,311,274}, new int[] {-100,677,-101,199,-102,200}),
      new State(677, -267),
      new State(678, new int[] {393,-83,390,-83,338,-79}),
      new State(679, new int[] {393,188,338,-59}),
      new State(680, -259),
      new State(681, new int[] {338,682}),
      new State(682, new int[] {319,683,262,201,261,202,260,203,259,204,258,205,263,206,264,207,265,208,295,209,306,210,307,211,326,212,322,213,308,214,309,215,310,216,324,217,329,218,330,219,327,220,328,221,333,222,334,223,331,224,332,225,337,226,338,227,349,228,347,229,351,230,352,231,350,232,354,233,355,234,356,235,360,236,358,237,359,238,340,239,345,240,346,241,344,242,348,243,266,244,267,245,367,246,335,247,336,248,341,249,342,250,339,251,368,252,372,253,364,254,365,255,391,256,362,257,366,258,361,259,373,260,374,261,376,262,378,263,370,264,371,265,375,266,392,267,343,268,311,610,357,611,313,612,353,613,315,614,314,615}, new int[] {-102,685,-12,687}),
      new State(683, new int[] {59,684}),
      new State(684, -261),
      new State(685, new int[] {59,686}),
      new State(686, -262),
      new State(687, new int[] {59,690,319,198,262,201,261,202,260,203,259,204,258,205,263,206,264,207,265,208,295,209,306,210,307,211,326,212,322,213,308,214,309,215,310,216,324,217,329,218,330,219,327,220,328,221,333,222,334,223,331,224,332,225,337,226,338,227,349,228,347,229,351,230,352,231,350,232,354,233,355,234,356,235,360,236,358,237,359,238,340,239,345,240,346,241,344,242,348,243,266,244,267,245,367,246,335,247,336,248,341,249,342,250,339,251,368,252,372,253,364,254,365,255,391,256,362,257,366,258,361,259,373,260,374,261,376,262,378,263,370,264,371,265,375,266,392,267,343,268,353,269,315,270,314,271,313,272,357,273,311,274}, new int[] {-100,688,-101,199,-102,200}),
      new State(688, new int[] {59,689}),
      new State(689, -263),
      new State(690, -264),
      new State(691, -265),
      new State(692, -256),
      new State(693, -132),
      new State(694, new int[] {319,695}),
      new State(695, -180, new int[] {-140,696}),
      new State(696, new int[] {364,704,123,-184}, new int[] {-30,697}),
      new State(697, -381, new int[] {-16,698}),
      new State(698, -382, new int[] {-17,699}),
      new State(699, new int[] {123,700}),
      new State(700, -246, new int[] {-86,701}),
      new State(701, new int[] {125,702,311,610,357,611,313,612,353,613,315,614,314,615,356,617,350,658,344,-272,346,-272}, new int[] {-81,588,-9,589,-11,608,-12,616,-10,618}),
      new State(702, -383, new int[] {-18,703}),
      new State(703, -181),
      new State(704, new int[] {319,186,391,187,393,190}, new int[] {-27,705,-19,674,-103,183}),
      new State(705, new int[] {44,661,123,-185}),
      new State(706, new int[] {40,707}),
      new State(707, new int[] {41,708}),
      new State(708, new int[] {59,709}),
      new State(709, -133),
      new State(710, new int[] {368,603,372,604,319,186,391,187,393,190,63,606}, new int[] {-22,711,-20,602,-19,605,-103,183}),
      new State(711, -231),
      new State(712, new int[] {44,713,41,-217}),
      new State(713, new int[] {368,603,372,604,319,186,391,187,393,190,63,606,38,-223,394,-223,320,-223}, new int[] {-115,714,-23,715,-22,601,-20,602,-19,605,-103,183}),
      new State(714, -220),
      new State(715, new int[] {38,722,394,-168,320,-168}, new int[] {-7,716}),
      new State(716, new int[] {394,721,320,-170}, new int[] {-8,717}),
      new State(717, new int[] {320,718}),
      new State(718, new int[] {61,719,44,-221,41,-221}),
      new State(719, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,720,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(720, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,44,-222,41,-222}),
      new State(721, -171),
      new State(722, -169),
      new State(723, -219),
      new State(724, -386),
      new State(725, new int[] {319,186,391,187,393,190}, new int[] {-27,726,-19,674,-103,183}),
      new State(726, new int[] {44,661,123,-187}),
      new State(727, new int[] {319,186,391,187,393,190}, new int[] {-19,728,-103,183}),
      new State(728, -183),
      new State(729, new int[] {319,186,391,187,393,190}, new int[] {-19,730,-103,183}),
      new State(730, -161),
      new State(731, -160),
      new State(732, new int[] {123,733}),
      new State(733, -127, new int[] {-85,734}),
      new State(734, new int[] {125,735,123,7,330,23,329,31,328,152,335,164,339,178,340,475,348,479,355,482,353,489,324,498,321,505,320,97,36,98,319,508,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478,360,525,334,535,332,545,59,551,349,552,352,568,345,571,315,646,314,647,362,649,366,694,363,706,322,-382,361,-174}, new int[] {-80,10,-32,11,-17,12,-40,506,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,510,-33,574,-34,575,-14,576,-13,644,-35,648,-37,693}),
      new State(735, -163),
      new State(736, -127, new int[] {-85,737}),
      new State(737, new int[] {337,738,123,7,330,23,329,31,328,152,335,164,339,178,340,475,348,479,355,482,353,489,324,498,321,505,320,97,36,98,319,508,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478,360,525,334,535,332,545,59,551,349,552,352,568,345,571,315,646,314,647,362,649,366,694,363,706,322,-382,361,-174}, new int[] {-80,10,-32,11,-17,12,-40,506,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,510,-33,574,-34,575,-14,576,-13,644,-35,648,-37,693}),
      new State(738, new int[] {59,739}),
      new State(739, -197),
      new State(740, new int[] {319,742}, new int[] {-54,741}),
      new State(741, -124),
      new State(742, new int[] {61,743}),
      new State(743, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,744,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(744, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,41,-381,44,-381,59,-381}, new int[] {-16,745}),
      new State(745, -289),
      new State(746, -125),
      new State(747, -127, new int[] {-85,748}),
      new State(748, new int[] {331,749,123,7,330,23,329,31,328,152,335,164,339,178,340,475,348,479,355,482,353,489,324,498,321,505,320,97,36,98,319,508,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478,360,525,334,535,332,545,59,551,349,552,352,568,345,571,315,646,314,647,362,649,366,694,363,706,322,-382,361,-174}, new int[] {-80,10,-32,11,-17,12,-40,506,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,510,-33,574,-34,575,-14,576,-13,644,-35,648,-37,693}),
      new State(749, new int[] {59,750}),
      new State(750, -195),
      new State(751, new int[] {320,97,36,98,353,295,319,186,391,187,393,190,40,296,368,282,91,758,323,304,38,765,367,767}, new int[] {-127,752,-41,757,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,323,-48,334,-50,309,-77,310}),
      new State(752, new int[] {41,753}),
      new State(753, -382, new int[] {-17,754}),
      new State(754, new int[] {123,7,330,23,329,31,328,152,335,164,339,178,340,475,348,479,355,482,353,489,324,498,321,505,320,97,36,98,319,508,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478,360,525,334,535,332,545,59,551,349,552,352,568,345,571,58,747,322,-382}, new int[] {-70,755,-32,544,-17,12,-40,506,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(755, -383, new int[] {-18,756}),
      new State(756, -151),
      new State(757, new int[] {41,-188,268,-188,91,-435,369,-435,123,-435,390,-435}),
      new State(758, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,328,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478,38,761,394,763,44,-468,93,-468}, new int[] {-124,759,-123,286,-121,327,-122,289,-40,290,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(759, new int[] {93,760}),
      new State(760, new int[] {91,-409,369,-409,123,-409,390,-409,40,-409,41,-191,268,-191}),
      new State(761, new int[] {320,97,36,98,353,295,319,186,391,187,393,190,40,296,368,282,91,324,323,304}, new int[] {-41,762,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,323,-48,334,-50,309,-77,310}),
      new State(762, new int[] {44,-475,41,-475,93,-475,91,-435,369,-435,123,-435,390,-435}),
      new State(763, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,764,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(764, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,44,-476,41,-476,93,-476}),
      new State(765, new int[] {320,97,36,98,353,295,319,186,391,187,393,190,40,296,368,282,91,324,323,304}, new int[] {-41,766,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,323,-48,334,-50,309,-77,310}),
      new State(766, new int[] {41,-189,268,-189,91,-435,369,-435,123,-435,390,-435}),
      new State(767, new int[] {40,768}),
      new State(768, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,328,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478,38,761,394,763,44,-468,41,-468}, new int[] {-124,769,-123,286,-121,327,-122,289,-40,290,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(769, new int[] {41,770}),
      new State(770, -190),
      new State(771, new int[] {40,772}),
      new State(772, new int[] {320,777,38,778}, new int[] {-120,773,-116,780}),
      new State(773, new int[] {41,774,44,775}),
      new State(774, -388),
      new State(775, new int[] {320,777,38,778}, new int[] {-116,776}),
      new State(776, -389),
      new State(777, -391),
      new State(778, new int[] {320,779}),
      new State(779, -392),
      new State(780, -390),
      new State(781, new int[] {320,416,385,425,386,439}, new int[] {-61,438}),
      new State(782, -500),
      new State(783, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,784,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(784, new int[] {125,785,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(785, -457),
      new State(786, new int[] {319,788,123,789,320,97,36,98}, new int[] {-1,787,-46,792}),
      new State(787, -458),
      new State(788, -464),
      new State(789, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,790,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(790, new int[] {125,791,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(791, -465),
      new State(792, -466),
      new State(793, new int[] {320,97,36,98}, new int[] {-46,794}),
      new State(794, -460),
      new State(795, -455),
      new State(796, new int[] {40,128,364,-406,365,-406,123,-406}, new int[] {-112,797,-113,347}),
      new State(797, new int[] {364,727,365,-182,123,-182}, new int[] {-24,798}),
      new State(798, -297, new int[] {-142,799}),
      new State(799, new int[] {365,725,123,-186}, new int[] {-29,800}),
      new State(800, -381, new int[] {-16,801}),
      new State(801, -382, new int[] {-17,802}),
      new State(802, new int[] {123,803}),
      new State(803, -246, new int[] {-86,804}),
      new State(804, new int[] {125,805,311,610,357,611,313,612,353,613,315,614,314,615,356,617,350,658,344,-272,346,-272}, new int[] {-81,588,-9,589,-11,608,-12,616,-10,618}),
      new State(805, -383, new int[] {-18,806}),
      new State(806, -298),
      new State(807, new int[] {40,808}),
      new State(808, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,328,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478,38,761,394,763,44,-468,41,-468}, new int[] {-124,809,-123,286,-121,327,-122,289,-40,290,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(809, new int[] {41,810}),
      new State(810, new int[] {61,317,44,-477,41,-477,93,-477}),
      new State(811, -205),
      new State(812, -206),
      new State(813, new int[] {58,811,59,812}, new int[] {-141,814}),
      new State(814, -127, new int[] {-85,815}),
      new State(815, new int[] {123,7,330,23,329,31,328,152,335,164,339,178,340,475,348,479,355,482,353,489,324,498,321,505,320,97,36,98,319,508,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478,360,525,334,535,332,545,59,551,349,552,352,568,345,571,315,646,314,647,362,649,366,694,363,706,125,-204,341,-204,342,-204,336,-204,322,-382,361,-174}, new int[] {-80,10,-32,11,-17,12,-40,506,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,510,-33,574,-34,575,-14,576,-13,644,-35,648,-37,693}),
      new State(816, -202, new int[] {-96,817}),
      new State(817, new int[] {125,818,341,174,342,813}),
      new State(818, -199),
      new State(819, new int[] {59,823,336,-202,341,-202,342,-202}, new int[] {-96,820}),
      new State(820, new int[] {336,821,341,174,342,813}),
      new State(821, new int[] {59,822}),
      new State(822, -200),
      new State(823, -202, new int[] {-96,824}),
      new State(824, new int[] {336,825,341,174,342,813}),
      new State(825, new int[] {59,826}),
      new State(826, -201),
      new State(827, -127, new int[] {-85,828}),
      new State(828, new int[] {333,829,123,7,330,23,329,31,328,152,335,164,339,178,340,475,348,479,355,482,353,489,324,498,321,505,320,97,36,98,319,508,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478,360,525,334,535,332,545,59,551,349,552,352,568,345,571,315,646,314,647,362,649,366,694,363,706,322,-382,361,-174}, new int[] {-80,10,-32,11,-17,12,-40,506,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,510,-33,574,-34,575,-14,576,-13,644,-35,648,-37,693}),
      new State(829, new int[] {59,830}),
      new State(830, -193),
      new State(831, new int[] {44,832,59,-294,41,-294}),
      new State(832, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,833,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(833, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,44,-295,59,-295,41,-295}),
      new State(834, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,44,-296,59,-296,41,-296}),
      new State(835, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,836,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(836, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,44,-237,41,-237}),
      new State(837, -234),
      new State(838, new int[] {319,788,123,789,320,97,36,98}, new int[] {-1,839,-46,792}),
      new State(839, new int[] {40,128,61,-449,270,-449,271,-449,279,-449,281,-449,278,-449,277,-449,276,-449,275,-449,274,-449,273,-449,272,-449,280,-449,282,-449,303,-449,302,-449,59,-449,284,-449,285,-449,263,-449,265,-449,264,-449,124,-449,38,-449,94,-449,46,-449,43,-449,45,-449,42,-449,305,-449,47,-449,37,-449,293,-449,294,-449,287,-449,286,-449,289,-449,288,-449,60,-449,291,-449,62,-449,292,-449,290,-449,295,-449,63,-449,283,-449,91,-449,369,-449,123,-449,390,-449,41,-449,125,-449,58,-449,93,-449,44,-449,268,-449,338,-449}, new int[] {-113,840}),
      new State(840, -445),
      new State(841, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,842,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(842, new int[] {125,843,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(843, -444),
      new State(844, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,845,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(845, new int[] {284,40,285,42,263,-307,265,-307,264,-307,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-307,41,-307,125,-307,58,-307,93,-307,44,-307,268,-307,338,-307}),
      new State(846, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,847,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(847, new int[] {284,40,285,42,263,-308,265,-308,264,-308,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-308,41,-308,125,-308,58,-308,93,-308,44,-308,268,-308,338,-308}),
      new State(848, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,849,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(849, new int[] {284,40,285,42,263,-309,265,-309,264,-309,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-309,41,-309,125,-309,58,-309,93,-309,44,-309,268,-309,338,-309}),
      new State(850, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,851,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(851, new int[] {284,40,285,42,263,-310,265,-310,264,-310,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-310,41,-310,125,-310,58,-310,93,-310,44,-310,268,-310,338,-310}),
      new State(852, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,853,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(853, new int[] {284,40,285,42,263,-311,265,-311,264,-311,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-311,41,-311,125,-311,58,-311,93,-311,44,-311,268,-311,338,-311}),
      new State(854, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,855,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(855, new int[] {284,40,285,42,263,-312,265,-312,264,-312,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-312,41,-312,125,-312,58,-312,93,-312,44,-312,268,-312,338,-312}),
      new State(856, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,857,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(857, new int[] {284,40,285,42,263,-313,265,-313,264,-313,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-313,41,-313,125,-313,58,-313,93,-313,44,-313,268,-313,338,-313}),
      new State(858, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,859,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(859, new int[] {284,40,285,42,263,-314,265,-314,264,-314,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-314,41,-314,125,-314,58,-314,93,-314,44,-314,268,-314,338,-314}),
      new State(860, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,861,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(861, new int[] {284,40,285,42,263,-315,265,-315,264,-315,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-315,41,-315,125,-315,58,-315,93,-315,44,-315,268,-315,338,-315}),
      new State(862, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,863,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(863, new int[] {284,40,285,42,263,-316,265,-316,264,-316,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-316,41,-316,125,-316,58,-316,93,-316,44,-316,268,-316,338,-316}),
      new State(864, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,865,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(865, new int[] {284,40,285,42,263,-317,265,-317,264,-317,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-317,41,-317,125,-317,58,-317,93,-317,44,-317,268,-317,338,-317}),
      new State(866, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,867,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(867, new int[] {284,40,285,42,263,-318,265,-318,264,-318,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-318,41,-318,125,-318,58,-318,93,-318,44,-318,268,-318,338,-318}),
      new State(868, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,869,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(869, new int[] {284,40,285,42,263,-319,265,-319,264,-319,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-319,41,-319,125,-319,58,-319,93,-319,44,-319,268,-319,338,-319}),
      new State(870, -320),
      new State(871, -322),
      new State(872, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,873,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(873, new int[] {284,40,285,42,263,-358,265,-358,264,-358,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,-358,283,106,59,-358,41,-358,125,-358,58,-358,93,-358,44,-358,268,-358,338,-358}),
      new State(874, -452),
      new State(875, -127, new int[] {-85,876}),
      new State(876, new int[] {327,877,123,7,330,23,329,31,328,152,335,164,339,178,340,475,348,479,355,482,353,489,324,498,321,505,320,97,36,98,319,508,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478,360,525,334,535,332,545,59,551,349,552,352,568,345,571,315,646,314,647,362,649,366,694,363,706,322,-382,361,-174}, new int[] {-80,10,-32,11,-17,12,-40,506,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,510,-33,574,-34,575,-14,576,-13,644,-35,648,-37,693}),
      new State(877, new int[] {59,878}),
      new State(878, -208),
      new State(879, new int[] {123,7,330,23,329,31,328,152,335,164,339,178,340,475,348,479,355,482,353,489,324,498,321,505,320,97,36,98,319,508,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478,360,525,334,535,332,545,59,551,349,552,352,568,345,571,322,-382}, new int[] {-32,880,-17,12,-40,506,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(880, -212),
      new State(881, new int[] {40,882}),
      new State(882, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,883,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(883, new int[] {41,884,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(884, new int[] {58,886,123,7,330,23,329,31,328,152,335,164,339,178,340,475,348,479,355,482,353,489,324,498,321,505,320,97,36,98,319,508,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478,360,525,334,535,332,545,59,551,349,552,352,568,345,571,322,-382}, new int[] {-32,885,-17,12,-40,506,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(885, -209),
      new State(886, -127, new int[] {-85,887}),
      new State(887, new int[] {123,7,330,23,329,31,328,152,335,164,339,178,340,475,348,479,355,482,353,489,324,498,321,505,320,97,36,98,319,508,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478,360,525,334,535,332,545,59,551,349,552,352,568,345,571,315,646,314,647,362,649,366,694,363,706,310,-213,308,-213,309,-213,322,-382,361,-174}, new int[] {-80,10,-32,11,-17,12,-40,506,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,510,-33,574,-34,575,-14,576,-13,644,-35,648,-37,693}),
      new State(888, new int[] {310,889,308,891,309,897}),
      new State(889, new int[] {59,890}),
      new State(890, -215),
      new State(891, new int[] {40,892}),
      new State(892, new int[] {320,97,36,98,353,136,319,186,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478}, new int[] {-40,893,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,460}),
      new State(893, new int[] {41,894,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(894, new int[] {58,895}),
      new State(895, -127, new int[] {-85,896}),
      new State(896, new int[] {123,7,330,23,329,31,328,152,335,164,339,178,340,475,348,479,355,482,353,489,324,498,321,505,320,97,36,98,319,508,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478,360,525,334,535,332,545,59,551,349,552,352,568,345,571,315,646,314,647,362,649,366,694,363,706,310,-214,308,-214,309,-214,322,-382,361,-174}, new int[] {-80,10,-32,11,-17,12,-40,506,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,510,-33,574,-34,575,-14,576,-13,644,-35,648,-37,693}),
      new State(897, new int[] {58,898}),
      new State(898, -127, new int[] {-85,899}),
      new State(899, new int[] {310,900,123,7,330,23,329,31,328,152,335,164,339,178,340,475,348,479,355,482,353,489,324,498,321,505,320,97,36,98,319,508,391,187,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478,360,525,334,535,332,545,59,551,349,552,352,568,345,571,315,646,314,647,362,649,366,694,363,706,322,-382,361,-174}, new int[] {-80,10,-32,11,-17,12,-40,506,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,510,-33,574,-34,575,-14,576,-13,644,-35,648,-37,693}),
      new State(900, new int[] {59,901}),
      new State(901, -216),
      new State(902, new int[] {393,188,319,186,123,-381}, new int[] {-103,903,-16,977}),
      new State(903, new int[] {59,904,393,184,123,-381}, new int[] {-16,905}),
      new State(904, -94),
      new State(905, -95, new int[] {-135,906}),
      new State(906, new int[] {123,907}),
      new State(907, -82, new int[] {-82,908}),
      new State(908, new int[] {125,909,123,7,330,23,329,31,328,152,335,164,339,178,340,475,348,479,355,482,353,489,324,498,321,505,320,97,36,98,319,508,391,902,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478,360,525,334,535,332,545,59,551,349,552,352,568,345,571,315,646,314,647,362,649,366,694,363,914,350,918,344,974,322,-382,361,-174}, new int[] {-31,5,-32,6,-17,12,-40,506,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,510,-33,910,-34,911,-14,576,-13,644,-35,912,-37,913}),
      new State(909, -96),
      new State(910, -89),
      new State(911, -90),
      new State(912, -91),
      new State(913, -92),
      new State(914, new int[] {40,915}),
      new State(915, new int[] {41,916}),
      new State(916, new int[] {59,917}),
      new State(917, -93),
      new State(918, new int[] {319,186,393,967,346,964,344,965}, new int[] {-131,919,-15,921,-129,951,-103,953,-107,950,-104,928}),
      new State(919, new int[] {59,920}),
      new State(920, -99),
      new State(921, new int[] {319,186,393,943}, new int[] {-130,922,-129,924,-103,934,-107,950,-104,928}),
      new State(922, new int[] {59,923}),
      new State(923, -100),
      new State(924, new int[] {59,925,44,926}),
      new State(925, -102),
      new State(926, new int[] {319,186,393,932}, new int[] {-107,927,-104,928,-103,929}),
      new State(927, -116),
      new State(928, -122),
      new State(929, new int[] {393,184,338,930,59,-120,44,-120,125,-120}),
      new State(930, new int[] {319,931}),
      new State(931, -121),
      new State(932, new int[] {319,186}, new int[] {-104,933,-103,929}),
      new State(933, -123),
      new State(934, new int[] {393,935,338,930,59,-120,44,-120}),
      new State(935, new int[] {123,936,319,185}),
      new State(936, new int[] {319,186}, new int[] {-108,937,-104,942,-103,929}),
      new State(937, new int[] {44,940,125,-110}, new int[] {-3,938}),
      new State(938, new int[] {125,939}),
      new State(939, -106),
      new State(940, new int[] {319,186,125,-111}, new int[] {-104,941,-103,929}),
      new State(941, -114),
      new State(942, -115),
      new State(943, new int[] {319,186}, new int[] {-103,944,-104,933}),
      new State(944, new int[] {393,945,338,930,59,-120,44,-120}),
      new State(945, new int[] {123,946,319,185}),
      new State(946, new int[] {319,186}, new int[] {-108,947,-104,942,-103,929}),
      new State(947, new int[] {44,940,125,-110}, new int[] {-3,948}),
      new State(948, new int[] {125,949}),
      new State(949, -107),
      new State(950, -117),
      new State(951, new int[] {59,952,44,926}),
      new State(952, -101),
      new State(953, new int[] {393,954,338,930,59,-120,44,-120}),
      new State(954, new int[] {123,955,319,185}),
      new State(955, new int[] {319,186,346,964,344,965}, new int[] {-110,956,-109,966,-104,961,-103,929,-15,962}),
      new State(956, new int[] {44,959,125,-110}, new int[] {-3,957}),
      new State(957, new int[] {125,958}),
      new State(958, -108),
      new State(959, new int[] {319,186,346,964,344,965,125,-111}, new int[] {-109,960,-104,961,-103,929,-15,962}),
      new State(960, -112),
      new State(961, -118),
      new State(962, new int[] {319,186}, new int[] {-104,963,-103,929}),
      new State(963, -119),
      new State(964, -104),
      new State(965, -105),
      new State(966, -113),
      new State(967, new int[] {319,186}, new int[] {-103,968,-104,933}),
      new State(968, new int[] {393,969,338,930,59,-120,44,-120}),
      new State(969, new int[] {123,970,319,185}),
      new State(970, new int[] {319,186,346,964,344,965}, new int[] {-110,971,-109,966,-104,961,-103,929,-15,962}),
      new State(971, new int[] {44,959,125,-110}, new int[] {-3,972}),
      new State(972, new int[] {125,973}),
      new State(973, -109),
      new State(974, new int[] {319,742}, new int[] {-83,975,-54,746}),
      new State(975, new int[] {59,976,44,740}),
      new State(976, -103),
      new State(977, -97, new int[] {-136,978}),
      new State(978, new int[] {123,979}),
      new State(979, -82, new int[] {-82,980}),
      new State(980, new int[] {125,981,123,7,330,23,329,31,328,152,335,164,339,178,340,475,348,479,355,482,353,489,324,498,321,505,320,97,36,98,319,508,391,902,393,190,40,278,368,282,91,299,323,304,367,313,307,319,303,321,302,332,43,335,45,337,33,339,126,341,306,344,358,355,359,363,262,367,261,369,260,371,259,375,258,377,301,379,300,381,299,383,298,385,297,387,296,389,304,391,326,393,64,398,317,401,312,402,370,403,371,404,375,405,374,406,378,407,376,408,392,409,373,410,34,411,383,434,96,446,266,452,267,454,269,458,346,478,360,525,334,535,332,545,59,551,349,552,352,568,345,571,315,646,314,647,362,649,366,694,363,914,350,918,344,974,322,-382,361,-174}, new int[] {-31,5,-32,6,-17,12,-40,506,-41,108,-45,114,-46,115,-68,116,-51,121,-26,122,-19,181,-103,183,-79,192,-49,281,-48,305,-50,309,-77,310,-42,312,-43,343,-44,354,-47,400,-72,445,-5,510,-33,910,-34,911,-14,576,-13,644,-35,912,-37,913}),
      new State(981, -98),
    };
    #endregion

    #region rules
    rules = new Rule[]
    {
    default(Rule),
    new Rule(-133, new int[]{-132,0}),
    new Rule(-134, new int[]{}),
    new Rule(-132, new int[]{-134,-82}),
    new Rule(-102, new int[]{262}),
    new Rule(-102, new int[]{261}),
    new Rule(-102, new int[]{260}),
    new Rule(-102, new int[]{259}),
    new Rule(-102, new int[]{258}),
    new Rule(-102, new int[]{263}),
    new Rule(-102, new int[]{264}),
    new Rule(-102, new int[]{265}),
    new Rule(-102, new int[]{295}),
    new Rule(-102, new int[]{306}),
    new Rule(-102, new int[]{307}),
    new Rule(-102, new int[]{326}),
    new Rule(-102, new int[]{322}),
    new Rule(-102, new int[]{308}),
    new Rule(-102, new int[]{309}),
    new Rule(-102, new int[]{310}),
    new Rule(-102, new int[]{324}),
    new Rule(-102, new int[]{329}),
    new Rule(-102, new int[]{330}),
    new Rule(-102, new int[]{327}),
    new Rule(-102, new int[]{328}),
    new Rule(-102, new int[]{333}),
    new Rule(-102, new int[]{334}),
    new Rule(-102, new int[]{331}),
    new Rule(-102, new int[]{332}),
    new Rule(-102, new int[]{337}),
    new Rule(-102, new int[]{338}),
    new Rule(-102, new int[]{349}),
    new Rule(-102, new int[]{347}),
    new Rule(-102, new int[]{351}),
    new Rule(-102, new int[]{352}),
    new Rule(-102, new int[]{350}),
    new Rule(-102, new int[]{354}),
    new Rule(-102, new int[]{355}),
    new Rule(-102, new int[]{356}),
    new Rule(-102, new int[]{360}),
    new Rule(-102, new int[]{358}),
    new Rule(-102, new int[]{359}),
    new Rule(-102, new int[]{340}),
    new Rule(-102, new int[]{345}),
    new Rule(-102, new int[]{346}),
    new Rule(-102, new int[]{344}),
    new Rule(-102, new int[]{348}),
    new Rule(-102, new int[]{266}),
    new Rule(-102, new int[]{267}),
    new Rule(-102, new int[]{367}),
    new Rule(-102, new int[]{335}),
    new Rule(-102, new int[]{336}),
    new Rule(-102, new int[]{341}),
    new Rule(-102, new int[]{342}),
    new Rule(-102, new int[]{339}),
    new Rule(-102, new int[]{368}),
    new Rule(-102, new int[]{372}),
    new Rule(-102, new int[]{364}),
    new Rule(-102, new int[]{365}),
    new Rule(-102, new int[]{391}),
    new Rule(-102, new int[]{362}),
    new Rule(-102, new int[]{366}),
    new Rule(-102, new int[]{361}),
    new Rule(-102, new int[]{373}),
    new Rule(-102, new int[]{374}),
    new Rule(-102, new int[]{376}),
    new Rule(-102, new int[]{378}),
    new Rule(-102, new int[]{370}),
    new Rule(-102, new int[]{371}),
    new Rule(-102, new int[]{375}),
    new Rule(-102, new int[]{392}),
    new Rule(-102, new int[]{343}),
    new Rule(-101, new int[]{-102}),
    new Rule(-101, new int[]{353}),
    new Rule(-101, new int[]{315}),
    new Rule(-101, new int[]{314}),
    new Rule(-101, new int[]{313}),
    new Rule(-101, new int[]{357}),
    new Rule(-101, new int[]{311}),
    new Rule(-100, new int[]{319}),
    new Rule(-100, new int[]{-101}),
    new Rule(-82, new int[]{-82,-31}),
    new Rule(-82, new int[]{}),
    new Rule(-103, new int[]{319}),
    new Rule(-103, new int[]{-103,393,319}),
    new Rule(-19, new int[]{-103}),
    new Rule(-19, new int[]{391,393,-103}),
    new Rule(-19, new int[]{393,-103}),
    new Rule(-31, new int[]{-32}),
    new Rule(-31, new int[]{-33}),
    new Rule(-31, new int[]{-34}),
    new Rule(-31, new int[]{-35}),
    new Rule(-31, new int[]{-37}),
    new Rule(-31, new int[]{363,40,41,59}),
    new Rule(-31, new int[]{391,-103,59}),
    new Rule(-135, new int[]{}),
    new Rule(-31, new int[]{391,-103,-16,-135,123,-82,125}),
    new Rule(-136, new int[]{}),
    new Rule(-31, new int[]{391,-16,-136,123,-82,125}),
    new Rule(-31, new int[]{350,-131,59}),
    new Rule(-31, new int[]{350,-15,-130,59}),
    new Rule(-31, new int[]{350,-129,59}),
    new Rule(-31, new int[]{350,-15,-129,59}),
    new Rule(-31, new int[]{344,-83,59}),
    new Rule(-15, new int[]{346}),
    new Rule(-15, new int[]{344}),
    new Rule(-130, new int[]{-103,393,123,-108,-3,125}),
    new Rule(-130, new int[]{393,-103,393,123,-108,-3,125}),
    new Rule(-131, new int[]{-103,393,123,-110,-3,125}),
    new Rule(-131, new int[]{393,-103,393,123,-110,-3,125}),
    new Rule(-3, new int[]{}),
    new Rule(-3, new int[]{44}),
    new Rule(-110, new int[]{-110,44,-109}),
    new Rule(-110, new int[]{-109}),
    new Rule(-108, new int[]{-108,44,-104}),
    new Rule(-108, new int[]{-104}),
    new Rule(-129, new int[]{-129,44,-107}),
    new Rule(-129, new int[]{-107}),
    new Rule(-109, new int[]{-104}),
    new Rule(-109, new int[]{-15,-104}),
    new Rule(-104, new int[]{-103}),
    new Rule(-104, new int[]{-103,338,319}),
    new Rule(-107, new int[]{-104}),
    new Rule(-107, new int[]{393,-104}),
    new Rule(-83, new int[]{-83,44,-54}),
    new Rule(-83, new int[]{-54}),
    new Rule(-85, new int[]{-85,-80}),
    new Rule(-85, new int[]{}),
    new Rule(-80, new int[]{-32}),
    new Rule(-80, new int[]{-33}),
    new Rule(-80, new int[]{-34}),
    new Rule(-80, new int[]{-35}),
    new Rule(-80, new int[]{-37}),
    new Rule(-80, new int[]{363,40,41,59}),
    new Rule(-32, new int[]{123,-85,125}),
    new Rule(-32, new int[]{-17,-52,-18}),
    new Rule(-32, new int[]{-17,-53,-18}),
    new Rule(-32, new int[]{330,40,-40,41,-17,-71,-18}),
    new Rule(-32, new int[]{329,-17,-32,330,40,-40,41,59,-18}),
    new Rule(-32, new int[]{328,40,-87,59,-87,59,-87,41,-17,-69,-18}),
    new Rule(-32, new int[]{335,40,-40,41,-17,-97,-18}),
    new Rule(-32, new int[]{339,-59,59}),
    new Rule(-32, new int[]{340,-59,59}),
    new Rule(-32, new int[]{348,-59,59}),
    new Rule(-32, new int[]{355,-88,59}),
    new Rule(-32, new int[]{353,-89,59}),
    new Rule(-32, new int[]{324,-90,59}),
    new Rule(-32, new int[]{321}),
    new Rule(-32, new int[]{-40,59}),
    new Rule(-32, new int[]{360,40,-91,-3,41,59}),
    new Rule(-32, new int[]{334,40,-40,338,-127,41,-17,-70,-18}),
    new Rule(-32, new int[]{334,40,-40,338,-127,268,-127,41,-17,-70,-18}),
    new Rule(-32, new int[]{332,40,-83,41,-63}),
    new Rule(-32, new int[]{59}),
    new Rule(-32, new int[]{349,123,-85,125,-17,-99,-75,-18}),
    new Rule(-32, new int[]{352,-40,59}),
    new Rule(-32, new int[]{345,319,59}),
    new Rule(-32, new int[]{319,58}),
    new Rule(-99, new int[]{}),
    new Rule(-99, new int[]{-99,347,40,-28,320,41,123,-85,125}),
    new Rule(-28, new int[]{-19}),
    new Rule(-28, new int[]{-28,124,-19}),
    new Rule(-75, new int[]{}),
    new Rule(-75, new int[]{351,123,-85,125}),
    new Rule(-91, new int[]{-55}),
    new Rule(-91, new int[]{-91,44,-55}),
    new Rule(-55, new int[]{-41}),
    new Rule(-33, new int[]{-5,-4,319,-16,40,-117,41,-21,-137,-17,123,-85,125,-18,-137}),
    new Rule(-7, new int[]{}),
    new Rule(-7, new int[]{38}),
    new Rule(-8, new int[]{}),
    new Rule(-8, new int[]{394}),
    new Rule(-138, new int[]{}),
    new Rule(-34, new int[]{-14,361,319,-24,-138,-29,-16,-17,123,-86,125,-18}),
    new Rule(-14, new int[]{}),
    new Rule(-14, new int[]{-13,-14}),
    new Rule(-13, new int[]{315}),
    new Rule(-13, new int[]{314}),
    new Rule(-139, new int[]{}),
    new Rule(-35, new int[]{362,319,-139,-16,-17,123,-86,125,-18}),
    new Rule(-140, new int[]{}),
    new Rule(-37, new int[]{366,319,-140,-30,-16,-17,123,-86,125,-18}),
    new Rule(-24, new int[]{}),
    new Rule(-24, new int[]{364,-19}),
    new Rule(-30, new int[]{}),
    new Rule(-30, new int[]{364,-27}),
    new Rule(-29, new int[]{}),
    new Rule(-29, new int[]{365,-27}),
    new Rule(-127, new int[]{-41}),
    new Rule(-127, new int[]{38,-41}),
    new Rule(-127, new int[]{367,40,-124,41}),
    new Rule(-127, new int[]{91,-124,93}),
    new Rule(-69, new int[]{-32}),
    new Rule(-69, new int[]{58,-85,333,59}),
    new Rule(-70, new int[]{-32}),
    new Rule(-70, new int[]{58,-85,331,59}),
    new Rule(-63, new int[]{-32}),
    new Rule(-63, new int[]{58,-85,337,59}),
    new Rule(-97, new int[]{123,-96,125}),
    new Rule(-97, new int[]{123,59,-96,125}),
    new Rule(-97, new int[]{58,-96,336,59}),
    new Rule(-97, new int[]{58,59,-96,336,59}),
    new Rule(-96, new int[]{}),
    new Rule(-96, new int[]{-96,341,-40,-141,-85}),
    new Rule(-96, new int[]{-96,342,-141,-85}),
    new Rule(-141, new int[]{58}),
    new Rule(-141, new int[]{59}),
    new Rule(-71, new int[]{-32}),
    new Rule(-71, new int[]{58,-85,327,59}),
    new Rule(-125, new int[]{322,40,-40,41,-32}),
    new Rule(-125, new int[]{-125,308,40,-40,41,-32}),
    new Rule(-52, new int[]{-125}),
    new Rule(-52, new int[]{-125,309,-32}),
    new Rule(-126, new int[]{322,40,-40,41,58,-85}),
    new Rule(-126, new int[]{-126,308,40,-40,41,58,-85}),
    new Rule(-53, new int[]{-126,310,59}),
    new Rule(-53, new int[]{-126,309,58,-85,310,59}),
    new Rule(-117, new int[]{-118}),
    new Rule(-117, new int[]{}),
    new Rule(-118, new int[]{-115}),
    new Rule(-118, new int[]{-118,44,-115}),
    new Rule(-115, new int[]{-23,-7,-8,320}),
    new Rule(-115, new int[]{-23,-7,-8,320,61,-40}),
    new Rule(-23, new int[]{}),
    new Rule(-23, new int[]{-22}),
    new Rule(-22, new int[]{-20}),
    new Rule(-22, new int[]{63,-20}),
    new Rule(-20, new int[]{368}),
    new Rule(-20, new int[]{372}),
    new Rule(-20, new int[]{-19}),
    new Rule(-21, new int[]{}),
    new Rule(-21, new int[]{58,-22}),
    new Rule(-113, new int[]{40,41}),
    new Rule(-113, new int[]{40,-114,-3,41}),
    new Rule(-114, new int[]{-111}),
    new Rule(-114, new int[]{-114,44,-111}),
    new Rule(-111, new int[]{-40}),
    new Rule(-111, new int[]{394,-40}),
    new Rule(-88, new int[]{-88,44,-56}),
    new Rule(-88, new int[]{-56}),
    new Rule(-56, new int[]{-46}),
    new Rule(-89, new int[]{-89,44,-57}),
    new Rule(-89, new int[]{-57}),
    new Rule(-57, new int[]{320}),
    new Rule(-57, new int[]{320,61,-40}),
    new Rule(-86, new int[]{-86,-81}),
    new Rule(-86, new int[]{}),
    new Rule(-81, new int[]{-9,-23,-95,59}),
    new Rule(-81, new int[]{-10,344,-84,59}),
    new Rule(-81, new int[]{350,-27,-78}),
    new Rule(-81, new int[]{-10,-5,-4,-100,-16,40,-117,41,-21,-137,-73,-137}),
    new Rule(-27, new int[]{-19}),
    new Rule(-27, new int[]{-27,44,-19}),
    new Rule(-78, new int[]{59}),
    new Rule(-78, new int[]{123,125}),
    new Rule(-78, new int[]{123,-92,125}),
    new Rule(-92, new int[]{-64}),
    new Rule(-92, new int[]{-92,-64}),
    new Rule(-64, new int[]{-65}),
    new Rule(-64, new int[]{-66}),
    new Rule(-65, new int[]{-106,354,-27,59}),
    new Rule(-66, new int[]{-105,338,319,59}),
    new Rule(-66, new int[]{-105,338,-102,59}),
    new Rule(-66, new int[]{-105,338,-12,-100,59}),
    new Rule(-66, new int[]{-105,338,-12,59}),
    new Rule(-105, new int[]{-100}),
    new Rule(-105, new int[]{-106}),
    new Rule(-106, new int[]{-19,390,-100}),
    new Rule(-73, new int[]{59}),
    new Rule(-73, new int[]{123,-85,125}),
    new Rule(-9, new int[]{-11}),
    new Rule(-9, new int[]{356}),
    new Rule(-10, new int[]{}),
    new Rule(-10, new int[]{-11}),
    new Rule(-11, new int[]{-12}),
    new Rule(-11, new int[]{-11,-12}),
    new Rule(-12, new int[]{311}),
    new Rule(-12, new int[]{357}),
    new Rule(-12, new int[]{313}),
    new Rule(-12, new int[]{353}),
    new Rule(-12, new int[]{315}),
    new Rule(-12, new int[]{314}),
    new Rule(-95, new int[]{-95,44,-60}),
    new Rule(-95, new int[]{-60}),
    new Rule(-60, new int[]{320,-16}),
    new Rule(-60, new int[]{320,61,-40,-16}),
    new Rule(-84, new int[]{-84,44,-67}),
    new Rule(-84, new int[]{-67}),
    new Rule(-67, new int[]{-100,61,-40,-16}),
    new Rule(-54, new int[]{319,61,-40,-16}),
    new Rule(-90, new int[]{-90,44,-58}),
    new Rule(-90, new int[]{-58}),
    new Rule(-58, new int[]{-40}),
    new Rule(-87, new int[]{}),
    new Rule(-87, new int[]{-98}),
    new Rule(-98, new int[]{-98,44,-40}),
    new Rule(-98, new int[]{-40}),
    new Rule(-142, new int[]{}),
    new Rule(-128, new int[]{361,-112,-24,-142,-29,-16,-17,123,-86,125,-18}),
    new Rule(-43, new int[]{306,-25,-112}),
    new Rule(-43, new int[]{306,-128}),
    new Rule(-42, new int[]{367,40,-124,41,61,-40}),
    new Rule(-42, new int[]{91,-124,93,61,-40}),
    new Rule(-42, new int[]{-41,61,-40}),
    new Rule(-42, new int[]{-41,61,38,-41}),
    new Rule(-42, new int[]{-41,61,38,-43}),
    new Rule(-42, new int[]{307,-40}),
    new Rule(-42, new int[]{-41,270,-40}),
    new Rule(-42, new int[]{-41,271,-40}),
    new Rule(-42, new int[]{-41,279,-40}),
    new Rule(-42, new int[]{-41,281,-40}),
    new Rule(-42, new int[]{-41,278,-40}),
    new Rule(-42, new int[]{-41,277,-40}),
    new Rule(-42, new int[]{-41,276,-40}),
    new Rule(-42, new int[]{-41,275,-40}),
    new Rule(-42, new int[]{-41,274,-40}),
    new Rule(-42, new int[]{-41,273,-40}),
    new Rule(-42, new int[]{-41,272,-40}),
    new Rule(-42, new int[]{-41,280,-40}),
    new Rule(-42, new int[]{-41,282,-40}),
    new Rule(-42, new int[]{-41,303}),
    new Rule(-42, new int[]{303,-41}),
    new Rule(-42, new int[]{-41,302}),
    new Rule(-42, new int[]{302,-41}),
    new Rule(-42, new int[]{-40,284,-40}),
    new Rule(-42, new int[]{-40,285,-40}),
    new Rule(-42, new int[]{-40,263,-40}),
    new Rule(-42, new int[]{-40,265,-40}),
    new Rule(-42, new int[]{-40,264,-40}),
    new Rule(-42, new int[]{-40,124,-40}),
    new Rule(-42, new int[]{-40,38,-40}),
    new Rule(-42, new int[]{-40,94,-40}),
    new Rule(-42, new int[]{-40,46,-40}),
    new Rule(-42, new int[]{-40,43,-40}),
    new Rule(-42, new int[]{-40,45,-40}),
    new Rule(-42, new int[]{-40,42,-40}),
    new Rule(-42, new int[]{-40,305,-40}),
    new Rule(-42, new int[]{-40,47,-40}),
    new Rule(-42, new int[]{-40,37,-40}),
    new Rule(-42, new int[]{-40,293,-40}),
    new Rule(-42, new int[]{-40,294,-40}),
    new Rule(-42, new int[]{43,-40}),
    new Rule(-42, new int[]{45,-40}),
    new Rule(-42, new int[]{33,-40}),
    new Rule(-42, new int[]{126,-40}),
    new Rule(-42, new int[]{-40,287,-40}),
    new Rule(-42, new int[]{-40,286,-40}),
    new Rule(-42, new int[]{-40,289,-40}),
    new Rule(-42, new int[]{-40,288,-40}),
    new Rule(-42, new int[]{-40,60,-40}),
    new Rule(-42, new int[]{-40,291,-40}),
    new Rule(-42, new int[]{-40,62,-40}),
    new Rule(-42, new int[]{-40,292,-40}),
    new Rule(-42, new int[]{-40,290,-40}),
    new Rule(-42, new int[]{-40,295,-25}),
    new Rule(-42, new int[]{40,-40,41}),
    new Rule(-42, new int[]{-43}),
    new Rule(-42, new int[]{-40,63,-40,58,-40}),
    new Rule(-42, new int[]{-40,63,58,-40}),
    new Rule(-42, new int[]{-40,283,-40}),
    new Rule(-42, new int[]{-44}),
    new Rule(-42, new int[]{301,-40}),
    new Rule(-42, new int[]{300,-40}),
    new Rule(-42, new int[]{299,-40}),
    new Rule(-42, new int[]{298,-40}),
    new Rule(-42, new int[]{297,-40}),
    new Rule(-42, new int[]{296,-40}),
    new Rule(-42, new int[]{304,-40}),
    new Rule(-42, new int[]{326,-74}),
    new Rule(-42, new int[]{64,-40}),
    new Rule(-42, new int[]{-47}),
    new Rule(-42, new int[]{-72}),
    new Rule(-42, new int[]{266,-40}),
    new Rule(-42, new int[]{267}),
    new Rule(-42, new int[]{267,-40}),
    new Rule(-42, new int[]{267,-40,268,-40}),
    new Rule(-42, new int[]{269,-40}),
    new Rule(-42, new int[]{-5,-4,-16,40,-117,41,-119,-21,-137,-17,123,-85,125,-18,-137}),
    new Rule(-42, new int[]{353,-5,-4,-16,40,-117,41,-119,-21,-137,-17,123,-85,125,-18,-137}),
    new Rule(-6, new int[]{343}),
    new Rule(-5, new int[]{346}),
    new Rule(-16, new int[]{}),
    new Rule(-17, new int[]{}),
    new Rule(-18, new int[]{}),
    new Rule(-137, new int[]{}),
    new Rule(-4, new int[]{}),
    new Rule(-4, new int[]{38}),
    new Rule(-119, new int[]{}),
    new Rule(-119, new int[]{350,40,-120,41}),
    new Rule(-120, new int[]{-120,44,-116}),
    new Rule(-120, new int[]{-116}),
    new Rule(-116, new int[]{320}),
    new Rule(-116, new int[]{38,320}),
    new Rule(-50, new int[]{-19,-113}),
    new Rule(-50, new int[]{-26,390,-2,-113}),
    new Rule(-50, new int[]{-79,390,-2,-113}),
    new Rule(-50, new int[]{-77,-113}),
    new Rule(-26, new int[]{353}),
    new Rule(-26, new int[]{-19}),
    new Rule(-25, new int[]{-26}),
    new Rule(-25, new int[]{-76}),
    new Rule(-74, new int[]{}),
    new Rule(-74, new int[]{40,-59,41}),
    new Rule(-72, new int[]{96,96}),
    new Rule(-72, new int[]{96,316,96}),
    new Rule(-72, new int[]{96,-93,96}),
    new Rule(-112, new int[]{}),
    new Rule(-112, new int[]{-113}),
    new Rule(-49, new int[]{368,40,-124,41}),
    new Rule(-49, new int[]{91,-124,93}),
    new Rule(-49, new int[]{323}),
    new Rule(-47, new int[]{317}),
    new Rule(-47, new int[]{312}),
    new Rule(-47, new int[]{370}),
    new Rule(-47, new int[]{371}),
    new Rule(-47, new int[]{375}),
    new Rule(-47, new int[]{374}),
    new Rule(-47, new int[]{378}),
    new Rule(-47, new int[]{376}),
    new Rule(-47, new int[]{392}),
    new Rule(-47, new int[]{373}),
    new Rule(-47, new int[]{34,-93,34}),
    new Rule(-47, new int[]{383,387}),
    new Rule(-47, new int[]{383,316,387}),
    new Rule(-47, new int[]{383,-93,387}),
    new Rule(-47, new int[]{-49}),
    new Rule(-47, new int[]{-48}),
    new Rule(-48, new int[]{-19}),
    new Rule(-48, new int[]{-26,390,-100}),
    new Rule(-48, new int[]{-79,390,-100}),
    new Rule(-40, new int[]{-41}),
    new Rule(-40, new int[]{-42}),
    new Rule(-59, new int[]{}),
    new Rule(-59, new int[]{-40}),
    new Rule(-79, new int[]{-68}),
    new Rule(-68, new int[]{-41}),
    new Rule(-68, new int[]{40,-40,41}),
    new Rule(-68, new int[]{-49}),
    new Rule(-77, new int[]{-45}),
    new Rule(-77, new int[]{40,-40,41}),
    new Rule(-77, new int[]{-49}),
    new Rule(-45, new int[]{-46}),
    new Rule(-45, new int[]{-68,91,-59,93}),
    new Rule(-45, new int[]{-48,91,-59,93}),
    new Rule(-45, new int[]{-68,123,-40,125}),
    new Rule(-45, new int[]{-68,369,-1,-113}),
    new Rule(-45, new int[]{-50}),
    new Rule(-41, new int[]{-45}),
    new Rule(-41, new int[]{-51}),
    new Rule(-41, new int[]{-68,369,-1}),
    new Rule(-46, new int[]{320}),
    new Rule(-46, new int[]{36,123,-40,125}),
    new Rule(-46, new int[]{36,-46}),
    new Rule(-51, new int[]{-26,390,-46}),
    new Rule(-51, new int[]{-79,390,-46}),
    new Rule(-76, new int[]{-46}),
    new Rule(-76, new int[]{-76,91,-59,93}),
    new Rule(-76, new int[]{-76,123,-40,125}),
    new Rule(-76, new int[]{-76,369,-1}),
    new Rule(-76, new int[]{-26,390,-46}),
    new Rule(-76, new int[]{-76,390,-46}),
    new Rule(-2, new int[]{-100}),
    new Rule(-2, new int[]{123,-40,125}),
    new Rule(-2, new int[]{-46}),
    new Rule(-1, new int[]{319}),
    new Rule(-1, new int[]{123,-40,125}),
    new Rule(-1, new int[]{-46}),
    new Rule(-124, new int[]{-123}),
    new Rule(-121, new int[]{}),
    new Rule(-121, new int[]{-122}),
    new Rule(-123, new int[]{-123,44,-121}),
    new Rule(-123, new int[]{-121}),
    new Rule(-122, new int[]{-40,268,-40}),
    new Rule(-122, new int[]{-40}),
    new Rule(-122, new int[]{-40,268,38,-41}),
    new Rule(-122, new int[]{38,-41}),
    new Rule(-122, new int[]{394,-40}),
    new Rule(-122, new int[]{-40,268,367,40,-124,41}),
    new Rule(-122, new int[]{367,40,-124,41}),
    new Rule(-93, new int[]{-93,-61}),
    new Rule(-93, new int[]{-93,316}),
    new Rule(-93, new int[]{-61}),
    new Rule(-93, new int[]{316,-61}),
    new Rule(-61, new int[]{320}),
    new Rule(-61, new int[]{320,91,-62,93}),
    new Rule(-61, new int[]{320,369,319}),
    new Rule(-61, new int[]{385,-40,125}),
    new Rule(-61, new int[]{385,318,125}),
    new Rule(-61, new int[]{385,318,91,-40,93,125}),
    new Rule(-61, new int[]{386,-41,125}),
    new Rule(-62, new int[]{319}),
    new Rule(-62, new int[]{325}),
    new Rule(-62, new int[]{320}),
    new Rule(-44, new int[]{358,40,-94,-3,41}),
    new Rule(-44, new int[]{359,40,-40,41}),
    new Rule(-44, new int[]{262,-40}),
    new Rule(-44, new int[]{261,-40}),
    new Rule(-44, new int[]{260,40,-40,41}),
    new Rule(-44, new int[]{259,-40}),
    new Rule(-44, new int[]{258,-40}),
    new Rule(-94, new int[]{-39}),
    new Rule(-94, new int[]{-94,44,-39}),
    new Rule(-39, new int[]{-40}),
    };
    #endregion

    nonTerminals = new string[] {"", "property_name", "member_name", "possible_comma", 
      "returns_ref", "function", "fn", "is_reference", "is_variadic", "variable_modifiers", 
      "method_modifiers", "non_empty_member_modifiers", "member_modifier", "class_modifier", 
      "class_modifiers", "use_type", "backup_doc_comment", "enter_scope", "exit_scope", 
      "name", "type", "return_type", "type_expr", "optional_type", "extends_from", 
      "class_name_reference", "class_name", "name_list", "catch_name_list", "implements_list", 
      "interface_extends_list", "top_statement", "statement", "function_declaration_statement", 
      "class_declaration_statement", "trait_declaration_statement", "interface_declaratioimplements_listn_statement", 
      "interface_declaration_statement", "inline_html", "isset_variable", "expr", 
      "variable", "expr_without_variable", "new_expr", "internal_functions_in_yacc", 
      "callable_variable", "simple_variable", "scalar", "constant", "dereferencable_scalar", 
      "function_call", "static_member", "if_stmt", "alt_if_stmt", "const_decl", 
      "unset_variable", "global_var", "static_var", "echo_expr", "optional_expr", 
      "property", "encaps_var", "encaps_var_offset", "declare_statement", "trait_adaptation", 
      "trait_precedence", "trait_alias", "class_const_decl", "dereferencable", 
      "for_statement", "foreach_statement", "while_statement", "backticks_expr", 
      "method_body", "exit_expr", "finally_statement", "new_variable", "callable_expr", 
      "trait_adaptations", "variable_class_name", "inner_statement", "class_statement", 
      "top_statement_list", "const_list", "class_const_list", "inner_statement_list", 
      "class_statement_list", "for_exprs", "global_var_list", "static_var_list", 
      "echo_expr_list", "unset_variables", "trait_adaptation_list", "encaps_list", 
      "isset_variables", "property_list", "case_list", "switch_case_list", "non_empty_for_exprs", 
      "catch_list", "identifier", "semi_reserved", "reserved_non_modifiers", 
      "namespace_name", "unprefixed_use_declaration", "trait_method_reference", 
      "absolute_trait_method_reference", "use_declaration", "unprefixed_use_declarations", 
      "inline_use_declaration", "inline_use_declarations", "argument", "ctor_arguments", 
      "argument_list", "non_empty_argument_list", "parameter", "lexical_var", 
      "parameter_list", "non_empty_parameter_list", "lexical_vars", "lexical_var_list", 
      "possible_array_pair", "array_pair", "non_empty_array_pair_list", "array_pair_list", 
      "if_stmt_without_else", "alt_if_stmt_without_else", "foreach_variable", 
      "anonymous_class", "use_declarations", "group_use_declaration", "mixed_group_use_declaration", 
      "start", "$accept", "@1", "@2", "@3", "backup_fn_flags", "@4", "@5", "@6", 
      "case_separator", "@7", };
  }

  #endregion

  protected override void DoAction(int action)
  {
    switch (action)
    {
      case 2: // @1 -> 
{ SetNamingContext(null); }
        return;
      case 3: // start -> @1 top_statement_list 
{ 
		AssignNamingContext(); 
        _lexer.DocBlockList.Merge(new Span(0, int.MaxValue), value_stack.array[value_stack.top-1].yyval.NodeList, _astFactory);
		AssignStatements(value_stack.array[value_stack.top-1].yyval.NodeList);
		_astRoot = _astFactory.GlobalCode(yypos, value_stack.array[value_stack.top-1].yyval.NodeList, namingContext);
	}
        return;
      case 4: // reserved_non_modifiers -> T_INCLUDE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 5: // reserved_non_modifiers -> T_INCLUDE_ONCE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 6: // reserved_non_modifiers -> T_EVAL 
{ yyval.String = _lexer.TokenText; }
        return;
      case 7: // reserved_non_modifiers -> T_REQUIRE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 8: // reserved_non_modifiers -> T_REQUIRE_ONCE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 9: // reserved_non_modifiers -> T_LOGICAL_OR 
{ yyval.String = _lexer.TokenText; }
        return;
      case 10: // reserved_non_modifiers -> T_LOGICAL_XOR 
{ yyval.String = _lexer.TokenText; }
        return;
      case 11: // reserved_non_modifiers -> T_LOGICAL_AND 
{ yyval.String = _lexer.TokenText; }
        return;
      case 12: // reserved_non_modifiers -> T_INSTANCEOF 
{ yyval.String = _lexer.TokenText; }
        return;
      case 13: // reserved_non_modifiers -> T_NEW 
{ yyval.String = _lexer.TokenText; }
        return;
      case 14: // reserved_non_modifiers -> T_CLONE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 15: // reserved_non_modifiers -> T_EXIT 
{ yyval.String = _lexer.TokenText; }
        return;
      case 16: // reserved_non_modifiers -> T_IF 
{ yyval.String = _lexer.TokenText; }
        return;
      case 17: // reserved_non_modifiers -> T_ELSEIF 
{ yyval.String = _lexer.TokenText; }
        return;
      case 18: // reserved_non_modifiers -> T_ELSE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 19: // reserved_non_modifiers -> T_ENDIF 
{ yyval.String = _lexer.TokenText; }
        return;
      case 20: // reserved_non_modifiers -> T_ECHO 
{ yyval.String = _lexer.TokenText; }
        return;
      case 21: // reserved_non_modifiers -> T_DO 
{ yyval.String = _lexer.TokenText; }
        return;
      case 22: // reserved_non_modifiers -> T_WHILE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 23: // reserved_non_modifiers -> T_ENDWHILE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 24: // reserved_non_modifiers -> T_FOR 
{ yyval.String = _lexer.TokenText; }
        return;
      case 25: // reserved_non_modifiers -> T_ENDFOR 
{ yyval.String = _lexer.TokenText; }
        return;
      case 26: // reserved_non_modifiers -> T_FOREACH 
{ yyval.String = _lexer.TokenText; }
        return;
      case 27: // reserved_non_modifiers -> T_ENDFOREACH 
{ yyval.String = _lexer.TokenText; }
        return;
      case 28: // reserved_non_modifiers -> T_DECLARE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 29: // reserved_non_modifiers -> T_ENDDECLARE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 30: // reserved_non_modifiers -> T_AS 
{ yyval.String = _lexer.TokenText; }
        return;
      case 31: // reserved_non_modifiers -> T_TRY 
{ yyval.String = _lexer.TokenText; }
        return;
      case 32: // reserved_non_modifiers -> T_CATCH 
{ yyval.String = _lexer.TokenText; }
        return;
      case 33: // reserved_non_modifiers -> T_FINALLY 
{ yyval.String = _lexer.TokenText; }
        return;
      case 34: // reserved_non_modifiers -> T_THROW 
{ yyval.String = _lexer.TokenText; }
        return;
      case 35: // reserved_non_modifiers -> T_USE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 36: // reserved_non_modifiers -> T_INSTEADOF 
{ yyval.String = _lexer.TokenText; }
        return;
      case 37: // reserved_non_modifiers -> T_GLOBAL 
{ yyval.String = _lexer.TokenText; }
        return;
      case 38: // reserved_non_modifiers -> T_VAR 
{ yyval.String = _lexer.TokenText; }
        return;
      case 39: // reserved_non_modifiers -> T_UNSET 
{ yyval.String = _lexer.TokenText; }
        return;
      case 40: // reserved_non_modifiers -> T_ISSET 
{ yyval.String = _lexer.TokenText; }
        return;
      case 41: // reserved_non_modifiers -> T_EMPTY 
{ yyval.String = _lexer.TokenText; }
        return;
      case 42: // reserved_non_modifiers -> T_CONTINUE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 43: // reserved_non_modifiers -> T_GOTO 
{ yyval.String = _lexer.TokenText; }
        return;
      case 44: // reserved_non_modifiers -> T_FUNCTION 
{ yyval.String = _lexer.TokenText; }
        return;
      case 45: // reserved_non_modifiers -> T_CONST 
{ yyval.String = _lexer.TokenText; }
        return;
      case 46: // reserved_non_modifiers -> T_RETURN 
{ yyval.String = _lexer.TokenText; }
        return;
      case 47: // reserved_non_modifiers -> T_PRINT 
{ yyval.String = _lexer.TokenText; }
        return;
      case 48: // reserved_non_modifiers -> T_YIELD 
{ yyval.String = _lexer.TokenText; }
        return;
      case 49: // reserved_non_modifiers -> T_LIST 
{ yyval.String = _lexer.TokenText; }
        return;
      case 50: // reserved_non_modifiers -> T_SWITCH 
{ yyval.String = _lexer.TokenText; }
        return;
      case 51: // reserved_non_modifiers -> T_ENDSWITCH 
{ yyval.String = _lexer.TokenText; }
        return;
      case 52: // reserved_non_modifiers -> T_CASE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 53: // reserved_non_modifiers -> T_DEFAULT 
{ yyval.String = _lexer.TokenText; }
        return;
      case 54: // reserved_non_modifiers -> T_BREAK 
{ yyval.String = _lexer.TokenText; }
        return;
      case 55: // reserved_non_modifiers -> T_ARRAY 
{ yyval.String = _lexer.TokenText; }
        return;
      case 56: // reserved_non_modifiers -> T_CALLABLE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 57: // reserved_non_modifiers -> T_EXTENDS 
{ yyval.String = _lexer.TokenText; }
        return;
      case 58: // reserved_non_modifiers -> T_IMPLEMENTS 
{ yyval.String = _lexer.TokenText; }
        return;
      case 59: // reserved_non_modifiers -> T_NAMESPACE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 60: // reserved_non_modifiers -> T_TRAIT 
{ yyval.String = _lexer.TokenText; }
        return;
      case 61: // reserved_non_modifiers -> T_INTERFACE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 62: // reserved_non_modifiers -> T_CLASS 
{ yyval.String = _lexer.TokenText; }
        return;
      case 63: // reserved_non_modifiers -> T_CLASS_C 
{ yyval.String = _lexer.TokenText; }
        return;
      case 64: // reserved_non_modifiers -> T_TRAIT_C 
{ yyval.String = _lexer.TokenText; }
        return;
      case 65: // reserved_non_modifiers -> T_FUNC_C 
{ yyval.String = _lexer.TokenText; }
        return;
      case 66: // reserved_non_modifiers -> T_METHOD_C 
{ yyval.String = _lexer.TokenText; }
        return;
      case 67: // reserved_non_modifiers -> T_LINE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 68: // reserved_non_modifiers -> T_FILE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 69: // reserved_non_modifiers -> T_DIR 
{ yyval.String = _lexer.TokenText; }
        return;
      case 70: // reserved_non_modifiers -> T_NS_C 
{ yyval.String = _lexer.TokenText; }
        return;
      case 71: // reserved_non_modifiers -> T_FN 
{ yyval.String = _lexer.TokenText; }
        return;
      case 73: // semi_reserved -> T_STATIC 
{ yyval.String = _lexer.TokenText; }
        return;
      case 74: // semi_reserved -> T_ABSTRACT 
{ yyval.String = _lexer.TokenText; }
        return;
      case 75: // semi_reserved -> T_FINAL 
{ yyval.String = _lexer.TokenText; }
        return;
      case 76: // semi_reserved -> T_PRIVATE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 77: // semi_reserved -> T_PROTECTED 
{ yyval.String = _lexer.TokenText; }
        return;
      case 78: // semi_reserved -> T_PUBLIC 
{ yyval.String = _lexer.TokenText; }
        return;
      case 81: // top_statement_list -> top_statement_list top_statement 
{ yyval.NodeList = AddToTopStatementList<LangElement>(value_stack.array[value_stack.top-2].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 82: // top_statement_list -> 
{ yyval.NodeList = new List<LangElement>(); }
        return;
      case 83: // namespace_name -> T_STRING 
{ yyval.StringList = new List<string>() { value_stack.array[value_stack.top-1].yyval.String }; }
        return;
      case 84: // namespace_name -> namespace_name T_NS_SEPARATOR T_STRING 
{ yyval.StringList = AddToList<string>(value_stack.array[value_stack.top-3].yyval.StringList, value_stack.array[value_stack.top-1].yyval.String); }
        return;
      case 85: // name -> namespace_name 
{ yyval.QualifiedNameReference = new QualifiedNameRef(yypos, new QualifiedName(value_stack.array[value_stack.top-1].yyval.StringList, true, false)); }
        return;
      case 86: // name -> T_NAMESPACE T_NS_SEPARATOR namespace_name 
{ yyval.QualifiedNameReference = new QualifiedNameRef(yypos, MergeWithCurrentNamespace(namingContext.CurrentNamespace, value_stack.array[value_stack.top-1].yyval.StringList)); }
        return;
      case 87: // name -> T_NS_SEPARATOR namespace_name 
{ yyval.QualifiedNameReference = new QualifiedNameRef(yypos, new QualifiedName(value_stack.array[value_stack.top-1].yyval.StringList, true,  true)); }
        return;
      case 88: // top_statement -> statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 89: // top_statement -> function_declaration_statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 90: // top_statement -> class_declaration_statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 91: // top_statement -> trait_declaration_statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 92: // top_statement -> interface_declaration_statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 93: // top_statement -> T_HALT_COMPILER '(' ')' ';' 
{ yyval.Node = _astFactory.HaltCompiler(yypos); }
        return;
      case 94: // top_statement -> T_NAMESPACE namespace_name ';' 
{
			AssignNamingContext();
            SetNamingContext(value_stack.array[value_stack.top-2].yyval.StringList);
            SetDoc(yyval.Node = _currentNamespace = (NamespaceDecl)_astFactory.Namespace(yypos, namingContext.CurrentNamespace, value_stack.array[value_stack.top-2].yypos, namingContext));
		}
        return;
      case 95: // @2 -> 
{ SetNamingContext(value_stack.array[value_stack.top-2].yyval.StringList); }
        return;
      case 96: // top_statement -> T_NAMESPACE namespace_name backup_doc_comment @2 '{' top_statement_list '}' 
{ 
			yyval.Node = _astFactory.Namespace(yypos, namingContext.CurrentNamespace, value_stack.array[value_stack.top-6].yypos, CreateBlock(CombineSpans(value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-2].yyval.NodeList), namingContext);
			SetDoc(yyval.Node);
			ResetNamingContext(); 
		}
        return;
      case 97: // @3 -> 
{ SetNamingContext(null); }
        return;
      case 98: // top_statement -> T_NAMESPACE backup_doc_comment @3 '{' top_statement_list '}' 
{ 
			yyval.Node = _astFactory.Namespace(yypos, null, yypos, CreateBlock(CombineSpans(value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-2].yyval.NodeList), namingContext);
			SetDoc(yyval.Node);
			ResetNamingContext(); 
		}
        return;
      case 99: // top_statement -> T_USE mixed_group_use_declaration ';' 
{ yyval.Node = _astFactory.Use(yypos, value_stack.array[value_stack.top-2].yyval.UseList, AliasKind.Type); _contextType = AliasKind.Type;	/* TODO: Error - must contain only a single group use */	}
        return;
      case 100: // top_statement -> T_USE use_type group_use_declaration ';' 
{ yyval.Node = _astFactory.Use(yypos, value_stack.array[value_stack.top-2].yyval.UseList, value_stack.array[value_stack.top-3].yyval.Kind); _contextType = AliasKind.Type;				/* TODO: Error - must contain only a single group use */	}
        return;
      case 101: // top_statement -> T_USE use_declarations ';' 
{ yyval.Node = _astFactory.Use(yypos, value_stack.array[value_stack.top-2].yyval.UseList, AliasKind.Type); _contextType = AliasKind.Type;	/* TODO: Error - must contain only simple uses		  */	}
        return;
      case 102: // top_statement -> T_USE use_type use_declarations ';' 
{ yyval.Node = _astFactory.Use(yypos, value_stack.array[value_stack.top-2].yyval.UseList, value_stack.array[value_stack.top-3].yyval.Kind); _contextType = AliasKind.Type;				/* TODO: Error - must contain only simple uses		  */	}
        return;
      case 103: // top_statement -> T_CONST const_list ';' 
{
			SetDoc(yyval.Node = _astFactory.DeclList(yypos, PhpMemberAttributes.None, value_stack.array[value_stack.top-2].yyval.NodeList, null));
		}
        return;
      case 104: // use_type -> T_FUNCTION 
{ yyval.Kind = _contextType = AliasKind.Function; }
        return;
      case 105: // use_type -> T_CONST 
{ yyval.Kind = _contextType = AliasKind.Constant; }
        return;
      case 106: // group_use_declaration -> namespace_name T_NS_SEPARATOR '{' unprefixed_use_declarations possible_comma '}' 
{ yyval.UseList = new List<UseBase>() { AddAliases(yypos, value_stack.array[value_stack.top-6].yyval.StringList, CombineSpans(value_stack.array[value_stack.top-6].yypos, value_stack.array[value_stack.top-5].yypos), AddTrailingComma(value_stack.array[value_stack.top-3].yyval.AliasList, value_stack.array[value_stack.top-2].yyval.Bool), false) }; }
        return;
      case 107: // group_use_declaration -> T_NS_SEPARATOR namespace_name T_NS_SEPARATOR '{' unprefixed_use_declarations possible_comma '}' 
{ yyval.UseList = new List<UseBase>() { AddAliases(yypos, value_stack.array[value_stack.top-6].yyval.StringList, CombineSpans(value_stack.array[value_stack.top-7].yypos, value_stack.array[value_stack.top-6].yypos, value_stack.array[value_stack.top-5].yypos), AddTrailingComma(value_stack.array[value_stack.top-3].yyval.AliasList, value_stack.array[value_stack.top-2].yyval.Bool), true) }; }
        return;
      case 108: // mixed_group_use_declaration -> namespace_name T_NS_SEPARATOR '{' inline_use_declarations possible_comma '}' 
{  yyval.UseList = new List<UseBase>() { AddAliases(yypos, value_stack.array[value_stack.top-6].yyval.StringList, CombineSpans(value_stack.array[value_stack.top-6].yypos, value_stack.array[value_stack.top-5].yypos), AddTrailingComma(value_stack.array[value_stack.top-3].yyval.ContextAliasList, value_stack.array[value_stack.top-2].yyval.Bool), false) }; }
        return;
      case 109: // mixed_group_use_declaration -> T_NS_SEPARATOR namespace_name T_NS_SEPARATOR '{' inline_use_declarations possible_comma '}' 
{ yyval.UseList = new List<UseBase>() { AddAliases(yypos, value_stack.array[value_stack.top-6].yyval.StringList, CombineSpans(value_stack.array[value_stack.top-7].yypos, value_stack.array[value_stack.top-6].yypos, value_stack.array[value_stack.top-5].yypos), AddTrailingComma(value_stack.array[value_stack.top-3].yyval.ContextAliasList, value_stack.array[value_stack.top-2].yyval.Bool), true) }; }
        return;
      case 110: // possible_comma -> 
{ yyval.Bool = false; }
        return;
      case 111: // possible_comma -> ',' 
{ yyval.Bool = true;  }
        return;
      case 112: // inline_use_declarations -> inline_use_declarations ',' inline_use_declaration 
{ yyval.ContextAliasList = AddToList<ContextAlias>(value_stack.array[value_stack.top-3].yyval.ContextAliasList, value_stack.array[value_stack.top-1].yyval.ContextAlias); }
        return;
      case 113: // inline_use_declarations -> inline_use_declaration 
{ yyval.ContextAliasList = new List<ContextAlias>() { value_stack.array[value_stack.top-1].yyval.ContextAlias }; }
        return;
      case 114: // unprefixed_use_declarations -> unprefixed_use_declarations ',' unprefixed_use_declaration 
{ yyval.AliasList = AddToList<CompleteAlias>(value_stack.array[value_stack.top-3].yyval.AliasList, value_stack.array[value_stack.top-1].yyval.Alias); }
        return;
      case 115: // unprefixed_use_declarations -> unprefixed_use_declaration 
{ yyval.AliasList = new List<CompleteAlias>() { value_stack.array[value_stack.top-1].yyval.Alias }; }
        return;
      case 116: // use_declarations -> use_declarations ',' use_declaration 
{ yyval.UseList = AddToList<UseBase>(value_stack.array[value_stack.top-3].yyval.UseList, AddAlias(value_stack.array[value_stack.top-1].yyval.Alias)); }
        return;
      case 117: // use_declarations -> use_declaration 
{ yyval.UseList = new List<UseBase>() { AddAlias(value_stack.array[value_stack.top-1].yyval.Alias) }; }
        return;
      case 118: // inline_use_declaration -> unprefixed_use_declaration 
{ yyval.ContextAlias = JoinTuples(yypos, value_stack.array[value_stack.top-1].yyval.Alias, AliasKind.Type); }
        return;
      case 119: // inline_use_declaration -> use_type unprefixed_use_declaration 
{ yyval.ContextAlias = JoinTuples(yypos, value_stack.array[value_stack.top-1].yyval.Alias, (AliasKind)value_stack.array[value_stack.top-2].yyval.Kind);  }
        return;
      case 120: // unprefixed_use_declaration -> namespace_name 
{ yyval.Alias = new CompleteAlias(new QualifiedNameRef(yypos, new QualifiedName(value_stack.array[value_stack.top-1].yyval.StringList, true, false)), NameRef.Invalid); }
        return;
      case 121: // unprefixed_use_declaration -> namespace_name T_AS T_STRING 
{ yyval.Alias = new CompleteAlias(new QualifiedNameRef(value_stack.array[value_stack.top-3].yypos, new QualifiedName(value_stack.array[value_stack.top-3].yyval.StringList, true, false)), new NameRef(value_stack.array[value_stack.top-1].yypos, value_stack.array[value_stack.top-1].yyval.String)); }
        return;
      case 122: // use_declaration -> unprefixed_use_declaration 
{ yyval.Alias = value_stack.array[value_stack.top-1].yyval.Alias; }
        return;
      case 123: // use_declaration -> T_NS_SEPARATOR unprefixed_use_declaration 
{ 
				var src = value_stack.array[value_stack.top-1].yyval.Alias;
				yyval.Alias = new CompleteAlias(new QualifiedNameRef(CombineSpans(value_stack.array[value_stack.top-2].yypos, src.Item1.Span), 
					new QualifiedName(src.Item1.QualifiedName.Name, src.Item1.QualifiedName.Namespaces, true)), src.Item2); 
			}
        return;
      case 124: // const_list -> const_list ',' const_decl 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 125: // const_list -> const_decl 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 126: // inner_statement_list -> inner_statement_list inner_statement 
{ yyval.NodeList = AddToTopStatementList<LangElement>(value_stack.array[value_stack.top-2].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 127: // inner_statement_list -> 
{ yyval.NodeList = new List<LangElement>(); }
        return;
      case 128: // inner_statement -> statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 129: // inner_statement -> function_declaration_statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 130: // inner_statement -> class_declaration_statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 131: // inner_statement -> trait_declaration_statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 132: // inner_statement -> interface_declaration_statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 133: // inner_statement -> T_HALT_COMPILER '(' ')' ';' 
{ 
				yyval.Node = _astFactory.HaltCompiler(yypos); 
				_errors.Error(yypos, FatalErrors.InvalidHaltCompiler); 
			}
        return;
      case 134: // statement -> '{' inner_statement_list '}' 
{ yyval.Node = CreateBlock(yypos, value_stack.array[value_stack.top-2].yyval.NodeList); }
        return;
      case 135: // statement -> enter_scope if_stmt exit_scope 
{ yyval.Node = value_stack.array[value_stack.top-2].yyval.Node; }
        return;
      case 136: // statement -> enter_scope alt_if_stmt exit_scope 
{ yyval.Node = value_stack.array[value_stack.top-2].yyval.Node; }
        return;
      case 137: // statement -> T_WHILE '(' expr ')' enter_scope while_statement exit_scope 
{ yyval.Node = _astFactory.While(yypos, value_stack.array[value_stack.top-5].yyval.Node, CombineSpans(value_stack.array[value_stack.top-6].yypos, value_stack.array[value_stack.top-4].yypos), value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 138: // statement -> T_DO enter_scope statement T_WHILE '(' expr ')' ';' exit_scope 
{ yyval.Node = _astFactory.Do(yypos, value_stack.array[value_stack.top-7].yyval.Node, value_stack.array[value_stack.top-4].yyval.Node, CombineSpans(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-3].yypos)); }
        return;
      case 139: // statement -> T_FOR '(' for_exprs ';' for_exprs ';' for_exprs ')' enter_scope for_statement exit_scope 
{ yyval.Node = _astFactory.For(yypos, value_stack.array[value_stack.top-9].yyval.NodeList, value_stack.array[value_stack.top-7].yyval.NodeList, value_stack.array[value_stack.top-5].yyval.NodeList, CombineSpans(value_stack.array[value_stack.top-10].yypos, value_stack.array[value_stack.top-4].yypos), value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 140: // statement -> T_SWITCH '(' expr ')' enter_scope switch_case_list exit_scope 
{ yyval.Node = _astFactory.Switch(yypos, value_stack.array[value_stack.top-5].yyval.Node, value_stack.array[value_stack.top-2].yyval.NodeList); }
        return;
      case 141: // statement -> T_BREAK optional_expr ';' 
{ yyval.Node = _astFactory.Jump(yypos, JumpStmt.Types.Break, value_stack.array[value_stack.top-2].yyval.Node);}
        return;
      case 142: // statement -> T_CONTINUE optional_expr ';' 
{ yyval.Node = _astFactory.Jump(yypos, JumpStmt.Types.Continue, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 143: // statement -> T_RETURN optional_expr ';' 
{ yyval.Node = _astFactory.Jump(yypos, JumpStmt.Types.Return, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 144: // statement -> T_GLOBAL global_var_list ';' 
{ yyval.Node = _astFactory.Global(yypos, value_stack.array[value_stack.top-2].yyval.NodeList); }
        return;
      case 145: // statement -> T_STATIC static_var_list ';' 
{ yyval.Node = _astFactory.Static(yypos, value_stack.array[value_stack.top-2].yyval.NodeList); }
        return;
      case 146: // statement -> T_ECHO echo_expr_list ';' 
{ yyval.Node = _astFactory.Echo(yypos, value_stack.array[value_stack.top-2].yyval.NodeList); }
        return;
      case 147: // statement -> T_INLINE_HTML 
{ yyval.Node = _astFactory.InlineHtml(yypos, value_stack.array[value_stack.top-1].yyval.String); }
        return;
      case 148: // statement -> expr ';' 
{ yyval.Node = _astFactory.ExpressionStmt(yypos, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 149: // statement -> T_UNSET '(' unset_variables possible_comma ')' ';' 
{ yyval.Node = _astFactory.Unset(yypos, AddTrailingComma(value_stack.array[value_stack.top-4].yyval.NodeList, value_stack.array[value_stack.top-3].yyval.Bool)); }
        return;
      case 150: // statement -> T_FOREACH '(' expr T_AS foreach_variable ')' enter_scope foreach_statement exit_scope 
{ yyval.Node = _astFactory.Foreach(yypos, value_stack.array[value_stack.top-7].yyval.Node, null, value_stack.array[value_stack.top-5].yyval.ForeachVar, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 151: // statement -> T_FOREACH '(' expr T_AS foreach_variable T_DOUBLE_ARROW foreach_variable ')' enter_scope foreach_statement exit_scope 
{ yyval.Node = _astFactory.Foreach(yypos, value_stack.array[value_stack.top-9].yyval.Node, value_stack.array[value_stack.top-7].yyval.ForeachVar, value_stack.array[value_stack.top-5].yyval.ForeachVar, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 152: // statement -> T_DECLARE '(' const_list ')' declare_statement 
{ yyval.Node = _astFactory.Declare(yypos, value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 153: // statement -> ';' 
{ yyval.Node = _astFactory.EmptyStmt(yypos); }
        return;
      case 154: // statement -> T_TRY '{' inner_statement_list '}' enter_scope catch_list finally_statement exit_scope 
{ yyval.Node = _astFactory.TryCatch(yypos, CreateBlock(CombineSpans(value_stack.array[value_stack.top-7].yypos, value_stack.array[value_stack.top-5].yypos), value_stack.array[value_stack.top-6].yyval.NodeList), value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 155: // statement -> T_THROW expr ';' 
{ yyval.Node = _astFactory.Throw(yypos, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 156: // statement -> T_GOTO T_STRING ';' 
{ yyval.Node = _astFactory.Goto(yypos, value_stack.array[value_stack.top-2].yyval.String, value_stack.array[value_stack.top-2].yypos); }
        return;
      case 157: // statement -> T_STRING ':' 
{ yyval.Node = _astFactory.Label(yypos, value_stack.array[value_stack.top-2].yyval.String, value_stack.array[value_stack.top-2].yypos); }
        return;
      case 158: // catch_list -> 
{ yyval.NodeList = new List<LangElement>(); }
        return;
      case 159: // catch_list -> catch_list T_CATCH '(' catch_name_list T_VARIABLE ')' '{' inner_statement_list '}' 
{ 
				yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-9].yyval.NodeList, _astFactory.Catch(CombineSpans(value_stack.array[value_stack.top-8].yypos, value_stack.array[value_stack.top-1].yypos), _astFactory.TypeReference(value_stack.array[value_stack.top-6].yypos, value_stack.array[value_stack.top-6].yyval.TypeRefList), 
					(DirectVarUse)_astFactory.Variable(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-5].yyval.String, NullLangElement, true), CreateBlock(CombineSpans(value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-2].yyval.NodeList))); 
			}
        return;
      case 160: // catch_name_list -> name 
{ yyval.TypeRefList = new List<TypeRef>() { CreateTypeRef(value_stack.array[value_stack.top-1].yyval.QualifiedNameReference) }; }
        return;
      case 161: // catch_name_list -> catch_name_list '|' name 
{ yyval.TypeRefList = AddToList<TypeRef>(value_stack.array[value_stack.top-3].yyval.TypeRefList, CreateTypeRef(value_stack.array[value_stack.top-1].yyval.QualifiedNameReference)); }
        return;
      case 162: // finally_statement -> 
{ yyval.Node = null; }
        return;
      case 163: // finally_statement -> T_FINALLY '{' inner_statement_list '}' 
{ yyval.Node =_astFactory.Finally(yypos, CreateBlock(CombineSpans(value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-2].yyval.NodeList)); }
        return;
      case 164: // unset_variables -> unset_variable 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 165: // unset_variables -> unset_variables ',' unset_variable 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 166: // unset_variable -> variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 167: // function_declaration_statement -> function returns_ref T_STRING backup_doc_comment '(' parameter_list ')' return_type backup_fn_flags enter_scope '{' inner_statement_list '}' exit_scope backup_fn_flags 
{ 
			yyval.Node = _astFactory.Function(yypos, isConditional, value_stack.array[value_stack.top-14].yyval.Long == (long)FormalParam.Flags.IsByRef, PhpMemberAttributes.None, value_stack.array[value_stack.top-8].yyval.TypeReference, 
			new Name(value_stack.array[value_stack.top-13].yyval.String), value_stack.array[value_stack.top-13].yypos, null, value_stack.array[value_stack.top-10].yyval.FormalParamList, CombineSpans(value_stack.array[value_stack.top-11].yypos, value_stack.array[value_stack.top-9].yypos), 
			CreateBlock(CombineSpans(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-3].yypos), value_stack.array[value_stack.top-4].yyval.NodeList)); 
			SetDoc(yyval.Node);
		}
        return;
      case 168: // is_reference -> 
{ yyval.Long = 0; }
        return;
      case 169: // is_reference -> '&' 
{ yyval.Long = (long)FormalParam.Flags.IsByRef; }
        return;
      case 170: // is_variadic -> 
{ yyval.Long = 0; }
        return;
      case 171: // is_variadic -> T_ELLIPSIS 
{ yyval.Long = (long)FormalParam.Flags.IsVariadic; }
        return;
      case 172: // @4 -> 
{PushClassContext(value_stack.array[value_stack.top-2].yyval.String, value_stack.array[value_stack.top-1].yyval.TypeReference, (PhpMemberAttributes)value_stack.array[value_stack.top-4].yyval.Long);}
        return;
      case 173: // class_declaration_statement -> class_modifiers T_CLASS T_STRING extends_from @4 implements_list backup_doc_comment enter_scope '{' class_statement_list '}' exit_scope 
{ 
			yyval.Node = _astFactory.Type(yypos, CombineSpans(value_stack.array[value_stack.top-12].yypos, value_stack.array[value_stack.top-11].yypos, value_stack.array[value_stack.top-10].yypos, value_stack.array[value_stack.top-9].yypos, value_stack.array[value_stack.top-7].yypos), isConditional, (PhpMemberAttributes)value_stack.array[value_stack.top-12].yyval.Long, new Name(value_stack.array[value_stack.top-10].yyval.String), value_stack.array[value_stack.top-10].yypos, null, 
				ConvertToNamedTypeRef(value_stack.array[value_stack.top-9].yyval.TypeReference), value_stack.array[value_stack.top-7].yyval.TypeRefList.Select(ConvertToNamedTypeRef), value_stack.array[value_stack.top-3].yyval.NodeList, CombineSpans(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos)); 
			SetDoc(yyval.Node);
			PopClassContext();
		}
        return;
      case 174: // class_modifiers -> 
{ yyval.Long = (long)PhpMemberAttributes.None; }
        return;
      case 175: // class_modifiers -> class_modifier class_modifiers 
{ yyval.Long = value_stack.array[value_stack.top-2].yyval.Long | value_stack.array[value_stack.top-1].yyval.Long; }
        return;
      case 176: // class_modifier -> T_ABSTRACT 
{ yyval.Long = (long)PhpMemberAttributes.Abstract; }
        return;
      case 177: // class_modifier -> T_FINAL 
{ yyval.Long = (long)PhpMemberAttributes.Final; }
        return;
      case 178: // @5 -> 
{PushClassContext(value_stack.array[value_stack.top-1].yyval.String, null, PhpMemberAttributes.Trait);}
        return;
      case 179: // trait_declaration_statement -> T_TRAIT T_STRING @5 backup_doc_comment enter_scope '{' class_statement_list '}' exit_scope 
{ 
			yyval.Node = _astFactory.Type(yypos, CombineSpans(value_stack.array[value_stack.top-9].yypos, value_stack.array[value_stack.top-8].yypos), isConditional, PhpMemberAttributes.Trait, 
				new Name(value_stack.array[value_stack.top-8].yyval.String), value_stack.array[value_stack.top-8].yypos, null, null, new List<INamedTypeRef>(), value_stack.array[value_stack.top-3].yyval.NodeList, CombineSpans(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos)); 
			SetDoc(yyval.Node);
			PopClassContext();
		}
        return;
      case 180: // @6 -> 
{PushClassContext(value_stack.array[value_stack.top-1].yyval.String, null, PhpMemberAttributes.Interface);}
        return;
      case 181: // interface_declaration_statement -> T_INTERFACE T_STRING @6 interface_extends_list backup_doc_comment enter_scope '{' class_statement_list '}' exit_scope 
{ 
			yyval.Node = _astFactory.Type(yypos, CombineSpans(value_stack.array[value_stack.top-10].yypos, value_stack.array[value_stack.top-9].yypos, value_stack.array[value_stack.top-7].yypos), isConditional, PhpMemberAttributes.Interface, 
				new Name(value_stack.array[value_stack.top-9].yyval.String), value_stack.array[value_stack.top-9].yypos, null, null, value_stack.array[value_stack.top-7].yyval.TypeRefList.Select(ConvertToNamedTypeRef), value_stack.array[value_stack.top-3].yyval.NodeList, CombineSpans(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos)); 
			SetDoc(yyval.Node);
			PopClassContext();
		}
        return;
      case 182: // extends_from -> 
{ yyval.TypeReference = null; }
        return;
      case 183: // extends_from -> T_EXTENDS name 
{ yyval.TypeReference = CreateTypeRef(value_stack.array[value_stack.top-1].yyval.QualifiedNameReference); }
        return;
      case 184: // interface_extends_list -> 
{ yyval.TypeRefList = TypeRef.EmptyList; }
        return;
      case 185: // interface_extends_list -> T_EXTENDS name_list 
{ yyval.TypeRefList = value_stack.array[value_stack.top-1].yyval.TypeRefList; }
        return;
      case 186: // implements_list -> 
{ yyval.TypeRefList = TypeRef.EmptyList; }
        return;
      case 187: // implements_list -> T_IMPLEMENTS name_list 
{ yyval.TypeRefList = value_stack.array[value_stack.top-1].yyval.TypeRefList; }
        return;
      case 188: // foreach_variable -> variable 
{ yyval.ForeachVar = _astFactory.ForeachVariable(yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 189: // foreach_variable -> '&' variable 
{ yyval.ForeachVar = _astFactory.ForeachVariable(yypos, value_stack.array[value_stack.top-1].yyval.Node, true); }
        return;
      case 190: // foreach_variable -> T_LIST '(' array_pair_list ')' 
{ yyval.ForeachVar = _astFactory.ForeachVariable(yypos, _astFactory.List(yypos, value_stack.array[value_stack.top-2].yyval.ItemList, true)); }
        return;
      case 191: // foreach_variable -> '[' array_pair_list ']' 
{ yyval.ForeachVar = _astFactory.ForeachVariable(yypos, _astFactory.List(yypos, value_stack.array[value_stack.top-2].yyval.ItemList, false)); }
        return;
      case 192: // for_statement -> statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 193: // for_statement -> ':' inner_statement_list T_ENDFOR ';' 
{ yyval.Node = StatementsToBlock(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-3].yyval.NodeList, Tokens.T_ENDFOR); }
        return;
      case 194: // foreach_statement -> statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 195: // foreach_statement -> ':' inner_statement_list T_ENDFOREACH ';' 
{ yyval.Node = StatementsToBlock(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-3].yyval.NodeList, Tokens.T_ENDFOREACH); }
        return;
      case 196: // declare_statement -> statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 197: // declare_statement -> ':' inner_statement_list T_ENDDECLARE ';' 
{ yyval.Node = StatementsToBlock(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-3].yyval.NodeList, Tokens.T_ENDDECLARE); }
        return;
      case 198: // switch_case_list -> '{' case_list '}' 
{ yyval.NodeList = value_stack.array[value_stack.top-2].yyval.NodeList; }
        return;
      case 199: // switch_case_list -> '{' ';' case_list '}' 
{ yyval.NodeList = value_stack.array[value_stack.top-2].yyval.NodeList; }
        return;
      case 200: // switch_case_list -> ':' case_list T_ENDSWITCH ';' 
{ yyval.NodeList = value_stack.array[value_stack.top-3].yyval.NodeList; }
        return;
      case 201: // switch_case_list -> ':' ';' case_list T_ENDSWITCH ';' 
{ yyval.NodeList = value_stack.array[value_stack.top-3].yyval.NodeList; }
        return;
      case 202: // case_list -> 
{ yyval.NodeList = new List<LangElement>(); }
        return;
      case 203: // case_list -> case_list T_CASE expr case_separator inner_statement_list 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-5].yyval.NodeList, _astFactory.Case(CombineSpans(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yypos), 
				value_stack.array[value_stack.top-3].yyval.Node, CreateCaseBlock(CombineSpans(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-1].yyval.NodeList))); }
        return;
      case 204: // case_list -> case_list T_DEFAULT case_separator inner_statement_list 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-4].yyval.NodeList, _astFactory.Case(CombineSpans(value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yypos), 
				null, CreateCaseBlock(CombineSpans(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-1].yyval.NodeList))); }
        return;
      case 207: // while_statement -> statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 208: // while_statement -> ':' inner_statement_list T_ENDWHILE ';' 
{ yyval.Node = StatementsToBlock(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-3].yyval.NodeList, Tokens.T_ENDWHILE); }
        return;
      case 209: // if_stmt_without_else -> T_IF '(' expr ')' statement 
{ yyval.IfItemList = new List<IfStatement>() { 
				new IfStatement(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node) }; 
			}
        return;
      case 210: // if_stmt_without_else -> if_stmt_without_else T_ELSEIF '(' expr ')' statement 
{ yyval.IfItemList = AddToList<IfStatement>(value_stack.array[value_stack.top-6].yyval.IfItemList, 
				new IfStatement(CombineSpans(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node)); 
			}
        return;
      case 211: // if_stmt -> if_stmt_without_else 
{ ((List<IfStatement>)value_stack.array[value_stack.top-1].yyval.IfItemList).Reverse(); yyval.Node = null; 
			foreach (var item in (List<IfStatement>)value_stack.array[value_stack.top-1].yyval.IfItemList) 
				yyval.Node = _astFactory.If(yyval.Node != null? CombineSpans(item.Span, (yyval.Node).Span): item.Span, item.Condition, item.Body, yyval.Node); }
        return;
      case 212: // if_stmt -> if_stmt_without_else T_ELSE statement 
{ ((List<IfStatement>)value_stack.array[value_stack.top-3].yyval.IfItemList).Reverse(); yyval.Node = _astFactory.If(CombineSpans(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yypos), null, value_stack.array[value_stack.top-1].yyval.Node, null); 
			foreach (var item in (List<IfStatement>)value_stack.array[value_stack.top-3].yyval.IfItemList) yyval.Node = _astFactory.If(CombineSpans(item.Span, (yyval.Node).Span), item.Condition, item.Body, yyval.Node); }
        return;
      case 213: // alt_if_stmt_without_else -> T_IF '(' expr ')' ':' inner_statement_list 
{ 
				yyval.IfItemList = new List<IfStatement>() { new IfStatement(yypos, value_stack.array[value_stack.top-4].yyval.Node, StatementsToBlock(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yyval.NodeList, Tokens.END)) }; 
			}
        return;
      case 214: // alt_if_stmt_without_else -> alt_if_stmt_without_else T_ELSEIF '(' expr ')' ':' inner_statement_list 
{ 
				RebuildLast(value_stack.array[value_stack.top-7].yyval.IfItemList, value_stack.array[value_stack.top-6].yypos, Tokens.T_ELSEIF);
				yyval.IfItemList = AddToList<IfStatement>(value_stack.array[value_stack.top-7].yyval.IfItemList, 
					new IfStatement(CombineSpans(value_stack.array[value_stack.top-6].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-4].yyval.Node, StatementsToBlock(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yyval.NodeList, Tokens.END))); 
			}
        return;
      case 215: // alt_if_stmt -> alt_if_stmt_without_else T_ENDIF ';' 
{ RebuildLast(value_stack.array[value_stack.top-3].yyval.IfItemList, value_stack.array[value_stack.top-2].yypos, Tokens.T_ENDIF);
			 ((List<IfStatement>)value_stack.array[value_stack.top-3].yyval.IfItemList).Reverse(); yyval.Node = null; 
			foreach (var item in (List<IfStatement>)value_stack.array[value_stack.top-3].yyval.IfItemList) 
				yyval.Node = _astFactory.If(yyval.Node != null? CombineSpans(item.Span, (yyval.Node).Span): item.Span, item.Condition, item.Body, yyval.Node); }
        return;
      case 216: // alt_if_stmt -> alt_if_stmt_without_else T_ELSE ':' inner_statement_list T_ENDIF ';' 
{ RebuildLast(value_stack.array[value_stack.top-6].yyval.IfItemList, value_stack.array[value_stack.top-5].yypos, Tokens.T_ELSE);
			((List<IfStatement>)value_stack.array[value_stack.top-6].yyval.IfItemList).Reverse(); yyval.Node = _astFactory.If(CombineSpans(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-1].yypos), null, StatementsToBlock(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-3].yyval.NodeList, Tokens.T_ENDIF), null); 
			foreach (var item in (List<IfStatement>)value_stack.array[value_stack.top-6].yyval.IfItemList) yyval.Node = _astFactory.If(CombineSpans(item.Span, (yyval.Node).Span), item.Condition, item.Body, yyval.Node); }
        return;
      case 217: // parameter_list -> non_empty_parameter_list 
{ yyval.FormalParamList = value_stack.array[value_stack.top-1].yyval.FormalParamList; }
        return;
      case 218: // parameter_list -> 
{ yyval.FormalParamList = new List<FormalParam>(); }
        return;
      case 219: // non_empty_parameter_list -> parameter 
{ yyval.FormalParamList = new List<FormalParam>() { (FormalParam)value_stack.array[value_stack.top-1].yyval.FormalParam }; }
        return;
      case 220: // non_empty_parameter_list -> non_empty_parameter_list ',' parameter 
{ yyval.FormalParamList = AddToList<FormalParam>(value_stack.array[value_stack.top-3].yyval.FormalParamList, value_stack.array[value_stack.top-1].yyval.FormalParam); }
        return;
      case 221: // parameter -> optional_type is_reference is_variadic T_VARIABLE 
{ yyval.FormalParam = _astFactory.Parameter(CombineSpans(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-1].yyval.String, value_stack.array[value_stack.top-1].yypos, value_stack.array[value_stack.top-4].yyval.TypeReference, (FormalParam.Flags)value_stack.array[value_stack.top-3].yyval.Long|(FormalParam.Flags)value_stack.array[value_stack.top-2].yyval.Long, null); /* Important - @$ is invalid when optional_type is empty */ }
        return;
      case 222: // parameter -> optional_type is_reference is_variadic T_VARIABLE '=' expr 
{ yyval.FormalParam = _astFactory.Parameter(CombineSpans(value_stack.array[value_stack.top-6].yypos, value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-3].yyval.String, value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-6].yyval.TypeReference, (FormalParam.Flags)value_stack.array[value_stack.top-5].yyval.Long|(FormalParam.Flags)value_stack.array[value_stack.top-4].yyval.Long|FormalParam.Flags.Default, (Expression)value_stack.array[value_stack.top-1].yyval.Node); /* Important - @$ is invalid when optional_type is empty */ }
        return;
      case 223: // optional_type -> 
{ yyval.TypeReference = null; }
        return;
      case 224: // optional_type -> type_expr 
{ yyval.TypeReference = value_stack.array[value_stack.top-1].yyval.TypeReference; }
        return;
      case 225: // type_expr -> type 
{ yyval.TypeReference = value_stack.array[value_stack.top-1].yyval.TypeReference; }
        return;
      case 226: // type_expr -> '?' type 
{ yyval.TypeReference = _astFactory.NullableTypeReference(yypos, value_stack.array[value_stack.top-1].yyval.TypeReference); }
        return;
      case 227: // type -> T_ARRAY 
{ yyval.TypeReference = _astFactory.PrimitiveTypeReference(yypos, PrimitiveTypeRef.PrimitiveType.array); }
        return;
      case 228: // type -> T_CALLABLE 
{ yyval.TypeReference = _astFactory.PrimitiveTypeReference(yypos, PrimitiveTypeRef.PrimitiveType.callable); }
        return;
      case 229: // type -> name 
{ yyval.TypeReference = CreateTypeRef(value_stack.array[value_stack.top-1].yyval.QualifiedNameReference, true); }
        return;
      case 230: // return_type -> 
{ yyval.TypeReference = null; }
        return;
      case 231: // return_type -> ':' type_expr 
{ yyval.TypeReference = value_stack.array[value_stack.top-1].yyval.TypeReference; }
        return;
      case 232: // argument_list -> '(' ')' 
{ yyval.ParamList = new List<ActualParam>(); }
        return;
      case 233: // argument_list -> '(' non_empty_argument_list possible_comma ')' 
{ yyval.ParamList = AddTrailingComma(value_stack.array[value_stack.top-3].yyval.ParamList, value_stack.array[value_stack.top-2].yyval.Bool); }
        return;
      case 234: // non_empty_argument_list -> argument 
{ yyval.ParamList = new List<ActualParam>() { value_stack.array[value_stack.top-1].yyval.Param }; }
        return;
      case 235: // non_empty_argument_list -> non_empty_argument_list ',' argument 
{ yyval.ParamList = AddToList<ActualParam>(value_stack.array[value_stack.top-3].yyval.ParamList, value_stack.array[value_stack.top-1].yyval.Param); }
        return;
      case 236: // argument -> expr 
{ yyval.Param = _astFactory.ActualParameter(yypos, value_stack.array[value_stack.top-1].yyval.Node, ActualParam.Flags.Default); }
        return;
      case 237: // argument -> T_ELLIPSIS expr 
{ yyval.Param = _astFactory.ActualParameter(yypos, value_stack.array[value_stack.top-1].yyval.Node, ActualParam.Flags.IsUnpack); }
        return;
      case 238: // global_var_list -> global_var_list ',' global_var 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 239: // global_var_list -> global_var 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 240: // global_var -> simple_variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 241: // static_var_list -> static_var_list ',' static_var 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 242: // static_var_list -> static_var 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 243: // static_var -> T_VARIABLE 
{ yyval.Node = _astFactory.StaticVarDecl(yypos, new VariableName(value_stack.array[value_stack.top-1].yyval.String), null); }
        return;
      case 244: // static_var -> T_VARIABLE '=' expr 
{ yyval.Node = _astFactory.StaticVarDecl(yypos, new VariableName(value_stack.array[value_stack.top-3].yyval.String), value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 245: // class_statement_list -> class_statement_list class_statement 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-2].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 246: // class_statement_list -> 
{ yyval.NodeList = new List<LangElement>(); }
        return;
      case 247: // class_statement -> variable_modifiers optional_type property_list ';' 
{ 
				yyval.Node = _astFactory.DeclList(yypos, (PhpMemberAttributes)value_stack.array[value_stack.top-4].yyval.Long, value_stack.array[value_stack.top-2].yyval.NodeList, value_stack.array[value_stack.top-3].yyval.TypeReference); 
				SetDoc(yyval.Node);
			}
        return;
      case 248: // class_statement -> method_modifiers T_CONST class_const_list ';' 
{ 
				yyval.Node = _astFactory.DeclList(yypos, (PhpMemberAttributes)value_stack.array[value_stack.top-4].yyval.Long, value_stack.array[value_stack.top-2].yyval.NodeList, null); 
				SetDoc(yyval.Node);
			}
        return;
      case 249: // class_statement -> T_USE name_list trait_adaptations 
{ yyval.Node = _astFactory.TraitUse(yypos, value_stack.array[value_stack.top-2].yyval.TypeRefList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 250: // class_statement -> method_modifiers function returns_ref identifier backup_doc_comment '(' parameter_list ')' return_type backup_fn_flags method_body backup_fn_flags 
{	
				yyval.Node = _astFactory.Method(yypos, value_stack.array[value_stack.top-10].yyval.Long == (long)FormalParam.Flags.IsByRef, (PhpMemberAttributes)value_stack.array[value_stack.top-12].yyval.Long, 
					value_stack.array[value_stack.top-4].yyval.TypeReference, value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-9].yyval.String, value_stack.array[value_stack.top-9].yypos, null, value_stack.array[value_stack.top-6].yyval.FormalParamList, CombineSpans(value_stack.array[value_stack.top-7].yypos, value_stack.array[value_stack.top-5].yypos), null, value_stack.array[value_stack.top-2].yyval.Node);
				SetDoc(yyval.Node);
			}
        return;
      case 251: // name_list -> name 
{ yyval.TypeRefList = new List<TypeRef>() { CreateTypeRef(value_stack.array[value_stack.top-1].yyval.QualifiedNameReference) }; }
        return;
      case 252: // name_list -> name_list ',' name 
{ yyval.TypeRefList = AddToList<TypeRef>(value_stack.array[value_stack.top-3].yyval.TypeRefList, CreateTypeRef(value_stack.array[value_stack.top-1].yyval.QualifiedNameReference)); }
        return;
      case 253: // trait_adaptations -> ';' 
{ yyval.Node = null; }
        return;
      case 254: // trait_adaptations -> '{' '}' 
{ yyval.Node = _astFactory.TraitAdaptationBlock(yypos, new List<LangElement>()); }
        return;
      case 255: // trait_adaptations -> '{' trait_adaptation_list '}' 
{ yyval.Node = _astFactory.TraitAdaptationBlock(yypos, value_stack.array[value_stack.top-2].yyval.NodeList); }
        return;
      case 256: // trait_adaptation_list -> trait_adaptation 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node };
 }
        return;
      case 257: // trait_adaptation_list -> trait_adaptation_list trait_adaptation 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-2].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 258: // trait_adaptation -> trait_precedence 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 259: // trait_adaptation -> trait_alias 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 260: // trait_precedence -> absolute_trait_method_reference T_INSTEADOF name_list ';' 
{ yyval.Node = _astFactory.TraitAdaptationPrecedence(yypos, (Tuple<TypeRef,NameRef>)value_stack.array[value_stack.top-4].yyval.Object, value_stack.array[value_stack.top-2].yyval.TypeRefList); }
        return;
      case 261: // trait_alias -> trait_method_reference T_AS T_STRING ';' 
{ yyval.Node = _astFactory.TraitAdaptationAlias(yypos, (Tuple<TypeRef,NameRef>)value_stack.array[value_stack.top-4].yyval.Object, new NameRef(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.String), null); }
        return;
      case 262: // trait_alias -> trait_method_reference T_AS reserved_non_modifiers ';' 
{ yyval.Node = _astFactory.TraitAdaptationAlias(yypos, (Tuple<TypeRef,NameRef>)value_stack.array[value_stack.top-4].yyval.Object, new NameRef(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.String), null); }
        return;
      case 263: // trait_alias -> trait_method_reference T_AS member_modifier identifier ';' 
{ 
				yyval.Node = _astFactory.TraitAdaptationAlias(yypos, (Tuple<TypeRef,NameRef>)value_stack.array[value_stack.top-5].yyval.Object, new NameRef(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.String), (PhpMemberAttributes)value_stack.array[value_stack.top-3].yyval.Long); 
			}
        return;
      case 264: // trait_alias -> trait_method_reference T_AS member_modifier ';' 
{ 
				yyval.Node = _astFactory.TraitAdaptationAlias(yypos, (Tuple<TypeRef,NameRef>)value_stack.array[value_stack.top-4].yyval.Object, NameRef.Invalid, (PhpMemberAttributes)value_stack.array[value_stack.top-2].yyval.Long); 
			}
        return;
      case 265: // trait_method_reference -> identifier 
{ yyval.Object = new Tuple<TypeRef,NameRef>(null, new NameRef(value_stack.array[value_stack.top-1].yypos, value_stack.array[value_stack.top-1].yyval.String)); }
        return;
      case 266: // trait_method_reference -> absolute_trait_method_reference 
{ yyval.Object = value_stack.array[value_stack.top-1].yyval.Object; }
        return;
      case 267: // absolute_trait_method_reference -> name T_DOUBLE_COLON identifier 
{ yyval.Object = new Tuple<TypeRef,NameRef>(CreateTypeRef(value_stack.array[value_stack.top-3].yyval.QualifiedNameReference), new NameRef(value_stack.array[value_stack.top-1].yypos, value_stack.array[value_stack.top-1].yyval.String)); }
        return;
      case 268: // method_body -> ';' 
{ yyval.Node = null; }
        return;
      case 269: // method_body -> '{' inner_statement_list '}' 
{ yyval.Node = CreateBlock(CombineSpans(value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-2].yyval.NodeList); }
        return;
      case 270: // variable_modifiers -> non_empty_member_modifiers 
{ yyval.Long = value_stack.array[value_stack.top-1].yyval.Long; }
        return;
      case 271: // variable_modifiers -> T_VAR 
{ yyval.Long = (long)PhpMemberAttributes.None; }
        return;
      case 272: // method_modifiers -> 
{ yyval.Long = (long)PhpMemberAttributes.None; }
        return;
      case 273: // method_modifiers -> non_empty_member_modifiers 
{ yyval.Long = value_stack.array[value_stack.top-1].yyval.Long; }
        return;
      case 274: // non_empty_member_modifiers -> member_modifier 
{ yyval.Long = value_stack.array[value_stack.top-1].yyval.Long; }
        return;
      case 275: // non_empty_member_modifiers -> non_empty_member_modifiers member_modifier 
{ yyval.Long = value_stack.array[value_stack.top-2].yyval.Long | value_stack.array[value_stack.top-1].yyval.Long; }
        return;
      case 276: // member_modifier -> T_PUBLIC 
{ yyval.Long = (long)PhpMemberAttributes.Public; }
        return;
      case 277: // member_modifier -> T_PROTECTED 
{ yyval.Long = (long)PhpMemberAttributes.Protected; }
        return;
      case 278: // member_modifier -> T_PRIVATE 
{ yyval.Long = (long)PhpMemberAttributes.Private; }
        return;
      case 279: // member_modifier -> T_STATIC 
{ yyval.Long = (long)PhpMemberAttributes.Static; }
        return;
      case 280: // member_modifier -> T_ABSTRACT 
{ yyval.Long = (long)PhpMemberAttributes.Abstract; }
        return;
      case 281: // member_modifier -> T_FINAL 
{ yyval.Long = (long)PhpMemberAttributes.Final; }
        return;
      case 282: // property_list -> property_list ',' property 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 283: // property_list -> property 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 284: // property -> T_VARIABLE backup_doc_comment 
{ SetMemberDoc(yyval.Node = _astFactory.FieldDecl(yypos, new VariableName(value_stack.array[value_stack.top-2].yyval.String), null)); }
        return;
      case 285: // property -> T_VARIABLE '=' expr backup_doc_comment 
{ SetMemberDoc(yyval.Node = _astFactory.FieldDecl(yypos, new VariableName(value_stack.array[value_stack.top-4].yyval.String), (Expression)value_stack.array[value_stack.top-2].yyval.Node)); }
        return;
      case 286: // class_const_list -> class_const_list ',' class_const_decl 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 287: // class_const_list -> class_const_decl 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 288: // class_const_decl -> identifier '=' expr backup_doc_comment 
{
		yyval.Node = _astFactory.ClassConstDecl(yypos, new VariableName(value_stack.array[value_stack.top-4].yyval.String), value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yyval.Node); 
		SetMemberDoc(yyval.Node);
	}
        return;
      case 289: // const_decl -> T_STRING '=' expr backup_doc_comment 
{ yyval.Node = _astFactory.GlobalConstDecl(yypos, false, new VariableName(value_stack.array[value_stack.top-4].yyval.String), value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yyval.Node); 
		SetMemberDoc(yyval.Node);
	}
        return;
      case 290: // echo_expr_list -> echo_expr_list ',' echo_expr 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 291: // echo_expr_list -> echo_expr 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 292: // echo_expr -> expr 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 293: // for_exprs -> 
{ yyval.NodeList = LangElement.EmptyList; }
        return;
      case 294: // for_exprs -> non_empty_for_exprs 
{ yyval.NodeList = value_stack.array[value_stack.top-1].yyval.NodeList; }
        return;
      case 295: // non_empty_for_exprs -> non_empty_for_exprs ',' expr 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 296: // non_empty_for_exprs -> expr 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 297: // @7 -> 
{ PushAnonymousClassContext(value_stack.array[value_stack.top-1].yyval.TypeReference); }
        return;
      case 298: // anonymous_class -> T_CLASS ctor_arguments extends_from @7 implements_list backup_doc_comment enter_scope '{' class_statement_list '}' exit_scope 
{
			var typeRef = _astFactory.AnonymousTypeReference(yypos, CombineSpans(value_stack.array[value_stack.top-11].yypos, value_stack.array[value_stack.top-10].yypos, value_stack.array[value_stack.top-9].yypos, value_stack.array[value_stack.top-7].yypos), isConditional, PhpMemberAttributes.None, null, ConvertToNamedTypeRef(value_stack.array[value_stack.top-9].yyval.TypeReference), value_stack.array[value_stack.top-7].yyval.TypeRefList.Select(ConvertToNamedTypeRef), value_stack.array[value_stack.top-3].yyval.NodeList, CombineSpans(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos));
			SetDoc(((AnonymousTypeRef)typeRef).TypeDeclaration);
			yyval.AnonymousClass = new AnonymousClass(typeRef, value_stack.array[value_stack.top-10].yyval.ParamList, value_stack.array[value_stack.top-10].yypos); 
			PopClassContext();
		}
        return;
      case 299: // new_expr -> T_NEW class_name_reference ctor_arguments 
{ yyval.Node = _astFactory.New(yypos, value_stack.array[value_stack.top-2].yyval.TypeReference, value_stack.array[value_stack.top-1].yyval.ParamList, value_stack.array[value_stack.top-1].yypos); }
        return;
      case 300: // new_expr -> T_NEW anonymous_class 
{ yyval.Node = _astFactory.New(yypos, ((AnonymousClass)value_stack.array[value_stack.top-1].yyval.AnonymousClass).Item1, ((AnonymousClass)value_stack.array[value_stack.top-1].yyval.AnonymousClass).Item2, ((AnonymousClass)value_stack.array[value_stack.top-1].yyval.AnonymousClass).Item3); }
        return;
      case 301: // expr_without_variable -> T_LIST '(' array_pair_list ')' '=' expr 
{ yyval.Node = _astFactory.Assignment(yypos, _astFactory.List(Span.Combine(value_stack.array[value_stack.top-6].yypos, value_stack.array[value_stack.top-3].yypos), value_stack.array[value_stack.top-4].yyval.ItemList, true), value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignValue); }
        return;
      case 302: // expr_without_variable -> '[' array_pair_list ']' '=' expr 
{ yyval.Node = _astFactory.Assignment(yypos, _astFactory.List(CombineSpans(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-3].yypos), value_stack.array[value_stack.top-4].yyval.ItemList, false), value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignValue); }
        return;
      case 303: // expr_without_variable -> variable '=' expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignValue); }
        return;
      case 304: // expr_without_variable -> variable '=' '&' variable 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-4].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignRef); }
        return;
      case 305: // expr_without_variable -> variable '=' '&' new_expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-4].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignRef); _errors.Error(yypos, Warnings.AssignNewByRefDeprecated); }
        return;
      case 306: // expr_without_variable -> T_CLONE expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.Clone,   (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 307: // expr_without_variable -> variable T_PLUS_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignAdd); }
        return;
      case 308: // expr_without_variable -> variable T_MINUS_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignSub); }
        return;
      case 309: // expr_without_variable -> variable T_MUL_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignMul); }
        return;
      case 310: // expr_without_variable -> variable T_POW_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignPow); }
        return;
      case 311: // expr_without_variable -> variable T_DIV_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignDiv); }
        return;
      case 312: // expr_without_variable -> variable T_CONCAT_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignAppend); }
        return;
      case 313: // expr_without_variable -> variable T_MOD_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignMod); }
        return;
      case 314: // expr_without_variable -> variable T_AND_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignAnd); }
        return;
      case 315: // expr_without_variable -> variable T_OR_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignOr); }
        return;
      case 316: // expr_without_variable -> variable T_XOR_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignXor); }
        return;
      case 317: // expr_without_variable -> variable T_SL_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignShiftLeft); }
        return;
      case 318: // expr_without_variable -> variable T_SR_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignShiftRight); }
        return;
      case 319: // expr_without_variable -> variable T_COALESCE_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignCoalesce); }
        return;
      case 320: // expr_without_variable -> variable T_INC 
{ yyval.Node = CreateIncDec(yypos, value_stack.array[value_stack.top-2].yyval.Node, true, true); }
        return;
      case 321: // expr_without_variable -> T_INC variable 
{ yyval.Node = CreateIncDec(yypos, value_stack.array[value_stack.top-1].yyval.Node, true,  false); }
        return;
      case 322: // expr_without_variable -> variable T_DEC 
{ yyval.Node = CreateIncDec(yypos, value_stack.array[value_stack.top-2].yyval.Node, false, true); }
        return;
      case 323: // expr_without_variable -> T_DEC variable 
{ yyval.Node = CreateIncDec(yypos, value_stack.array[value_stack.top-1].yyval.Node, false, false); }
        return;
      case 324: // expr_without_variable -> expr T_BOOLEAN_OR expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Or,   value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 325: // expr_without_variable -> expr T_BOOLEAN_AND expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.And,  value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 326: // expr_without_variable -> expr T_LOGICAL_OR expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Or,   value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 327: // expr_without_variable -> expr T_LOGICAL_AND expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.And,  value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 328: // expr_without_variable -> expr T_LOGICAL_XOR expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Xor,  value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 329: // expr_without_variable -> expr '|' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.BitOr,  value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 330: // expr_without_variable -> expr '&' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.BitAnd, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 331: // expr_without_variable -> expr '^' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.BitXor, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 332: // expr_without_variable -> expr '.' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Concat, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 333: // expr_without_variable -> expr '+' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Add,    value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 334: // expr_without_variable -> expr '-' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Sub,    value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 335: // expr_without_variable -> expr '*' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Mul,    value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 336: // expr_without_variable -> expr T_POW expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Pow,    value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 337: // expr_without_variable -> expr '/' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Div,    value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 338: // expr_without_variable -> expr '%' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Mod,    value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 339: // expr_without_variable -> expr T_SL expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.ShiftLeft,  value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 340: // expr_without_variable -> expr T_SR expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.ShiftRight, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 341: // expr_without_variable -> '+' expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.Plus,   (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 342: // expr_without_variable -> '-' expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.Minus,   (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 343: // expr_without_variable -> '!' expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.LogicNegation, (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 344: // expr_without_variable -> '~' expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.BitNegation,   (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 345: // expr_without_variable -> expr T_IS_IDENTICAL expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Identical, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 346: // expr_without_variable -> expr T_IS_NOT_IDENTICAL expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.NotIdentical, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 347: // expr_without_variable -> expr T_IS_EQUAL expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Equal, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 348: // expr_without_variable -> expr T_IS_NOT_EQUAL expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.NotEqual, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 349: // expr_without_variable -> expr '<' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.LessThan, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 350: // expr_without_variable -> expr T_IS_SMALLER_OR_EQUAL expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.LessThanOrEqual, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 351: // expr_without_variable -> expr '>' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.GreaterThan, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 352: // expr_without_variable -> expr T_IS_GREATER_OR_EQUAL expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.GreaterThanOrEqual, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 353: // expr_without_variable -> expr T_SPACESHIP expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Spaceship, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 354: // expr_without_variable -> expr T_INSTANCEOF class_name_reference 
{ yyval.Node = _astFactory.InstanceOf(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.TypeReference); }
        return;
      case 355: // expr_without_variable -> '(' expr ')' 
{ yyval.Node = _astFactory.EncapsedExpression(yypos, value_stack.array[value_stack.top-2].yyval.Node, Tokens.T_LPAREN); }
        return;
      case 356: // expr_without_variable -> new_expr 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 357: // expr_without_variable -> expr '?' expr ':' expr 
{ yyval.Node = _astFactory.ConditionalEx(yypos, value_stack.array[value_stack.top-5].yyval.Node, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 358: // expr_without_variable -> expr '?' ':' expr 
{ yyval.Node = _astFactory.ConditionalEx(yypos, value_stack.array[value_stack.top-4].yyval.Node, null, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 359: // expr_without_variable -> expr T_COALESCE expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Coalesce, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 360: // expr_without_variable -> internal_functions_in_yacc 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 361: // expr_without_variable -> T_INT_CAST expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.Int64Cast,   (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 362: // expr_without_variable -> T_DOUBLE_CAST expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.DoubleCast, (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 363: // expr_without_variable -> T_STRING_CAST expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.StringCast, (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 364: // expr_without_variable -> T_ARRAY_CAST expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.ArrayCast,  (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 365: // expr_without_variable -> T_OBJECT_CAST expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.ObjectCast, (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 366: // expr_without_variable -> T_BOOL_CAST expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.BoolCast,   (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 367: // expr_without_variable -> T_UNSET_CAST expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.UnsetCast,  (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 368: // expr_without_variable -> T_EXIT exit_expr 
{ yyval.Node = _astFactory.Exit(yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 369: // expr_without_variable -> '@' expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.AtSign,     (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 370: // expr_without_variable -> scalar 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 371: // expr_without_variable -> backticks_expr 
{ yyval.Node = _astFactory.Shell(yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 372: // expr_without_variable -> T_PRINT expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.Print, (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 373: // expr_without_variable -> T_YIELD 
{ yyval.Node = _astFactory.Yield(yypos, null, null); }
        return;
      case 374: // expr_without_variable -> T_YIELD expr 
{ yyval.Node = _astFactory.Yield(yypos, null, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 375: // expr_without_variable -> T_YIELD expr T_DOUBLE_ARROW expr 
{ yyval.Node = _astFactory.Yield(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 376: // expr_without_variable -> T_YIELD_FROM expr 
{ yyval.Node = _astFactory.YieldFrom(yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 377: // expr_without_variable -> function returns_ref backup_doc_comment '(' parameter_list ')' lexical_vars return_type backup_fn_flags enter_scope '{' inner_statement_list '}' exit_scope backup_fn_flags 
{ 
				yyval.Node = _astFactory.Lambda(yypos, CombineSpans(value_stack.array[value_stack.top-15].yypos, value_stack.array[value_stack.top-10].yypos, value_stack.array[value_stack.top-9].yypos, value_stack.array[value_stack.top-8].yypos), value_stack.array[value_stack.top-14].yyval.Long == (long)FormalParam.Flags.IsByRef, PhpMemberAttributes.None, value_stack.array[value_stack.top-8].yyval.TypeReference, 
				value_stack.array[value_stack.top-11].yyval.FormalParamList, CombineSpans(value_stack.array[value_stack.top-12].yypos, value_stack.array[value_stack.top-10].yypos), value_stack.array[value_stack.top-9].yyval.FormalParamList, CreateBlock(CombineSpans(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-3].yypos), value_stack.array[value_stack.top-4].yyval.NodeList)); 
				SetDoc(yyval.Node);
			}
        return;
      case 378: // expr_without_variable -> T_STATIC function returns_ref backup_doc_comment '(' parameter_list ')' lexical_vars return_type backup_fn_flags enter_scope '{' inner_statement_list '}' exit_scope backup_fn_flags 
{ 
				yyval.Node = _astFactory.Lambda(yypos, CombineSpans(value_stack.array[value_stack.top-16].yypos, value_stack.array[value_stack.top-10].yypos, value_stack.array[value_stack.top-9].yypos, value_stack.array[value_stack.top-8].yypos), value_stack.array[value_stack.top-14].yyval.Long == (long)FormalParam.Flags.IsByRef, PhpMemberAttributes.Static, value_stack.array[value_stack.top-8].yyval.TypeReference, 
				value_stack.array[value_stack.top-11].yyval.FormalParamList, CombineSpans(value_stack.array[value_stack.top-12].yypos, value_stack.array[value_stack.top-10].yypos), value_stack.array[value_stack.top-9].yyval.FormalParamList, CreateBlock(CombineSpans(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-3].yypos), value_stack.array[value_stack.top-4].yyval.NodeList)); 
				SetDoc(yyval.Node);
			}
        return;
      case 381: // backup_doc_comment -> 
{ }
        return;
      case 382: // enter_scope -> 
{ _currentScope.Increment(); }
        return;
      case 383: // exit_scope -> 
{ _currentScope.Decrement(); }
        return;
      case 384: // backup_fn_flags -> 
{  }
        return;
      case 385: // returns_ref -> 
{ yyval.Long = 0; }
        return;
      case 386: // returns_ref -> '&' 
{ yyval.Long = (long)FormalParam.Flags.IsByRef; }
        return;
      case 387: // lexical_vars -> 
{ yyval.FormalParamList = new List<FormalParam>(); }
        return;
      case 388: // lexical_vars -> T_USE '(' lexical_var_list ')' 
{ yyval.FormalParamList = value_stack.array[value_stack.top-2].yyval.FormalParamList; }
        return;
      case 389: // lexical_var_list -> lexical_var_list ',' lexical_var 
{ yyval.FormalParamList = AddToList<FormalParam>(value_stack.array[value_stack.top-3].yyval.FormalParamList, value_stack.array[value_stack.top-1].yyval.FormalParam); }
        return;
      case 390: // lexical_var_list -> lexical_var 
{ yyval.FormalParamList = new List<FormalParam>() { (FormalParam)value_stack.array[value_stack.top-1].yyval.FormalParam }; }
        return;
      case 391: // lexical_var -> T_VARIABLE 
{ yyval.FormalParam = _astFactory.Parameter(yypos, value_stack.array[value_stack.top-1].yyval.String, value_stack.array[value_stack.top-1].yypos, null, FormalParam.Flags.Default, null); }
        return;
      case 392: // lexical_var -> '&' T_VARIABLE 
{ yyval.FormalParam = _astFactory.Parameter(yypos, value_stack.array[value_stack.top-1].yyval.String, value_stack.array[value_stack.top-1].yypos, null, FormalParam.Flags.IsByRef, null); }
        return;
      case 393: // function_call -> name argument_list 
{ yyval.Node = _astFactory.Call(yypos, TranslateQNRFunction(value_stack.array[value_stack.top-2].yyval.QualifiedNameReference), new CallSignature(value_stack.array[value_stack.top-1].yyval.ParamList, value_stack.array[value_stack.top-1].yypos) { Position = value_stack.array[value_stack.top-1].yypos }, null); }
        return;
      case 394: // function_call -> class_name T_DOUBLE_COLON member_name argument_list 
{
				if(value_stack.array[value_stack.top-2].yyval.Object is Name)
					yyval.Node = _astFactory.Call(yypos, (Name)value_stack.array[value_stack.top-2].yyval.Object, value_stack.array[value_stack.top-2].yypos, new CallSignature(value_stack.array[value_stack.top-1].yyval.ParamList, value_stack.array[value_stack.top-1].yypos) { Position = value_stack.array[value_stack.top-1].yypos }, value_stack.array[value_stack.top-4].yyval.TypeReference); 
				else
					yyval.Node = _astFactory.Call(yypos, (LangElement)value_stack.array[value_stack.top-2].yyval.Object, new CallSignature(value_stack.array[value_stack.top-1].yyval.ParamList, value_stack.array[value_stack.top-1].yypos) { Position = value_stack.array[value_stack.top-1].yypos }, value_stack.array[value_stack.top-4].yyval.TypeReference); 
			}
        return;
      case 395: // function_call -> variable_class_name T_DOUBLE_COLON member_name argument_list 
{
				if(value_stack.array[value_stack.top-2].yyval.Object is Name)
					yyval.Node = _astFactory.Call(yypos, (Name)value_stack.array[value_stack.top-2].yyval.Object, value_stack.array[value_stack.top-2].yypos, new CallSignature(value_stack.array[value_stack.top-1].yyval.ParamList, value_stack.array[value_stack.top-1].yypos) { Position = value_stack.array[value_stack.top-1].yypos }, _astFactory.TypeReference(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-4].yyval.Node)); 
				else
					yyval.Node = _astFactory.Call(yypos, (LangElement)value_stack.array[value_stack.top-2].yyval.Object, new CallSignature(value_stack.array[value_stack.top-1].yyval.ParamList, value_stack.array[value_stack.top-1].yypos) { Position = value_stack.array[value_stack.top-1].yypos }, _astFactory.TypeReference(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-4].yyval.Node)); 
			}
        return;
      case 396: // function_call -> callable_expr argument_list 
{ yyval.Node = _astFactory.Call(yypos, value_stack.array[value_stack.top-2].yyval.Node, new CallSignature(value_stack.array[value_stack.top-1].yyval.ParamList, value_stack.array[value_stack.top-1].yypos) { Position = value_stack.array[value_stack.top-1].yypos }, NullLangElement);}
        return;
      case 397: // class_name -> T_STATIC 
{ yyval.TypeReference = _astFactory.ReservedTypeReference(yypos, _reservedTypeStatic); }
        return;
      case 398: // class_name -> name 
{ yyval.TypeReference = CreateTypeRef(value_stack.array[value_stack.top-1].yyval.QualifiedNameReference); }
        return;
      case 399: // class_name_reference -> class_name 
{ yyval.TypeReference = value_stack.array[value_stack.top-1].yyval.TypeReference; }
        return;
      case 400: // class_name_reference -> new_variable 
{ yyval.TypeReference = _astFactory.TypeReference(yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 401: // exit_expr -> 
{ yyval.Node = null; }
        return;
      case 402: // exit_expr -> '(' optional_expr ')' 
{ yyval.Node = value_stack.array[value_stack.top-2].yyval.Node == null? null: _astFactory.EncapsedExpression(yypos, value_stack.array[value_stack.top-2].yyval.Node, Tokens.T_LPAREN); }
        return;
      case 403: // backticks_expr -> '`' '`' 
{ yyval.Node = _astFactory.Literal(yypos, string.Empty, "``"); }
        return;
      case 404: // backticks_expr -> '`' T_ENCAPSED_AND_WHITESPACE '`' 
{ yyval.Node = _astFactory.Literal(yypos, value_stack.array[value_stack.top-2].yyval.Strings.Key, string.Format("`{0}`", value_stack.array[value_stack.top-2].yyval.Strings.Value)); }
        return;
      case 405: // backticks_expr -> '`' encaps_list '`' 
{ yyval.Node = _astFactory.StringEncapsedExpression(yypos, _astFactory.Concat(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.NodeList), Tokens.T_BACKQUOTE); }
        return;
      case 406: // ctor_arguments -> 
{ yyval.ParamList = new List<ActualParam>(); }
        return;
      case 407: // ctor_arguments -> argument_list 
{ yyval.ParamList = value_stack.array[value_stack.top-1].yyval.ParamList; }
        return;
      case 408: // dereferencable_scalar -> T_ARRAY '(' array_pair_list ')' 
{ yyval.Node = _astFactory.NewArray(yypos, value_stack.array[value_stack.top-2].yyval.ItemList, true); }
        return;
      case 409: // dereferencable_scalar -> '[' array_pair_list ']' 
{ yyval.Node = _astFactory.NewArray(yypos, value_stack.array[value_stack.top-2].yyval.ItemList, false); }
        return;
      case 410: // dereferencable_scalar -> T_CONSTANT_ENCAPSED_STRING 
{ yyval.Node = _astFactory.Literal(yypos, value_stack.array[value_stack.top-1].yyval.String, _lexer.TokenText); }
        return;
      case 411: // scalar -> T_LNUMBER 
{ yyval.Node = _astFactory.Literal(yypos, value_stack.array[value_stack.top-1].yyval.Long, _lexer.TokenText); }
        return;
      case 412: // scalar -> T_DNUMBER 
{ yyval.Node = _astFactory.Literal(yypos, value_stack.array[value_stack.top-1].yyval.Double, _lexer.TokenText); }
        return;
      case 413: // scalar -> T_LINE 
{ yyval.Node = _astFactory.PseudoConstUse(yypos, PseudoConstUse.Types.Line); }
        return;
      case 414: // scalar -> T_FILE 
{ yyval.Node = _astFactory.PseudoConstUse(yypos, PseudoConstUse.Types.File); }
        return;
      case 415: // scalar -> T_DIR 
{ yyval.Node = _astFactory.PseudoConstUse(yypos, PseudoConstUse.Types.Dir); }
        return;
      case 416: // scalar -> T_TRAIT_C 
{ yyval.Node = _astFactory.PseudoConstUse(yypos, PseudoConstUse.Types.Trait); }
        return;
      case 417: // scalar -> T_METHOD_C 
{ yyval.Node = _astFactory.PseudoConstUse(yypos, PseudoConstUse.Types.Method); }
        return;
      case 418: // scalar -> T_FUNC_C 
{ yyval.Node = _astFactory.PseudoConstUse(yypos, PseudoConstUse.Types.Function); }
        return;
      case 419: // scalar -> T_NS_C 
{ yyval.Node = _astFactory.PseudoConstUse(yypos, PseudoConstUse.Types.Namespace); }
        return;
      case 420: // scalar -> T_CLASS_C 
{ yyval.Node = _astFactory.PseudoConstUse(yypos, PseudoConstUse.Types.Class); }
        return;
      case 421: // scalar -> '"' encaps_list '"' 
{ yyval.Node = _astFactory.StringEncapsedExpression(yypos, _astFactory.Concat(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.NodeList), Tokens.T_DOUBLE_QUOTES); }
        return;
      case 422: // scalar -> T_START_HEREDOC T_END_HEREDOC 
{ yyval.Node = _astFactory.HeredocExpression(yypos, _astFactory.Literal(new Span(value_stack.array[value_stack.top-2].yypos.End, 0), "", ""), value_stack.array[value_stack.top-2].yyval.QuoteToken, value_stack.array[value_stack.top-2].yyval.String); }
        return;
      case 423: // scalar -> T_START_HEREDOC T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC 
{ yyval.Node = _astFactory.HeredocExpression(yypos, _astFactory.Literal(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.Strings.Key, value_stack.array[value_stack.top-2].yyval.Strings.Value), value_stack.array[value_stack.top-3].yyval.QuoteToken, value_stack.array[value_stack.top-3].yyval.String); }
        return;
      case 424: // scalar -> T_START_HEREDOC encaps_list T_END_HEREDOC 
{ yyval.Node = _astFactory.HeredocExpression(yypos, _astFactory.Concat(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.NodeList), value_stack.array[value_stack.top-3].yyval.QuoteToken, value_stack.array[value_stack.top-3].yyval.String); }
        return;
      case 425: // scalar -> dereferencable_scalar 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 426: // scalar -> constant 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 427: // constant -> name 
{ yyval.Node = _astFactory.ConstUse(yypos, TranslateQNRConstant(value_stack.array[value_stack.top-1].yyval.QualifiedNameReference)); }
        return;
      case 428: // constant -> class_name T_DOUBLE_COLON identifier 
{ yyval.Node = _astFactory.ClassConstUse(yypos, value_stack.array[value_stack.top-3].yyval.TypeReference, new Name(value_stack.array[value_stack.top-1].yyval.String), value_stack.array[value_stack.top-1].yypos); }
        return;
      case 429: // constant -> variable_class_name T_DOUBLE_COLON identifier 
{ yyval.Node = _astFactory.ClassConstUse(yypos, _astFactory.TypeReference(value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-3].yyval.Node), new Name(value_stack.array[value_stack.top-1].yyval.String), value_stack.array[value_stack.top-1].yypos); }
        return;
      case 430: // expr -> variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 431: // expr -> expr_without_variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 432: // optional_expr -> 
{ yyval.Node = null; }
        return;
      case 433: // optional_expr -> expr 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 434: // variable_class_name -> dereferencable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; /* TODO if (!($1 is VarLikeConstructUse)) _errors.Error(@$, FatalErrors.CheckVarUseFault); */ }
        return;
      case 435: // dereferencable -> variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 436: // dereferencable -> '(' expr ')' 
{ yyval.Node = _astFactory.EncapsedExpression(yypos, value_stack.array[value_stack.top-2].yyval.Node, Tokens.T_LPAREN); }
        return;
      case 437: // dereferencable -> dereferencable_scalar 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 438: // callable_expr -> callable_variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 439: // callable_expr -> '(' expr ')' 
{ yyval.Node = _astFactory.EncapsedExpression(yypos, value_stack.array[value_stack.top-2].yyval.Node, Tokens.T_LPAREN); }
        return;
      case 440: // callable_expr -> dereferencable_scalar 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 441: // callable_variable -> simple_variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 442: // callable_variable -> dereferencable '[' optional_expr ']' 
{ yyval.Node = _astFactory.ArrayItem(yypos, false, value_stack.array[value_stack.top-4].yyval.Node, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 443: // callable_variable -> constant '[' optional_expr ']' 
{ yyval.Node = _astFactory.ArrayItem(yypos, false, value_stack.array[value_stack.top-4].yyval.Node, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 444: // callable_variable -> dereferencable '{' expr '}' 
{ yyval.Node = _astFactory.ArrayItem(yypos, true, value_stack.array[value_stack.top-4].yyval.Node, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 445: // callable_variable -> dereferencable T_OBJECT_OPERATOR property_name argument_list 
{
			if(value_stack.array[value_stack.top-2].yyval.Object is Name)
			{
				var name = new QualifiedName((Name)value_stack.array[value_stack.top-2].yyval.Object);
				yyval.Node = _astFactory.Call(yypos, new TranslatedQualifiedName(name, value_stack.array[value_stack.top-2].yypos, name, null), new CallSignature(value_stack.array[value_stack.top-1].yyval.ParamList, value_stack.array[value_stack.top-1].yypos) { Position = value_stack.array[value_stack.top-1].yypos }, VerifyMemberOf(value_stack.array[value_stack.top-4].yyval.Node));
			}
			else
				yyval.Node = _astFactory.Call(yypos, (LangElement)value_stack.array[value_stack.top-2].yyval.Object, new CallSignature(value_stack.array[value_stack.top-1].yyval.ParamList, value_stack.array[value_stack.top-1].yypos) { Position = value_stack.array[value_stack.top-1].yypos }, VerifyMemberOf(value_stack.array[value_stack.top-4].yyval.Node));
		}
        return;
      case 446: // callable_variable -> function_call 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 447: // variable -> callable_variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 448: // variable -> static_member 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 449: // variable -> dereferencable T_OBJECT_OPERATOR property_name 
{ yyval.Node = CreateProperty(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Object); }
        return;
      case 450: // simple_variable -> T_VARIABLE 
{ yyval.Node = _astFactory.Variable(yypos, value_stack.array[value_stack.top-1].yyval.String,	NullLangElement, true); }
        return;
      case 451: // simple_variable -> '$' '{' expr '}' 
{ yyval.Node = _astFactory.Variable(yypos, _astFactory.EncapsedExpression(Span.Combine(value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-2].yyval.Node, Tokens.T_LBRACE), NullLangElement); }
        return;
      case 452: // simple_variable -> '$' simple_variable 
{ yyval.Node = _astFactory.Variable(yypos, value_stack.array[value_stack.top-1].yyval.Node, NullLangElement); }
        return;
      case 453: // static_member -> class_name T_DOUBLE_COLON simple_variable 
{ yyval.Node = CreateStaticProperty(yypos, value_stack.array[value_stack.top-3].yyval.TypeReference, value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 454: // static_member -> variable_class_name T_DOUBLE_COLON simple_variable 
{ yyval.Node = CreateStaticProperty(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 455: // new_variable -> simple_variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 456: // new_variable -> new_variable '[' optional_expr ']' 
{ yyval.Node = _astFactory.ArrayItem(yypos, false, value_stack.array[value_stack.top-4].yyval.Node, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 457: // new_variable -> new_variable '{' expr '}' 
{ yyval.Node = _astFactory.ArrayItem(yypos, true, value_stack.array[value_stack.top-4].yyval.Node, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 458: // new_variable -> new_variable T_OBJECT_OPERATOR property_name 
{ yyval.Node = CreateProperty(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Object); }
        return;
      case 459: // new_variable -> class_name T_DOUBLE_COLON simple_variable 
{ yyval.Node = CreateStaticProperty(yypos, value_stack.array[value_stack.top-3].yyval.TypeReference, value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 460: // new_variable -> new_variable T_DOUBLE_COLON simple_variable 
{ yyval.Node = CreateStaticProperty(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 461: // member_name -> identifier 
{ yyval.Object = new Name(value_stack.array[value_stack.top-1].yyval.String); }
        return;
      case 462: // member_name -> '{' expr '}' 
{ yyval.Object = _astFactory.EncapsedExpression(yypos, value_stack.array[value_stack.top-2].yyval.Node, Tokens.T_LBRACE); }
        return;
      case 463: // member_name -> simple_variable 
{ yyval.Object = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 464: // property_name -> T_STRING 
{ yyval.Object = new Name(value_stack.array[value_stack.top-1].yyval.String); }
        return;
      case 465: // property_name -> '{' expr '}' 
{ yyval.Object = _astFactory.EncapsedExpression(yypos, value_stack.array[value_stack.top-2].yyval.Node, Tokens.T_LBRACE); }
        return;
      case 466: // property_name -> simple_variable 
{ yyval.Object = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 467: // array_pair_list -> non_empty_array_pair_list 
{ yyval.ItemList = value_stack.array[value_stack.top-1].yyval.ItemList;  }
        return;
      case 468: // possible_array_pair -> 
{ yyval.Item = null; }
        return;
      case 469: // possible_array_pair -> array_pair 
{ yyval.Item = value_stack.array[value_stack.top-1].yyval.Item; }
        return;
      case 470: // non_empty_array_pair_list -> non_empty_array_pair_list ',' possible_array_pair 
{ yyval.ItemList = AddToList<Item>(value_stack.array[value_stack.top-3].yyval.ItemList, value_stack.array[value_stack.top-1].yyval.Item); }
        return;
      case 471: // non_empty_array_pair_list -> possible_array_pair 
{ yyval.ItemList = new List<Item>() { value_stack.array[value_stack.top-1].yyval.Item }; }
        return;
      case 472: // array_pair -> expr T_DOUBLE_ARROW expr 
{ yyval.Item = _astFactory.ArrayItemValue(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 473: // array_pair -> expr 
{ yyval.Item = _astFactory.ArrayItemValue(yypos, null, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 474: // array_pair -> expr T_DOUBLE_ARROW '&' variable 
{ yyval.Item = _astFactory.ArrayItemRef(yypos, value_stack.array[value_stack.top-4].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 475: // array_pair -> '&' variable 
{ yyval.Item = _astFactory.ArrayItemRef(yypos, null, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 476: // array_pair -> T_ELLIPSIS expr 
{ yyval.Item = _astFactory.ArrayItemSpread(yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 477: // array_pair -> expr T_DOUBLE_ARROW T_LIST '(' array_pair_list ')' 
{ yyval.Item = _astFactory.ArrayItemValue(yypos, value_stack.array[value_stack.top-6].yyval.Node, _astFactory.List(Span.Combine(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-2].yyval.ItemList, true)); }
        return;
      case 478: // array_pair -> T_LIST '(' array_pair_list ')' 
{ yyval.Item = _astFactory.ArrayItemValue(yypos, null, _astFactory.List(Span.Combine(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-2].yyval.ItemList, true)); }
        return;
      case 479: // encaps_list -> encaps_list encaps_var 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-2].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 480: // encaps_list -> encaps_list T_ENCAPSED_AND_WHITESPACE 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-2].yyval.NodeList, _astFactory.Literal(value_stack.array[value_stack.top-1].yypos, value_stack.array[value_stack.top-1].yyval.Strings.Key, _lexer.TokenText)); }
        return;
      case 481: // encaps_list -> encaps_var 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 482: // encaps_list -> T_ENCAPSED_AND_WHITESPACE encaps_var 
{ yyval.NodeList = new List<LangElement>() { _astFactory.Literal(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.Strings.Key, value_stack.array[value_stack.top-2].yyval.Strings.Value), value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 483: // encaps_var -> T_VARIABLE 
{ yyval.Node = _astFactory.Variable(yypos, value_stack.array[value_stack.top-1].yyval.String, NullLangElement, true); }
        return;
      case 484: // encaps_var -> T_VARIABLE '[' encaps_var_offset ']' 
{ yyval.Node = _astFactory.ArrayItem(yypos, false,
					_astFactory.Variable(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-4].yyval.String, NullLangElement, true), value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 485: // encaps_var -> T_VARIABLE T_OBJECT_OPERATOR T_STRING 
{ yyval.Node = CreateProperty(yypos, _astFactory.Variable(value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-3].yyval.String, NullLangElement, true), new Name(value_stack.array[value_stack.top-1].yyval.String)); }
        return;
      case 486: // encaps_var -> T_DOLLAR_OPEN_CURLY_BRACES expr '}' 
{ yyval.Node = _astFactory.EncapsedExpression(yypos, _astFactory.Variable(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.Node, NullLangElement), Tokens.T_DOLLAR_OPEN_CURLY_BRACES); }
        return;
      case 487: // encaps_var -> T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '}' 
{ yyval.Node = _astFactory.EncapsedExpression(yypos, _astFactory.Variable(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.String, NullLangElement, false), Tokens.T_DOLLAR_OPEN_CURLY_BRACES); }
        return;
      case 488: // encaps_var -> T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' expr ']' '}' 
{ yyval.Node = _astFactory.EncapsedExpression(yypos, _astFactory.ArrayItem(Span.Combine(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-2].yypos), false,
					_astFactory.Variable(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-5].yyval.String, NullLangElement, false), value_stack.array[value_stack.top-3].yyval.Node), Tokens.T_DOLLAR_OPEN_CURLY_BRACES); }
        return;
      case 489: // encaps_var -> T_CURLY_OPEN variable '}' 
{ yyval.Node = _astFactory.EncapsedExpression(yypos, value_stack.array[value_stack.top-2].yyval.Node, Tokens.T_LBRACE); }
        return;
      case 490: // encaps_var_offset -> T_STRING 
{ yyval.Node = _astFactory.Literal(yypos, value_stack.array[value_stack.top-1].yyval.String, _lexer.TokenText); }
        return;
      case 491: // encaps_var_offset -> T_NUM_STRING 
{ yyval.Node = _astFactory.Literal(yypos, value_stack.array[value_stack.top-1].yyval.Long, _lexer.TokenText); }
        return;
      case 492: // encaps_var_offset -> T_VARIABLE 
{ yyval.Node = _astFactory.Variable(yypos, value_stack.array[value_stack.top-1].yyval.String, NullLangElement, true); }
        return;
      case 493: // internal_functions_in_yacc -> T_ISSET '(' isset_variables possible_comma ')' 
{ yyval.Node = _astFactory.Isset(yypos, AddTrailingComma(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-2].yyval.Bool)); }
        return;
      case 494: // internal_functions_in_yacc -> T_EMPTY '(' expr ')' 
{ yyval.Node = _astFactory.Empty(yypos, value_stack.array[value_stack.top-2].yyval.Node);}
        return;
      case 495: // internal_functions_in_yacc -> T_INCLUDE expr 
{ yyval.Node = _astFactory.Inclusion(yypos, isConditional, InclusionTypes.Include, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 496: // internal_functions_in_yacc -> T_INCLUDE_ONCE expr 
{ yyval.Node = _astFactory.Inclusion(yypos, isConditional, InclusionTypes.IncludeOnce, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 497: // internal_functions_in_yacc -> T_EVAL '(' expr ')' 
{ yyval.Node = _astFactory.Eval(yypos, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 498: // internal_functions_in_yacc -> T_REQUIRE expr 
{ yyval.Node = _astFactory.Inclusion(yypos, isConditional, InclusionTypes.Require, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 499: // internal_functions_in_yacc -> T_REQUIRE_ONCE expr 
{ yyval.Node = _astFactory.Inclusion(yypos, isConditional, InclusionTypes.RequireOnce, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 500: // isset_variables -> isset_variable 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 501: // isset_variables -> isset_variables ',' isset_variable 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 502: // isset_variable -> expr 
{ yyval.Node = CreateIssetVar(value_stack.array[value_stack.top-1].yyval.Node); }
        return;
    }
  }

  protected override string TerminalToString(int terminal)
  {
    if (((Tokens)terminal).ToString() != terminal.ToString())
      return ((Tokens)terminal).ToString();
    else
      return CharToString((char)terminal);
  }


}
}
