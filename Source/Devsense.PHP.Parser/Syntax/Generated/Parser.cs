using System;
using System.Text;
using System.Collections.Generic;

// Copyright(c) DEVSENSE s.r.o.
// All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the License); you may not use
// this file except in compliance with the License. You may obtain a copy of the
// License at http://www.apache.org/licenses/LICENSE-2.0
//
// THIS CODE IS PROVIDED ON AN  *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS
// OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY
// IMPLIED WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
// MERCHANTABILITY OR NON-INFRINGEMENT.
//
// See the Apache Version 2.0 License for specific language governing
// permissions and limitations under the License.

using System.Linq;
using System.Runtime.InteropServices;
using Devsense.PHP.Syntax.Ast;
using Devsense.PHP.Text;
using Devsense.PHP.Errors;

using CompleteAlias = System.Tuple<Devsense.PHP.Syntax.QualifiedNameRef, Devsense.PHP.Syntax.NameRef>;
using ContextAlias = System.Tuple<Devsense.PHP.Text.Span, Devsense.PHP.Syntax.QualifiedNameRef, Devsense.PHP.Syntax.NameRef, Devsense.PHP.Syntax.AliasKind>;
using AnonymousClass = System.Tuple<Devsense.PHP.Syntax.Ast.TypeRef, System.Collections.Generic.List<Devsense.PHP.Syntax.Ast.ActualParam>, Devsense.PHP.Text.Span>;
using StringPair = System.Collections.Generic.KeyValuePair<string, string>;


namespace Devsense.PHP.Syntax
{
public enum Tokens {
/// <summary>&quot;throw (T_THROW)&quot;</summary>
T_THROW=352,
PREC_ARROW_FUNCTION=128,
/// <summary>&quot;include (T_INCLUDE)&quot;</summary>
T_INCLUDE=262,
/// <summary>&quot;include_once (T_INCLUDE_ONCE)&quot;</summary>
T_INCLUDE_ONCE=261,
/// <summary>&quot;require (T_REQUIRE)&quot;</summary>
T_REQUIRE=259,
/// <summary>&quot;require_once (T_REQUIRE_ONCE)&quot;</summary>
T_REQUIRE_ONCE=258,
/// <summary>&quot;or (T_LOGICAL_OR)&quot;</summary>
T_LOGICAL_OR=263,
/// <summary>&quot;xor (T_LOGICAL_XOR)&quot;</summary>
T_LOGICAL_XOR=264,
/// <summary>&quot;and (T_LOGICAL_AND)&quot;</summary>
T_LOGICAL_AND=265,
/// <summary>&quot;print (T_PRINT)&quot;</summary>
T_PRINT=266,
/// <summary>&quot;yield (T_YIELD)&quot;</summary>
T_YIELD=267,
/// <summary>&quot;=&gt; (T_DOUBLE_ARROW)&quot;</summary>
T_DOUBLE_ARROW=268,
/// <summary>&quot;yield from (T_YIELD_FROM)&quot;</summary>
T_YIELD_FROM=269,
/// <summary>&quot;+= (T_PLUS_EQUAL)&quot;</summary>
T_PLUS_EQUAL=270,
/// <summary>&quot;-= (T_MINUS_EQUAL)&quot;</summary>
T_MINUS_EQUAL=271,
/// <summary>&quot;*= (T_MUL_EQUAL)&quot;</summary>
T_MUL_EQUAL=279,
/// <summary>&quot;/= (T_DIV_EQUAL)&quot;</summary>
T_DIV_EQUAL=278,
/// <summary>&quot;.= (T_CONCAT_EQUAL)&quot;</summary>
T_CONCAT_EQUAL=277,
/// <summary>&quot;%= (T_MOD_EQUAL)&quot;</summary>
T_MOD_EQUAL=276,
/// <summary>&quot;&amp;= (T_AND_EQUAL)&quot;</summary>
T_AND_EQUAL=275,
/// <summary>&quot;|= (T_OR_EQUAL)&quot;</summary>
T_OR_EQUAL=274,
/// <summary>&quot;^= (T_XOR_EQUAL)&quot;</summary>
T_XOR_EQUAL=273,
/// <summary>&quot;&lt;&lt;= (T_SL_EQUAL)&quot;</summary>
T_SL_EQUAL=272,
/// <summary>&quot;&gt;&gt;= (T_SR_EQUAL)&quot;</summary>
T_SR_EQUAL=280,
/// <summary>&quot;**= (T_POW_EQUAL)&quot;</summary>
T_POW_EQUAL=281,
/// <summary> &quot;??= (T_COALESCE_EQUAL)&quot;</summary>
T_COALESCE_EQUAL=282,
/// <summary>&quot;?? (T_COALESCE)&quot;</summary>
T_COALESCE=283,
/// <summary>&quot;|| (T_BOOLEAN_OR)&quot;</summary>
T_BOOLEAN_OR=284,
/// <summary>&quot;&amp;&amp; (T_BOOLEAN_AND)&quot;</summary>
T_BOOLEAN_AND=285,
/// <summary>&quot;== (T_IS_EQUAL)&quot;</summary>
T_IS_EQUAL=289,
/// <summary>&quot;!= (T_IS_NOT_EQUAL)&quot;</summary>
T_IS_NOT_EQUAL=288,
/// <summary>&quot;=== (T_IS_IDENTICAL)&quot;</summary>
T_IS_IDENTICAL=287,
/// <summary>&quot;!== (T_IS_NOT_IDENTICAL)&quot;</summary>
T_IS_NOT_IDENTICAL=286,
/// <summary>&quot;&lt;=&gt; (T_SPACESHIP)&quot;</summary>
T_SPACESHIP=290,
/// <summary>&quot;&lt;= (T_IS_SMALLER_OR_EQUAL)&quot;</summary>
T_IS_SMALLER_OR_EQUAL=291,
/// <summary>&quot;&gt;= (T_IS_GREATER_OR_EQUAL)&quot;</summary>
T_IS_GREATER_OR_EQUAL=292,
/// <summary>&quot;&lt;&lt; (T_SL)&quot;</summary>
T_SL=293,
/// <summary>&quot;&gt;&gt; (T_SR)&quot;</summary>
T_SR=294,
/// <summary>&quot;instanceof (T_INSTANCEOF)&quot;</summary>
T_INSTANCEOF=295,
/// <summary>&quot;++ (T_INC)&quot;</summary>
T_INC=303,
/// <summary>&quot;-- (T_DEC)&quot;</summary>
T_DEC=302,
/// <summary>&quot;(int) (T_INT_CAST)&quot;</summary>
T_INT_CAST=301,
/// <summary>&quot;(double) (T_DOUBLE_CAST)&quot;</summary>
T_DOUBLE_CAST=300,
/// <summary>&quot; (T_STRING_CAST)&quot;</summary>
T_STRING_CAST=299,
/// <summary>&quot;(array) (T_ARRAY_CAST)&quot;</summary>
T_ARRAY_CAST=298,
/// <summary>&quot;(object) (T_OBJECT_CAST)&quot;</summary>
T_OBJECT_CAST=297,
/// <summary>&quot;(bool) (T_BOOL_CAST)&quot;</summary>
T_BOOL_CAST=296,
/// <summary>&quot;(unset) (T_UNSET_CAST)&quot;</summary>
T_UNSET_CAST=304,
/// <summary>&quot;** (T_POW)&quot;</summary>
T_POW=305,
/// <summary>&quot;new (T_NEW)&quot;</summary>
T_NEW=306,
/// <summary>&quot;clone (T_CLONE)&quot;</summary>
T_CLONE=307,
T_NOELSE=178,
/// <summary>&quot;elseif (T_ELSEIF)&quot;</summary>
T_ELSEIF=308,
/// <summary>&quot;else (T_ELSE)&quot;</summary>
T_ELSE=309,
/// <summary>&quot;endif (T_ENDIF)&quot;</summary>
T_ENDIF=310,
/// <summary>&quot;static (T_STATIC)&quot;</summary>
T_STATIC=353,
/// <summary>&quot;abstract (T_ABSTRACT)&quot;</summary>
T_ABSTRACT=315,
/// <summary>&quot;final (T_FINAL)&quot;</summary>
T_FINAL=314,
/// <summary>&quot;private (T_PRIVATE)&quot;</summary>
T_PRIVATE=313,
/// <summary>&quot;protected (T_PROTECTED)&quot;</summary>
T_PROTECTED=357,
/// <summary>&quot;public (T_PUBLIC)&quot;</summary>
T_PUBLIC=311,
/// <summary>&quot;integer number (T_LNUMBER)&quot;</summary>
T_LNUMBER=317,
/// <summary>&quot;floating-point number (T_DNUMBER)&quot;</summary>
T_DNUMBER=312,
/// <summary>&quot;identifier (T_STRING)&quot;</summary>
T_STRING=319,
/// <summary>&quot;variable (T_VARIABLE)&quot;</summary>
T_VARIABLE=320,
T_INLINE_HTML=321,
/// <summary>&quot;quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)&quot;</summary>
T_ENCAPSED_AND_WHITESPACE=316,
/// <summary>&quot;quoted-string (T_CONSTANT_ENCAPSED_STRING)&quot;</summary>
T_CONSTANT_ENCAPSED_STRING=323,
/// <summary>&quot;variable name (T_STRING_VARNAME)&quot;</summary>
T_STRING_VARNAME=318,
/// <summary>&quot;number (T_NUM_STRING)&quot;</summary>
T_NUM_STRING=325,
/// <summary>&#39;!&#39;</summary>
T_EXCLAM=33,
/// <summary>&#39;&quot;&#39;</summary>
T_DOUBLE_QUOTES=34,
/// <summary>&#39;$&#39;</summary>
T_DOLLAR=36,
/// <summary>&#39;%&#39;</summary>
T_PERCENT=37,
/// <summary>&#39;&amp;&#39;</summary>
T_AMP=38,
/// <summary>&#39;\&#39;&#39;</summary>
T_SINGLE_QUOTES=39,
/// <summary>&#39;(&#39;</summary>
T_LPAREN=40,
/// <summary>&#39;)&#39;</summary>
T_RPAREN=41,
/// <summary>&#39;*&#39;</summary>
T_MUL=42,
/// <summary>&#39;+&#39;</summary>
T_PLUS=43,
/// <summary>&#39;,&#39;</summary>
T_COMMA=44,
/// <summary>&#39;-&#39;</summary>
T_MINUS=45,
/// <summary>&#39;.&#39;</summary>
T_DOT=46,
/// <summary>&#39;/&#39;</summary>
T_SLASH=47,
/// <summary>&#39;:&#39;</summary>
T_COLON=58,
/// <summary>&#39;;&#39;</summary>
T_SEMI=59,
/// <summary>&#39;&lt;&#39;</summary>
T_LT=60,
/// <summary>&#39;=&#39;</summary>
T_EQ=61,
/// <summary>&#39;&gt;&#39;</summary>
T_GT=62,
/// <summary>&#39;?&#39;</summary>
T_QUESTION=63,
/// <summary>&#39;@&#39;</summary>
T_AT=64,
/// <summary>&#39;[&#39;</summary>
T_LBRACKET=91,
/// <summary>&#39;]&#39;</summary>
T_RBRACKET=93,
/// <summary>&#39;^&#39;</summary>
T_CARET=94,
/// <summary>&#39;`&#39;</summary>
T_BACKQUOTE=96,
/// <summary>&#39;{&#39;</summary>
T_LBRACE=123,
/// <summary>&#39;|&#39;</summary>
T_PIPE=124,
/// <summary>&#39;}&#39;</summary>
T_RBRACE=125,
/// <summary>&#39;~&#39;</summary>
T_TILDE=126,
/// <summary>&quot;end of file&quot;</summary>
END=0,
/// <summary>&quot;eval (T_EVAL)&quot;</summary>
T_EVAL=260,
/// <summary>&quot;exit (T_EXIT)&quot;</summary>
T_EXIT=326,
/// <summary>&quot;if (T_IF)&quot;</summary>
T_IF=322,
/// <summary>&quot;echo (T_ECHO)&quot;</summary>
T_ECHO=324,
/// <summary>&quot;do (T_DO)&quot;</summary>
T_DO=329,
/// <summary>&quot;while (T_WHILE)&quot;</summary>
T_WHILE=330,
/// <summary>&quot;endwhile (T_ENDWHILE)&quot;</summary>
T_ENDWHILE=327,
/// <summary>&quot;for (T_FOR)&quot;</summary>
T_FOR=328,
/// <summary>&quot;endfor (T_ENDFOR)&quot;</summary>
T_ENDFOR=333,
/// <summary>&quot;foreach (T_FOREACH)&quot;</summary>
T_FOREACH=334,
/// <summary>&quot;endforeach (T_ENDFOREACH)&quot;</summary>
T_ENDFOREACH=331,
/// <summary>&quot;declare (T_DECLARE)&quot;</summary>
T_DECLARE=332,
/// <summary>&quot;enddeclare (T_ENDDECLARE)&quot;</summary>
T_ENDDECLARE=337,
/// <summary>&quot;as (T_AS)&quot;</summary>
T_AS=338,
/// <summary>&quot;switch (T_SWITCH)&quot;</summary>
T_SWITCH=335,
/// <summary>&quot;endswitch (T_ENDSWITCH)&quot;</summary>
T_ENDSWITCH=336,
/// <summary>&quot;case (T_CASE)&quot;</summary>
T_CASE=341,
/// <summary>&quot;default (T_DEFAULT)&quot;</summary>
T_DEFAULT=342,
/// <summary>&quot;break (T_BREAK)&quot;</summary>
T_BREAK=339,
/// <summary>&quot;continue (T_CONTINUE)&quot;</summary>
T_CONTINUE=340,
/// <summary>&quot;goto (T_GOTO)&quot;</summary>
T_GOTO=345,
/// <summary>&quot;function (T_FUNCTION)&quot;</summary>
T_FUNCTION=346,
/// <summary> &quot;fn (T_FN)&quot;</summary>
T_FN=343,
/// <summary>&quot;const (T_CONST)&quot;</summary>
T_CONST=344,
/// <summary>&quot;return (T_RETURN)&quot;</summary>
T_RETURN=348,
/// <summary>&quot;try (T_TRY)&quot;</summary>
T_TRY=349,
/// <summary>&quot;catch (T_CATCH)&quot;</summary>
T_CATCH=347,
/// <summary>&quot;finally (T_FINALLY)&quot;</summary>
T_FINALLY=351,
/// <summary>&quot;use (T_USE)&quot;</summary>
T_USE=350,
/// <summary>&quot;insteadof (T_INSTEADOF)&quot;</summary>
T_INSTEADOF=354,
/// <summary>&quot;exit_scope (T_GLOBAL)&quot;</summary>
T_GLOBAL=355,
/// <summary>&quot;var (T_VAR)&quot;</summary>
T_VAR=356,
/// <summary>&quot;unset (T_UNSET)&quot;</summary>
T_UNSET=360,
/// <summary>&quot;isset (T_ISSET)&quot;</summary>
T_ISSET=358,
/// <summary>&quot;empty (T_EMPTY)&quot;</summary>
T_EMPTY=359,
/// <summary>&quot;__halt_compiler (T_HALT_COMPILER)&quot;</summary>
T_HALT_COMPILER=363,
/// <summary>&quot;class (T_CLASS)&quot;</summary>
T_CLASS=361,
/// <summary>&quot;trait (T_TRAIT)&quot;</summary>
T_TRAIT=362,
/// <summary>&quot;interface (T_INTERFACE)&quot;</summary>
T_INTERFACE=366,
/// <summary>&quot;extends (T_EXTENDS)&quot;</summary>
T_EXTENDS=364,
/// <summary>&quot;implements (T_IMPLEMENTS)&quot;</summary>
T_IMPLEMENTS=365,
/// <summary>&quot;-&gt; (T_OBJECT_OPERATOR)&quot;</summary>
T_OBJECT_OPERATOR=369,
/// <summary>&quot;list (T_LIST)&quot;</summary>
T_LIST=367,
/// <summary>&quot;array (T_ARRAY)&quot;</summary>
T_ARRAY=368,
/// <summary>&quot;callable (T_CALLABLE)&quot;</summary>
T_CALLABLE=372,
/// <summary>&quot;__LINE__ (T_LINE)&quot;</summary>
T_LINE=370,
/// <summary>&quot;__FILE__ (T_FILE)&quot;</summary>
T_FILE=371,
/// <summary>&quot;__DIR__ (T_DIR)&quot;</summary>
T_DIR=375,
/// <summary>&quot;__CLASS__ (T_CLASS_C)&quot;</summary>
T_CLASS_C=373,
/// <summary>&quot;__TRAIT__ (T_TRAIT_C)&quot;</summary>
T_TRAIT_C=374,
/// <summary>&quot;__METHOD__ (T_METHOD_C)&quot;</summary>
T_METHOD_C=378,
/// <summary>&quot;__FUNCTION__ (T_FUNC_C)&quot;</summary>
T_FUNC_C=376,
/// <summary>&quot;comment (T_COMMENT)&quot;</summary>
T_COMMENT=377,
/// <summary>&quot;doc comment (T_DOC_COMMENT)&quot;</summary>
T_DOC_COMMENT=381,
/// <summary>&quot;open tag (T_OPEN_TAG)&quot;</summary>
T_OPEN_TAG=379,
/// <summary>&quot;open tag with echo (T_OPEN_TAG_WITH_ECHO)&quot;</summary>
T_OPEN_TAG_WITH_ECHO=380,
/// <summary>&quot;close tag (T_CLOSE_TAG)&quot;</summary>
T_CLOSE_TAG=384,
/// <summary>&quot;whitespace (T_WHITESPACE)&quot;</summary>
T_WHITESPACE=382,
/// <summary>&quot;heredoc start (T_START_HEREDOC)&quot;</summary>
T_START_HEREDOC=383,
/// <summary>&quot;heredoc end (T_END_HEREDOC)&quot;</summary>
T_END_HEREDOC=387,
/// <summary>&quot;${ (T_DOLLAR_OPEN_CURLY_BRACES)&quot;</summary>
T_DOLLAR_OPEN_CURLY_BRACES=385,
/// <summary>&quot;{$ (T_CURLY_OPEN)&quot;</summary>
T_CURLY_OPEN=386,
/// <summary>&quot;:: (T_DOUBLE_COLON)&quot;</summary>
T_DOUBLE_COLON=390,
/// <summary>&quot;namespace (T_NAMESPACE)&quot;</summary>
T_NAMESPACE=391,
/// <summary>&quot;__NAMESPACE__ (T_NS_C)&quot;</summary>
T_NS_C=392,
/// <summary>&quot;\\ (T_NS_SEPARATOR)&quot;</summary>
T_NS_SEPARATOR=393,
/// <summary>&quot;... (T_ELLIPSIS)&quot;</summary>
T_ELLIPSIS=394,
/// <summary> type safe declaration</summary>
T_ERROR=257,
EOF=0
};

[StructLayout(LayoutKind.Explicit)]
public partial struct SemanticValueType
{
	// Integer and Offset are both used when generating code for string 
	// with 'inline' variables. Other fields are not combined.
	
	[FieldOffset(0)]		
	public bool Bool;
	[FieldOffset(0)]		
	public int Integer;
	[FieldOffset(0)]
	public double Double;
	[FieldOffset(0)]
	public long Long;
	[FieldOffset(0)]
	public QualifiedNameRef QualifiedNameReference;
	[FieldOffset(0)]
	public AliasKind Kind;
	/// <summary>Token that encapsulates the string literal.</summary>
	[FieldOffset(0)]
	public Tokens QuoteToken;

	[FieldOffset(8)]
	public object Object;

	public TypeRef TypeReference						{ get { return (TypeRef)Object; }					set { Object = value; } }
	public IList<TypeRef> TypeRefList					{ get { return (IList<TypeRef>)Object; }			set { Object = value; } }
	public LangElement Node								{ get { return (LangElement)Object; }				set { Object = value; } }
	public List<LangElement> NodeList					{ get { return (List<LangElement>)Object; }			set { Object = value; } }
	public string String								{ get { return (string)Object; }					set { Object = value; } }
	public StringPair Strings							{ get { return (StringPair)Object; }				set { Object = value; } }
	public List<string> StringList						{ get { return (List<string>)Object; }				set { Object = value; } }
	public CompleteAlias Alias							{ get { return (CompleteAlias)Object; }				set { Object = value; } }
	public List<CompleteAlias> AliasList				{ get { return (List<CompleteAlias>)Object; }		set { Object = value; } }
	public ContextAlias ContextAlias					{ get { return (ContextAlias)Object; }				set { Object = value; } }
	public List<ContextAlias> ContextAliasList			{ get { return (List<ContextAlias>)Object; }		set { Object = value; } }
	public ActualParam Param							{ get { return (ActualParam)Object; }				set { Object = value; } }
	public List<ActualParam> ParamList					{ get { return (List<ActualParam>)Object; }			set { Object = value; } }
	public FormalParam FormalParam						{ get { return (FormalParam)Object; }				set { Object = value; } }
	public List<FormalParam> FormalParamList			{ get { return (List<FormalParam>)Object; }			set { Object = value; } }
	public Item Item									{ get { return (Item)Object; }						set { Object = value; } }
	public List<Item> ItemList							{ get { return (List<Item>)Object; }				set { Object = value; } }
	internal List<IfStatement> IfItemList				{ get { return (List<IfStatement>)Object; }			set { Object = value; } }
	public ForeachVar ForeachVar						{ get { return (ForeachVar)Object; }				set { Object = value; } }
	public AnonymousClass AnonymousClass				{ get { return (AnonymousClass)Object; }			set { Object = value; } }
	public UseBase Use									{ get { return (UseBase)Object; }					set { Object = value; } }
	public List<UseBase> UseList						{ get { return (List<UseBase>)Object; }				set { Object = value; } }
}

public partial class Parser: ShiftReduceParser<SemanticValueType,Span>
{

  protected override string[] NonTerminals { get { return nonTerminals; } }
  private static string[] nonTerminals;

  protected override State[] States { get { return states; } }
  private static readonly State[] states;

  protected override Rule[] Rules { get { return rules; } }
  private static readonly Rule[] rules;


  #region Construction

  static Parser()
  {

    #region states
    states = new State[]
    {
      new State(0, -2, new int[] {-136,1,-138,3}),
      new State(1, new int[] {0,2}),
      new State(2, -1),
      new State(3, -82, new int[] {-85,4}),
      new State(4, new int[] {123,7,330,23,329,31,328,153,335,165,339,179,340,585,348,588,355,591,353,598,324,607,321,614,320,97,36,98,319,617,391,912,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,360,634,334,644,332,654,59,660,349,661,345,677,315,735,314,736,362,738,366,748,363,924,350,928,344,984,0,-3,322,-393,361,-175}, new int[] {-33,5,-34,6,-18,12,-42,615,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,619,-6,465,-35,920,-36,921,-14,682,-13,733,-37,922,-39,923}),
      new State(5, -81),
      new State(6, -88),
      new State(7, -127, new int[] {-88,8}),
      new State(8, new int[] {125,9,123,7,330,23,329,31,328,153,335,165,339,179,340,585,348,588,355,591,353,598,324,607,321,614,320,97,36,98,319,617,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,360,634,334,644,332,654,59,660,349,661,345,677,315,735,314,736,362,738,366,748,363,760,322,-393,361,-175}, new int[] {-82,10,-34,11,-18,12,-42,615,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,619,-6,465,-35,680,-36,681,-14,682,-13,733,-37,737,-39,747}),
      new State(9, -134),
      new State(10, -126),
      new State(11, -128),
      new State(12, new int[] {322,891}, new int[] {-54,13,-55,15,-129,17,-130,898}),
      new State(13, -394, new int[] {-19,14}),
      new State(14, -135),
      new State(15, -394, new int[] {-19,16}),
      new State(16, -136),
      new State(17, new int[] {308,18,309,889,123,-212,330,-212,329,-212,328,-212,335,-212,339,-212,340,-212,348,-212,355,-212,353,-212,324,-212,321,-212,320,-212,36,-212,319,-212,391,-212,393,-212,40,-212,368,-212,91,-212,323,-212,367,-212,307,-212,303,-212,302,-212,43,-212,45,-212,33,-212,126,-212,306,-212,358,-212,359,-212,262,-212,261,-212,260,-212,259,-212,258,-212,301,-212,300,-212,299,-212,298,-212,297,-212,296,-212,304,-212,326,-212,64,-212,317,-212,312,-212,370,-212,371,-212,375,-212,374,-212,378,-212,376,-212,392,-212,373,-212,34,-212,383,-212,96,-212,266,-212,267,-212,269,-212,352,-212,346,-212,343,-212,360,-212,334,-212,332,-212,59,-212,349,-212,345,-212,315,-212,314,-212,362,-212,366,-212,363,-212,350,-212,344,-212,322,-212,361,-212,0,-212,125,-212,341,-212,342,-212,336,-212,337,-212,331,-212,333,-212,327,-212,310,-212}),
      new State(18, new int[] {40,19}),
      new State(19, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,20,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(20, new int[] {41,21,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(21, new int[] {123,7,330,23,329,31,328,153,335,165,339,179,340,585,348,588,355,591,353,598,324,607,321,614,320,97,36,98,319,617,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,360,634,334,644,332,654,59,660,349,661,345,677,322,-393}, new int[] {-34,22,-18,12,-42,615,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(22, -211),
      new State(23, new int[] {40,24}),
      new State(24, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,25,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(25, new int[] {41,26,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(26, -393, new int[] {-18,27}),
      new State(27, new int[] {123,7,330,23,329,31,328,153,335,165,339,179,340,585,348,588,355,591,353,598,324,607,321,614,320,97,36,98,319,617,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,360,634,334,644,332,654,59,660,349,661,345,677,58,885,322,-393}, new int[] {-73,28,-34,30,-18,12,-42,615,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(28, -394, new int[] {-19,29}),
      new State(29, -137),
      new State(30, -208),
      new State(31, -393, new int[] {-18,32}),
      new State(32, new int[] {123,7,330,23,329,31,328,153,335,165,339,179,340,585,348,588,355,591,353,598,324,607,321,614,320,97,36,98,319,617,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,360,634,334,644,332,654,59,660,349,661,345,677,322,-393}, new int[] {-34,33,-18,12,-42,615,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(33, new int[] {330,34}),
      new State(34, new int[] {40,35}),
      new State(35, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,36,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(36, new int[] {41,37,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(37, new int[] {59,38}),
      new State(38, -394, new int[] {-19,39}),
      new State(39, -138),
      new State(40, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,41,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(41, new int[] {284,-332,285,42,263,-332,265,-332,264,-332,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,-332,283,-332,59,-332,41,-332,125,-332,58,-332,93,-332,44,-332,268,-332,338,-332}),
      new State(42, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,43,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(43, new int[] {284,-333,285,-333,263,-333,265,-333,264,-333,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,-333,283,-333,59,-333,41,-333,125,-333,58,-333,93,-333,44,-333,268,-333,338,-333}),
      new State(44, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,45,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(45, new int[] {284,40,285,42,263,-334,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-334,41,-334,125,-334,58,-334,93,-334,44,-334,268,-334,338,-334}),
      new State(46, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,47,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(47, new int[] {284,40,285,42,263,-335,265,-335,264,-335,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-335,41,-335,125,-335,58,-335,93,-335,44,-335,268,-335,338,-335}),
      new State(48, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,49,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(49, new int[] {284,40,285,42,263,-336,265,46,264,-336,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-336,41,-336,125,-336,58,-336,93,-336,44,-336,268,-336,338,-336}),
      new State(50, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,51,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(51, new int[] {284,-337,285,-337,263,-337,265,-337,264,-337,124,-337,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,-337,283,-337,59,-337,41,-337,125,-337,58,-337,93,-337,44,-337,268,-337,338,-337}),
      new State(52, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,53,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(53, new int[] {284,-338,285,-338,263,-338,265,-338,264,-338,124,-338,38,-338,94,-338,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,-338,283,-338,59,-338,41,-338,125,-338,58,-338,93,-338,44,-338,268,-338,338,-338}),
      new State(54, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,55,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(55, new int[] {284,-339,285,-339,263,-339,265,-339,264,-339,124,-339,38,52,94,-339,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,-339,283,-339,59,-339,41,-339,125,-339,58,-339,93,-339,44,-339,268,-339,338,-339}),
      new State(56, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,57,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(57, new int[] {284,-340,285,-340,263,-340,265,-340,264,-340,124,-340,38,-340,94,-340,46,-340,43,-340,45,-340,42,62,305,64,47,66,37,68,293,-340,294,-340,287,-340,286,-340,289,-340,288,-340,60,-340,291,-340,62,-340,292,-340,290,-340,295,92,63,-340,283,-340,59,-340,41,-340,125,-340,58,-340,93,-340,44,-340,268,-340,338,-340}),
      new State(58, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,59,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(59, new int[] {284,-341,285,-341,263,-341,265,-341,264,-341,124,-341,38,-341,94,-341,46,-341,43,-341,45,-341,42,62,305,64,47,66,37,68,293,-341,294,-341,287,-341,286,-341,289,-341,288,-341,60,-341,291,-341,62,-341,292,-341,290,-341,295,92,63,-341,283,-341,59,-341,41,-341,125,-341,58,-341,93,-341,44,-341,268,-341,338,-341}),
      new State(60, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,61,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(61, new int[] {284,-342,285,-342,263,-342,265,-342,264,-342,124,-342,38,-342,94,-342,46,-342,43,-342,45,-342,42,62,305,64,47,66,37,68,293,-342,294,-342,287,-342,286,-342,289,-342,288,-342,60,-342,291,-342,62,-342,292,-342,290,-342,295,92,63,-342,283,-342,59,-342,41,-342,125,-342,58,-342,93,-342,44,-342,268,-342,338,-342}),
      new State(62, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,63,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(63, new int[] {284,-343,285,-343,263,-343,265,-343,264,-343,124,-343,38,-343,94,-343,46,-343,43,-343,45,-343,42,-343,305,64,47,-343,37,-343,293,-343,294,-343,287,-343,286,-343,289,-343,288,-343,60,-343,291,-343,62,-343,292,-343,290,-343,295,92,63,-343,283,-343,59,-343,41,-343,125,-343,58,-343,93,-343,44,-343,268,-343,338,-343}),
      new State(64, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,65,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(65, new int[] {284,-344,285,-344,263,-344,265,-344,264,-344,124,-344,38,-344,94,-344,46,-344,43,-344,45,-344,42,-344,305,64,47,-344,37,-344,293,-344,294,-344,287,-344,286,-344,289,-344,288,-344,60,-344,291,-344,62,-344,292,-344,290,-344,295,-344,63,-344,283,-344,59,-344,41,-344,125,-344,58,-344,93,-344,44,-344,268,-344,338,-344}),
      new State(66, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,67,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(67, new int[] {284,-345,285,-345,263,-345,265,-345,264,-345,124,-345,38,-345,94,-345,46,-345,43,-345,45,-345,42,-345,305,64,47,-345,37,-345,293,-345,294,-345,287,-345,286,-345,289,-345,288,-345,60,-345,291,-345,62,-345,292,-345,290,-345,295,92,63,-345,283,-345,59,-345,41,-345,125,-345,58,-345,93,-345,44,-345,268,-345,338,-345}),
      new State(68, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,69,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(69, new int[] {284,-346,285,-346,263,-346,265,-346,264,-346,124,-346,38,-346,94,-346,46,-346,43,-346,45,-346,42,-346,305,64,47,-346,37,-346,293,-346,294,-346,287,-346,286,-346,289,-346,288,-346,60,-346,291,-346,62,-346,292,-346,290,-346,295,92,63,-346,283,-346,59,-346,41,-346,125,-346,58,-346,93,-346,44,-346,268,-346,338,-346}),
      new State(70, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,71,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(71, new int[] {284,-347,285,-347,263,-347,265,-347,264,-347,124,-347,38,-347,94,-347,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,-347,294,-347,287,-347,286,-347,289,-347,288,-347,60,-347,291,-347,62,-347,292,-347,290,-347,295,92,63,-347,283,-347,59,-347,41,-347,125,-347,58,-347,93,-347,44,-347,268,-347,338,-347}),
      new State(72, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,73,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(73, new int[] {284,-348,285,-348,263,-348,265,-348,264,-348,124,-348,38,-348,94,-348,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,-348,294,-348,287,-348,286,-348,289,-348,288,-348,60,-348,291,-348,62,-348,292,-348,290,-348,295,92,63,-348,283,-348,59,-348,41,-348,125,-348,58,-348,93,-348,44,-348,268,-348,338,-348}),
      new State(74, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,75,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(75, new int[] {284,-353,285,-353,263,-353,265,-353,264,-353,124,-353,38,-353,94,-353,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,-353,283,-353,59,-353,41,-353,125,-353,58,-353,93,-353,44,-353,268,-353,338,-353}),
      new State(76, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,77,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(77, new int[] {284,-354,285,-354,263,-354,265,-354,264,-354,124,-354,38,-354,94,-354,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,-354,283,-354,59,-354,41,-354,125,-354,58,-354,93,-354,44,-354,268,-354,338,-354}),
      new State(78, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,79,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(79, new int[] {284,-355,285,-355,263,-355,265,-355,264,-355,124,-355,38,-355,94,-355,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,-355,283,-355,59,-355,41,-355,125,-355,58,-355,93,-355,44,-355,268,-355,338,-355}),
      new State(80, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,81,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(81, new int[] {284,-356,285,-356,263,-356,265,-356,264,-356,124,-356,38,-356,94,-356,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,-356,283,-356,59,-356,41,-356,125,-356,58,-356,93,-356,44,-356,268,-356,338,-356}),
      new State(82, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,83,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(83, new int[] {284,-357,285,-357,263,-357,265,-357,264,-357,124,-357,38,-357,94,-357,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,-357,286,-357,289,-357,288,-357,60,82,291,84,62,86,292,88,290,-357,295,92,63,-357,283,-357,59,-357,41,-357,125,-357,58,-357,93,-357,44,-357,268,-357,338,-357}),
      new State(84, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,85,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(85, new int[] {284,-358,285,-358,263,-358,265,-358,264,-358,124,-358,38,-358,94,-358,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,-358,286,-358,289,-358,288,-358,60,82,291,84,62,86,292,88,290,-358,295,92,63,-358,283,-358,59,-358,41,-358,125,-358,58,-358,93,-358,44,-358,268,-358,338,-358}),
      new State(86, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,87,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(87, new int[] {284,-359,285,-359,263,-359,265,-359,264,-359,124,-359,38,-359,94,-359,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,-359,286,-359,289,-359,288,-359,60,82,291,84,62,86,292,88,290,-359,295,92,63,-359,283,-359,59,-359,41,-359,125,-359,58,-359,93,-359,44,-359,268,-359,338,-359}),
      new State(88, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,89,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(89, new int[] {284,-360,285,-360,263,-360,265,-360,264,-360,124,-360,38,-360,94,-360,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,-360,286,-360,289,-360,288,-360,60,82,291,84,62,86,292,88,290,-360,295,92,63,-360,283,-360,59,-360,41,-360,125,-360,58,-360,93,-360,44,-360,268,-360,338,-360}),
      new State(90, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,91,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(91, new int[] {284,-361,285,-361,263,-361,265,-361,264,-361,124,-361,38,-361,94,-361,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,-361,283,-361,59,-361,41,-361,125,-361,58,-361,93,-361,44,-361,268,-361,338,-361}),
      new State(92, new int[] {353,296,319,187,391,188,393,191,320,97,36,98}, new int[] {-26,93,-27,94,-20,350,-107,184,-78,351,-48,524}),
      new State(93, -362),
      new State(94, new int[] {390,95,59,-411,284,-411,285,-411,263,-411,265,-411,264,-411,124,-411,38,-411,94,-411,46,-411,43,-411,45,-411,42,-411,305,-411,47,-411,37,-411,293,-411,294,-411,287,-411,286,-411,289,-411,288,-411,60,-411,291,-411,62,-411,292,-411,290,-411,295,-411,63,-411,283,-411,41,-411,125,-411,58,-411,93,-411,44,-411,268,-411,338,-411,40,-411}),
      new State(95, new int[] {320,97,36,98}, new int[] {-48,96}),
      new State(96, -471),
      new State(97, -462),
      new State(98, new int[] {123,99,320,97,36,98}, new int[] {-48,884}),
      new State(99, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,100,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(100, new int[] {125,101,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(101, -463),
      new State(102, new int[] {58,882,320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,103,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(103, new int[] {58,104,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(104, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,105,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(105, new int[] {284,40,285,42,263,-365,265,-365,264,-365,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,-365,283,106,59,-365,41,-365,125,-365,58,-365,93,-365,44,-365,268,-365,338,-365}),
      new State(106, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,107,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(107, new int[] {284,40,285,42,263,-367,265,-367,264,-367,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,-367,283,106,59,-367,41,-367,125,-367,58,-367,93,-367,44,-367,268,-367,338,-367}),
      new State(108, new int[] {61,109,270,854,271,856,279,858,281,860,278,862,277,864,276,866,275,868,274,870,273,872,272,874,280,876,282,878,303,880,302,881,59,-442,284,-442,285,-442,263,-442,265,-442,264,-442,124,-442,38,-442,94,-442,46,-442,43,-442,45,-442,42,-442,305,-442,47,-442,37,-442,293,-442,294,-442,287,-442,286,-442,289,-442,288,-442,60,-442,291,-442,62,-442,292,-442,290,-442,295,-442,63,-442,283,-442,41,-442,125,-442,58,-442,93,-442,44,-442,268,-442,338,-442,91,-447,369,-447,123,-447,390,-447}),
      new State(109, new int[] {38,111,320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,110,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(110, new int[] {284,40,285,42,263,-311,265,-311,264,-311,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-311,41,-311,125,-311,58,-311,93,-311,44,-311,268,-311,338,-311}),
      new State(111, new int[] {320,97,36,98,353,296,319,187,391,188,393,191,40,297,368,283,91,325,323,305,306,345}, new int[] {-43,112,-45,113,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,324,-50,335,-52,310,-79,311}),
      new State(112, new int[] {59,-312,284,-312,285,-312,263,-312,265,-312,264,-312,124,-312,38,-312,94,-312,46,-312,43,-312,45,-312,42,-312,305,-312,47,-312,37,-312,293,-312,294,-312,287,-312,286,-312,289,-312,288,-312,60,-312,291,-312,62,-312,292,-312,290,-312,295,-312,63,-312,283,-312,41,-312,125,-312,58,-312,93,-312,44,-312,268,-312,338,-312,91,-447,369,-447,123,-447,390,-447}),
      new State(113, -313),
      new State(114, new int[] {61,-459,270,-459,271,-459,279,-459,281,-459,278,-459,277,-459,276,-459,275,-459,274,-459,273,-459,272,-459,280,-459,282,-459,303,-459,302,-459,59,-459,284,-459,285,-459,263,-459,265,-459,264,-459,124,-459,38,-459,94,-459,46,-459,43,-459,45,-459,42,-459,305,-459,47,-459,37,-459,293,-459,294,-459,287,-459,286,-459,289,-459,288,-459,60,-459,291,-459,62,-459,292,-459,290,-459,295,-459,63,-459,283,-459,91,-459,369,-459,123,-459,390,-459,41,-459,125,-459,58,-459,93,-459,44,-459,268,-459,338,-459,40,-450}),
      new State(115, -453),
      new State(116, new int[] {91,117,369,848,123,851,390,-446}),
      new State(117, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,93,-444}, new int[] {-61,118,-42,120,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(118, new int[] {93,119}),
      new State(119, -454),
      new State(120, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,93,-445,59,-445,41,-445}),
      new State(121, -460),
      new State(122, new int[] {390,123}),
      new State(123, new int[] {320,97,36,98,319,199,262,202,261,203,260,204,259,205,258,206,263,207,264,208,265,209,295,210,306,211,307,212,326,213,322,214,308,215,309,216,310,217,324,218,329,219,330,220,327,221,328,222,333,223,334,224,331,225,332,226,337,227,338,228,349,229,347,230,351,231,352,232,350,233,354,234,355,235,356,236,360,237,358,238,359,239,340,240,345,241,346,242,344,243,348,244,266,245,267,246,367,247,335,248,336,249,341,250,342,251,339,252,368,253,372,254,364,255,365,256,391,257,362,258,366,259,361,260,373,261,374,262,376,263,378,264,370,265,371,266,375,267,392,268,343,269,353,270,315,271,314,272,313,273,357,274,311,275,123,276}, new int[] {-48,124,-104,125,-2,126,-105,200,-106,201}),
      new State(124, new int[] {61,-465,270,-465,271,-465,279,-465,281,-465,278,-465,277,-465,276,-465,275,-465,274,-465,273,-465,272,-465,280,-465,282,-465,303,-465,302,-465,59,-465,284,-465,285,-465,263,-465,265,-465,264,-465,124,-465,38,-465,94,-465,46,-465,43,-465,45,-465,42,-465,305,-465,47,-465,37,-465,293,-465,294,-465,287,-465,286,-465,289,-465,288,-465,60,-465,291,-465,62,-465,292,-465,290,-465,295,-465,63,-465,283,-465,91,-465,369,-465,123,-465,390,-465,41,-465,125,-465,58,-465,93,-465,44,-465,268,-465,338,-465,40,-475}),
      new State(125, new int[] {91,-440,59,-440,284,-440,285,-440,263,-440,265,-440,264,-440,124,-440,38,-440,94,-440,46,-440,43,-440,45,-440,42,-440,305,-440,47,-440,37,-440,293,-440,294,-440,287,-440,286,-440,289,-440,288,-440,60,-440,291,-440,62,-440,292,-440,290,-440,295,-440,63,-440,283,-440,41,-440,125,-440,58,-440,93,-440,44,-440,268,-440,338,-440,40,-473}),
      new State(126, new int[] {40,128}, new int[] {-117,127}),
      new State(127, -406),
      new State(128, new int[] {41,129,320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,394,845}, new int[] {-118,130,-115,847,-42,135,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(129, -240),
      new State(130, new int[] {44,133,41,-110}, new int[] {-3,131}),
      new State(131, new int[] {41,132}),
      new State(132, -241),
      new State(133, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,394,845,41,-111}, new int[] {-115,134,-42,135,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(134, -243),
      new State(135, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,44,-244,41,-244}),
      new State(136, new int[] {346,464,343,477,390,-409}, new int[] {-84,137,-5,138,-6,465}),
      new State(137, -387),
      new State(138, new int[] {38,509,40,-397}, new int[] {-4,139}),
      new State(139, -392, new int[] {-17,140}),
      new State(140, new int[] {40,141}),
      new State(141, new int[] {311,505,357,506,313,507,368,-222,372,-222,319,-222,391,-222,393,-222,63,-222,38,-222,394,-222,320,-222,41,-219}, new int[] {-121,142,-122,491,-119,508,-15,495}),
      new State(142, new int[] {41,143}),
      new State(143, new int[] {350,835,58,-399,123,-399}, new int[] {-123,144}),
      new State(144, new int[] {58,478,123,-238}, new int[] {-22,145}),
      new State(145, -395, new int[] {-141,146}),
      new State(146, -393, new int[] {-18,147}),
      new State(147, new int[] {123,148}),
      new State(148, -127, new int[] {-88,149}),
      new State(149, new int[] {125,150,123,7,330,23,329,31,328,153,335,165,339,179,340,585,348,588,355,591,353,598,324,607,321,614,320,97,36,98,319,617,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,360,634,334,644,332,654,59,660,349,661,345,677,315,735,314,736,362,738,366,748,363,760,322,-393,361,-175}, new int[] {-82,10,-34,11,-18,12,-42,615,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,619,-6,465,-35,680,-36,681,-14,682,-13,733,-37,737,-39,747}),
      new State(150, -394, new int[] {-19,151}),
      new State(151, -395, new int[] {-141,152}),
      new State(152, -388),
      new State(153, new int[] {40,154}),
      new State(154, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,59,-301}, new int[] {-90,155,-101,831,-42,834,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(155, new int[] {59,156}),
      new State(156, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,59,-301}, new int[] {-90,157,-101,831,-42,834,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(157, new int[] {59,158}),
      new State(158, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,41,-301}, new int[] {-90,159,-101,831,-42,834,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(159, new int[] {41,160}),
      new State(160, -393, new int[] {-18,161}),
      new State(161, new int[] {123,7,330,23,329,31,328,153,335,165,339,179,340,585,348,588,355,591,353,598,324,607,321,614,320,97,36,98,319,617,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,360,634,334,644,332,654,59,660,349,661,345,677,58,827,322,-393}, new int[] {-71,162,-34,164,-18,12,-42,615,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(162, -394, new int[] {-19,163}),
      new State(163, -139),
      new State(164, -193),
      new State(165, new int[] {40,166}),
      new State(166, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,167,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(167, new int[] {41,168,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(168, -393, new int[] {-18,169}),
      new State(169, new int[] {123,172,58,819}, new int[] {-100,170}),
      new State(170, -394, new int[] {-19,171}),
      new State(171, -140),
      new State(172, new int[] {59,816,125,-203,341,-203,342,-203}, new int[] {-99,173}),
      new State(173, new int[] {125,174,341,175,342,813}),
      new State(174, -199),
      new State(175, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,176,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(176, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,58,811,59,812}, new int[] {-145,177}),
      new State(177, -127, new int[] {-88,178}),
      new State(178, new int[] {123,7,330,23,329,31,328,153,335,165,339,179,340,585,348,588,355,591,353,598,324,607,321,614,320,97,36,98,319,617,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,360,634,334,644,332,654,59,660,349,661,345,677,315,735,314,736,362,738,366,748,363,760,125,-204,341,-204,342,-204,336,-204,322,-393,361,-175}, new int[] {-82,10,-34,11,-18,12,-42,615,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,619,-6,465,-35,680,-36,681,-14,682,-13,733,-37,737,-39,747}),
      new State(179, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,59,-444}, new int[] {-61,180,-42,120,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(180, new int[] {59,181}),
      new State(181, -141),
      new State(182, new int[] {40,128,390,-410,91,-439,59,-439,284,-439,285,-439,263,-439,265,-439,264,-439,124,-439,38,-439,94,-439,46,-439,43,-439,45,-439,42,-439,305,-439,47,-439,37,-439,293,-439,294,-439,287,-439,286,-439,289,-439,288,-439,60,-439,291,-439,62,-439,292,-439,290,-439,295,-439,63,-439,283,-439,41,-439,125,-439,58,-439,93,-439,44,-439,268,-439,338,-439}, new int[] {-117,183}),
      new State(183, -405),
      new State(184, new int[] {393,185,40,-85,390,-85,91,-85,59,-85,284,-85,285,-85,263,-85,265,-85,264,-85,124,-85,38,-85,94,-85,46,-85,43,-85,45,-85,42,-85,305,-85,47,-85,37,-85,293,-85,294,-85,287,-85,286,-85,289,-85,288,-85,60,-85,291,-85,62,-85,292,-85,290,-85,295,-85,63,-85,283,-85,41,-85,125,-85,58,-85,93,-85,44,-85,268,-85,338,-85,123,-85,394,-85,320,-85,365,-85}),
      new State(185, new int[] {319,186}),
      new State(186, -84),
      new State(187, -83),
      new State(188, new int[] {393,189}),
      new State(189, new int[] {319,187}, new int[] {-107,190}),
      new State(190, new int[] {393,185,40,-86,390,-86,91,-86,59,-86,284,-86,285,-86,263,-86,265,-86,264,-86,124,-86,38,-86,94,-86,46,-86,43,-86,45,-86,42,-86,305,-86,47,-86,37,-86,293,-86,294,-86,287,-86,286,-86,289,-86,288,-86,60,-86,291,-86,62,-86,292,-86,290,-86,295,-86,63,-86,283,-86,41,-86,125,-86,58,-86,93,-86,44,-86,268,-86,338,-86,123,-86,394,-86,320,-86,365,-86}),
      new State(191, new int[] {319,187}, new int[] {-107,192}),
      new State(192, new int[] {393,185,40,-87,390,-87,91,-87,59,-87,284,-87,285,-87,263,-87,265,-87,264,-87,124,-87,38,-87,94,-87,46,-87,43,-87,45,-87,42,-87,305,-87,47,-87,37,-87,293,-87,294,-87,287,-87,286,-87,289,-87,288,-87,60,-87,291,-87,62,-87,292,-87,290,-87,295,-87,63,-87,283,-87,41,-87,125,-87,58,-87,93,-87,44,-87,268,-87,338,-87,123,-87,394,-87,320,-87,365,-87}),
      new State(193, new int[] {390,194}),
      new State(194, new int[] {320,97,36,98,319,199,262,202,261,203,260,204,259,205,258,206,263,207,264,208,265,209,295,210,306,211,307,212,326,213,322,214,308,215,309,216,310,217,324,218,329,219,330,220,327,221,328,222,333,223,334,224,331,225,332,226,337,227,338,228,349,229,347,230,351,231,352,232,350,233,354,234,355,235,356,236,360,237,358,238,359,239,340,240,345,241,346,242,344,243,348,244,266,245,267,246,367,247,335,248,336,249,341,250,342,251,339,252,368,253,372,254,364,255,365,256,391,257,362,258,366,259,361,260,373,261,374,262,376,263,378,264,370,265,371,266,375,267,392,268,343,269,353,270,315,271,314,272,313,273,357,274,311,275,123,276}, new int[] {-48,195,-104,196,-2,197,-105,200,-106,201}),
      new State(195, new int[] {61,-466,270,-466,271,-466,279,-466,281,-466,278,-466,277,-466,276,-466,275,-466,274,-466,273,-466,272,-466,280,-466,282,-466,303,-466,302,-466,59,-466,284,-466,285,-466,263,-466,265,-466,264,-466,124,-466,38,-466,94,-466,46,-466,43,-466,45,-466,42,-466,305,-466,47,-466,37,-466,293,-466,294,-466,287,-466,286,-466,289,-466,288,-466,60,-466,291,-466,62,-466,292,-466,290,-466,295,-466,63,-466,283,-466,91,-466,369,-466,123,-466,390,-466,41,-466,125,-466,58,-466,93,-466,44,-466,268,-466,338,-466,40,-475}),
      new State(196, new int[] {91,-441,59,-441,284,-441,285,-441,263,-441,265,-441,264,-441,124,-441,38,-441,94,-441,46,-441,43,-441,45,-441,42,-441,305,-441,47,-441,37,-441,293,-441,294,-441,287,-441,286,-441,289,-441,288,-441,60,-441,291,-441,62,-441,292,-441,290,-441,295,-441,63,-441,283,-441,41,-441,125,-441,58,-441,93,-441,44,-441,268,-441,338,-441,40,-473}),
      new State(197, new int[] {40,128}, new int[] {-117,198}),
      new State(198, -407),
      new State(199, -79),
      new State(200, -80),
      new State(201, -72),
      new State(202, -4),
      new State(203, -5),
      new State(204, -6),
      new State(205, -7),
      new State(206, -8),
      new State(207, -9),
      new State(208, -10),
      new State(209, -11),
      new State(210, -12),
      new State(211, -13),
      new State(212, -14),
      new State(213, -15),
      new State(214, -16),
      new State(215, -17),
      new State(216, -18),
      new State(217, -19),
      new State(218, -20),
      new State(219, -21),
      new State(220, -22),
      new State(221, -23),
      new State(222, -24),
      new State(223, -25),
      new State(224, -26),
      new State(225, -27),
      new State(226, -28),
      new State(227, -29),
      new State(228, -30),
      new State(229, -31),
      new State(230, -32),
      new State(231, -33),
      new State(232, -34),
      new State(233, -35),
      new State(234, -36),
      new State(235, -37),
      new State(236, -38),
      new State(237, -39),
      new State(238, -40),
      new State(239, -41),
      new State(240, -42),
      new State(241, -43),
      new State(242, -44),
      new State(243, -45),
      new State(244, -46),
      new State(245, -47),
      new State(246, -48),
      new State(247, -49),
      new State(248, -50),
      new State(249, -51),
      new State(250, -52),
      new State(251, -53),
      new State(252, -54),
      new State(253, -55),
      new State(254, -56),
      new State(255, -57),
      new State(256, -58),
      new State(257, -59),
      new State(258, -60),
      new State(259, -61),
      new State(260, -62),
      new State(261, -63),
      new State(262, -64),
      new State(263, -65),
      new State(264, -66),
      new State(265, -67),
      new State(266, -68),
      new State(267, -69),
      new State(268, -70),
      new State(269, -71),
      new State(270, -73),
      new State(271, -74),
      new State(272, -75),
      new State(273, -76),
      new State(274, -77),
      new State(275, -78),
      new State(276, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,277,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(277, new int[] {125,278,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(278, -474),
      new State(279, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,280,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(280, new int[] {41,281,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(281, new int[] {91,-448,369,-448,123,-448,390,-448,40,-451,59,-363,284,-363,285,-363,263,-363,265,-363,264,-363,124,-363,38,-363,94,-363,46,-363,43,-363,45,-363,42,-363,305,-363,47,-363,37,-363,293,-363,294,-363,287,-363,286,-363,289,-363,288,-363,60,-363,291,-363,62,-363,292,-363,290,-363,295,-363,63,-363,283,-363,41,-363,125,-363,58,-363,93,-363,44,-363,268,-363,338,-363}),
      new State(282, new int[] {91,-449,369,-449,123,-449,390,-449,40,-452,59,-437,284,-437,285,-437,263,-437,265,-437,264,-437,124,-437,38,-437,94,-437,46,-437,43,-437,45,-437,42,-437,305,-437,47,-437,37,-437,293,-437,294,-437,287,-437,286,-437,289,-437,288,-437,60,-437,291,-437,62,-437,292,-437,290,-437,295,-437,63,-437,283,-437,41,-437,125,-437,58,-437,93,-437,44,-437,268,-437,338,-437}),
      new State(283, new int[] {40,284}),
      new State(284, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,329,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,38,797,394,799,44,-480,41,-480}, new int[] {-128,285,-127,287,-125,328,-126,290,-42,291,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(285, new int[] {41,286}),
      new State(286, -420),
      new State(287, new int[] {44,288,41,-479,93,-479}),
      new State(288, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,329,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,38,797,394,799,44,-480,41,-480,93,-480}, new int[] {-125,289,-126,290,-42,291,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(289, -482),
      new State(290, -481),
      new State(291, new int[] {268,292,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,44,-485,41,-485,93,-485}),
      new State(292, new int[] {38,294,367,807,320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,293,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(293, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,44,-484,41,-484,93,-484}),
      new State(294, new int[] {320,97,36,98,353,296,319,187,391,188,393,191,40,297,368,283,91,325,323,305}, new int[] {-43,295,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,324,-50,335,-52,310,-79,311}),
      new State(295, new int[] {44,-486,41,-486,93,-486,91,-447,369,-447,123,-447,390,-447}),
      new State(296, -409),
      new State(297, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,298,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(298, new int[] {41,299,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(299, new int[] {91,-448,369,-448,123,-448,390,-448,40,-451}),
      new State(300, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,329,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,38,797,394,799,44,-480,93,-480}, new int[] {-128,301,-127,287,-125,328,-126,290,-42,291,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(301, new int[] {93,302}),
      new State(302, new int[] {61,303,91,-421,369,-421,123,-421,390,-421,40,-421,59,-421,284,-421,285,-421,263,-421,265,-421,264,-421,124,-421,38,-421,94,-421,46,-421,43,-421,45,-421,42,-421,305,-421,47,-421,37,-421,293,-421,294,-421,287,-421,286,-421,289,-421,288,-421,60,-421,291,-421,62,-421,292,-421,290,-421,295,-421,63,-421,283,-421,41,-421,125,-421,58,-421,93,-421,44,-421,268,-421,338,-421}),
      new State(303, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,304,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(304, new int[] {284,40,285,42,263,-310,265,-310,264,-310,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-310,41,-310,125,-310,58,-310,93,-310,44,-310,268,-310,338,-310}),
      new State(305, -422),
      new State(306, new int[] {91,307,59,-438,284,-438,285,-438,263,-438,265,-438,264,-438,124,-438,38,-438,94,-438,46,-438,43,-438,45,-438,42,-438,305,-438,47,-438,37,-438,293,-438,294,-438,287,-438,286,-438,289,-438,288,-438,60,-438,291,-438,62,-438,292,-438,290,-438,295,-438,63,-438,283,-438,41,-438,125,-438,58,-438,93,-438,44,-438,268,-438,338,-438}),
      new State(307, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,93,-444}, new int[] {-61,308,-42,120,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(308, new int[] {93,309}),
      new State(309, -455),
      new State(310, -458),
      new State(311, new int[] {40,128}, new int[] {-117,312}),
      new State(312, -408),
      new State(313, -443),
      new State(314, new int[] {40,315}),
      new State(315, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,329,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,38,797,394,799,44,-480,41,-480}, new int[] {-128,316,-127,287,-125,328,-126,290,-42,291,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(316, new int[] {41,317}),
      new State(317, new int[] {61,318}),
      new State(318, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,319,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(319, new int[] {284,40,285,42,263,-309,265,-309,264,-309,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-309,41,-309,125,-309,58,-309,93,-309,44,-309,268,-309,338,-309}),
      new State(320, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,321,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(321, -314),
      new State(322, new int[] {320,97,36,98,353,296,319,187,391,188,393,191,40,297,368,283,91,325,323,305}, new int[] {-43,323,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,324,-50,335,-52,310,-79,311}),
      new State(323, new int[] {59,-329,284,-329,285,-329,263,-329,265,-329,264,-329,124,-329,38,-329,94,-329,46,-329,43,-329,45,-329,42,-329,305,-329,47,-329,37,-329,293,-329,294,-329,287,-329,286,-329,289,-329,288,-329,60,-329,291,-329,62,-329,292,-329,290,-329,295,-329,63,-329,283,-329,41,-329,125,-329,58,-329,93,-329,44,-329,268,-329,338,-329,91,-447,369,-447,123,-447,390,-447}),
      new State(324, new int[] {91,-449,369,-449,123,-449,390,-449,40,-452}),
      new State(325, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,329,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,38,797,394,799,44,-480,93,-480}, new int[] {-128,326,-127,287,-125,328,-126,290,-42,291,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(326, new int[] {93,327}),
      new State(327, -421),
      new State(328, -483),
      new State(329, new int[] {40,330}),
      new State(330, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,329,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,38,797,394,799,44,-480,41,-480}, new int[] {-128,331,-127,287,-125,328,-126,290,-42,291,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(331, new int[] {41,332}),
      new State(332, new int[] {61,318,44,-490,41,-490,93,-490}),
      new State(333, new int[] {320,97,36,98,353,296,319,187,391,188,393,191,40,297,368,283,91,325,323,305}, new int[] {-43,334,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,324,-50,335,-52,310,-79,311}),
      new State(334, new int[] {59,-331,284,-331,285,-331,263,-331,265,-331,264,-331,124,-331,38,-331,94,-331,46,-331,43,-331,45,-331,42,-331,305,-331,47,-331,37,-331,293,-331,294,-331,287,-331,286,-331,289,-331,288,-331,60,-331,291,-331,62,-331,292,-331,290,-331,295,-331,63,-331,283,-331,41,-331,125,-331,58,-331,93,-331,44,-331,268,-331,338,-331,91,-447,369,-447,123,-447,390,-447}),
      new State(335, new int[] {91,307}),
      new State(336, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,337,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(337, new int[] {284,-349,285,-349,263,-349,265,-349,264,-349,124,-349,38,-349,94,-349,46,-349,43,-349,45,-349,42,-349,305,64,47,-349,37,-349,293,-349,294,-349,287,-349,286,-349,289,-349,288,-349,60,-349,291,-349,62,-349,292,-349,290,-349,295,-349,63,-349,283,-349,59,-349,41,-349,125,-349,58,-349,93,-349,44,-349,268,-349,338,-349}),
      new State(338, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,339,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(339, new int[] {284,-350,285,-350,263,-350,265,-350,264,-350,124,-350,38,-350,94,-350,46,-350,43,-350,45,-350,42,-350,305,64,47,-350,37,-350,293,-350,294,-350,287,-350,286,-350,289,-350,288,-350,60,-350,291,-350,62,-350,292,-350,290,-350,295,-350,63,-350,283,-350,59,-350,41,-350,125,-350,58,-350,93,-350,44,-350,268,-350,338,-350}),
      new State(340, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,341,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(341, new int[] {284,-351,285,-351,263,-351,265,-351,264,-351,124,-351,38,-351,94,-351,46,-351,43,-351,45,-351,42,-351,305,64,47,-351,37,-351,293,-351,294,-351,287,-351,286,-351,289,-351,288,-351,60,-351,291,-351,62,-351,292,-351,290,-351,295,92,63,-351,283,-351,59,-351,41,-351,125,-351,58,-351,93,-351,44,-351,268,-351,338,-351}),
      new State(342, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,343,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(343, new int[] {284,-352,285,-352,263,-352,265,-352,264,-352,124,-352,38,-352,94,-352,46,-352,43,-352,45,-352,42,-352,305,64,47,-352,37,-352,293,-352,294,-352,287,-352,286,-352,289,-352,288,-352,60,-352,291,-352,62,-352,292,-352,290,-352,295,-352,63,-352,283,-352,59,-352,41,-352,125,-352,58,-352,93,-352,44,-352,268,-352,338,-352}),
      new State(344, -364),
      new State(345, new int[] {353,296,319,187,391,188,393,191,320,97,36,98,361,525}, new int[] {-26,346,-132,349,-27,94,-20,350,-107,184,-78,351,-48,524}),
      new State(346, new int[] {40,128,59,-418,284,-418,285,-418,263,-418,265,-418,264,-418,124,-418,38,-418,94,-418,46,-418,43,-418,45,-418,42,-418,305,-418,47,-418,37,-418,293,-418,294,-418,287,-418,286,-418,289,-418,288,-418,60,-418,291,-418,62,-418,292,-418,290,-418,295,-418,63,-418,283,-418,41,-418,125,-418,58,-418,93,-418,44,-418,268,-418,338,-418}, new int[] {-116,347,-117,348}),
      new State(347, -307),
      new State(348, -419),
      new State(349, -308),
      new State(350, -410),
      new State(351, new int[] {91,352,123,512,369,515,390,522,59,-412,284,-412,285,-412,263,-412,265,-412,264,-412,124,-412,38,-412,94,-412,46,-412,43,-412,45,-412,42,-412,305,-412,47,-412,37,-412,293,-412,294,-412,287,-412,286,-412,289,-412,288,-412,60,-412,291,-412,62,-412,292,-412,290,-412,295,-412,63,-412,283,-412,41,-412,125,-412,58,-412,93,-412,44,-412,268,-412,338,-412,40,-412}),
      new State(352, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,93,-444}, new int[] {-61,353,-42,120,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(353, new int[] {93,354}),
      new State(354, -468),
      new State(355, -368),
      new State(356, new int[] {40,357}),
      new State(357, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-97,358,-41,511,-42,363,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(358, new int[] {44,361,41,-110}, new int[] {-3,359}),
      new State(359, new int[] {41,360}),
      new State(360, -505),
      new State(361, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,41,-111}, new int[] {-41,362,-42,363,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(362, -513),
      new State(363, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,44,-514,41,-514}),
      new State(364, new int[] {40,365}),
      new State(365, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,366,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(366, new int[] {41,367,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(367, -506),
      new State(368, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,369,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(369, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-507,41,-507,125,-507,58,-507,93,-507,44,-507,268,-507,338,-507}),
      new State(370, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,371,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(371, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-508,41,-508,125,-508,58,-508,93,-508,44,-508,268,-508,338,-508}),
      new State(372, new int[] {40,373}),
      new State(373, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,374,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(374, new int[] {41,375,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(375, -509),
      new State(376, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,377,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(377, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-510,41,-510,125,-510,58,-510,93,-510,44,-510,268,-510,338,-510}),
      new State(378, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,379,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(379, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-511,41,-511,125,-511,58,-511,93,-511,44,-511,268,-511,338,-511}),
      new State(380, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,381,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(381, new int[] {284,-369,285,-369,263,-369,265,-369,264,-369,124,-369,38,-369,94,-369,46,-369,43,-369,45,-369,42,-369,305,64,47,-369,37,-369,293,-369,294,-369,287,-369,286,-369,289,-369,288,-369,60,-369,291,-369,62,-369,292,-369,290,-369,295,-369,63,-369,283,-369,59,-369,41,-369,125,-369,58,-369,93,-369,44,-369,268,-369,338,-369}),
      new State(382, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,383,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(383, new int[] {284,-370,285,-370,263,-370,265,-370,264,-370,124,-370,38,-370,94,-370,46,-370,43,-370,45,-370,42,-370,305,64,47,-370,37,-370,293,-370,294,-370,287,-370,286,-370,289,-370,288,-370,60,-370,291,-370,62,-370,292,-370,290,-370,295,-370,63,-370,283,-370,59,-370,41,-370,125,-370,58,-370,93,-370,44,-370,268,-370,338,-370}),
      new State(384, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,385,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(385, new int[] {284,-371,285,-371,263,-371,265,-371,264,-371,124,-371,38,-371,94,-371,46,-371,43,-371,45,-371,42,-371,305,64,47,-371,37,-371,293,-371,294,-371,287,-371,286,-371,289,-371,288,-371,60,-371,291,-371,62,-371,292,-371,290,-371,295,-371,63,-371,283,-371,59,-371,41,-371,125,-371,58,-371,93,-371,44,-371,268,-371,338,-371}),
      new State(386, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,387,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(387, new int[] {284,-372,285,-372,263,-372,265,-372,264,-372,124,-372,38,-372,94,-372,46,-372,43,-372,45,-372,42,-372,305,64,47,-372,37,-372,293,-372,294,-372,287,-372,286,-372,289,-372,288,-372,60,-372,291,-372,62,-372,292,-372,290,-372,295,-372,63,-372,283,-372,59,-372,41,-372,125,-372,58,-372,93,-372,44,-372,268,-372,338,-372}),
      new State(388, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,389,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(389, new int[] {284,-373,285,-373,263,-373,265,-373,264,-373,124,-373,38,-373,94,-373,46,-373,43,-373,45,-373,42,-373,305,64,47,-373,37,-373,293,-373,294,-373,287,-373,286,-373,289,-373,288,-373,60,-373,291,-373,62,-373,292,-373,290,-373,295,-373,63,-373,283,-373,59,-373,41,-373,125,-373,58,-373,93,-373,44,-373,268,-373,338,-373}),
      new State(390, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,391,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(391, new int[] {284,-374,285,-374,263,-374,265,-374,264,-374,124,-374,38,-374,94,-374,46,-374,43,-374,45,-374,42,-374,305,64,47,-374,37,-374,293,-374,294,-374,287,-374,286,-374,289,-374,288,-374,60,-374,291,-374,62,-374,292,-374,290,-374,295,-374,63,-374,283,-374,59,-374,41,-374,125,-374,58,-374,93,-374,44,-374,268,-374,338,-374}),
      new State(392, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,393,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(393, new int[] {284,-375,285,-375,263,-375,265,-375,264,-375,124,-375,38,-375,94,-375,46,-375,43,-375,45,-375,42,-375,305,64,47,-375,37,-375,293,-375,294,-375,287,-375,286,-375,289,-375,288,-375,60,-375,291,-375,62,-375,292,-375,290,-375,295,-375,63,-375,283,-375,59,-375,41,-375,125,-375,58,-375,93,-375,44,-375,268,-375,338,-375}),
      new State(394, new int[] {40,396,59,-413,284,-413,285,-413,263,-413,265,-413,264,-413,124,-413,38,-413,94,-413,46,-413,43,-413,45,-413,42,-413,305,-413,47,-413,37,-413,293,-413,294,-413,287,-413,286,-413,289,-413,288,-413,60,-413,291,-413,62,-413,292,-413,290,-413,295,-413,63,-413,283,-413,41,-413,125,-413,58,-413,93,-413,44,-413,268,-413,338,-413}, new int[] {-76,395}),
      new State(395, -376),
      new State(396, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,41,-444}, new int[] {-61,397,-42,120,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(397, new int[] {41,398}),
      new State(398, -414),
      new State(399, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,400,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(400, new int[] {284,-377,285,-377,263,-377,265,-377,264,-377,124,-377,38,-377,94,-377,46,-377,43,-377,45,-377,42,-377,305,64,47,-377,37,-377,293,-377,294,-377,287,-377,286,-377,289,-377,288,-377,60,-377,291,-377,62,-377,292,-377,290,-377,295,-377,63,-377,283,-377,59,-377,41,-377,125,-377,58,-377,93,-377,44,-377,268,-377,338,-377}),
      new State(401, -378),
      new State(402, -423),
      new State(403, -424),
      new State(404, -425),
      new State(405, -426),
      new State(406, -427),
      new State(407, -428),
      new State(408, -429),
      new State(409, -430),
      new State(410, -431),
      new State(411, -432),
      new State(412, new int[] {320,417,385,426,386,440,316,510}, new int[] {-96,413,-63,445}),
      new State(413, new int[] {34,414,316,416,320,417,385,426,386,440}, new int[] {-63,415}),
      new State(414, -433),
      new State(415, -491),
      new State(416, -492),
      new State(417, new int[] {91,418,369,424,34,-495,316,-495,320,-495,385,-495,386,-495,387,-495,96,-495}),
      new State(418, new int[] {319,421,325,422,320,423}, new int[] {-64,419}),
      new State(419, new int[] {93,420}),
      new State(420, -496),
      new State(421, -502),
      new State(422, -503),
      new State(423, -504),
      new State(424, new int[] {319,425}),
      new State(425, -497),
      new State(426, new int[] {318,429,320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,427,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(427, new int[] {125,428,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(428, -498),
      new State(429, new int[] {125,430,91,431}),
      new State(430, -499),
      new State(431, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,432,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(432, new int[] {93,433,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(433, new int[] {125,434}),
      new State(434, -500),
      new State(435, new int[] {387,436,316,437,320,417,385,426,386,440}, new int[] {-96,443,-63,445}),
      new State(436, -434),
      new State(437, new int[] {387,438,320,417,385,426,386,440}, new int[] {-63,439}),
      new State(438, -435),
      new State(439, -494),
      new State(440, new int[] {320,97,36,98,353,296,319,187,391,188,393,191,40,297,368,283,91,325,323,305}, new int[] {-43,441,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,324,-50,335,-52,310,-79,311}),
      new State(441, new int[] {125,442,91,-447,369,-447,123,-447,390,-447}),
      new State(442, -501),
      new State(443, new int[] {387,444,316,416,320,417,385,426,386,440}, new int[] {-63,415}),
      new State(444, -436),
      new State(445, -493),
      new State(446, -379),
      new State(447, new int[] {96,448,316,449,320,417,385,426,386,440}, new int[] {-96,451,-63,445}),
      new State(448, -415),
      new State(449, new int[] {96,450,320,417,385,426,386,440}, new int[] {-63,439}),
      new State(450, -416),
      new State(451, new int[] {96,452,316,416,320,417,385,426,386,440}, new int[] {-63,415}),
      new State(452, -417),
      new State(453, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,454,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(454, new int[] {284,40,285,42,263,-380,265,-380,264,-380,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-380,41,-380,125,-380,58,-380,93,-380,44,-380,268,-380,338,-380}),
      new State(455, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,59,-381,284,-381,285,-381,263,-381,265,-381,264,-381,124,-381,38,-381,94,-381,46,-381,42,-381,305,-381,47,-381,37,-381,293,-381,294,-381,287,-381,286,-381,289,-381,288,-381,60,-381,291,-381,62,-381,292,-381,290,-381,295,-381,63,-381,283,-381,41,-381,125,-381,58,-381,93,-381,44,-381,268,-381,338,-381}, new int[] {-42,456,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(456, new int[] {268,457,284,40,285,42,263,-382,265,-382,264,-382,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-382,41,-382,125,-382,58,-382,93,-382,44,-382,338,-382}),
      new State(457, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,458,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(458, new int[] {284,40,285,42,263,-383,265,-383,264,-383,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-383,41,-383,125,-383,58,-383,93,-383,44,-383,268,-383,338,-383}),
      new State(459, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,460,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(460, new int[] {284,40,285,42,263,-384,265,-384,264,-384,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-384,41,-384,125,-384,58,-384,93,-384,44,-384,268,-384,338,-384}),
      new State(461, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,462,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(462, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-385,41,-385,125,-385,58,-385,93,-385,44,-385,268,-385,338,-385}),
      new State(463, -386),
      new State(464, -391),
      new State(465, new int[] {38,509,40,-397}, new int[] {-4,466}),
      new State(466, new int[] {40,467}),
      new State(467, new int[] {311,505,357,506,313,507,368,-222,372,-222,319,-222,391,-222,393,-222,63,-222,38,-222,394,-222,320,-222,41,-219}, new int[] {-121,468,-122,491,-119,508,-15,495}),
      new State(468, new int[] {41,469}),
      new State(469, new int[] {58,478,268,-238}, new int[] {-22,470}),
      new State(470, -392, new int[] {-17,471}),
      new State(471, new int[] {268,472}),
      new State(472, -395, new int[] {-141,473}),
      new State(473, -396, new int[] {-147,474}),
      new State(474, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,475,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(475, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-395,41,-395,125,-395,58,-395,93,-395,44,-395,268,-395,338,-395}, new int[] {-141,476}),
      new State(476, -389),
      new State(477, -390),
      new State(478, new int[] {368,483,372,484,319,187,391,188,393,191,63,486}, new int[] {-23,479,-21,480,-20,485,-107,184,-32,488}),
      new State(479, -239),
      new State(480, new int[] {124,481,123,-230,268,-230,59,-230,38,-230,394,-230,320,-230}),
      new State(481, new int[] {368,483,372,484,319,187,391,188,393,191}, new int[] {-21,482,-20,485,-107,184}),
      new State(482, -236),
      new State(483, -233),
      new State(484, -234),
      new State(485, -235),
      new State(486, new int[] {368,483,372,484,319,187,391,188,393,191}, new int[] {-21,487,-20,485,-107,184}),
      new State(487, -231),
      new State(488, new int[] {124,489,123,-232,268,-232,59,-232,38,-232,394,-232,320,-232}),
      new State(489, new int[] {368,483,372,484,319,187,391,188,393,191}, new int[] {-21,490,-20,485,-107,184}),
      new State(490, -237),
      new State(491, new int[] {44,493,41,-110}, new int[] {-3,492}),
      new State(492, -218),
      new State(493, new int[] {311,505,357,506,313,507,41,-111,368,-222,372,-222,319,-222,391,-222,393,-222,63,-222,38,-222,394,-222,320,-222}, new int[] {-119,494,-15,495}),
      new State(494, -221),
      new State(495, new int[] {368,483,372,484,319,187,391,188,393,191,63,486,38,-228,394,-228,320,-228}, new int[] {-24,496,-23,504,-21,480,-20,485,-107,184,-32,488}),
      new State(496, new int[] {38,503,394,-169,320,-169}, new int[] {-7,497}),
      new State(497, new int[] {394,502,320,-171}, new int[] {-8,498}),
      new State(498, new int[] {320,499}),
      new State(499, new int[] {61,500,44,-226,41,-226}),
      new State(500, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,501,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(501, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,44,-227,41,-227}),
      new State(502, -172),
      new State(503, -170),
      new State(504, -229),
      new State(505, -223),
      new State(506, -224),
      new State(507, -225),
      new State(508, -220),
      new State(509, -398),
      new State(510, new int[] {320,417,385,426,386,440}, new int[] {-63,439}),
      new State(511, -512),
      new State(512, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,513,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(513, new int[] {125,514,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(514, -469),
      new State(515, new int[] {319,517,123,518,320,97,36,98}, new int[] {-1,516,-48,521}),
      new State(516, -470),
      new State(517, -476),
      new State(518, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,519,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(519, new int[] {125,520,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(520, -477),
      new State(521, -478),
      new State(522, new int[] {320,97,36,98}, new int[] {-48,523}),
      new State(523, -472),
      new State(524, -467),
      new State(525, new int[] {40,128,364,-418,365,-418,123,-418}, new int[] {-116,526,-117,348}),
      new State(526, new int[] {364,731,365,-183,123,-183}, new int[] {-25,527}),
      new State(527, -305, new int[] {-146,528}),
      new State(528, new int[] {365,729,123,-187}, new int[] {-30,529}),
      new State(529, -392, new int[] {-17,530}),
      new State(530, -393, new int[] {-18,531}),
      new State(531, new int[] {123,532}),
      new State(532, -254, new int[] {-89,533}),
      new State(533, new int[] {125,534,311,551,357,552,313,553,353,554,315,555,314,556,356,558,350,694,344,-280,346,-280}, new int[] {-83,536,-9,537,-11,549,-12,557,-10,559}),
      new State(534, -394, new int[] {-19,535}),
      new State(535, -306),
      new State(536, -253),
      new State(537, new int[] {368,483,372,484,319,187,391,188,393,191,63,486,320,-228}, new int[] {-24,538,-23,504,-21,480,-20,485,-107,184,-32,488}),
      new State(538, new int[] {320,543}, new int[] {-98,539,-62,548}),
      new State(539, new int[] {59,540,44,541}),
      new State(540, -255),
      new State(541, new int[] {320,543}, new int[] {-62,542}),
      new State(542, -290),
      new State(543, new int[] {61,545,59,-392,44,-392}, new int[] {-17,544}),
      new State(544, -292),
      new State(545, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,546,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(546, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-392,44,-392}, new int[] {-17,547}),
      new State(547, -293),
      new State(548, -291),
      new State(549, new int[] {311,551,357,552,313,553,353,554,315,555,314,556,368,-278,372,-278,319,-278,391,-278,393,-278,63,-278,320,-278,344,-281,346,-281}, new int[] {-12,550}),
      new State(550, -283),
      new State(551, -284),
      new State(552, -285),
      new State(553, -286),
      new State(554, -287),
      new State(555, -288),
      new State(556, -289),
      new State(557, -282),
      new State(558, -279),
      new State(559, new int[] {344,560,346,464}, new int[] {-5,570}),
      new State(560, new int[] {319,199,262,202,261,203,260,204,259,205,258,206,263,207,264,208,265,209,295,210,306,211,307,212,326,213,322,214,308,215,309,216,310,217,324,218,329,219,330,220,327,221,328,222,333,223,334,224,331,225,332,226,337,227,338,228,349,229,347,230,351,231,352,232,350,233,354,234,355,235,356,236,360,237,358,238,359,239,340,240,345,241,346,242,344,243,348,244,266,245,267,246,367,247,335,248,336,249,341,250,342,251,339,252,368,253,372,254,364,255,365,256,391,257,362,258,366,259,361,260,373,261,374,262,376,263,378,264,370,265,371,266,375,267,392,268,343,269,353,270,315,271,314,272,313,273,357,274,311,275}, new int[] {-87,561,-69,569,-104,565,-105,200,-106,201}),
      new State(561, new int[] {59,562,44,563}),
      new State(562, -256),
      new State(563, new int[] {319,199,262,202,261,203,260,204,259,205,258,206,263,207,264,208,265,209,295,210,306,211,307,212,326,213,322,214,308,215,309,216,310,217,324,218,329,219,330,220,327,221,328,222,333,223,334,224,331,225,332,226,337,227,338,228,349,229,347,230,351,231,352,232,350,233,354,234,355,235,356,236,360,237,358,238,359,239,340,240,345,241,346,242,344,243,348,244,266,245,267,246,367,247,335,248,336,249,341,250,342,251,339,252,368,253,372,254,364,255,365,256,391,257,362,258,366,259,361,260,373,261,374,262,376,263,378,264,370,265,371,266,375,267,392,268,343,269,353,270,315,271,314,272,313,273,357,274,311,275}, new int[] {-69,564,-104,565,-105,200,-106,201}),
      new State(564, -294),
      new State(565, new int[] {61,566}),
      new State(566, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,567,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(567, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-392,44,-392}, new int[] {-17,568}),
      new State(568, -296),
      new State(569, -295),
      new State(570, new int[] {38,509,319,-397,262,-397,261,-397,260,-397,259,-397,258,-397,263,-397,264,-397,265,-397,295,-397,306,-397,307,-397,326,-397,322,-397,308,-397,309,-397,310,-397,324,-397,329,-397,330,-397,327,-397,328,-397,333,-397,334,-397,331,-397,332,-397,337,-397,338,-397,349,-397,347,-397,351,-397,352,-397,350,-397,354,-397,355,-397,356,-397,360,-397,358,-397,359,-397,340,-397,345,-397,346,-397,344,-397,348,-397,266,-397,267,-397,367,-397,335,-397,336,-397,341,-397,342,-397,339,-397,368,-397,372,-397,364,-397,365,-397,391,-397,362,-397,366,-397,361,-397,373,-397,374,-397,376,-397,378,-397,370,-397,371,-397,375,-397,392,-397,343,-397,353,-397,315,-397,314,-397,313,-397,357,-397,311,-397}, new int[] {-4,571}),
      new State(571, new int[] {319,199,262,202,261,203,260,204,259,205,258,206,263,207,264,208,265,209,295,210,306,211,307,212,326,213,322,214,308,215,309,216,310,217,324,218,329,219,330,220,327,221,328,222,333,223,334,224,331,225,332,226,337,227,338,228,349,229,347,230,351,231,352,232,350,233,354,234,355,235,356,236,360,237,358,238,359,239,340,240,345,241,346,242,344,243,348,244,266,245,267,246,367,247,335,248,336,249,341,250,342,251,339,252,368,253,372,254,364,255,365,256,391,257,362,258,366,259,361,260,373,261,374,262,376,263,378,264,370,265,371,266,375,267,392,268,343,269,353,270,315,271,314,272,313,273,357,274,311,275}, new int[] {-104,572,-105,200,-106,201}),
      new State(572, -392, new int[] {-17,573}),
      new State(573, new int[] {40,574}),
      new State(574, new int[] {311,505,357,506,313,507,368,-222,372,-222,319,-222,391,-222,393,-222,63,-222,38,-222,394,-222,320,-222,41,-219}, new int[] {-121,575,-122,491,-119,508,-15,495}),
      new State(575, new int[] {41,576}),
      new State(576, new int[] {58,478,59,-238,123,-238}, new int[] {-22,577}),
      new State(577, -395, new int[] {-141,578}),
      new State(578, new int[] {59,581,123,582}, new int[] {-75,579}),
      new State(579, -395, new int[] {-141,580}),
      new State(580, -258),
      new State(581, -276),
      new State(582, -127, new int[] {-88,583}),
      new State(583, new int[] {125,584,123,7,330,23,329,31,328,153,335,165,339,179,340,585,348,588,355,591,353,598,324,607,321,614,320,97,36,98,319,617,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,360,634,334,644,332,654,59,660,349,661,345,677,315,735,314,736,362,738,366,748,363,760,322,-393,361,-175}, new int[] {-82,10,-34,11,-18,12,-42,615,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,619,-6,465,-35,680,-36,681,-14,682,-13,733,-37,737,-39,747}),
      new State(584, -277),
      new State(585, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,59,-444}, new int[] {-61,586,-42,120,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(586, new int[] {59,587}),
      new State(587, -142),
      new State(588, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,59,-444}, new int[] {-61,589,-42,120,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(589, new int[] {59,590}),
      new State(590, -143),
      new State(591, new int[] {320,97,36,98}, new int[] {-91,592,-58,597,-48,596}),
      new State(592, new int[] {59,593,44,594}),
      new State(593, -144),
      new State(594, new int[] {320,97,36,98}, new int[] {-58,595,-48,596}),
      new State(595, -246),
      new State(596, -248),
      new State(597, -247),
      new State(598, new int[] {320,603,346,464,343,477,390,-409}, new int[] {-92,599,-84,137,-59,606,-5,138,-6,465}),
      new State(599, new int[] {59,600,44,601}),
      new State(600, -145),
      new State(601, new int[] {320,603}, new int[] {-59,602}),
      new State(602, -249),
      new State(603, new int[] {61,604,59,-251,44,-251}),
      new State(604, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,605,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(605, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-252,44,-252}),
      new State(606, -250),
      new State(607, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-93,608,-60,613,-42,612,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(608, new int[] {59,609,44,610}),
      new State(609, -146),
      new State(610, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-60,611,-42,612,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(611, -298),
      new State(612, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-300,44,-300}),
      new State(613, -299),
      new State(614, -147),
      new State(615, new int[] {59,616,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(616, -148),
      new State(617, new int[] {58,618,393,-83,40,-83,390,-83,91,-83,59,-83,284,-83,285,-83,263,-83,265,-83,264,-83,124,-83,38,-83,94,-83,46,-83,43,-83,45,-83,42,-83,305,-83,47,-83,37,-83,293,-83,294,-83,287,-83,286,-83,289,-83,288,-83,60,-83,291,-83,62,-83,292,-83,290,-83,295,-83,63,-83,283,-83}),
      new State(618, -156),
      new State(619, new int[] {38,509,319,-397,40,-397}, new int[] {-4,620}),
      new State(620, new int[] {319,621,40,-392}, new int[] {-17,140}),
      new State(621, -392, new int[] {-17,622}),
      new State(622, new int[] {40,623}),
      new State(623, new int[] {311,505,357,506,313,507,368,-222,372,-222,319,-222,391,-222,393,-222,63,-222,38,-222,394,-222,320,-222,41,-219}, new int[] {-121,624,-122,491,-119,508,-15,495}),
      new State(624, new int[] {41,625}),
      new State(625, new int[] {58,478,123,-238}, new int[] {-22,626}),
      new State(626, -395, new int[] {-141,627}),
      new State(627, -393, new int[] {-18,628}),
      new State(628, new int[] {123,629}),
      new State(629, -127, new int[] {-88,630}),
      new State(630, new int[] {125,631,123,7,330,23,329,31,328,153,335,165,339,179,340,585,348,588,355,591,353,598,324,607,321,614,320,97,36,98,319,617,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,360,634,334,644,332,654,59,660,349,661,345,677,315,735,314,736,362,738,366,748,363,760,322,-393,361,-175}, new int[] {-82,10,-34,11,-18,12,-42,615,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,619,-6,465,-35,680,-36,681,-14,682,-13,733,-37,737,-39,747}),
      new State(631, -394, new int[] {-19,632}),
      new State(632, -395, new int[] {-141,633}),
      new State(633, -168),
      new State(634, new int[] {40,635}),
      new State(635, new int[] {320,97,36,98,353,296,319,187,391,188,393,191,40,297,368,283,91,325,323,305}, new int[] {-94,636,-57,643,-43,642,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,324,-50,335,-52,310,-79,311}),
      new State(636, new int[] {44,640,41,-110}, new int[] {-3,637}),
      new State(637, new int[] {41,638}),
      new State(638, new int[] {59,639}),
      new State(639, -149),
      new State(640, new int[] {320,97,36,98,353,296,319,187,391,188,393,191,40,297,368,283,91,325,323,305,41,-111}, new int[] {-57,641,-43,642,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,324,-50,335,-52,310,-79,311}),
      new State(641, -166),
      new State(642, new int[] {44,-167,41,-167,91,-447,369,-447,123,-447,390,-447}),
      new State(643, -165),
      new State(644, new int[] {40,645}),
      new State(645, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,646,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(646, new int[] {338,647,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(647, new int[] {320,97,36,98,353,296,319,187,391,188,393,191,40,297,368,283,91,794,323,305,38,801,367,803}, new int[] {-131,648,-43,793,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,324,-50,335,-52,310,-79,311}),
      new State(648, new int[] {41,649,268,787}),
      new State(649, -393, new int[] {-18,650}),
      new State(650, new int[] {123,7,330,23,329,31,328,153,335,165,339,179,340,585,348,588,355,591,353,598,324,607,321,614,320,97,36,98,319,617,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,360,634,334,644,332,654,59,660,349,661,345,677,58,783,322,-393}, new int[] {-72,651,-34,653,-18,12,-42,615,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(651, -394, new int[] {-19,652}),
      new State(652, -150),
      new State(653, -195),
      new State(654, new int[] {40,655}),
      new State(655, new int[] {319,778}, new int[] {-86,656,-56,782}),
      new State(656, new int[] {41,657,44,776}),
      new State(657, new int[] {123,7,330,23,329,31,328,153,335,165,339,179,340,585,348,588,355,591,353,598,324,607,321,614,320,97,36,98,319,617,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,360,634,334,644,332,654,59,660,349,661,345,677,58,772,322,-393}, new int[] {-65,658,-34,659,-18,12,-42,615,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(658, -152),
      new State(659, -197),
      new State(660, -153),
      new State(661, new int[] {123,662}),
      new State(662, -127, new int[] {-88,663}),
      new State(663, new int[] {125,664,123,7,330,23,329,31,328,153,335,165,339,179,340,585,348,588,355,591,353,598,324,607,321,614,320,97,36,98,319,617,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,360,634,334,644,332,654,59,660,349,661,345,677,315,735,314,736,362,738,366,748,363,760,322,-393,361,-175}, new int[] {-82,10,-34,11,-18,12,-42,615,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,619,-6,465,-35,680,-36,681,-14,682,-13,733,-37,737,-39,747}),
      new State(664, -393, new int[] {-18,665}),
      new State(665, -157, new int[] {-102,666}),
      new State(666, new int[] {347,669,351,768,123,-163,330,-163,329,-163,328,-163,335,-163,339,-163,340,-163,348,-163,355,-163,353,-163,324,-163,321,-163,320,-163,36,-163,319,-163,391,-163,393,-163,40,-163,368,-163,91,-163,323,-163,367,-163,307,-163,303,-163,302,-163,43,-163,45,-163,33,-163,126,-163,306,-163,358,-163,359,-163,262,-163,261,-163,260,-163,259,-163,258,-163,301,-163,300,-163,299,-163,298,-163,297,-163,296,-163,304,-163,326,-163,64,-163,317,-163,312,-163,370,-163,371,-163,375,-163,374,-163,378,-163,376,-163,392,-163,373,-163,34,-163,383,-163,96,-163,266,-163,267,-163,269,-163,352,-163,346,-163,343,-163,360,-163,334,-163,332,-163,59,-163,349,-163,345,-163,315,-163,314,-163,362,-163,366,-163,363,-163,350,-163,344,-163,322,-163,361,-163,0,-163,125,-163,308,-163,309,-163,341,-163,342,-163,336,-163,337,-163,331,-163,333,-163,327,-163,310,-163}, new int[] {-77,667}),
      new State(667, -394, new int[] {-19,668}),
      new State(668, -154),
      new State(669, new int[] {40,670}),
      new State(670, new int[] {319,187,391,188,393,191}, new int[] {-29,671,-20,767,-107,184}),
      new State(671, new int[] {124,764,320,766,41,-159}, new int[] {-103,672}),
      new State(672, new int[] {41,673}),
      new State(673, new int[] {123,674}),
      new State(674, -127, new int[] {-88,675}),
      new State(675, new int[] {125,676,123,7,330,23,329,31,328,153,335,165,339,179,340,585,348,588,355,591,353,598,324,607,321,614,320,97,36,98,319,617,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,360,634,334,644,332,654,59,660,349,661,345,677,315,735,314,736,362,738,366,748,363,760,322,-393,361,-175}, new int[] {-82,10,-34,11,-18,12,-42,615,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,619,-6,465,-35,680,-36,681,-14,682,-13,733,-37,737,-39,747}),
      new State(676, -158),
      new State(677, new int[] {319,678}),
      new State(678, new int[] {59,679}),
      new State(679, -155),
      new State(680, -129),
      new State(681, -130),
      new State(682, new int[] {361,683}),
      new State(683, new int[] {319,684}),
      new State(684, new int[] {364,731,365,-183,123,-183}, new int[] {-25,685}),
      new State(685, -173, new int[] {-142,686}),
      new State(686, new int[] {365,729,123,-187}, new int[] {-30,687}),
      new State(687, -392, new int[] {-17,688}),
      new State(688, -393, new int[] {-18,689}),
      new State(689, new int[] {123,690}),
      new State(690, -254, new int[] {-89,691}),
      new State(691, new int[] {125,692,311,551,357,552,313,553,353,554,315,555,314,556,356,558,350,694,344,-280,346,-280}, new int[] {-83,536,-9,537,-11,549,-12,557,-10,559}),
      new State(692, -394, new int[] {-19,693}),
      new State(693, -174),
      new State(694, new int[] {319,187,391,188,393,191}, new int[] {-28,695,-20,710,-107,184}),
      new State(695, new int[] {44,697,59,699,123,700}, new int[] {-80,696}),
      new State(696, -257),
      new State(697, new int[] {319,187,391,188,393,191}, new int[] {-20,698,-107,184}),
      new State(698, -260),
      new State(699, -261),
      new State(700, new int[] {125,701,319,714,391,715,393,191,262,202,261,203,260,204,259,205,258,206,263,207,264,208,265,209,295,210,306,211,307,212,326,213,322,214,308,215,309,216,310,217,324,218,329,219,330,220,327,221,328,222,333,223,334,224,331,225,332,226,337,227,338,228,349,229,347,230,351,231,352,232,350,233,354,234,355,235,356,236,360,237,358,238,359,239,340,240,345,241,346,242,344,243,348,244,266,245,267,246,367,247,335,248,336,249,341,250,342,251,339,252,368,253,372,254,364,255,365,256,362,258,366,259,361,260,373,261,374,262,376,263,378,264,370,265,371,266,375,267,392,268,343,269,353,270,315,271,314,272,313,273,357,274,311,275}, new int[] {-95,702,-66,728,-67,705,-110,706,-20,711,-107,184,-68,716,-109,717,-104,727,-105,200,-106,201}),
      new State(701, -262),
      new State(702, new int[] {125,703,319,714,391,715,393,191,262,202,261,203,260,204,259,205,258,206,263,207,264,208,265,209,295,210,306,211,307,212,326,213,322,214,308,215,309,216,310,217,324,218,329,219,330,220,327,221,328,222,333,223,334,224,331,225,332,226,337,227,338,228,349,229,347,230,351,231,352,232,350,233,354,234,355,235,356,236,360,237,358,238,359,239,340,240,345,241,346,242,344,243,348,244,266,245,267,246,367,247,335,248,336,249,341,250,342,251,339,252,368,253,372,254,364,255,365,256,362,258,366,259,361,260,373,261,374,262,376,263,378,264,370,265,371,266,375,267,392,268,343,269,353,270,315,271,314,272,313,273,357,274,311,275}, new int[] {-66,704,-67,705,-110,706,-20,711,-107,184,-68,716,-109,717,-104,727,-105,200,-106,201}),
      new State(703, -263),
      new State(704, -265),
      new State(705, -266),
      new State(706, new int[] {354,707,338,-274}),
      new State(707, new int[] {319,187,391,188,393,191}, new int[] {-28,708,-20,710,-107,184}),
      new State(708, new int[] {59,709,44,697}),
      new State(709, -268),
      new State(710, -259),
      new State(711, new int[] {390,712}),
      new State(712, new int[] {319,199,262,202,261,203,260,204,259,205,258,206,263,207,264,208,265,209,295,210,306,211,307,212,326,213,322,214,308,215,309,216,310,217,324,218,329,219,330,220,327,221,328,222,333,223,334,224,331,225,332,226,337,227,338,228,349,229,347,230,351,231,352,232,350,233,354,234,355,235,356,236,360,237,358,238,359,239,340,240,345,241,346,242,344,243,348,244,266,245,267,246,367,247,335,248,336,249,341,250,342,251,339,252,368,253,372,254,364,255,365,256,391,257,362,258,366,259,361,260,373,261,374,262,376,263,378,264,370,265,371,266,375,267,392,268,343,269,353,270,315,271,314,272,313,273,357,274,311,275}, new int[] {-104,713,-105,200,-106,201}),
      new State(713, -275),
      new State(714, new int[] {393,-83,390,-83,338,-79}),
      new State(715, new int[] {393,189,338,-59}),
      new State(716, -267),
      new State(717, new int[] {338,718}),
      new State(718, new int[] {319,719,262,202,261,203,260,204,259,205,258,206,263,207,264,208,265,209,295,210,306,211,307,212,326,213,322,214,308,215,309,216,310,217,324,218,329,219,330,220,327,221,328,222,333,223,334,224,331,225,332,226,337,227,338,228,349,229,347,230,351,231,352,232,350,233,354,234,355,235,356,236,360,237,358,238,359,239,340,240,345,241,346,242,344,243,348,244,266,245,267,246,367,247,335,248,336,249,341,250,342,251,339,252,368,253,372,254,364,255,365,256,391,257,362,258,366,259,361,260,373,261,374,262,376,263,378,264,370,265,371,266,375,267,392,268,343,269,311,551,357,552,313,553,353,554,315,555,314,556}, new int[] {-106,721,-12,723}),
      new State(719, new int[] {59,720}),
      new State(720, -269),
      new State(721, new int[] {59,722}),
      new State(722, -270),
      new State(723, new int[] {59,726,319,199,262,202,261,203,260,204,259,205,258,206,263,207,264,208,265,209,295,210,306,211,307,212,326,213,322,214,308,215,309,216,310,217,324,218,329,219,330,220,327,221,328,222,333,223,334,224,331,225,332,226,337,227,338,228,349,229,347,230,351,231,352,232,350,233,354,234,355,235,356,236,360,237,358,238,359,239,340,240,345,241,346,242,344,243,348,244,266,245,267,246,367,247,335,248,336,249,341,250,342,251,339,252,368,253,372,254,364,255,365,256,391,257,362,258,366,259,361,260,373,261,374,262,376,263,378,264,370,265,371,266,375,267,392,268,343,269,353,270,315,271,314,272,313,273,357,274,311,275}, new int[] {-104,724,-105,200,-106,201}),
      new State(724, new int[] {59,725}),
      new State(725, -271),
      new State(726, -272),
      new State(727, -273),
      new State(728, -264),
      new State(729, new int[] {319,187,391,188,393,191}, new int[] {-28,730,-20,710,-107,184}),
      new State(730, new int[] {44,697,123,-188}),
      new State(731, new int[] {319,187,391,188,393,191}, new int[] {-20,732,-107,184}),
      new State(732, -184),
      new State(733, new int[] {315,735,314,736,361,-175}, new int[] {-14,734,-13,733}),
      new State(734, -176),
      new State(735, -177),
      new State(736, -178),
      new State(737, -131),
      new State(738, new int[] {319,739}),
      new State(739, -179, new int[] {-143,740}),
      new State(740, -392, new int[] {-17,741}),
      new State(741, -393, new int[] {-18,742}),
      new State(742, new int[] {123,743}),
      new State(743, -254, new int[] {-89,744}),
      new State(744, new int[] {125,745,311,551,357,552,313,553,353,554,315,555,314,556,356,558,350,694,344,-280,346,-280}, new int[] {-83,536,-9,537,-11,549,-12,557,-10,559}),
      new State(745, -394, new int[] {-19,746}),
      new State(746, -180),
      new State(747, -132),
      new State(748, new int[] {319,749}),
      new State(749, -181, new int[] {-144,750}),
      new State(750, new int[] {364,758,123,-185}, new int[] {-31,751}),
      new State(751, -392, new int[] {-17,752}),
      new State(752, -393, new int[] {-18,753}),
      new State(753, new int[] {123,754}),
      new State(754, -254, new int[] {-89,755}),
      new State(755, new int[] {125,756,311,551,357,552,313,553,353,554,315,555,314,556,356,558,350,694,344,-280,346,-280}, new int[] {-83,536,-9,537,-11,549,-12,557,-10,559}),
      new State(756, -394, new int[] {-19,757}),
      new State(757, -182),
      new State(758, new int[] {319,187,391,188,393,191}, new int[] {-28,759,-20,710,-107,184}),
      new State(759, new int[] {44,697,123,-186}),
      new State(760, new int[] {40,761}),
      new State(761, new int[] {41,762}),
      new State(762, new int[] {59,763}),
      new State(763, -133),
      new State(764, new int[] {319,187,391,188,393,191}, new int[] {-20,765,-107,184}),
      new State(765, -162),
      new State(766, -160),
      new State(767, -161),
      new State(768, new int[] {123,769}),
      new State(769, -127, new int[] {-88,770}),
      new State(770, new int[] {125,771,123,7,330,23,329,31,328,153,335,165,339,179,340,585,348,588,355,591,353,598,324,607,321,614,320,97,36,98,319,617,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,360,634,334,644,332,654,59,660,349,661,345,677,315,735,314,736,362,738,366,748,363,760,322,-393,361,-175}, new int[] {-82,10,-34,11,-18,12,-42,615,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,619,-6,465,-35,680,-36,681,-14,682,-13,733,-37,737,-39,747}),
      new State(771, -164),
      new State(772, -127, new int[] {-88,773}),
      new State(773, new int[] {337,774,123,7,330,23,329,31,328,153,335,165,339,179,340,585,348,588,355,591,353,598,324,607,321,614,320,97,36,98,319,617,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,360,634,334,644,332,654,59,660,349,661,345,677,315,735,314,736,362,738,366,748,363,760,322,-393,361,-175}, new int[] {-82,10,-34,11,-18,12,-42,615,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,619,-6,465,-35,680,-36,681,-14,682,-13,733,-37,737,-39,747}),
      new State(774, new int[] {59,775}),
      new State(775, -198),
      new State(776, new int[] {319,778}, new int[] {-56,777}),
      new State(777, -124),
      new State(778, new int[] {61,779}),
      new State(779, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,780,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(780, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,41,-392,44,-392,59,-392}, new int[] {-17,781}),
      new State(781, -297),
      new State(782, -125),
      new State(783, -127, new int[] {-88,784}),
      new State(784, new int[] {331,785,123,7,330,23,329,31,328,153,335,165,339,179,340,585,348,588,355,591,353,598,324,607,321,614,320,97,36,98,319,617,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,360,634,334,644,332,654,59,660,349,661,345,677,315,735,314,736,362,738,366,748,363,760,322,-393,361,-175}, new int[] {-82,10,-34,11,-18,12,-42,615,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,619,-6,465,-35,680,-36,681,-14,682,-13,733,-37,737,-39,747}),
      new State(785, new int[] {59,786}),
      new State(786, -196),
      new State(787, new int[] {320,97,36,98,353,296,319,187,391,188,393,191,40,297,368,283,91,794,323,305,38,801,367,803}, new int[] {-131,788,-43,793,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,324,-50,335,-52,310,-79,311}),
      new State(788, new int[] {41,789}),
      new State(789, -393, new int[] {-18,790}),
      new State(790, new int[] {123,7,330,23,329,31,328,153,335,165,339,179,340,585,348,588,355,591,353,598,324,607,321,614,320,97,36,98,319,617,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,360,634,334,644,332,654,59,660,349,661,345,677,58,783,322,-393}, new int[] {-72,791,-34,653,-18,12,-42,615,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(791, -394, new int[] {-19,792}),
      new State(792, -151),
      new State(793, new int[] {41,-189,268,-189,91,-447,369,-447,123,-447,390,-447}),
      new State(794, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,329,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,38,797,394,799,44,-480,93,-480}, new int[] {-128,795,-127,287,-125,328,-126,290,-42,291,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(795, new int[] {93,796}),
      new State(796, new int[] {91,-421,369,-421,123,-421,390,-421,40,-421,41,-192,268,-192}),
      new State(797, new int[] {320,97,36,98,353,296,319,187,391,188,393,191,40,297,368,283,91,325,323,305}, new int[] {-43,798,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,324,-50,335,-52,310,-79,311}),
      new State(798, new int[] {44,-487,41,-487,93,-487,91,-447,369,-447,123,-447,390,-447}),
      new State(799, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,800,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(800, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,44,-488,41,-488,93,-488}),
      new State(801, new int[] {320,97,36,98,353,296,319,187,391,188,393,191,40,297,368,283,91,325,323,305}, new int[] {-43,802,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,324,-50,335,-52,310,-79,311}),
      new State(802, new int[] {41,-190,268,-190,91,-447,369,-447,123,-447,390,-447}),
      new State(803, new int[] {40,804}),
      new State(804, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,329,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,38,797,394,799,44,-480,41,-480}, new int[] {-128,805,-127,287,-125,328,-126,290,-42,291,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(805, new int[] {41,806}),
      new State(806, -191),
      new State(807, new int[] {40,808}),
      new State(808, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,329,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,38,797,394,799,44,-480,41,-480}, new int[] {-128,809,-127,287,-125,328,-126,290,-42,291,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(809, new int[] {41,810}),
      new State(810, new int[] {61,318,44,-489,41,-489,93,-489}),
      new State(811, -206),
      new State(812, -207),
      new State(813, new int[] {58,811,59,812}, new int[] {-145,814}),
      new State(814, -127, new int[] {-88,815}),
      new State(815, new int[] {123,7,330,23,329,31,328,153,335,165,339,179,340,585,348,588,355,591,353,598,324,607,321,614,320,97,36,98,319,617,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,360,634,334,644,332,654,59,660,349,661,345,677,315,735,314,736,362,738,366,748,363,760,125,-205,341,-205,342,-205,336,-205,322,-393,361,-175}, new int[] {-82,10,-34,11,-18,12,-42,615,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,619,-6,465,-35,680,-36,681,-14,682,-13,733,-37,737,-39,747}),
      new State(816, -203, new int[] {-99,817}),
      new State(817, new int[] {125,818,341,175,342,813}),
      new State(818, -200),
      new State(819, new int[] {59,823,336,-203,341,-203,342,-203}, new int[] {-99,820}),
      new State(820, new int[] {336,821,341,175,342,813}),
      new State(821, new int[] {59,822}),
      new State(822, -201),
      new State(823, -203, new int[] {-99,824}),
      new State(824, new int[] {336,825,341,175,342,813}),
      new State(825, new int[] {59,826}),
      new State(826, -202),
      new State(827, -127, new int[] {-88,828}),
      new State(828, new int[] {333,829,123,7,330,23,329,31,328,153,335,165,339,179,340,585,348,588,355,591,353,598,324,607,321,614,320,97,36,98,319,617,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,360,634,334,644,332,654,59,660,349,661,345,677,315,735,314,736,362,738,366,748,363,760,322,-393,361,-175}, new int[] {-82,10,-34,11,-18,12,-42,615,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,619,-6,465,-35,680,-36,681,-14,682,-13,733,-37,737,-39,747}),
      new State(829, new int[] {59,830}),
      new State(830, -194),
      new State(831, new int[] {44,832,59,-302,41,-302}),
      new State(832, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,833,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(833, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,44,-303,59,-303,41,-303}),
      new State(834, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,44,-304,59,-304,41,-304}),
      new State(835, new int[] {40,836}),
      new State(836, new int[] {320,841,38,842}, new int[] {-124,837,-120,844}),
      new State(837, new int[] {41,838,44,839}),
      new State(838, -400),
      new State(839, new int[] {320,841,38,842}, new int[] {-120,840}),
      new State(840, -401),
      new State(841, -403),
      new State(842, new int[] {320,843}),
      new State(843, -404),
      new State(844, -402),
      new State(845, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,846,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(846, new int[] {284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,44,-245,41,-245}),
      new State(847, -242),
      new State(848, new int[] {319,517,123,518,320,97,36,98}, new int[] {-1,849,-48,521}),
      new State(849, new int[] {40,128,61,-461,270,-461,271,-461,279,-461,281,-461,278,-461,277,-461,276,-461,275,-461,274,-461,273,-461,272,-461,280,-461,282,-461,303,-461,302,-461,59,-461,284,-461,285,-461,263,-461,265,-461,264,-461,124,-461,38,-461,94,-461,46,-461,43,-461,45,-461,42,-461,305,-461,47,-461,37,-461,293,-461,294,-461,287,-461,286,-461,289,-461,288,-461,60,-461,291,-461,62,-461,292,-461,290,-461,295,-461,63,-461,283,-461,91,-461,369,-461,123,-461,390,-461,41,-461,125,-461,58,-461,93,-461,44,-461,268,-461,338,-461}, new int[] {-117,850}),
      new State(850, -457),
      new State(851, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,852,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(852, new int[] {125,853,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(853, -456),
      new State(854, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,855,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(855, new int[] {284,40,285,42,263,-315,265,-315,264,-315,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-315,41,-315,125,-315,58,-315,93,-315,44,-315,268,-315,338,-315}),
      new State(856, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,857,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(857, new int[] {284,40,285,42,263,-316,265,-316,264,-316,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-316,41,-316,125,-316,58,-316,93,-316,44,-316,268,-316,338,-316}),
      new State(858, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,859,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(859, new int[] {284,40,285,42,263,-317,265,-317,264,-317,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-317,41,-317,125,-317,58,-317,93,-317,44,-317,268,-317,338,-317}),
      new State(860, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,861,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(861, new int[] {284,40,285,42,263,-318,265,-318,264,-318,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-318,41,-318,125,-318,58,-318,93,-318,44,-318,268,-318,338,-318}),
      new State(862, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,863,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(863, new int[] {284,40,285,42,263,-319,265,-319,264,-319,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-319,41,-319,125,-319,58,-319,93,-319,44,-319,268,-319,338,-319}),
      new State(864, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,865,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(865, new int[] {284,40,285,42,263,-320,265,-320,264,-320,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-320,41,-320,125,-320,58,-320,93,-320,44,-320,268,-320,338,-320}),
      new State(866, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,867,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(867, new int[] {284,40,285,42,263,-321,265,-321,264,-321,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-321,41,-321,125,-321,58,-321,93,-321,44,-321,268,-321,338,-321}),
      new State(868, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,869,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(869, new int[] {284,40,285,42,263,-322,265,-322,264,-322,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-322,41,-322,125,-322,58,-322,93,-322,44,-322,268,-322,338,-322}),
      new State(870, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,871,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(871, new int[] {284,40,285,42,263,-323,265,-323,264,-323,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-323,41,-323,125,-323,58,-323,93,-323,44,-323,268,-323,338,-323}),
      new State(872, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,873,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(873, new int[] {284,40,285,42,263,-324,265,-324,264,-324,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-324,41,-324,125,-324,58,-324,93,-324,44,-324,268,-324,338,-324}),
      new State(874, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,875,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(875, new int[] {284,40,285,42,263,-325,265,-325,264,-325,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-325,41,-325,125,-325,58,-325,93,-325,44,-325,268,-325,338,-325}),
      new State(876, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,877,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(877, new int[] {284,40,285,42,263,-326,265,-326,264,-326,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-326,41,-326,125,-326,58,-326,93,-326,44,-326,268,-326,338,-326}),
      new State(878, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,879,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(879, new int[] {284,40,285,42,263,-327,265,-327,264,-327,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106,59,-327,41,-327,125,-327,58,-327,93,-327,44,-327,268,-327,338,-327}),
      new State(880, -328),
      new State(881, -330),
      new State(882, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,883,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(883, new int[] {284,40,285,42,263,-366,265,-366,264,-366,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,-366,283,106,59,-366,41,-366,125,-366,58,-366,93,-366,44,-366,268,-366,338,-366}),
      new State(884, -464),
      new State(885, -127, new int[] {-88,886}),
      new State(886, new int[] {327,887,123,7,330,23,329,31,328,153,335,165,339,179,340,585,348,588,355,591,353,598,324,607,321,614,320,97,36,98,319,617,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,360,634,334,644,332,654,59,660,349,661,345,677,315,735,314,736,362,738,366,748,363,760,322,-393,361,-175}, new int[] {-82,10,-34,11,-18,12,-42,615,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,619,-6,465,-35,680,-36,681,-14,682,-13,733,-37,737,-39,747}),
      new State(887, new int[] {59,888}),
      new State(888, -209),
      new State(889, new int[] {123,7,330,23,329,31,328,153,335,165,339,179,340,585,348,588,355,591,353,598,324,607,321,614,320,97,36,98,319,617,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,360,634,334,644,332,654,59,660,349,661,345,677,322,-393}, new int[] {-34,890,-18,12,-42,615,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(890, -213),
      new State(891, new int[] {40,892}),
      new State(892, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,893,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(893, new int[] {41,894,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(894, new int[] {58,896,123,7,330,23,329,31,328,153,335,165,339,179,340,585,348,588,355,591,353,598,324,607,321,614,320,97,36,98,319,617,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,360,634,334,644,332,654,59,660,349,661,345,677,322,-393}, new int[] {-34,895,-18,12,-42,615,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(895, -210),
      new State(896, -127, new int[] {-88,897}),
      new State(897, new int[] {123,7,330,23,329,31,328,153,335,165,339,179,340,585,348,588,355,591,353,598,324,607,321,614,320,97,36,98,319,617,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,360,634,334,644,332,654,59,660,349,661,345,677,315,735,314,736,362,738,366,748,363,760,310,-214,308,-214,309,-214,322,-393,361,-175}, new int[] {-82,10,-34,11,-18,12,-42,615,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,619,-6,465,-35,680,-36,681,-14,682,-13,733,-37,737,-39,747}),
      new State(898, new int[] {310,899,308,901,309,907}),
      new State(899, new int[] {59,900}),
      new State(900, -216),
      new State(901, new int[] {40,902}),
      new State(902, new int[] {320,97,36,98,353,136,319,187,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477}, new int[] {-42,903,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,138,-6,465}),
      new State(903, new int[] {41,904,284,40,285,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,305,64,47,66,37,68,293,70,294,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,292,88,290,90,295,92,63,102,283,106}),
      new State(904, new int[] {58,905}),
      new State(905, -127, new int[] {-88,906}),
      new State(906, new int[] {123,7,330,23,329,31,328,153,335,165,339,179,340,585,348,588,355,591,353,598,324,607,321,614,320,97,36,98,319,617,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,360,634,334,644,332,654,59,660,349,661,345,677,315,735,314,736,362,738,366,748,363,760,310,-215,308,-215,309,-215,322,-393,361,-175}, new int[] {-82,10,-34,11,-18,12,-42,615,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,619,-6,465,-35,680,-36,681,-14,682,-13,733,-37,737,-39,747}),
      new State(907, new int[] {58,908}),
      new State(908, -127, new int[] {-88,909}),
      new State(909, new int[] {310,910,123,7,330,23,329,31,328,153,335,165,339,179,340,585,348,588,355,591,353,598,324,607,321,614,320,97,36,98,319,617,391,188,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,360,634,334,644,332,654,59,660,349,661,345,677,315,735,314,736,362,738,366,748,363,760,322,-393,361,-175}, new int[] {-82,10,-34,11,-18,12,-42,615,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,619,-6,465,-35,680,-36,681,-14,682,-13,733,-37,737,-39,747}),
      new State(910, new int[] {59,911}),
      new State(911, -217),
      new State(912, new int[] {393,189,319,187,123,-392}, new int[] {-107,913,-17,987}),
      new State(913, new int[] {59,914,393,185,123,-392}, new int[] {-17,915}),
      new State(914, -94),
      new State(915, -95, new int[] {-139,916}),
      new State(916, new int[] {123,917}),
      new State(917, -82, new int[] {-85,918}),
      new State(918, new int[] {125,919,123,7,330,23,329,31,328,153,335,165,339,179,340,585,348,588,355,591,353,598,324,607,321,614,320,97,36,98,319,617,391,912,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,360,634,334,644,332,654,59,660,349,661,345,677,315,735,314,736,362,738,366,748,363,924,350,928,344,984,322,-393,361,-175}, new int[] {-33,5,-34,6,-18,12,-42,615,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,619,-6,465,-35,920,-36,921,-14,682,-13,733,-37,922,-39,923}),
      new State(919, -96),
      new State(920, -89),
      new State(921, -90),
      new State(922, -91),
      new State(923, -92),
      new State(924, new int[] {40,925}),
      new State(925, new int[] {41,926}),
      new State(926, new int[] {59,927}),
      new State(927, -93),
      new State(928, new int[] {319,187,393,977,346,974,344,975}, new int[] {-135,929,-16,931,-133,961,-107,963,-111,960,-108,938}),
      new State(929, new int[] {59,930}),
      new State(930, -99),
      new State(931, new int[] {319,187,393,953}, new int[] {-134,932,-133,934,-107,944,-111,960,-108,938}),
      new State(932, new int[] {59,933}),
      new State(933, -100),
      new State(934, new int[] {59,935,44,936}),
      new State(935, -102),
      new State(936, new int[] {319,187,393,942}, new int[] {-111,937,-108,938,-107,939}),
      new State(937, -116),
      new State(938, -122),
      new State(939, new int[] {393,185,338,940,59,-120,44,-120,125,-120}),
      new State(940, new int[] {319,941}),
      new State(941, -121),
      new State(942, new int[] {319,187}, new int[] {-108,943,-107,939}),
      new State(943, -123),
      new State(944, new int[] {393,945,338,940,59,-120,44,-120}),
      new State(945, new int[] {123,946,319,186}),
      new State(946, new int[] {319,187}, new int[] {-112,947,-108,952,-107,939}),
      new State(947, new int[] {44,950,125,-110}, new int[] {-3,948}),
      new State(948, new int[] {125,949}),
      new State(949, -106),
      new State(950, new int[] {319,187,125,-111}, new int[] {-108,951,-107,939}),
      new State(951, -114),
      new State(952, -115),
      new State(953, new int[] {319,187}, new int[] {-107,954,-108,943}),
      new State(954, new int[] {393,955,338,940,59,-120,44,-120}),
      new State(955, new int[] {123,956,319,186}),
      new State(956, new int[] {319,187}, new int[] {-112,957,-108,952,-107,939}),
      new State(957, new int[] {44,950,125,-110}, new int[] {-3,958}),
      new State(958, new int[] {125,959}),
      new State(959, -107),
      new State(960, -117),
      new State(961, new int[] {59,962,44,936}),
      new State(962, -101),
      new State(963, new int[] {393,964,338,940,59,-120,44,-120}),
      new State(964, new int[] {123,965,319,186}),
      new State(965, new int[] {319,187,346,974,344,975}, new int[] {-114,966,-113,976,-108,971,-107,939,-16,972}),
      new State(966, new int[] {44,969,125,-110}, new int[] {-3,967}),
      new State(967, new int[] {125,968}),
      new State(968, -108),
      new State(969, new int[] {319,187,346,974,344,975,125,-111}, new int[] {-113,970,-108,971,-107,939,-16,972}),
      new State(970, -112),
      new State(971, -118),
      new State(972, new int[] {319,187}, new int[] {-108,973,-107,939}),
      new State(973, -119),
      new State(974, -104),
      new State(975, -105),
      new State(976, -113),
      new State(977, new int[] {319,187}, new int[] {-107,978,-108,943}),
      new State(978, new int[] {393,979,338,940,59,-120,44,-120}),
      new State(979, new int[] {123,980,319,186}),
      new State(980, new int[] {319,187,346,974,344,975}, new int[] {-114,981,-113,976,-108,971,-107,939,-16,972}),
      new State(981, new int[] {44,969,125,-110}, new int[] {-3,982}),
      new State(982, new int[] {125,983}),
      new State(983, -109),
      new State(984, new int[] {319,778}, new int[] {-86,985,-56,782}),
      new State(985, new int[] {59,986,44,776}),
      new State(986, -103),
      new State(987, -97, new int[] {-140,988}),
      new State(988, new int[] {123,989}),
      new State(989, -82, new int[] {-85,990}),
      new State(990, new int[] {125,991,123,7,330,23,329,31,328,153,335,165,339,179,340,585,348,588,355,591,353,598,324,607,321,614,320,97,36,98,319,617,391,912,393,191,40,279,368,283,91,300,323,305,367,314,307,320,303,322,302,333,43,336,45,338,33,340,126,342,306,345,358,356,359,364,262,368,261,370,260,372,259,376,258,378,301,380,300,382,299,384,298,386,297,388,296,390,304,392,326,394,64,399,317,402,312,403,370,404,371,405,375,406,374,407,378,408,376,409,392,410,373,411,34,412,383,435,96,447,266,453,267,455,269,459,352,461,346,464,343,477,360,634,334,644,332,654,59,660,349,661,345,677,315,735,314,736,362,738,366,748,363,924,350,928,344,984,322,-393,361,-175}, new int[] {-33,5,-34,6,-18,12,-42,615,-43,108,-47,114,-48,115,-70,116,-53,121,-27,122,-20,182,-107,184,-81,193,-51,282,-50,306,-52,310,-79,311,-44,313,-45,344,-46,355,-49,401,-74,446,-84,463,-5,619,-6,465,-35,920,-36,921,-14,682,-13,733,-37,922,-39,923}),
      new State(991, -98),
    };
    #endregion

    #region rules
    rules = new Rule[]
    {
    default(Rule),
    new Rule(-137, new int[]{-136,0}),
    new Rule(-138, new int[]{}),
    new Rule(-136, new int[]{-138,-85}),
    new Rule(-106, new int[]{262}),
    new Rule(-106, new int[]{261}),
    new Rule(-106, new int[]{260}),
    new Rule(-106, new int[]{259}),
    new Rule(-106, new int[]{258}),
    new Rule(-106, new int[]{263}),
    new Rule(-106, new int[]{264}),
    new Rule(-106, new int[]{265}),
    new Rule(-106, new int[]{295}),
    new Rule(-106, new int[]{306}),
    new Rule(-106, new int[]{307}),
    new Rule(-106, new int[]{326}),
    new Rule(-106, new int[]{322}),
    new Rule(-106, new int[]{308}),
    new Rule(-106, new int[]{309}),
    new Rule(-106, new int[]{310}),
    new Rule(-106, new int[]{324}),
    new Rule(-106, new int[]{329}),
    new Rule(-106, new int[]{330}),
    new Rule(-106, new int[]{327}),
    new Rule(-106, new int[]{328}),
    new Rule(-106, new int[]{333}),
    new Rule(-106, new int[]{334}),
    new Rule(-106, new int[]{331}),
    new Rule(-106, new int[]{332}),
    new Rule(-106, new int[]{337}),
    new Rule(-106, new int[]{338}),
    new Rule(-106, new int[]{349}),
    new Rule(-106, new int[]{347}),
    new Rule(-106, new int[]{351}),
    new Rule(-106, new int[]{352}),
    new Rule(-106, new int[]{350}),
    new Rule(-106, new int[]{354}),
    new Rule(-106, new int[]{355}),
    new Rule(-106, new int[]{356}),
    new Rule(-106, new int[]{360}),
    new Rule(-106, new int[]{358}),
    new Rule(-106, new int[]{359}),
    new Rule(-106, new int[]{340}),
    new Rule(-106, new int[]{345}),
    new Rule(-106, new int[]{346}),
    new Rule(-106, new int[]{344}),
    new Rule(-106, new int[]{348}),
    new Rule(-106, new int[]{266}),
    new Rule(-106, new int[]{267}),
    new Rule(-106, new int[]{367}),
    new Rule(-106, new int[]{335}),
    new Rule(-106, new int[]{336}),
    new Rule(-106, new int[]{341}),
    new Rule(-106, new int[]{342}),
    new Rule(-106, new int[]{339}),
    new Rule(-106, new int[]{368}),
    new Rule(-106, new int[]{372}),
    new Rule(-106, new int[]{364}),
    new Rule(-106, new int[]{365}),
    new Rule(-106, new int[]{391}),
    new Rule(-106, new int[]{362}),
    new Rule(-106, new int[]{366}),
    new Rule(-106, new int[]{361}),
    new Rule(-106, new int[]{373}),
    new Rule(-106, new int[]{374}),
    new Rule(-106, new int[]{376}),
    new Rule(-106, new int[]{378}),
    new Rule(-106, new int[]{370}),
    new Rule(-106, new int[]{371}),
    new Rule(-106, new int[]{375}),
    new Rule(-106, new int[]{392}),
    new Rule(-106, new int[]{343}),
    new Rule(-105, new int[]{-106}),
    new Rule(-105, new int[]{353}),
    new Rule(-105, new int[]{315}),
    new Rule(-105, new int[]{314}),
    new Rule(-105, new int[]{313}),
    new Rule(-105, new int[]{357}),
    new Rule(-105, new int[]{311}),
    new Rule(-104, new int[]{319}),
    new Rule(-104, new int[]{-105}),
    new Rule(-85, new int[]{-85,-33}),
    new Rule(-85, new int[]{}),
    new Rule(-107, new int[]{319}),
    new Rule(-107, new int[]{-107,393,319}),
    new Rule(-20, new int[]{-107}),
    new Rule(-20, new int[]{391,393,-107}),
    new Rule(-20, new int[]{393,-107}),
    new Rule(-33, new int[]{-34}),
    new Rule(-33, new int[]{-35}),
    new Rule(-33, new int[]{-36}),
    new Rule(-33, new int[]{-37}),
    new Rule(-33, new int[]{-39}),
    new Rule(-33, new int[]{363,40,41,59}),
    new Rule(-33, new int[]{391,-107,59}),
    new Rule(-139, new int[]{}),
    new Rule(-33, new int[]{391,-107,-17,-139,123,-85,125}),
    new Rule(-140, new int[]{}),
    new Rule(-33, new int[]{391,-17,-140,123,-85,125}),
    new Rule(-33, new int[]{350,-135,59}),
    new Rule(-33, new int[]{350,-16,-134,59}),
    new Rule(-33, new int[]{350,-133,59}),
    new Rule(-33, new int[]{350,-16,-133,59}),
    new Rule(-33, new int[]{344,-86,59}),
    new Rule(-16, new int[]{346}),
    new Rule(-16, new int[]{344}),
    new Rule(-134, new int[]{-107,393,123,-112,-3,125}),
    new Rule(-134, new int[]{393,-107,393,123,-112,-3,125}),
    new Rule(-135, new int[]{-107,393,123,-114,-3,125}),
    new Rule(-135, new int[]{393,-107,393,123,-114,-3,125}),
    new Rule(-3, new int[]{}),
    new Rule(-3, new int[]{44}),
    new Rule(-114, new int[]{-114,44,-113}),
    new Rule(-114, new int[]{-113}),
    new Rule(-112, new int[]{-112,44,-108}),
    new Rule(-112, new int[]{-108}),
    new Rule(-133, new int[]{-133,44,-111}),
    new Rule(-133, new int[]{-111}),
    new Rule(-113, new int[]{-108}),
    new Rule(-113, new int[]{-16,-108}),
    new Rule(-108, new int[]{-107}),
    new Rule(-108, new int[]{-107,338,319}),
    new Rule(-111, new int[]{-108}),
    new Rule(-111, new int[]{393,-108}),
    new Rule(-86, new int[]{-86,44,-56}),
    new Rule(-86, new int[]{-56}),
    new Rule(-88, new int[]{-88,-82}),
    new Rule(-88, new int[]{}),
    new Rule(-82, new int[]{-34}),
    new Rule(-82, new int[]{-35}),
    new Rule(-82, new int[]{-36}),
    new Rule(-82, new int[]{-37}),
    new Rule(-82, new int[]{-39}),
    new Rule(-82, new int[]{363,40,41,59}),
    new Rule(-34, new int[]{123,-88,125}),
    new Rule(-34, new int[]{-18,-54,-19}),
    new Rule(-34, new int[]{-18,-55,-19}),
    new Rule(-34, new int[]{330,40,-42,41,-18,-73,-19}),
    new Rule(-34, new int[]{329,-18,-34,330,40,-42,41,59,-19}),
    new Rule(-34, new int[]{328,40,-90,59,-90,59,-90,41,-18,-71,-19}),
    new Rule(-34, new int[]{335,40,-42,41,-18,-100,-19}),
    new Rule(-34, new int[]{339,-61,59}),
    new Rule(-34, new int[]{340,-61,59}),
    new Rule(-34, new int[]{348,-61,59}),
    new Rule(-34, new int[]{355,-91,59}),
    new Rule(-34, new int[]{353,-92,59}),
    new Rule(-34, new int[]{324,-93,59}),
    new Rule(-34, new int[]{321}),
    new Rule(-34, new int[]{-42,59}),
    new Rule(-34, new int[]{360,40,-94,-3,41,59}),
    new Rule(-34, new int[]{334,40,-42,338,-131,41,-18,-72,-19}),
    new Rule(-34, new int[]{334,40,-42,338,-131,268,-131,41,-18,-72,-19}),
    new Rule(-34, new int[]{332,40,-86,41,-65}),
    new Rule(-34, new int[]{59}),
    new Rule(-34, new int[]{349,123,-88,125,-18,-102,-77,-19}),
    new Rule(-34, new int[]{345,319,59}),
    new Rule(-34, new int[]{319,58}),
    new Rule(-102, new int[]{}),
    new Rule(-102, new int[]{-102,347,40,-29,-103,41,123,-88,125}),
    new Rule(-103, new int[]{}),
    new Rule(-103, new int[]{320}),
    new Rule(-29, new int[]{-20}),
    new Rule(-29, new int[]{-29,124,-20}),
    new Rule(-77, new int[]{}),
    new Rule(-77, new int[]{351,123,-88,125}),
    new Rule(-94, new int[]{-57}),
    new Rule(-94, new int[]{-94,44,-57}),
    new Rule(-57, new int[]{-43}),
    new Rule(-35, new int[]{-5,-4,319,-17,40,-121,41,-22,-141,-18,123,-88,125,-19,-141}),
    new Rule(-7, new int[]{}),
    new Rule(-7, new int[]{38}),
    new Rule(-8, new int[]{}),
    new Rule(-8, new int[]{394}),
    new Rule(-142, new int[]{}),
    new Rule(-36, new int[]{-14,361,319,-25,-142,-30,-17,-18,123,-89,125,-19}),
    new Rule(-14, new int[]{}),
    new Rule(-14, new int[]{-13,-14}),
    new Rule(-13, new int[]{315}),
    new Rule(-13, new int[]{314}),
    new Rule(-143, new int[]{}),
    new Rule(-37, new int[]{362,319,-143,-17,-18,123,-89,125,-19}),
    new Rule(-144, new int[]{}),
    new Rule(-39, new int[]{366,319,-144,-31,-17,-18,123,-89,125,-19}),
    new Rule(-25, new int[]{}),
    new Rule(-25, new int[]{364,-20}),
    new Rule(-31, new int[]{}),
    new Rule(-31, new int[]{364,-28}),
    new Rule(-30, new int[]{}),
    new Rule(-30, new int[]{365,-28}),
    new Rule(-131, new int[]{-43}),
    new Rule(-131, new int[]{38,-43}),
    new Rule(-131, new int[]{367,40,-128,41}),
    new Rule(-131, new int[]{91,-128,93}),
    new Rule(-71, new int[]{-34}),
    new Rule(-71, new int[]{58,-88,333,59}),
    new Rule(-72, new int[]{-34}),
    new Rule(-72, new int[]{58,-88,331,59}),
    new Rule(-65, new int[]{-34}),
    new Rule(-65, new int[]{58,-88,337,59}),
    new Rule(-100, new int[]{123,-99,125}),
    new Rule(-100, new int[]{123,59,-99,125}),
    new Rule(-100, new int[]{58,-99,336,59}),
    new Rule(-100, new int[]{58,59,-99,336,59}),
    new Rule(-99, new int[]{}),
    new Rule(-99, new int[]{-99,341,-42,-145,-88}),
    new Rule(-99, new int[]{-99,342,-145,-88}),
    new Rule(-145, new int[]{58}),
    new Rule(-145, new int[]{59}),
    new Rule(-73, new int[]{-34}),
    new Rule(-73, new int[]{58,-88,327,59}),
    new Rule(-129, new int[]{322,40,-42,41,-34}),
    new Rule(-129, new int[]{-129,308,40,-42,41,-34}),
    new Rule(-54, new int[]{-129}),
    new Rule(-54, new int[]{-129,309,-34}),
    new Rule(-130, new int[]{322,40,-42,41,58,-88}),
    new Rule(-130, new int[]{-130,308,40,-42,41,58,-88}),
    new Rule(-55, new int[]{-130,310,59}),
    new Rule(-55, new int[]{-130,309,58,-88,310,59}),
    new Rule(-121, new int[]{-122,-3}),
    new Rule(-121, new int[]{}),
    new Rule(-122, new int[]{-119}),
    new Rule(-122, new int[]{-122,44,-119}),
    new Rule(-15, new int[]{}),
    new Rule(-15, new int[]{311}),
    new Rule(-15, new int[]{357}),
    new Rule(-15, new int[]{313}),
    new Rule(-119, new int[]{-15,-24,-7,-8,320}),
    new Rule(-119, new int[]{-15,-24,-7,-8,320,61,-42}),
    new Rule(-24, new int[]{}),
    new Rule(-24, new int[]{-23}),
    new Rule(-23, new int[]{-21}),
    new Rule(-23, new int[]{63,-21}),
    new Rule(-23, new int[]{-32}),
    new Rule(-21, new int[]{368}),
    new Rule(-21, new int[]{372}),
    new Rule(-21, new int[]{-20}),
    new Rule(-32, new int[]{-21,124,-21}),
    new Rule(-32, new int[]{-32,124,-21}),
    new Rule(-22, new int[]{}),
    new Rule(-22, new int[]{58,-23}),
    new Rule(-117, new int[]{40,41}),
    new Rule(-117, new int[]{40,-118,-3,41}),
    new Rule(-118, new int[]{-115}),
    new Rule(-118, new int[]{-118,44,-115}),
    new Rule(-115, new int[]{-42}),
    new Rule(-115, new int[]{394,-42}),
    new Rule(-91, new int[]{-91,44,-58}),
    new Rule(-91, new int[]{-58}),
    new Rule(-58, new int[]{-48}),
    new Rule(-92, new int[]{-92,44,-59}),
    new Rule(-92, new int[]{-59}),
    new Rule(-59, new int[]{320}),
    new Rule(-59, new int[]{320,61,-42}),
    new Rule(-89, new int[]{-89,-83}),
    new Rule(-89, new int[]{}),
    new Rule(-83, new int[]{-9,-24,-98,59}),
    new Rule(-83, new int[]{-10,344,-87,59}),
    new Rule(-83, new int[]{350,-28,-80}),
    new Rule(-83, new int[]{-10,-5,-4,-104,-17,40,-121,41,-22,-141,-75,-141}),
    new Rule(-28, new int[]{-20}),
    new Rule(-28, new int[]{-28,44,-20}),
    new Rule(-80, new int[]{59}),
    new Rule(-80, new int[]{123,125}),
    new Rule(-80, new int[]{123,-95,125}),
    new Rule(-95, new int[]{-66}),
    new Rule(-95, new int[]{-95,-66}),
    new Rule(-66, new int[]{-67}),
    new Rule(-66, new int[]{-68}),
    new Rule(-67, new int[]{-110,354,-28,59}),
    new Rule(-68, new int[]{-109,338,319,59}),
    new Rule(-68, new int[]{-109,338,-106,59}),
    new Rule(-68, new int[]{-109,338,-12,-104,59}),
    new Rule(-68, new int[]{-109,338,-12,59}),
    new Rule(-109, new int[]{-104}),
    new Rule(-109, new int[]{-110}),
    new Rule(-110, new int[]{-20,390,-104}),
    new Rule(-75, new int[]{59}),
    new Rule(-75, new int[]{123,-88,125}),
    new Rule(-9, new int[]{-11}),
    new Rule(-9, new int[]{356}),
    new Rule(-10, new int[]{}),
    new Rule(-10, new int[]{-11}),
    new Rule(-11, new int[]{-12}),
    new Rule(-11, new int[]{-11,-12}),
    new Rule(-12, new int[]{311}),
    new Rule(-12, new int[]{357}),
    new Rule(-12, new int[]{313}),
    new Rule(-12, new int[]{353}),
    new Rule(-12, new int[]{315}),
    new Rule(-12, new int[]{314}),
    new Rule(-98, new int[]{-98,44,-62}),
    new Rule(-98, new int[]{-62}),
    new Rule(-62, new int[]{320,-17}),
    new Rule(-62, new int[]{320,61,-42,-17}),
    new Rule(-87, new int[]{-87,44,-69}),
    new Rule(-87, new int[]{-69}),
    new Rule(-69, new int[]{-104,61,-42,-17}),
    new Rule(-56, new int[]{319,61,-42,-17}),
    new Rule(-93, new int[]{-93,44,-60}),
    new Rule(-93, new int[]{-60}),
    new Rule(-60, new int[]{-42}),
    new Rule(-90, new int[]{}),
    new Rule(-90, new int[]{-101}),
    new Rule(-101, new int[]{-101,44,-42}),
    new Rule(-101, new int[]{-42}),
    new Rule(-146, new int[]{}),
    new Rule(-132, new int[]{361,-116,-25,-146,-30,-17,-18,123,-89,125,-19}),
    new Rule(-45, new int[]{306,-26,-116}),
    new Rule(-45, new int[]{306,-132}),
    new Rule(-44, new int[]{367,40,-128,41,61,-42}),
    new Rule(-44, new int[]{91,-128,93,61,-42}),
    new Rule(-44, new int[]{-43,61,-42}),
    new Rule(-44, new int[]{-43,61,38,-43}),
    new Rule(-44, new int[]{-43,61,38,-45}),
    new Rule(-44, new int[]{307,-42}),
    new Rule(-44, new int[]{-43,270,-42}),
    new Rule(-44, new int[]{-43,271,-42}),
    new Rule(-44, new int[]{-43,279,-42}),
    new Rule(-44, new int[]{-43,281,-42}),
    new Rule(-44, new int[]{-43,278,-42}),
    new Rule(-44, new int[]{-43,277,-42}),
    new Rule(-44, new int[]{-43,276,-42}),
    new Rule(-44, new int[]{-43,275,-42}),
    new Rule(-44, new int[]{-43,274,-42}),
    new Rule(-44, new int[]{-43,273,-42}),
    new Rule(-44, new int[]{-43,272,-42}),
    new Rule(-44, new int[]{-43,280,-42}),
    new Rule(-44, new int[]{-43,282,-42}),
    new Rule(-44, new int[]{-43,303}),
    new Rule(-44, new int[]{303,-43}),
    new Rule(-44, new int[]{-43,302}),
    new Rule(-44, new int[]{302,-43}),
    new Rule(-44, new int[]{-42,284,-42}),
    new Rule(-44, new int[]{-42,285,-42}),
    new Rule(-44, new int[]{-42,263,-42}),
    new Rule(-44, new int[]{-42,265,-42}),
    new Rule(-44, new int[]{-42,264,-42}),
    new Rule(-44, new int[]{-42,124,-42}),
    new Rule(-44, new int[]{-42,38,-42}),
    new Rule(-44, new int[]{-42,94,-42}),
    new Rule(-44, new int[]{-42,46,-42}),
    new Rule(-44, new int[]{-42,43,-42}),
    new Rule(-44, new int[]{-42,45,-42}),
    new Rule(-44, new int[]{-42,42,-42}),
    new Rule(-44, new int[]{-42,305,-42}),
    new Rule(-44, new int[]{-42,47,-42}),
    new Rule(-44, new int[]{-42,37,-42}),
    new Rule(-44, new int[]{-42,293,-42}),
    new Rule(-44, new int[]{-42,294,-42}),
    new Rule(-44, new int[]{43,-42}),
    new Rule(-44, new int[]{45,-42}),
    new Rule(-44, new int[]{33,-42}),
    new Rule(-44, new int[]{126,-42}),
    new Rule(-44, new int[]{-42,287,-42}),
    new Rule(-44, new int[]{-42,286,-42}),
    new Rule(-44, new int[]{-42,289,-42}),
    new Rule(-44, new int[]{-42,288,-42}),
    new Rule(-44, new int[]{-42,60,-42}),
    new Rule(-44, new int[]{-42,291,-42}),
    new Rule(-44, new int[]{-42,62,-42}),
    new Rule(-44, new int[]{-42,292,-42}),
    new Rule(-44, new int[]{-42,290,-42}),
    new Rule(-44, new int[]{-42,295,-26}),
    new Rule(-44, new int[]{40,-42,41}),
    new Rule(-44, new int[]{-45}),
    new Rule(-44, new int[]{-42,63,-42,58,-42}),
    new Rule(-44, new int[]{-42,63,58,-42}),
    new Rule(-44, new int[]{-42,283,-42}),
    new Rule(-44, new int[]{-46}),
    new Rule(-44, new int[]{301,-42}),
    new Rule(-44, new int[]{300,-42}),
    new Rule(-44, new int[]{299,-42}),
    new Rule(-44, new int[]{298,-42}),
    new Rule(-44, new int[]{297,-42}),
    new Rule(-44, new int[]{296,-42}),
    new Rule(-44, new int[]{304,-42}),
    new Rule(-44, new int[]{326,-76}),
    new Rule(-44, new int[]{64,-42}),
    new Rule(-44, new int[]{-49}),
    new Rule(-44, new int[]{-74}),
    new Rule(-44, new int[]{266,-42}),
    new Rule(-44, new int[]{267}),
    new Rule(-44, new int[]{267,-42}),
    new Rule(-44, new int[]{267,-42,268,-42}),
    new Rule(-44, new int[]{269,-42}),
    new Rule(-44, new int[]{352,-42}),
    new Rule(-44, new int[]{-84}),
    new Rule(-44, new int[]{353,-84}),
    new Rule(-84, new int[]{-5,-4,-17,40,-121,41,-123,-22,-141,-18,123,-88,125,-19,-141}),
    new Rule(-84, new int[]{-6,-4,40,-121,41,-22,-17,268,-141,-147,-42,-141}),
    new Rule(-6, new int[]{343}),
    new Rule(-5, new int[]{346}),
    new Rule(-17, new int[]{}),
    new Rule(-18, new int[]{}),
    new Rule(-19, new int[]{}),
    new Rule(-141, new int[]{}),
    new Rule(-147, new int[]{}),
    new Rule(-4, new int[]{}),
    new Rule(-4, new int[]{38}),
    new Rule(-123, new int[]{}),
    new Rule(-123, new int[]{350,40,-124,41}),
    new Rule(-124, new int[]{-124,44,-120}),
    new Rule(-124, new int[]{-120}),
    new Rule(-120, new int[]{320}),
    new Rule(-120, new int[]{38,320}),
    new Rule(-52, new int[]{-20,-117}),
    new Rule(-52, new int[]{-27,390,-2,-117}),
    new Rule(-52, new int[]{-81,390,-2,-117}),
    new Rule(-52, new int[]{-79,-117}),
    new Rule(-27, new int[]{353}),
    new Rule(-27, new int[]{-20}),
    new Rule(-26, new int[]{-27}),
    new Rule(-26, new int[]{-78}),
    new Rule(-76, new int[]{}),
    new Rule(-76, new int[]{40,-61,41}),
    new Rule(-74, new int[]{96,96}),
    new Rule(-74, new int[]{96,316,96}),
    new Rule(-74, new int[]{96,-96,96}),
    new Rule(-116, new int[]{}),
    new Rule(-116, new int[]{-117}),
    new Rule(-51, new int[]{368,40,-128,41}),
    new Rule(-51, new int[]{91,-128,93}),
    new Rule(-51, new int[]{323}),
    new Rule(-49, new int[]{317}),
    new Rule(-49, new int[]{312}),
    new Rule(-49, new int[]{370}),
    new Rule(-49, new int[]{371}),
    new Rule(-49, new int[]{375}),
    new Rule(-49, new int[]{374}),
    new Rule(-49, new int[]{378}),
    new Rule(-49, new int[]{376}),
    new Rule(-49, new int[]{392}),
    new Rule(-49, new int[]{373}),
    new Rule(-49, new int[]{34,-96,34}),
    new Rule(-49, new int[]{383,387}),
    new Rule(-49, new int[]{383,316,387}),
    new Rule(-49, new int[]{383,-96,387}),
    new Rule(-49, new int[]{-51}),
    new Rule(-49, new int[]{-50}),
    new Rule(-50, new int[]{-20}),
    new Rule(-50, new int[]{-27,390,-104}),
    new Rule(-50, new int[]{-81,390,-104}),
    new Rule(-42, new int[]{-43}),
    new Rule(-42, new int[]{-44}),
    new Rule(-61, new int[]{}),
    new Rule(-61, new int[]{-42}),
    new Rule(-81, new int[]{-70}),
    new Rule(-70, new int[]{-43}),
    new Rule(-70, new int[]{40,-42,41}),
    new Rule(-70, new int[]{-51}),
    new Rule(-79, new int[]{-47}),
    new Rule(-79, new int[]{40,-42,41}),
    new Rule(-79, new int[]{-51}),
    new Rule(-47, new int[]{-48}),
    new Rule(-47, new int[]{-70,91,-61,93}),
    new Rule(-47, new int[]{-50,91,-61,93}),
    new Rule(-47, new int[]{-70,123,-42,125}),
    new Rule(-47, new int[]{-70,369,-1,-117}),
    new Rule(-47, new int[]{-52}),
    new Rule(-43, new int[]{-47}),
    new Rule(-43, new int[]{-53}),
    new Rule(-43, new int[]{-70,369,-1}),
    new Rule(-48, new int[]{320}),
    new Rule(-48, new int[]{36,123,-42,125}),
    new Rule(-48, new int[]{36,-48}),
    new Rule(-53, new int[]{-27,390,-48}),
    new Rule(-53, new int[]{-81,390,-48}),
    new Rule(-78, new int[]{-48}),
    new Rule(-78, new int[]{-78,91,-61,93}),
    new Rule(-78, new int[]{-78,123,-42,125}),
    new Rule(-78, new int[]{-78,369,-1}),
    new Rule(-78, new int[]{-27,390,-48}),
    new Rule(-78, new int[]{-78,390,-48}),
    new Rule(-2, new int[]{-104}),
    new Rule(-2, new int[]{123,-42,125}),
    new Rule(-2, new int[]{-48}),
    new Rule(-1, new int[]{319}),
    new Rule(-1, new int[]{123,-42,125}),
    new Rule(-1, new int[]{-48}),
    new Rule(-128, new int[]{-127}),
    new Rule(-125, new int[]{}),
    new Rule(-125, new int[]{-126}),
    new Rule(-127, new int[]{-127,44,-125}),
    new Rule(-127, new int[]{-125}),
    new Rule(-126, new int[]{-42,268,-42}),
    new Rule(-126, new int[]{-42}),
    new Rule(-126, new int[]{-42,268,38,-43}),
    new Rule(-126, new int[]{38,-43}),
    new Rule(-126, new int[]{394,-42}),
    new Rule(-126, new int[]{-42,268,367,40,-128,41}),
    new Rule(-126, new int[]{367,40,-128,41}),
    new Rule(-96, new int[]{-96,-63}),
    new Rule(-96, new int[]{-96,316}),
    new Rule(-96, new int[]{-63}),
    new Rule(-96, new int[]{316,-63}),
    new Rule(-63, new int[]{320}),
    new Rule(-63, new int[]{320,91,-64,93}),
    new Rule(-63, new int[]{320,369,319}),
    new Rule(-63, new int[]{385,-42,125}),
    new Rule(-63, new int[]{385,318,125}),
    new Rule(-63, new int[]{385,318,91,-42,93,125}),
    new Rule(-63, new int[]{386,-43,125}),
    new Rule(-64, new int[]{319}),
    new Rule(-64, new int[]{325}),
    new Rule(-64, new int[]{320}),
    new Rule(-46, new int[]{358,40,-97,-3,41}),
    new Rule(-46, new int[]{359,40,-42,41}),
    new Rule(-46, new int[]{262,-42}),
    new Rule(-46, new int[]{261,-42}),
    new Rule(-46, new int[]{260,40,-42,41}),
    new Rule(-46, new int[]{259,-42}),
    new Rule(-46, new int[]{258,-42}),
    new Rule(-97, new int[]{-41}),
    new Rule(-97, new int[]{-97,44,-41}),
    new Rule(-41, new int[]{-42}),
    };
    #endregion

    nonTerminals = new string[] {"", "property_name", "member_name", "possible_comma", 
      "returns_ref", "function", "fn", "is_reference", "is_variadic", "variable_modifiers", 
      "method_modifiers", "non_empty_member_modifiers", "member_modifier", "class_modifier", 
      "class_modifiers", "optional_visibility_modifier", "use_type", "backup_doc_comment", 
      "enter_scope", "exit_scope", "name", "type", "return_type", "type_expr", 
      "optional_type", "extends_from", "class_name_reference", "class_name", 
      "name_list", "catch_name_list", "implements_list", "interface_extends_list", 
      "union_type", "top_statement", "statement", "function_declaration_statement", 
      "class_declaration_statement", "trait_declaration_statement", "interface_declaratioimplements_listn_statement", 
      "interface_declaration_statement", "inline_html", "isset_variable", "expr", 
      "variable", "expr_without_variable", "new_expr", "internal_functions_in_yacc", 
      "callable_variable", "simple_variable", "scalar", "constant", "dereferencable_scalar", 
      "function_call", "static_member", "if_stmt", "alt_if_stmt", "const_decl", 
      "unset_variable", "global_var", "static_var", "echo_expr", "optional_expr", 
      "property", "encaps_var", "encaps_var_offset", "declare_statement", "trait_adaptation", 
      "trait_precedence", "trait_alias", "class_const_decl", "dereferencable", 
      "for_statement", "foreach_statement", "while_statement", "backticks_expr", 
      "method_body", "exit_expr", "finally_statement", "new_variable", "callable_expr", 
      "trait_adaptations", "variable_class_name", "inner_statement", "class_statement", 
      "inline_function", "top_statement_list", "const_list", "class_const_list", 
      "inner_statement_list", "class_statement_list", "for_exprs", "global_var_list", 
      "static_var_list", "echo_expr_list", "unset_variables", "trait_adaptation_list", 
      "encaps_list", "isset_variables", "property_list", "case_list", "switch_case_list", 
      "non_empty_for_exprs", "catch_list", "optional_variable", "identifier", 
      "semi_reserved", "reserved_non_modifiers", "namespace_name", "unprefixed_use_declaration", 
      "trait_method_reference", "absolute_trait_method_reference", "use_declaration", 
      "unprefixed_use_declarations", "inline_use_declaration", "inline_use_declarations", 
      "argument", "ctor_arguments", "argument_list", "non_empty_argument_list", 
      "parameter", "lexical_var", "parameter_list", "non_empty_parameter_list", 
      "lexical_vars", "lexical_var_list", "possible_array_pair", "array_pair", 
      "non_empty_array_pair_list", "array_pair_list", "if_stmt_without_else", 
      "alt_if_stmt_without_else", "foreach_variable", "anonymous_class", "use_declarations", 
      "group_use_declaration", "mixed_group_use_declaration", "start", "$accept", 
      "@1", "@2", "@3", "backup_fn_flags", "@4", "@5", "@6", "case_separator", 
      "@7", "backup_lex_pos", };
  }

  #endregion

  protected override void DoAction(int action)
  {
    switch (action)
    {
      case 2: // @1 -> 
{ SetNamingContext(null); }
        return;
      case 3: // start -> @1 top_statement_list 
{ 
		AssignNamingContext(); 
        _lexer.DocBlockList.Merge(new Span(0, int.MaxValue), value_stack.array[value_stack.top-1].yyval.NodeList, _astFactory);
		AssignStatements(value_stack.array[value_stack.top-1].yyval.NodeList);
		_astRoot = _astFactory.GlobalCode(yypos, value_stack.array[value_stack.top-1].yyval.NodeList, namingContext);
	}
        return;
      case 4: // reserved_non_modifiers -> T_INCLUDE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 5: // reserved_non_modifiers -> T_INCLUDE_ONCE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 6: // reserved_non_modifiers -> T_EVAL 
{ yyval.String = _lexer.TokenText; }
        return;
      case 7: // reserved_non_modifiers -> T_REQUIRE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 8: // reserved_non_modifiers -> T_REQUIRE_ONCE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 9: // reserved_non_modifiers -> T_LOGICAL_OR 
{ yyval.String = _lexer.TokenText; }
        return;
      case 10: // reserved_non_modifiers -> T_LOGICAL_XOR 
{ yyval.String = _lexer.TokenText; }
        return;
      case 11: // reserved_non_modifiers -> T_LOGICAL_AND 
{ yyval.String = _lexer.TokenText; }
        return;
      case 12: // reserved_non_modifiers -> T_INSTANCEOF 
{ yyval.String = _lexer.TokenText; }
        return;
      case 13: // reserved_non_modifiers -> T_NEW 
{ yyval.String = _lexer.TokenText; }
        return;
      case 14: // reserved_non_modifiers -> T_CLONE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 15: // reserved_non_modifiers -> T_EXIT 
{ yyval.String = _lexer.TokenText; }
        return;
      case 16: // reserved_non_modifiers -> T_IF 
{ yyval.String = _lexer.TokenText; }
        return;
      case 17: // reserved_non_modifiers -> T_ELSEIF 
{ yyval.String = _lexer.TokenText; }
        return;
      case 18: // reserved_non_modifiers -> T_ELSE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 19: // reserved_non_modifiers -> T_ENDIF 
{ yyval.String = _lexer.TokenText; }
        return;
      case 20: // reserved_non_modifiers -> T_ECHO 
{ yyval.String = _lexer.TokenText; }
        return;
      case 21: // reserved_non_modifiers -> T_DO 
{ yyval.String = _lexer.TokenText; }
        return;
      case 22: // reserved_non_modifiers -> T_WHILE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 23: // reserved_non_modifiers -> T_ENDWHILE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 24: // reserved_non_modifiers -> T_FOR 
{ yyval.String = _lexer.TokenText; }
        return;
      case 25: // reserved_non_modifiers -> T_ENDFOR 
{ yyval.String = _lexer.TokenText; }
        return;
      case 26: // reserved_non_modifiers -> T_FOREACH 
{ yyval.String = _lexer.TokenText; }
        return;
      case 27: // reserved_non_modifiers -> T_ENDFOREACH 
{ yyval.String = _lexer.TokenText; }
        return;
      case 28: // reserved_non_modifiers -> T_DECLARE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 29: // reserved_non_modifiers -> T_ENDDECLARE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 30: // reserved_non_modifiers -> T_AS 
{ yyval.String = _lexer.TokenText; }
        return;
      case 31: // reserved_non_modifiers -> T_TRY 
{ yyval.String = _lexer.TokenText; }
        return;
      case 32: // reserved_non_modifiers -> T_CATCH 
{ yyval.String = _lexer.TokenText; }
        return;
      case 33: // reserved_non_modifiers -> T_FINALLY 
{ yyval.String = _lexer.TokenText; }
        return;
      case 34: // reserved_non_modifiers -> T_THROW 
{ yyval.String = _lexer.TokenText; }
        return;
      case 35: // reserved_non_modifiers -> T_USE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 36: // reserved_non_modifiers -> T_INSTEADOF 
{ yyval.String = _lexer.TokenText; }
        return;
      case 37: // reserved_non_modifiers -> T_GLOBAL 
{ yyval.String = _lexer.TokenText; }
        return;
      case 38: // reserved_non_modifiers -> T_VAR 
{ yyval.String = _lexer.TokenText; }
        return;
      case 39: // reserved_non_modifiers -> T_UNSET 
{ yyval.String = _lexer.TokenText; }
        return;
      case 40: // reserved_non_modifiers -> T_ISSET 
{ yyval.String = _lexer.TokenText; }
        return;
      case 41: // reserved_non_modifiers -> T_EMPTY 
{ yyval.String = _lexer.TokenText; }
        return;
      case 42: // reserved_non_modifiers -> T_CONTINUE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 43: // reserved_non_modifiers -> T_GOTO 
{ yyval.String = _lexer.TokenText; }
        return;
      case 44: // reserved_non_modifiers -> T_FUNCTION 
{ yyval.String = _lexer.TokenText; }
        return;
      case 45: // reserved_non_modifiers -> T_CONST 
{ yyval.String = _lexer.TokenText; }
        return;
      case 46: // reserved_non_modifiers -> T_RETURN 
{ yyval.String = _lexer.TokenText; }
        return;
      case 47: // reserved_non_modifiers -> T_PRINT 
{ yyval.String = _lexer.TokenText; }
        return;
      case 48: // reserved_non_modifiers -> T_YIELD 
{ yyval.String = _lexer.TokenText; }
        return;
      case 49: // reserved_non_modifiers -> T_LIST 
{ yyval.String = _lexer.TokenText; }
        return;
      case 50: // reserved_non_modifiers -> T_SWITCH 
{ yyval.String = _lexer.TokenText; }
        return;
      case 51: // reserved_non_modifiers -> T_ENDSWITCH 
{ yyval.String = _lexer.TokenText; }
        return;
      case 52: // reserved_non_modifiers -> T_CASE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 53: // reserved_non_modifiers -> T_DEFAULT 
{ yyval.String = _lexer.TokenText; }
        return;
      case 54: // reserved_non_modifiers -> T_BREAK 
{ yyval.String = _lexer.TokenText; }
        return;
      case 55: // reserved_non_modifiers -> T_ARRAY 
{ yyval.String = _lexer.TokenText; }
        return;
      case 56: // reserved_non_modifiers -> T_CALLABLE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 57: // reserved_non_modifiers -> T_EXTENDS 
{ yyval.String = _lexer.TokenText; }
        return;
      case 58: // reserved_non_modifiers -> T_IMPLEMENTS 
{ yyval.String = _lexer.TokenText; }
        return;
      case 59: // reserved_non_modifiers -> T_NAMESPACE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 60: // reserved_non_modifiers -> T_TRAIT 
{ yyval.String = _lexer.TokenText; }
        return;
      case 61: // reserved_non_modifiers -> T_INTERFACE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 62: // reserved_non_modifiers -> T_CLASS 
{ yyval.String = _lexer.TokenText; }
        return;
      case 63: // reserved_non_modifiers -> T_CLASS_C 
{ yyval.String = _lexer.TokenText; }
        return;
      case 64: // reserved_non_modifiers -> T_TRAIT_C 
{ yyval.String = _lexer.TokenText; }
        return;
      case 65: // reserved_non_modifiers -> T_FUNC_C 
{ yyval.String = _lexer.TokenText; }
        return;
      case 66: // reserved_non_modifiers -> T_METHOD_C 
{ yyval.String = _lexer.TokenText; }
        return;
      case 67: // reserved_non_modifiers -> T_LINE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 68: // reserved_non_modifiers -> T_FILE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 69: // reserved_non_modifiers -> T_DIR 
{ yyval.String = _lexer.TokenText; }
        return;
      case 70: // reserved_non_modifiers -> T_NS_C 
{ yyval.String = _lexer.TokenText; }
        return;
      case 71: // reserved_non_modifiers -> T_FN 
{ yyval.String = _lexer.TokenText; }
        return;
      case 73: // semi_reserved -> T_STATIC 
{ yyval.String = _lexer.TokenText; }
        return;
      case 74: // semi_reserved -> T_ABSTRACT 
{ yyval.String = _lexer.TokenText; }
        return;
      case 75: // semi_reserved -> T_FINAL 
{ yyval.String = _lexer.TokenText; }
        return;
      case 76: // semi_reserved -> T_PRIVATE 
{ yyval.String = _lexer.TokenText; }
        return;
      case 77: // semi_reserved -> T_PROTECTED 
{ yyval.String = _lexer.TokenText; }
        return;
      case 78: // semi_reserved -> T_PUBLIC 
{ yyval.String = _lexer.TokenText; }
        return;
      case 81: // top_statement_list -> top_statement_list top_statement 
{ yyval.NodeList = AddToTopStatementList<LangElement>(value_stack.array[value_stack.top-2].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 82: // top_statement_list -> 
{ yyval.NodeList = new List<LangElement>(); }
        return;
      case 83: // namespace_name -> T_STRING 
{ yyval.StringList = new List<string>() { value_stack.array[value_stack.top-1].yyval.String }; }
        return;
      case 84: // namespace_name -> namespace_name T_NS_SEPARATOR T_STRING 
{ yyval.StringList = AddToList<string>(value_stack.array[value_stack.top-3].yyval.StringList, value_stack.array[value_stack.top-1].yyval.String); }
        return;
      case 85: // name -> namespace_name 
{ yyval.QualifiedNameReference = new QualifiedNameRef(yypos, new QualifiedName(value_stack.array[value_stack.top-1].yyval.StringList, true, false)); }
        return;
      case 86: // name -> T_NAMESPACE T_NS_SEPARATOR namespace_name 
{ yyval.QualifiedNameReference = new QualifiedNameRef(yypos, MergeWithCurrentNamespace(namingContext.CurrentNamespace, value_stack.array[value_stack.top-1].yyval.StringList)); }
        return;
      case 87: // name -> T_NS_SEPARATOR namespace_name 
{ yyval.QualifiedNameReference = new QualifiedNameRef(yypos, new QualifiedName(value_stack.array[value_stack.top-1].yyval.StringList, true,  true)); }
        return;
      case 88: // top_statement -> statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 89: // top_statement -> function_declaration_statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 90: // top_statement -> class_declaration_statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 91: // top_statement -> trait_declaration_statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 92: // top_statement -> interface_declaration_statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 93: // top_statement -> T_HALT_COMPILER '(' ')' ';' 
{ yyval.Node = _astFactory.HaltCompiler(yypos); }
        return;
      case 94: // top_statement -> T_NAMESPACE namespace_name ';' 
{
			AssignNamingContext();
            SetNamingContext(value_stack.array[value_stack.top-2].yyval.StringList);
            SetDoc(yyval.Node = _currentNamespace = (NamespaceDecl)_astFactory.Namespace(yypos, namingContext.CurrentNamespace, value_stack.array[value_stack.top-2].yypos, namingContext));
		}
        return;
      case 95: // @2 -> 
{ SetNamingContext(value_stack.array[value_stack.top-2].yyval.StringList); }
        return;
      case 96: // top_statement -> T_NAMESPACE namespace_name backup_doc_comment @2 '{' top_statement_list '}' 
{ 
			yyval.Node = _astFactory.Namespace(yypos, namingContext.CurrentNamespace, value_stack.array[value_stack.top-6].yypos, CreateBlock(CombineSpans(value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-2].yyval.NodeList), namingContext);
			SetDoc(yyval.Node);
			ResetNamingContext(); 
		}
        return;
      case 97: // @3 -> 
{ SetNamingContext(null); }
        return;
      case 98: // top_statement -> T_NAMESPACE backup_doc_comment @3 '{' top_statement_list '}' 
{ 
			yyval.Node = _astFactory.Namespace(yypos, null, yypos, CreateBlock(CombineSpans(value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-2].yyval.NodeList), namingContext);
			SetDoc(yyval.Node);
			ResetNamingContext(); 
		}
        return;
      case 99: // top_statement -> T_USE mixed_group_use_declaration ';' 
{ yyval.Node = _astFactory.Use(yypos, value_stack.array[value_stack.top-2].yyval.UseList, AliasKind.Type); _contextType = AliasKind.Type;	/* TODO: Error - must contain only a single group use */	}
        return;
      case 100: // top_statement -> T_USE use_type group_use_declaration ';' 
{ yyval.Node = _astFactory.Use(yypos, value_stack.array[value_stack.top-2].yyval.UseList, value_stack.array[value_stack.top-3].yyval.Kind); _contextType = AliasKind.Type;				/* TODO: Error - must contain only a single group use */	}
        return;
      case 101: // top_statement -> T_USE use_declarations ';' 
{ yyval.Node = _astFactory.Use(yypos, value_stack.array[value_stack.top-2].yyval.UseList, AliasKind.Type); _contextType = AliasKind.Type;	/* TODO: Error - must contain only simple uses		  */	}
        return;
      case 102: // top_statement -> T_USE use_type use_declarations ';' 
{ yyval.Node = _astFactory.Use(yypos, value_stack.array[value_stack.top-2].yyval.UseList, value_stack.array[value_stack.top-3].yyval.Kind); _contextType = AliasKind.Type;				/* TODO: Error - must contain only simple uses		  */	}
        return;
      case 103: // top_statement -> T_CONST const_list ';' 
{
			SetDoc(yyval.Node = _astFactory.DeclList(yypos, PhpMemberAttributes.None, value_stack.array[value_stack.top-2].yyval.NodeList, null));
		}
        return;
      case 104: // use_type -> T_FUNCTION 
{ yyval.Kind = _contextType = AliasKind.Function; }
        return;
      case 105: // use_type -> T_CONST 
{ yyval.Kind = _contextType = AliasKind.Constant; }
        return;
      case 106: // group_use_declaration -> namespace_name T_NS_SEPARATOR '{' unprefixed_use_declarations possible_comma '}' 
{ yyval.UseList = new List<UseBase>() { AddAliases(yypos, value_stack.array[value_stack.top-6].yyval.StringList, CombineSpans(value_stack.array[value_stack.top-6].yypos, value_stack.array[value_stack.top-5].yypos), AddTrailingComma(value_stack.array[value_stack.top-3].yyval.AliasList, value_stack.array[value_stack.top-2].yyval.Bool), false) }; }
        return;
      case 107: // group_use_declaration -> T_NS_SEPARATOR namespace_name T_NS_SEPARATOR '{' unprefixed_use_declarations possible_comma '}' 
{ yyval.UseList = new List<UseBase>() { AddAliases(yypos, value_stack.array[value_stack.top-6].yyval.StringList, CombineSpans(value_stack.array[value_stack.top-7].yypos, value_stack.array[value_stack.top-6].yypos, value_stack.array[value_stack.top-5].yypos), AddTrailingComma(value_stack.array[value_stack.top-3].yyval.AliasList, value_stack.array[value_stack.top-2].yyval.Bool), true) }; }
        return;
      case 108: // mixed_group_use_declaration -> namespace_name T_NS_SEPARATOR '{' inline_use_declarations possible_comma '}' 
{  yyval.UseList = new List<UseBase>() { AddAliases(yypos, value_stack.array[value_stack.top-6].yyval.StringList, CombineSpans(value_stack.array[value_stack.top-6].yypos, value_stack.array[value_stack.top-5].yypos), AddTrailingComma(value_stack.array[value_stack.top-3].yyval.ContextAliasList, value_stack.array[value_stack.top-2].yyval.Bool), false) }; }
        return;
      case 109: // mixed_group_use_declaration -> T_NS_SEPARATOR namespace_name T_NS_SEPARATOR '{' inline_use_declarations possible_comma '}' 
{ yyval.UseList = new List<UseBase>() { AddAliases(yypos, value_stack.array[value_stack.top-6].yyval.StringList, CombineSpans(value_stack.array[value_stack.top-7].yypos, value_stack.array[value_stack.top-6].yypos, value_stack.array[value_stack.top-5].yypos), AddTrailingComma(value_stack.array[value_stack.top-3].yyval.ContextAliasList, value_stack.array[value_stack.top-2].yyval.Bool), true) }; }
        return;
      case 110: // possible_comma -> 
{ yyval.Bool = false; }
        return;
      case 111: // possible_comma -> ',' 
{ yyval.Bool = true;  }
        return;
      case 112: // inline_use_declarations -> inline_use_declarations ',' inline_use_declaration 
{ yyval.ContextAliasList = AddToList<ContextAlias>(value_stack.array[value_stack.top-3].yyval.ContextAliasList, value_stack.array[value_stack.top-1].yyval.ContextAlias); }
        return;
      case 113: // inline_use_declarations -> inline_use_declaration 
{ yyval.ContextAliasList = new List<ContextAlias>() { value_stack.array[value_stack.top-1].yyval.ContextAlias }; }
        return;
      case 114: // unprefixed_use_declarations -> unprefixed_use_declarations ',' unprefixed_use_declaration 
{ yyval.AliasList = AddToList<CompleteAlias>(value_stack.array[value_stack.top-3].yyval.AliasList, value_stack.array[value_stack.top-1].yyval.Alias); }
        return;
      case 115: // unprefixed_use_declarations -> unprefixed_use_declaration 
{ yyval.AliasList = new List<CompleteAlias>() { value_stack.array[value_stack.top-1].yyval.Alias }; }
        return;
      case 116: // use_declarations -> use_declarations ',' use_declaration 
{ yyval.UseList = AddToList<UseBase>(value_stack.array[value_stack.top-3].yyval.UseList, AddAlias(value_stack.array[value_stack.top-1].yyval.Alias)); }
        return;
      case 117: // use_declarations -> use_declaration 
{ yyval.UseList = new List<UseBase>() { AddAlias(value_stack.array[value_stack.top-1].yyval.Alias) }; }
        return;
      case 118: // inline_use_declaration -> unprefixed_use_declaration 
{ yyval.ContextAlias = JoinTuples(yypos, value_stack.array[value_stack.top-1].yyval.Alias, AliasKind.Type); }
        return;
      case 119: // inline_use_declaration -> use_type unprefixed_use_declaration 
{ yyval.ContextAlias = JoinTuples(yypos, value_stack.array[value_stack.top-1].yyval.Alias, (AliasKind)value_stack.array[value_stack.top-2].yyval.Kind);  }
        return;
      case 120: // unprefixed_use_declaration -> namespace_name 
{ yyval.Alias = new CompleteAlias(new QualifiedNameRef(yypos, new QualifiedName(value_stack.array[value_stack.top-1].yyval.StringList, true, false)), NameRef.Invalid); }
        return;
      case 121: // unprefixed_use_declaration -> namespace_name T_AS T_STRING 
{ yyval.Alias = new CompleteAlias(new QualifiedNameRef(value_stack.array[value_stack.top-3].yypos, new QualifiedName(value_stack.array[value_stack.top-3].yyval.StringList, true, false)), new NameRef(value_stack.array[value_stack.top-1].yypos, value_stack.array[value_stack.top-1].yyval.String)); }
        return;
      case 122: // use_declaration -> unprefixed_use_declaration 
{ yyval.Alias = value_stack.array[value_stack.top-1].yyval.Alias; }
        return;
      case 123: // use_declaration -> T_NS_SEPARATOR unprefixed_use_declaration 
{ 
				var src = value_stack.array[value_stack.top-1].yyval.Alias;
				yyval.Alias = new CompleteAlias(new QualifiedNameRef(CombineSpans(value_stack.array[value_stack.top-2].yypos, src.Item1.Span), 
					new QualifiedName(src.Item1.QualifiedName.Name, src.Item1.QualifiedName.Namespaces, true)), src.Item2); 
			}
        return;
      case 124: // const_list -> const_list ',' const_decl 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 125: // const_list -> const_decl 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 126: // inner_statement_list -> inner_statement_list inner_statement 
{ yyval.NodeList = AddToTopStatementList<LangElement>(value_stack.array[value_stack.top-2].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 127: // inner_statement_list -> 
{ yyval.NodeList = new List<LangElement>(); }
        return;
      case 128: // inner_statement -> statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 129: // inner_statement -> function_declaration_statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 130: // inner_statement -> class_declaration_statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 131: // inner_statement -> trait_declaration_statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 132: // inner_statement -> interface_declaration_statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 133: // inner_statement -> T_HALT_COMPILER '(' ')' ';' 
{ 
				yyval.Node = _astFactory.HaltCompiler(yypos); 
				_errors.Error(yypos, FatalErrors.InvalidHaltCompiler); 
			}
        return;
      case 134: // statement -> '{' inner_statement_list '}' 
{ yyval.Node = CreateBlock(yypos, value_stack.array[value_stack.top-2].yyval.NodeList); }
        return;
      case 135: // statement -> enter_scope if_stmt exit_scope 
{ yyval.Node = value_stack.array[value_stack.top-2].yyval.Node; }
        return;
      case 136: // statement -> enter_scope alt_if_stmt exit_scope 
{ yyval.Node = value_stack.array[value_stack.top-2].yyval.Node; }
        return;
      case 137: // statement -> T_WHILE '(' expr ')' enter_scope while_statement exit_scope 
{ yyval.Node = _astFactory.While(yypos, value_stack.array[value_stack.top-5].yyval.Node, CombineSpans(value_stack.array[value_stack.top-6].yypos, value_stack.array[value_stack.top-4].yypos), value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 138: // statement -> T_DO enter_scope statement T_WHILE '(' expr ')' ';' exit_scope 
{ yyval.Node = _astFactory.Do(yypos, value_stack.array[value_stack.top-7].yyval.Node, value_stack.array[value_stack.top-4].yyval.Node, CombineSpans(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-3].yypos)); }
        return;
      case 139: // statement -> T_FOR '(' for_exprs ';' for_exprs ';' for_exprs ')' enter_scope for_statement exit_scope 
{ yyval.Node = _astFactory.For(yypos, value_stack.array[value_stack.top-9].yyval.NodeList, value_stack.array[value_stack.top-7].yyval.NodeList, value_stack.array[value_stack.top-5].yyval.NodeList, CombineSpans(value_stack.array[value_stack.top-10].yypos, value_stack.array[value_stack.top-4].yypos), value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 140: // statement -> T_SWITCH '(' expr ')' enter_scope switch_case_list exit_scope 
{ yyval.Node = _astFactory.Switch(yypos, value_stack.array[value_stack.top-5].yyval.Node, value_stack.array[value_stack.top-2].yyval.NodeList); }
        return;
      case 141: // statement -> T_BREAK optional_expr ';' 
{ yyval.Node = _astFactory.Jump(yypos, JumpStmt.Types.Break, value_stack.array[value_stack.top-2].yyval.Node);}
        return;
      case 142: // statement -> T_CONTINUE optional_expr ';' 
{ yyval.Node = _astFactory.Jump(yypos, JumpStmt.Types.Continue, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 143: // statement -> T_RETURN optional_expr ';' 
{ yyval.Node = _astFactory.Jump(yypos, JumpStmt.Types.Return, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 144: // statement -> T_GLOBAL global_var_list ';' 
{ yyval.Node = _astFactory.Global(yypos, value_stack.array[value_stack.top-2].yyval.NodeList); }
        return;
      case 145: // statement -> T_STATIC static_var_list ';' 
{ yyval.Node = _astFactory.Static(yypos, value_stack.array[value_stack.top-2].yyval.NodeList); }
        return;
      case 146: // statement -> T_ECHO echo_expr_list ';' 
{ yyval.Node = _astFactory.Echo(yypos, value_stack.array[value_stack.top-2].yyval.NodeList); }
        return;
      case 147: // statement -> T_INLINE_HTML 
{ yyval.Node = _astFactory.InlineHtml(yypos, value_stack.array[value_stack.top-1].yyval.String); }
        return;
      case 148: // statement -> expr ';' 
{ yyval.Node = _astFactory.ExpressionStmt(yypos, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 149: // statement -> T_UNSET '(' unset_variables possible_comma ')' ';' 
{ yyval.Node = _astFactory.Unset(yypos, AddTrailingComma(value_stack.array[value_stack.top-4].yyval.NodeList, value_stack.array[value_stack.top-3].yyval.Bool)); }
        return;
      case 150: // statement -> T_FOREACH '(' expr T_AS foreach_variable ')' enter_scope foreach_statement exit_scope 
{ yyval.Node = _astFactory.Foreach(yypos, value_stack.array[value_stack.top-7].yyval.Node, null, value_stack.array[value_stack.top-5].yyval.ForeachVar, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 151: // statement -> T_FOREACH '(' expr T_AS foreach_variable T_DOUBLE_ARROW foreach_variable ')' enter_scope foreach_statement exit_scope 
{ yyval.Node = _astFactory.Foreach(yypos, value_stack.array[value_stack.top-9].yyval.Node, value_stack.array[value_stack.top-7].yyval.ForeachVar, value_stack.array[value_stack.top-5].yyval.ForeachVar, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 152: // statement -> T_DECLARE '(' const_list ')' declare_statement 
{ yyval.Node = _astFactory.Declare(yypos, value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 153: // statement -> ';' 
{ yyval.Node = _astFactory.EmptyStmt(yypos); }
        return;
      case 154: // statement -> T_TRY '{' inner_statement_list '}' enter_scope catch_list finally_statement exit_scope 
{ yyval.Node = _astFactory.TryCatch(yypos, CreateBlock(CombineSpans(value_stack.array[value_stack.top-7].yypos, value_stack.array[value_stack.top-5].yypos), value_stack.array[value_stack.top-6].yyval.NodeList), value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 155: // statement -> T_GOTO T_STRING ';' 
{ yyval.Node = _astFactory.Goto(yypos, value_stack.array[value_stack.top-2].yyval.String, value_stack.array[value_stack.top-2].yypos); }
        return;
      case 156: // statement -> T_STRING ':' 
{ yyval.Node = _astFactory.Label(yypos, value_stack.array[value_stack.top-2].yyval.String, value_stack.array[value_stack.top-2].yypos); }
        return;
      case 157: // catch_list -> 
{ yyval.NodeList = new List<LangElement>(); }
        return;
      case 158: // catch_list -> catch_list T_CATCH '(' catch_name_list optional_variable ')' '{' inner_statement_list '}' 
{ 
				yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-9].yyval.NodeList, _astFactory.Catch(CombineSpans(value_stack.array[value_stack.top-8].yypos, value_stack.array[value_stack.top-1].yypos), _astFactory.TypeReference(value_stack.array[value_stack.top-6].yypos, value_stack.array[value_stack.top-6].yyval.TypeRefList), 
					(DirectVarUse)value_stack.array[value_stack.top-5].yyval.Node, CreateBlock(CombineSpans(value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-2].yyval.NodeList))); 
			}
        return;
      case 159: // optional_variable -> 
{ yyval.Node = null; }
        return;
      case 160: // optional_variable -> T_VARIABLE 
{ yyval.Node = _astFactory.Variable(value_stack.array[value_stack.top-1].yypos, value_stack.array[value_stack.top-1].yyval.String, NullLangElement, true); }
        return;
      case 161: // catch_name_list -> name 
{ yyval.TypeRefList = new List<TypeRef>() { CreateTypeRef(value_stack.array[value_stack.top-1].yyval.QualifiedNameReference) }; }
        return;
      case 162: // catch_name_list -> catch_name_list '|' name 
{ yyval.TypeRefList = AddToList<TypeRef>(value_stack.array[value_stack.top-3].yyval.TypeRefList, CreateTypeRef(value_stack.array[value_stack.top-1].yyval.QualifiedNameReference)); }
        return;
      case 163: // finally_statement -> 
{ yyval.Node = null; }
        return;
      case 164: // finally_statement -> T_FINALLY '{' inner_statement_list '}' 
{ yyval.Node =_astFactory.Finally(yypos, CreateBlock(CombineSpans(value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-2].yyval.NodeList)); }
        return;
      case 165: // unset_variables -> unset_variable 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 166: // unset_variables -> unset_variables ',' unset_variable 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 167: // unset_variable -> variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 168: // function_declaration_statement -> function returns_ref T_STRING backup_doc_comment '(' parameter_list ')' return_type backup_fn_flags enter_scope '{' inner_statement_list '}' exit_scope backup_fn_flags 
{ 
			yyval.Node = _astFactory.Function(yypos, isConditional, value_stack.array[value_stack.top-14].yyval.Long == (long)FormalParam.Flags.IsByRef, PhpMemberAttributes.None, value_stack.array[value_stack.top-8].yyval.TypeReference, 
			new Name(value_stack.array[value_stack.top-13].yyval.String), value_stack.array[value_stack.top-13].yypos, null, value_stack.array[value_stack.top-10].yyval.FormalParamList, CombineSpans(value_stack.array[value_stack.top-11].yypos, value_stack.array[value_stack.top-9].yypos), 
			CreateBlock(CombineSpans(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-3].yypos), value_stack.array[value_stack.top-4].yyval.NodeList)); 
			SetDoc(yyval.Node);
		}
        return;
      case 169: // is_reference -> 
{ yyval.Long = 0; }
        return;
      case 170: // is_reference -> '&' 
{ yyval.Long = (long)FormalParam.Flags.IsByRef; }
        return;
      case 171: // is_variadic -> 
{ yyval.Long = 0; }
        return;
      case 172: // is_variadic -> T_ELLIPSIS 
{ yyval.Long = (long)FormalParam.Flags.IsVariadic; }
        return;
      case 173: // @4 -> 
{PushClassContext(value_stack.array[value_stack.top-2].yyval.String, value_stack.array[value_stack.top-1].yyval.TypeReference, (PhpMemberAttributes)value_stack.array[value_stack.top-4].yyval.Long);}
        return;
      case 174: // class_declaration_statement -> class_modifiers T_CLASS T_STRING extends_from @4 implements_list backup_doc_comment enter_scope '{' class_statement_list '}' exit_scope 
{ 
			yyval.Node = _astFactory.Type(yypos, CombineSpans(value_stack.array[value_stack.top-12].yypos, value_stack.array[value_stack.top-11].yypos, value_stack.array[value_stack.top-10].yypos, value_stack.array[value_stack.top-9].yypos, value_stack.array[value_stack.top-7].yypos), isConditional, (PhpMemberAttributes)value_stack.array[value_stack.top-12].yyval.Long, new Name(value_stack.array[value_stack.top-10].yyval.String), value_stack.array[value_stack.top-10].yypos, null, 
				ConvertToNamedTypeRef(value_stack.array[value_stack.top-9].yyval.TypeReference), value_stack.array[value_stack.top-7].yyval.TypeRefList.Select(ConvertToNamedTypeRef), value_stack.array[value_stack.top-3].yyval.NodeList, CombineSpans(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos)); 
			SetDoc(yyval.Node);
			PopClassContext();
		}
        return;
      case 175: // class_modifiers -> 
{ yyval.Long = (long)PhpMemberAttributes.None; }
        return;
      case 176: // class_modifiers -> class_modifier class_modifiers 
{ yyval.Long = value_stack.array[value_stack.top-2].yyval.Long | value_stack.array[value_stack.top-1].yyval.Long; }
        return;
      case 177: // class_modifier -> T_ABSTRACT 
{ yyval.Long = (long)PhpMemberAttributes.Abstract; }
        return;
      case 178: // class_modifier -> T_FINAL 
{ yyval.Long = (long)PhpMemberAttributes.Final; }
        return;
      case 179: // @5 -> 
{PushClassContext(value_stack.array[value_stack.top-1].yyval.String, null, PhpMemberAttributes.Trait);}
        return;
      case 180: // trait_declaration_statement -> T_TRAIT T_STRING @5 backup_doc_comment enter_scope '{' class_statement_list '}' exit_scope 
{ 
			yyval.Node = _astFactory.Type(yypos, CombineSpans(value_stack.array[value_stack.top-9].yypos, value_stack.array[value_stack.top-8].yypos), isConditional, PhpMemberAttributes.Trait, 
				new Name(value_stack.array[value_stack.top-8].yyval.String), value_stack.array[value_stack.top-8].yypos, null, null, new List<INamedTypeRef>(), value_stack.array[value_stack.top-3].yyval.NodeList, CombineSpans(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos)); 
			SetDoc(yyval.Node);
			PopClassContext();
		}
        return;
      case 181: // @6 -> 
{PushClassContext(value_stack.array[value_stack.top-1].yyval.String, null, PhpMemberAttributes.Interface);}
        return;
      case 182: // interface_declaration_statement -> T_INTERFACE T_STRING @6 interface_extends_list backup_doc_comment enter_scope '{' class_statement_list '}' exit_scope 
{ 
			yyval.Node = _astFactory.Type(yypos, CombineSpans(value_stack.array[value_stack.top-10].yypos, value_stack.array[value_stack.top-9].yypos, value_stack.array[value_stack.top-7].yypos), isConditional, PhpMemberAttributes.Interface, 
				new Name(value_stack.array[value_stack.top-9].yyval.String), value_stack.array[value_stack.top-9].yypos, null, null, value_stack.array[value_stack.top-7].yyval.TypeRefList.Select(ConvertToNamedTypeRef), value_stack.array[value_stack.top-3].yyval.NodeList, CombineSpans(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos)); 
			SetDoc(yyval.Node);
			PopClassContext();
		}
        return;
      case 183: // extends_from -> 
{ yyval.TypeReference = null; }
        return;
      case 184: // extends_from -> T_EXTENDS name 
{ yyval.TypeReference = CreateTypeRef(value_stack.array[value_stack.top-1].yyval.QualifiedNameReference); }
        return;
      case 185: // interface_extends_list -> 
{ yyval.TypeRefList = TypeRef.EmptyList; }
        return;
      case 186: // interface_extends_list -> T_EXTENDS name_list 
{ yyval.TypeRefList = value_stack.array[value_stack.top-1].yyval.TypeRefList; }
        return;
      case 187: // implements_list -> 
{ yyval.TypeRefList = TypeRef.EmptyList; }
        return;
      case 188: // implements_list -> T_IMPLEMENTS name_list 
{ yyval.TypeRefList = value_stack.array[value_stack.top-1].yyval.TypeRefList; }
        return;
      case 189: // foreach_variable -> variable 
{ yyval.ForeachVar = _astFactory.ForeachVariable(yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 190: // foreach_variable -> '&' variable 
{ yyval.ForeachVar = _astFactory.ForeachVariable(yypos, value_stack.array[value_stack.top-1].yyval.Node, true); }
        return;
      case 191: // foreach_variable -> T_LIST '(' array_pair_list ')' 
{ yyval.ForeachVar = _astFactory.ForeachVariable(yypos, _astFactory.List(yypos, value_stack.array[value_stack.top-2].yyval.ItemList, true)); }
        return;
      case 192: // foreach_variable -> '[' array_pair_list ']' 
{ yyval.ForeachVar = _astFactory.ForeachVariable(yypos, _astFactory.List(yypos, value_stack.array[value_stack.top-2].yyval.ItemList, false)); }
        return;
      case 193: // for_statement -> statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 194: // for_statement -> ':' inner_statement_list T_ENDFOR ';' 
{ yyval.Node = StatementsToBlock(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-3].yyval.NodeList, Tokens.T_ENDFOR); }
        return;
      case 195: // foreach_statement -> statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 196: // foreach_statement -> ':' inner_statement_list T_ENDFOREACH ';' 
{ yyval.Node = StatementsToBlock(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-3].yyval.NodeList, Tokens.T_ENDFOREACH); }
        return;
      case 197: // declare_statement -> statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 198: // declare_statement -> ':' inner_statement_list T_ENDDECLARE ';' 
{ yyval.Node = StatementsToBlock(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-3].yyval.NodeList, Tokens.T_ENDDECLARE); }
        return;
      case 199: // switch_case_list -> '{' case_list '}' 
{ yyval.NodeList = value_stack.array[value_stack.top-2].yyval.NodeList; }
        return;
      case 200: // switch_case_list -> '{' ';' case_list '}' 
{ yyval.NodeList = value_stack.array[value_stack.top-2].yyval.NodeList; }
        return;
      case 201: // switch_case_list -> ':' case_list T_ENDSWITCH ';' 
{ yyval.NodeList = value_stack.array[value_stack.top-3].yyval.NodeList; }
        return;
      case 202: // switch_case_list -> ':' ';' case_list T_ENDSWITCH ';' 
{ yyval.NodeList = value_stack.array[value_stack.top-3].yyval.NodeList; }
        return;
      case 203: // case_list -> 
{ yyval.NodeList = new List<LangElement>(); }
        return;
      case 204: // case_list -> case_list T_CASE expr case_separator inner_statement_list 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-5].yyval.NodeList, _astFactory.Case(CombineSpans(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yypos), 
				value_stack.array[value_stack.top-3].yyval.Node, CreateCaseBlock(CombineSpans(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-1].yyval.NodeList))); }
        return;
      case 205: // case_list -> case_list T_DEFAULT case_separator inner_statement_list 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-4].yyval.NodeList, _astFactory.Case(CombineSpans(value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yypos), 
				null, CreateCaseBlock(CombineSpans(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-1].yyval.NodeList))); }
        return;
      case 208: // while_statement -> statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 209: // while_statement -> ':' inner_statement_list T_ENDWHILE ';' 
{ yyval.Node = StatementsToBlock(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-3].yyval.NodeList, Tokens.T_ENDWHILE); }
        return;
      case 210: // if_stmt_without_else -> T_IF '(' expr ')' statement 
{ yyval.IfItemList = new List<IfStatement>() { 
				new IfStatement(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node) }; 
			}
        return;
      case 211: // if_stmt_without_else -> if_stmt_without_else T_ELSEIF '(' expr ')' statement 
{ yyval.IfItemList = AddToList<IfStatement>(value_stack.array[value_stack.top-6].yyval.IfItemList, 
				new IfStatement(CombineSpans(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node)); 
			}
        return;
      case 212: // if_stmt -> if_stmt_without_else 
{ ((List<IfStatement>)value_stack.array[value_stack.top-1].yyval.IfItemList).Reverse(); yyval.Node = null; 
			foreach (var item in (List<IfStatement>)value_stack.array[value_stack.top-1].yyval.IfItemList) 
				yyval.Node = _astFactory.If(yyval.Node != null? CombineSpans(item.Span, (yyval.Node).Span): item.Span, item.Condition, item.Body, yyval.Node); }
        return;
      case 213: // if_stmt -> if_stmt_without_else T_ELSE statement 
{ ((List<IfStatement>)value_stack.array[value_stack.top-3].yyval.IfItemList).Reverse(); yyval.Node = _astFactory.If(CombineSpans(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yypos), null, value_stack.array[value_stack.top-1].yyval.Node, null); 
			foreach (var item in (List<IfStatement>)value_stack.array[value_stack.top-3].yyval.IfItemList) yyval.Node = _astFactory.If(CombineSpans(item.Span, (yyval.Node).Span), item.Condition, item.Body, yyval.Node); }
        return;
      case 214: // alt_if_stmt_without_else -> T_IF '(' expr ')' ':' inner_statement_list 
{ 
				yyval.IfItemList = new List<IfStatement>() { new IfStatement(yypos, value_stack.array[value_stack.top-4].yyval.Node, StatementsToBlock(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yyval.NodeList, Tokens.END)) }; 
			}
        return;
      case 215: // alt_if_stmt_without_else -> alt_if_stmt_without_else T_ELSEIF '(' expr ')' ':' inner_statement_list 
{ 
				RebuildLast(value_stack.array[value_stack.top-7].yyval.IfItemList, value_stack.array[value_stack.top-6].yypos, Tokens.T_ELSEIF);
				yyval.IfItemList = AddToList<IfStatement>(value_stack.array[value_stack.top-7].yyval.IfItemList, 
					new IfStatement(CombineSpans(value_stack.array[value_stack.top-6].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-4].yyval.Node, StatementsToBlock(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yyval.NodeList, Tokens.END))); 
			}
        return;
      case 216: // alt_if_stmt -> alt_if_stmt_without_else T_ENDIF ';' 
{ RebuildLast(value_stack.array[value_stack.top-3].yyval.IfItemList, value_stack.array[value_stack.top-2].yypos, Tokens.T_ENDIF);
			 ((List<IfStatement>)value_stack.array[value_stack.top-3].yyval.IfItemList).Reverse(); yyval.Node = null; 
			foreach (var item in (List<IfStatement>)value_stack.array[value_stack.top-3].yyval.IfItemList) 
				yyval.Node = _astFactory.If(yyval.Node != null? CombineSpans(item.Span, (yyval.Node).Span): item.Span, item.Condition, item.Body, yyval.Node); }
        return;
      case 217: // alt_if_stmt -> alt_if_stmt_without_else T_ELSE ':' inner_statement_list T_ENDIF ';' 
{ RebuildLast(value_stack.array[value_stack.top-6].yyval.IfItemList, value_stack.array[value_stack.top-5].yypos, Tokens.T_ELSE);
			((List<IfStatement>)value_stack.array[value_stack.top-6].yyval.IfItemList).Reverse(); yyval.Node = _astFactory.If(CombineSpans(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-1].yypos), null, StatementsToBlock(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-3].yyval.NodeList, Tokens.T_ENDIF), null); 
			foreach (var item in (List<IfStatement>)value_stack.array[value_stack.top-6].yyval.IfItemList) yyval.Node = _astFactory.If(CombineSpans(item.Span, (yyval.Node).Span), item.Condition, item.Body, yyval.Node); }
        return;
      case 218: // parameter_list -> non_empty_parameter_list possible_comma 
{ yyval.FormalParamList = AddTrailingComma(value_stack.array[value_stack.top-2].yyval.FormalParamList, value_stack.array[value_stack.top-1].yyval.Bool); }
        return;
      case 219: // parameter_list -> 
{ yyval.FormalParamList = new List<FormalParam>(); }
        return;
      case 220: // non_empty_parameter_list -> parameter 
{ yyval.FormalParamList = new List<FormalParam>() { (FormalParam)value_stack.array[value_stack.top-1].yyval.FormalParam }; }
        return;
      case 221: // non_empty_parameter_list -> non_empty_parameter_list ',' parameter 
{ yyval.FormalParamList = AddToList<FormalParam>(value_stack.array[value_stack.top-3].yyval.FormalParamList, value_stack.array[value_stack.top-1].yyval.FormalParam); }
        return;
      case 222: // optional_visibility_modifier -> 
{ yyval.Long = 0; /* None */ }
        return;
      case 223: // optional_visibility_modifier -> T_PUBLIC 
{ yyval.Long = (long)(PhpMemberAttributes.Public | PhpMemberAttributes.Constructor); }
        return;
      case 224: // optional_visibility_modifier -> T_PROTECTED 
{ yyval.Long = (long)(PhpMemberAttributes.Protected | PhpMemberAttributes.Constructor); }
        return;
      case 225: // optional_visibility_modifier -> T_PRIVATE 
{ yyval.Long = (long)(PhpMemberAttributes.Private | PhpMemberAttributes.Constructor); }
        return;
      case 226: // parameter -> optional_visibility_modifier optional_type is_reference is_variadic T_VARIABLE 
{ yyval.FormalParam = _astFactory.Parameter(CombineSpans(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-1].yyval.String, value_stack.array[value_stack.top-1].yypos, value_stack.array[value_stack.top-4].yyval.TypeReference, (FormalParam.Flags)value_stack.array[value_stack.top-3].yyval.Long|(FormalParam.Flags)value_stack.array[value_stack.top-2].yyval.Long, null, (PhpMemberAttributes)value_stack.array[value_stack.top-5].yyval.Long); /* Important - @$ is invalid when optional_type is empty */ }
        return;
      case 227: // parameter -> optional_visibility_modifier optional_type is_reference is_variadic T_VARIABLE '=' expr 
{ yyval.FormalParam = _astFactory.Parameter(CombineSpans(value_stack.array[value_stack.top-7].yypos, value_stack.array[value_stack.top-6].yypos, value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-3].yyval.String, value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-6].yyval.TypeReference, (FormalParam.Flags)value_stack.array[value_stack.top-5].yyval.Long|(FormalParam.Flags)value_stack.array[value_stack.top-4].yyval.Long, (Expression)value_stack.array[value_stack.top-1].yyval.Node, (PhpMemberAttributes)value_stack.array[value_stack.top-7].yyval.Long); /* Important - @$ is invalid when optional_type is empty */ }
        return;
      case 228: // optional_type -> 
{ yyval.TypeReference = null; }
        return;
      case 229: // optional_type -> type_expr 
{ yyval.TypeReference = value_stack.array[value_stack.top-1].yyval.TypeReference; }
        return;
      case 230: // type_expr -> type 
{ yyval.TypeReference = value_stack.array[value_stack.top-1].yyval.TypeReference; }
        return;
      case 231: // type_expr -> '?' type 
{ yyval.TypeReference = _astFactory.NullableTypeReference(yypos, value_stack.array[value_stack.top-1].yyval.TypeReference); }
        return;
      case 232: // type_expr -> union_type 
{ yyval.TypeReference = _astFactory.TypeReference(yypos, value_stack.array[value_stack.top-1].yyval.TypeRefList); }
        return;
      case 233: // type -> T_ARRAY 
{ yyval.TypeReference = _astFactory.PrimitiveTypeReference(yypos, PrimitiveTypeRef.PrimitiveType.array); }
        return;
      case 234: // type -> T_CALLABLE 
{ yyval.TypeReference = _astFactory.PrimitiveTypeReference(yypos, PrimitiveTypeRef.PrimitiveType.callable); }
        return;
      case 235: // type -> name 
{ yyval.TypeReference = CreateTypeRef(value_stack.array[value_stack.top-1].yyval.QualifiedNameReference, true); }
        return;
      case 236: // union_type -> type '|' type 
{ yyval.TypeRefList = new List<TypeRef>(2){ value_stack.array[value_stack.top-3].yyval.TypeReference, value_stack.array[value_stack.top-1].yyval.TypeReference }; }
        return;
      case 237: // union_type -> union_type '|' type 
{ yyval.TypeRefList = AddToList<TypeRef>(value_stack.array[value_stack.top-3].yyval.TypeRefList, value_stack.array[value_stack.top-1].yyval.TypeReference); }
        return;
      case 238: // return_type -> 
{ yyval.TypeReference = null; }
        return;
      case 239: // return_type -> ':' type_expr 
{ yyval.TypeReference = value_stack.array[value_stack.top-1].yyval.TypeReference; }
        return;
      case 240: // argument_list -> '(' ')' 
{ yyval.ParamList = new List<ActualParam>(); }
        return;
      case 241: // argument_list -> '(' non_empty_argument_list possible_comma ')' 
{ yyval.ParamList = AddTrailingComma(value_stack.array[value_stack.top-3].yyval.ParamList, value_stack.array[value_stack.top-2].yyval.Bool); }
        return;
      case 242: // non_empty_argument_list -> argument 
{ yyval.ParamList = new List<ActualParam>() { value_stack.array[value_stack.top-1].yyval.Param }; }
        return;
      case 243: // non_empty_argument_list -> non_empty_argument_list ',' argument 
{ yyval.ParamList = AddToList<ActualParam>(value_stack.array[value_stack.top-3].yyval.ParamList, value_stack.array[value_stack.top-1].yyval.Param); }
        return;
      case 244: // argument -> expr 
{ yyval.Param = _astFactory.ActualParameter(yypos, value_stack.array[value_stack.top-1].yyval.Node, ActualParam.Flags.Default); }
        return;
      case 245: // argument -> T_ELLIPSIS expr 
{ yyval.Param = _astFactory.ActualParameter(yypos, value_stack.array[value_stack.top-1].yyval.Node, ActualParam.Flags.IsUnpack); }
        return;
      case 246: // global_var_list -> global_var_list ',' global_var 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 247: // global_var_list -> global_var 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 248: // global_var -> simple_variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 249: // static_var_list -> static_var_list ',' static_var 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 250: // static_var_list -> static_var 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 251: // static_var -> T_VARIABLE 
{ yyval.Node = _astFactory.StaticVarDecl(yypos, new VariableName(value_stack.array[value_stack.top-1].yyval.String), null); }
        return;
      case 252: // static_var -> T_VARIABLE '=' expr 
{ yyval.Node = _astFactory.StaticVarDecl(yypos, new VariableName(value_stack.array[value_stack.top-3].yyval.String), value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 253: // class_statement_list -> class_statement_list class_statement 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-2].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 254: // class_statement_list -> 
{ yyval.NodeList = new List<LangElement>(); }
        return;
      case 255: // class_statement -> variable_modifiers optional_type property_list ';' 
{ 
				yyval.Node = _astFactory.DeclList(yypos, (PhpMemberAttributes)value_stack.array[value_stack.top-4].yyval.Long, value_stack.array[value_stack.top-2].yyval.NodeList, value_stack.array[value_stack.top-3].yyval.TypeReference); 
				SetDoc(yyval.Node);
			}
        return;
      case 256: // class_statement -> method_modifiers T_CONST class_const_list ';' 
{ 
				yyval.Node = _astFactory.DeclList(yypos, (PhpMemberAttributes)value_stack.array[value_stack.top-4].yyval.Long, value_stack.array[value_stack.top-2].yyval.NodeList, null); 
				SetDoc(yyval.Node);
			}
        return;
      case 257: // class_statement -> T_USE name_list trait_adaptations 
{ yyval.Node = _astFactory.TraitUse(yypos, value_stack.array[value_stack.top-2].yyval.TypeRefList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 258: // class_statement -> method_modifiers function returns_ref identifier backup_doc_comment '(' parameter_list ')' return_type backup_fn_flags method_body backup_fn_flags 
{	
				yyval.Node = _astFactory.Method(yypos, value_stack.array[value_stack.top-10].yyval.Long == (long)FormalParam.Flags.IsByRef, (PhpMemberAttributes)value_stack.array[value_stack.top-12].yyval.Long, 
					value_stack.array[value_stack.top-4].yyval.TypeReference, value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-9].yyval.String, value_stack.array[value_stack.top-9].yypos, null, value_stack.array[value_stack.top-6].yyval.FormalParamList, CombineSpans(value_stack.array[value_stack.top-7].yypos, value_stack.array[value_stack.top-5].yypos), null, value_stack.array[value_stack.top-2].yyval.Node);
				SetDoc(yyval.Node);
			}
        return;
      case 259: // name_list -> name 
{ yyval.TypeRefList = new List<TypeRef>() { CreateTypeRef(value_stack.array[value_stack.top-1].yyval.QualifiedNameReference) }; }
        return;
      case 260: // name_list -> name_list ',' name 
{ yyval.TypeRefList = AddToList<TypeRef>(value_stack.array[value_stack.top-3].yyval.TypeRefList, CreateTypeRef(value_stack.array[value_stack.top-1].yyval.QualifiedNameReference)); }
        return;
      case 261: // trait_adaptations -> ';' 
{ yyval.Node = null; }
        return;
      case 262: // trait_adaptations -> '{' '}' 
{ yyval.Node = _astFactory.TraitAdaptationBlock(yypos, new List<LangElement>()); }
        return;
      case 263: // trait_adaptations -> '{' trait_adaptation_list '}' 
{ yyval.Node = _astFactory.TraitAdaptationBlock(yypos, value_stack.array[value_stack.top-2].yyval.NodeList); }
        return;
      case 264: // trait_adaptation_list -> trait_adaptation 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node };
 }
        return;
      case 265: // trait_adaptation_list -> trait_adaptation_list trait_adaptation 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-2].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 266: // trait_adaptation -> trait_precedence 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 267: // trait_adaptation -> trait_alias 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 268: // trait_precedence -> absolute_trait_method_reference T_INSTEADOF name_list ';' 
{ yyval.Node = _astFactory.TraitAdaptationPrecedence(yypos, (Tuple<TypeRef,NameRef>)value_stack.array[value_stack.top-4].yyval.Object, value_stack.array[value_stack.top-2].yyval.TypeRefList); }
        return;
      case 269: // trait_alias -> trait_method_reference T_AS T_STRING ';' 
{ yyval.Node = _astFactory.TraitAdaptationAlias(yypos, (Tuple<TypeRef,NameRef>)value_stack.array[value_stack.top-4].yyval.Object, new NameRef(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.String), null); }
        return;
      case 270: // trait_alias -> trait_method_reference T_AS reserved_non_modifiers ';' 
{ yyval.Node = _astFactory.TraitAdaptationAlias(yypos, (Tuple<TypeRef,NameRef>)value_stack.array[value_stack.top-4].yyval.Object, new NameRef(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.String), null); }
        return;
      case 271: // trait_alias -> trait_method_reference T_AS member_modifier identifier ';' 
{ 
				yyval.Node = _astFactory.TraitAdaptationAlias(yypos, (Tuple<TypeRef,NameRef>)value_stack.array[value_stack.top-5].yyval.Object, new NameRef(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.String), (PhpMemberAttributes)value_stack.array[value_stack.top-3].yyval.Long); 
			}
        return;
      case 272: // trait_alias -> trait_method_reference T_AS member_modifier ';' 
{ 
				yyval.Node = _astFactory.TraitAdaptationAlias(yypos, (Tuple<TypeRef,NameRef>)value_stack.array[value_stack.top-4].yyval.Object, NameRef.Invalid, (PhpMemberAttributes)value_stack.array[value_stack.top-2].yyval.Long); 
			}
        return;
      case 273: // trait_method_reference -> identifier 
{ yyval.Object = new Tuple<TypeRef,NameRef>(null, new NameRef(value_stack.array[value_stack.top-1].yypos, value_stack.array[value_stack.top-1].yyval.String)); }
        return;
      case 274: // trait_method_reference -> absolute_trait_method_reference 
{ yyval.Object = value_stack.array[value_stack.top-1].yyval.Object; }
        return;
      case 275: // absolute_trait_method_reference -> name T_DOUBLE_COLON identifier 
{ yyval.Object = new Tuple<TypeRef,NameRef>(CreateTypeRef(value_stack.array[value_stack.top-3].yyval.QualifiedNameReference), new NameRef(value_stack.array[value_stack.top-1].yypos, value_stack.array[value_stack.top-1].yyval.String)); }
        return;
      case 276: // method_body -> ';' 
{ yyval.Node = null; }
        return;
      case 277: // method_body -> '{' inner_statement_list '}' 
{ yyval.Node = CreateBlock(CombineSpans(value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-2].yyval.NodeList); }
        return;
      case 278: // variable_modifiers -> non_empty_member_modifiers 
{ yyval.Long = value_stack.array[value_stack.top-1].yyval.Long; }
        return;
      case 279: // variable_modifiers -> T_VAR 
{ yyval.Long = (long)PhpMemberAttributes.None; }
        return;
      case 280: // method_modifiers -> 
{ yyval.Long = (long)PhpMemberAttributes.None; }
        return;
      case 281: // method_modifiers -> non_empty_member_modifiers 
{ yyval.Long = value_stack.array[value_stack.top-1].yyval.Long; }
        return;
      case 282: // non_empty_member_modifiers -> member_modifier 
{ yyval.Long = value_stack.array[value_stack.top-1].yyval.Long; }
        return;
      case 283: // non_empty_member_modifiers -> non_empty_member_modifiers member_modifier 
{ yyval.Long = value_stack.array[value_stack.top-2].yyval.Long | value_stack.array[value_stack.top-1].yyval.Long; }
        return;
      case 284: // member_modifier -> T_PUBLIC 
{ yyval.Long = (long)PhpMemberAttributes.Public; }
        return;
      case 285: // member_modifier -> T_PROTECTED 
{ yyval.Long = (long)PhpMemberAttributes.Protected; }
        return;
      case 286: // member_modifier -> T_PRIVATE 
{ yyval.Long = (long)PhpMemberAttributes.Private; }
        return;
      case 287: // member_modifier -> T_STATIC 
{ yyval.Long = (long)PhpMemberAttributes.Static; }
        return;
      case 288: // member_modifier -> T_ABSTRACT 
{ yyval.Long = (long)PhpMemberAttributes.Abstract; }
        return;
      case 289: // member_modifier -> T_FINAL 
{ yyval.Long = (long)PhpMemberAttributes.Final; }
        return;
      case 290: // property_list -> property_list ',' property 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 291: // property_list -> property 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 292: // property -> T_VARIABLE backup_doc_comment 
{ SetMemberDoc(yyval.Node = _astFactory.FieldDecl(yypos, new VariableName(value_stack.array[value_stack.top-2].yyval.String), null)); }
        return;
      case 293: // property -> T_VARIABLE '=' expr backup_doc_comment 
{ SetMemberDoc(yyval.Node = _astFactory.FieldDecl(yypos, new VariableName(value_stack.array[value_stack.top-4].yyval.String), (Expression)value_stack.array[value_stack.top-2].yyval.Node)); }
        return;
      case 294: // class_const_list -> class_const_list ',' class_const_decl 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 295: // class_const_list -> class_const_decl 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 296: // class_const_decl -> identifier '=' expr backup_doc_comment 
{
		yyval.Node = _astFactory.ClassConstDecl(yypos, new VariableName(value_stack.array[value_stack.top-4].yyval.String), value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yyval.Node); 
		SetMemberDoc(yyval.Node);
	}
        return;
      case 297: // const_decl -> T_STRING '=' expr backup_doc_comment 
{ yyval.Node = _astFactory.GlobalConstDecl(yypos, false, new VariableName(value_stack.array[value_stack.top-4].yyval.String), value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yyval.Node); 
		SetMemberDoc(yyval.Node);
	}
        return;
      case 298: // echo_expr_list -> echo_expr_list ',' echo_expr 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 299: // echo_expr_list -> echo_expr 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 300: // echo_expr -> expr 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 301: // for_exprs -> 
{ yyval.NodeList = LangElement.EmptyList; }
        return;
      case 302: // for_exprs -> non_empty_for_exprs 
{ yyval.NodeList = value_stack.array[value_stack.top-1].yyval.NodeList; }
        return;
      case 303: // non_empty_for_exprs -> non_empty_for_exprs ',' expr 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 304: // non_empty_for_exprs -> expr 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 305: // @7 -> 
{ PushAnonymousClassContext(value_stack.array[value_stack.top-1].yyval.TypeReference); }
        return;
      case 306: // anonymous_class -> T_CLASS ctor_arguments extends_from @7 implements_list backup_doc_comment enter_scope '{' class_statement_list '}' exit_scope 
{
			var typeRef = _astFactory.AnonymousTypeReference(yypos, CombineSpans(value_stack.array[value_stack.top-11].yypos, value_stack.array[value_stack.top-10].yypos, value_stack.array[value_stack.top-9].yypos, value_stack.array[value_stack.top-7].yypos), isConditional, PhpMemberAttributes.None, null, ConvertToNamedTypeRef(value_stack.array[value_stack.top-9].yyval.TypeReference), value_stack.array[value_stack.top-7].yyval.TypeRefList.Select(ConvertToNamedTypeRef), value_stack.array[value_stack.top-3].yyval.NodeList, CombineSpans(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos));
			SetDoc(((AnonymousTypeRef)typeRef).TypeDeclaration);
			yyval.AnonymousClass = new AnonymousClass(typeRef, value_stack.array[value_stack.top-10].yyval.ParamList, value_stack.array[value_stack.top-10].yypos); 
			PopClassContext();
		}
        return;
      case 307: // new_expr -> T_NEW class_name_reference ctor_arguments 
{ yyval.Node = _astFactory.New(yypos, value_stack.array[value_stack.top-2].yyval.TypeReference, value_stack.array[value_stack.top-1].yyval.ParamList, value_stack.array[value_stack.top-1].yypos); }
        return;
      case 308: // new_expr -> T_NEW anonymous_class 
{ yyval.Node = _astFactory.New(yypos, ((AnonymousClass)value_stack.array[value_stack.top-1].yyval.AnonymousClass).Item1, ((AnonymousClass)value_stack.array[value_stack.top-1].yyval.AnonymousClass).Item2, ((AnonymousClass)value_stack.array[value_stack.top-1].yyval.AnonymousClass).Item3); }
        return;
      case 309: // expr_without_variable -> T_LIST '(' array_pair_list ')' '=' expr 
{ yyval.Node = _astFactory.Assignment(yypos, _astFactory.List(Span.Combine(value_stack.array[value_stack.top-6].yypos, value_stack.array[value_stack.top-3].yypos), value_stack.array[value_stack.top-4].yyval.ItemList, true), value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignValue); }
        return;
      case 310: // expr_without_variable -> '[' array_pair_list ']' '=' expr 
{ yyval.Node = _astFactory.Assignment(yypos, _astFactory.List(CombineSpans(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-3].yypos), value_stack.array[value_stack.top-4].yyval.ItemList, false), value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignValue); }
        return;
      case 311: // expr_without_variable -> variable '=' expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignValue); }
        return;
      case 312: // expr_without_variable -> variable '=' '&' variable 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-4].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignRef); }
        return;
      case 313: // expr_without_variable -> variable '=' '&' new_expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-4].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignRef); _errors.Error(yypos, Warnings.AssignNewByRefDeprecated); }
        return;
      case 314: // expr_without_variable -> T_CLONE expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.Clone,   (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 315: // expr_without_variable -> variable T_PLUS_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignAdd); }
        return;
      case 316: // expr_without_variable -> variable T_MINUS_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignSub); }
        return;
      case 317: // expr_without_variable -> variable T_MUL_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignMul); }
        return;
      case 318: // expr_without_variable -> variable T_POW_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignPow); }
        return;
      case 319: // expr_without_variable -> variable T_DIV_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignDiv); }
        return;
      case 320: // expr_without_variable -> variable T_CONCAT_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignAppend); }
        return;
      case 321: // expr_without_variable -> variable T_MOD_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignMod); }
        return;
      case 322: // expr_without_variable -> variable T_AND_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignAnd); }
        return;
      case 323: // expr_without_variable -> variable T_OR_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignOr); }
        return;
      case 324: // expr_without_variable -> variable T_XOR_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignXor); }
        return;
      case 325: // expr_without_variable -> variable T_SL_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignShiftLeft); }
        return;
      case 326: // expr_without_variable -> variable T_SR_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignShiftRight); }
        return;
      case 327: // expr_without_variable -> variable T_COALESCE_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignCoalesce); }
        return;
      case 328: // expr_without_variable -> variable T_INC 
{ yyval.Node = CreateIncDec(yypos, value_stack.array[value_stack.top-2].yyval.Node, true, true); }
        return;
      case 329: // expr_without_variable -> T_INC variable 
{ yyval.Node = CreateIncDec(yypos, value_stack.array[value_stack.top-1].yyval.Node, true,  false); }
        return;
      case 330: // expr_without_variable -> variable T_DEC 
{ yyval.Node = CreateIncDec(yypos, value_stack.array[value_stack.top-2].yyval.Node, false, true); }
        return;
      case 331: // expr_without_variable -> T_DEC variable 
{ yyval.Node = CreateIncDec(yypos, value_stack.array[value_stack.top-1].yyval.Node, false, false); }
        return;
      case 332: // expr_without_variable -> expr T_BOOLEAN_OR expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Or,   value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 333: // expr_without_variable -> expr T_BOOLEAN_AND expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.And,  value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 334: // expr_without_variable -> expr T_LOGICAL_OR expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Or,   value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 335: // expr_without_variable -> expr T_LOGICAL_AND expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.And,  value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 336: // expr_without_variable -> expr T_LOGICAL_XOR expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Xor,  value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 337: // expr_without_variable -> expr '|' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.BitOr,  value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 338: // expr_without_variable -> expr '&' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.BitAnd, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 339: // expr_without_variable -> expr '^' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.BitXor, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 340: // expr_without_variable -> expr '.' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Concat, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 341: // expr_without_variable -> expr '+' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Add,    value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 342: // expr_without_variable -> expr '-' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Sub,    value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 343: // expr_without_variable -> expr '*' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Mul,    value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 344: // expr_without_variable -> expr T_POW expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Pow,    value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 345: // expr_without_variable -> expr '/' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Div,    value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 346: // expr_without_variable -> expr '%' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Mod,    value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 347: // expr_without_variable -> expr T_SL expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.ShiftLeft,  value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 348: // expr_without_variable -> expr T_SR expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.ShiftRight, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 349: // expr_without_variable -> '+' expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.Plus,   (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 350: // expr_without_variable -> '-' expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.Minus,   (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 351: // expr_without_variable -> '!' expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.LogicNegation, (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 352: // expr_without_variable -> '~' expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.BitNegation,   (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 353: // expr_without_variable -> expr T_IS_IDENTICAL expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Identical, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 354: // expr_without_variable -> expr T_IS_NOT_IDENTICAL expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.NotIdentical, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 355: // expr_without_variable -> expr T_IS_EQUAL expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Equal, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 356: // expr_without_variable -> expr T_IS_NOT_EQUAL expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.NotEqual, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 357: // expr_without_variable -> expr '<' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.LessThan, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 358: // expr_without_variable -> expr T_IS_SMALLER_OR_EQUAL expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.LessThanOrEqual, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 359: // expr_without_variable -> expr '>' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.GreaterThan, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 360: // expr_without_variable -> expr T_IS_GREATER_OR_EQUAL expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.GreaterThanOrEqual, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 361: // expr_without_variable -> expr T_SPACESHIP expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Spaceship, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 362: // expr_without_variable -> expr T_INSTANCEOF class_name_reference 
{ yyval.Node = _astFactory.InstanceOf(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.TypeReference); }
        return;
      case 363: // expr_without_variable -> '(' expr ')' 
{ yyval.Node = _astFactory.EncapsedExpression(yypos, value_stack.array[value_stack.top-2].yyval.Node, Tokens.T_LPAREN); }
        return;
      case 364: // expr_without_variable -> new_expr 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 365: // expr_without_variable -> expr '?' expr ':' expr 
{ yyval.Node = _astFactory.ConditionalEx(yypos, value_stack.array[value_stack.top-5].yyval.Node, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 366: // expr_without_variable -> expr '?' ':' expr 
{ yyval.Node = _astFactory.ConditionalEx(yypos, value_stack.array[value_stack.top-4].yyval.Node, null, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 367: // expr_without_variable -> expr T_COALESCE expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Coalesce, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 368: // expr_without_variable -> internal_functions_in_yacc 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 369: // expr_without_variable -> T_INT_CAST expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.Int64Cast,   (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 370: // expr_without_variable -> T_DOUBLE_CAST expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.DoubleCast, (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 371: // expr_without_variable -> T_STRING_CAST expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.StringCast, (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 372: // expr_without_variable -> T_ARRAY_CAST expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.ArrayCast,  (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 373: // expr_without_variable -> T_OBJECT_CAST expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.ObjectCast, (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 374: // expr_without_variable -> T_BOOL_CAST expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.BoolCast,   (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 375: // expr_without_variable -> T_UNSET_CAST expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.UnsetCast,  (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 376: // expr_without_variable -> T_EXIT exit_expr 
{ yyval.Node = _astFactory.Exit(yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 377: // expr_without_variable -> '@' expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.AtSign,     (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 378: // expr_without_variable -> scalar 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 379: // expr_without_variable -> backticks_expr 
{ yyval.Node = _astFactory.Shell(yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 380: // expr_without_variable -> T_PRINT expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.Print, (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 381: // expr_without_variable -> T_YIELD 
{ yyval.Node = _astFactory.Yield(yypos, null, null); }
        return;
      case 382: // expr_without_variable -> T_YIELD expr 
{ yyval.Node = _astFactory.Yield(yypos, null, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 383: // expr_without_variable -> T_YIELD expr T_DOUBLE_ARROW expr 
{ yyval.Node = _astFactory.Yield(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 384: // expr_without_variable -> T_YIELD_FROM expr 
{ yyval.Node = _astFactory.YieldFrom(yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 385: // expr_without_variable -> T_THROW expr 
{ yyval.Node = _astFactory.Throw(yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 386: // expr_without_variable -> inline_function 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 387: // expr_without_variable -> T_STATIC inline_function 
{
			var lambda = (LambdaFunctionExpr)value_stack.array[value_stack.top-1].yyval.Node;
			lambda.IsStatic = true;
			lambda.Span = yypos;
			yyval.Node = lambda;
		}
        return;
      case 388: // inline_function -> function returns_ref backup_doc_comment '(' parameter_list ')' lexical_vars return_type backup_fn_flags enter_scope '{' inner_statement_list '}' exit_scope backup_fn_flags 
{ 
				yyval.Node = _astFactory.Lambda(yypos, CombineSpans(value_stack.array[value_stack.top-15].yypos, value_stack.array[value_stack.top-10].yypos, value_stack.array[value_stack.top-9].yypos, value_stack.array[value_stack.top-8].yypos), value_stack.array[value_stack.top-14].yyval.Long == (long)FormalParam.Flags.IsByRef, value_stack.array[value_stack.top-8].yyval.TypeReference, 
					value_stack.array[value_stack.top-11].yyval.FormalParamList, CombineSpans(value_stack.array[value_stack.top-12].yypos, value_stack.array[value_stack.top-10].yypos), value_stack.array[value_stack.top-9].yyval.FormalParamList, CreateBlock(CombineSpans(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-3].yypos), value_stack.array[value_stack.top-4].yyval.NodeList)); 
				SetDoc(yyval.Node);
			}
        return;
      case 389: // inline_function -> fn returns_ref '(' parameter_list ')' return_type backup_doc_comment T_DOUBLE_ARROW backup_fn_flags backup_lex_pos expr backup_fn_flags 
{
				yyval.Node = _astFactory.ArrowFunc(yypos, CombineSpans(value_stack.array[value_stack.top-12].yypos, value_stack.array[value_stack.top-8].yypos, value_stack.array[value_stack.top-7].yypos), value_stack.array[value_stack.top-11].yyval.Long == (long)FormalParam.Flags.IsByRef, value_stack.array[value_stack.top-7].yyval.TypeReference, 
					value_stack.array[value_stack.top-9].yyval.FormalParamList, CombineSpans(value_stack.array[value_stack.top-10].yypos, value_stack.array[value_stack.top-8].yypos), value_stack.array[value_stack.top-2].yyval.Node); 
				SetDoc(yyval.Node);
			}
        return;
      case 392: // backup_doc_comment -> 
{ }
        return;
      case 393: // enter_scope -> 
{ _currentScope.Increment(); }
        return;
      case 394: // exit_scope -> 
{ _currentScope.Decrement(); }
        return;
      case 395: // backup_fn_flags -> 
{  }
        return;
      case 396: // backup_lex_pos -> 
{  }
        return;
      case 397: // returns_ref -> 
{ yyval.Long = 0; }
        return;
      case 398: // returns_ref -> '&' 
{ yyval.Long = (long)FormalParam.Flags.IsByRef; }
        return;
      case 399: // lexical_vars -> 
{ yyval.FormalParamList = new List<FormalParam>(); }
        return;
      case 400: // lexical_vars -> T_USE '(' lexical_var_list ')' 
{ yyval.FormalParamList = value_stack.array[value_stack.top-2].yyval.FormalParamList; }
        return;
      case 401: // lexical_var_list -> lexical_var_list ',' lexical_var 
{ yyval.FormalParamList = AddToList<FormalParam>(value_stack.array[value_stack.top-3].yyval.FormalParamList, value_stack.array[value_stack.top-1].yyval.FormalParam); }
        return;
      case 402: // lexical_var_list -> lexical_var 
{ yyval.FormalParamList = new List<FormalParam>() { (FormalParam)value_stack.array[value_stack.top-1].yyval.FormalParam }; }
        return;
      case 403: // lexical_var -> T_VARIABLE 
{ yyval.FormalParam = _astFactory.Parameter(yypos, value_stack.array[value_stack.top-1].yyval.String, value_stack.array[value_stack.top-1].yypos, null, FormalParam.Flags.Default); }
        return;
      case 404: // lexical_var -> '&' T_VARIABLE 
{ yyval.FormalParam = _astFactory.Parameter(yypos, value_stack.array[value_stack.top-1].yyval.String, value_stack.array[value_stack.top-1].yypos, null, FormalParam.Flags.IsByRef); }
        return;
      case 405: // function_call -> name argument_list 
{ yyval.Node = _astFactory.Call(yypos, TranslateQNRFunction(value_stack.array[value_stack.top-2].yyval.QualifiedNameReference), new CallSignature(value_stack.array[value_stack.top-1].yyval.ParamList, value_stack.array[value_stack.top-1].yypos) { Position = value_stack.array[value_stack.top-1].yypos }, null); }
        return;
      case 406: // function_call -> class_name T_DOUBLE_COLON member_name argument_list 
{
				if(value_stack.array[value_stack.top-2].yyval.Object is Name)
					yyval.Node = _astFactory.Call(yypos, (Name)value_stack.array[value_stack.top-2].yyval.Object, value_stack.array[value_stack.top-2].yypos, new CallSignature(value_stack.array[value_stack.top-1].yyval.ParamList, value_stack.array[value_stack.top-1].yypos) { Position = value_stack.array[value_stack.top-1].yypos }, value_stack.array[value_stack.top-4].yyval.TypeReference); 
				else
					yyval.Node = _astFactory.Call(yypos, (LangElement)value_stack.array[value_stack.top-2].yyval.Object, new CallSignature(value_stack.array[value_stack.top-1].yyval.ParamList, value_stack.array[value_stack.top-1].yypos) { Position = value_stack.array[value_stack.top-1].yypos }, value_stack.array[value_stack.top-4].yyval.TypeReference); 
			}
        return;
      case 407: // function_call -> variable_class_name T_DOUBLE_COLON member_name argument_list 
{
				if(value_stack.array[value_stack.top-2].yyval.Object is Name)
					yyval.Node = _astFactory.Call(yypos, (Name)value_stack.array[value_stack.top-2].yyval.Object, value_stack.array[value_stack.top-2].yypos, new CallSignature(value_stack.array[value_stack.top-1].yyval.ParamList, value_stack.array[value_stack.top-1].yypos) { Position = value_stack.array[value_stack.top-1].yypos }, _astFactory.TypeReference(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-4].yyval.Node)); 
				else
					yyval.Node = _astFactory.Call(yypos, (LangElement)value_stack.array[value_stack.top-2].yyval.Object, new CallSignature(value_stack.array[value_stack.top-1].yyval.ParamList, value_stack.array[value_stack.top-1].yypos) { Position = value_stack.array[value_stack.top-1].yypos }, _astFactory.TypeReference(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-4].yyval.Node)); 
			}
        return;
      case 408: // function_call -> callable_expr argument_list 
{ yyval.Node = _astFactory.Call(yypos, value_stack.array[value_stack.top-2].yyval.Node, new CallSignature(value_stack.array[value_stack.top-1].yyval.ParamList, value_stack.array[value_stack.top-1].yypos) { Position = value_stack.array[value_stack.top-1].yypos }, NullLangElement);}
        return;
      case 409: // class_name -> T_STATIC 
{ yyval.TypeReference = _astFactory.ReservedTypeReference(yypos, _reservedTypeStatic); }
        return;
      case 410: // class_name -> name 
{ yyval.TypeReference = CreateTypeRef(value_stack.array[value_stack.top-1].yyval.QualifiedNameReference); }
        return;
      case 411: // class_name_reference -> class_name 
{ yyval.TypeReference = value_stack.array[value_stack.top-1].yyval.TypeReference; }
        return;
      case 412: // class_name_reference -> new_variable 
{ yyval.TypeReference = _astFactory.TypeReference(yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 413: // exit_expr -> 
{ yyval.Node = null; }
        return;
      case 414: // exit_expr -> '(' optional_expr ')' 
{ yyval.Node = value_stack.array[value_stack.top-2].yyval.Node == null? null: _astFactory.EncapsedExpression(yypos, value_stack.array[value_stack.top-2].yyval.Node, Tokens.T_LPAREN); }
        return;
      case 415: // backticks_expr -> '`' '`' 
{ yyval.Node = _astFactory.Literal(yypos, string.Empty, "``"); }
        return;
      case 416: // backticks_expr -> '`' T_ENCAPSED_AND_WHITESPACE '`' 
{ yyval.Node = _astFactory.Literal(yypos, value_stack.array[value_stack.top-2].yyval.Strings.Key, string.Format("`{0}`", value_stack.array[value_stack.top-2].yyval.Strings.Value)); }
        return;
      case 417: // backticks_expr -> '`' encaps_list '`' 
{ yyval.Node = _astFactory.StringEncapsedExpression(yypos, _astFactory.Concat(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.NodeList), Tokens.T_BACKQUOTE); }
        return;
      case 418: // ctor_arguments -> 
{ yyval.ParamList = new List<ActualParam>(); }
        return;
      case 419: // ctor_arguments -> argument_list 
{ yyval.ParamList = value_stack.array[value_stack.top-1].yyval.ParamList; }
        return;
      case 420: // dereferencable_scalar -> T_ARRAY '(' array_pair_list ')' 
{ yyval.Node = _astFactory.NewArray(yypos, value_stack.array[value_stack.top-2].yyval.ItemList, true); }
        return;
      case 421: // dereferencable_scalar -> '[' array_pair_list ']' 
{ yyval.Node = _astFactory.NewArray(yypos, value_stack.array[value_stack.top-2].yyval.ItemList, false); }
        return;
      case 422: // dereferencable_scalar -> T_CONSTANT_ENCAPSED_STRING 
{ yyval.Node = _astFactory.Literal(yypos, value_stack.array[value_stack.top-1].yyval.String, _lexer.TokenText); }
        return;
      case 423: // scalar -> T_LNUMBER 
{ yyval.Node = _astFactory.Literal(yypos, value_stack.array[value_stack.top-1].yyval.Long, _lexer.TokenText); }
        return;
      case 424: // scalar -> T_DNUMBER 
{ yyval.Node = _astFactory.Literal(yypos, value_stack.array[value_stack.top-1].yyval.Double, _lexer.TokenText); }
        return;
      case 425: // scalar -> T_LINE 
{ yyval.Node = _astFactory.PseudoConstUse(yypos, PseudoConstUse.Types.Line); }
        return;
      case 426: // scalar -> T_FILE 
{ yyval.Node = _astFactory.PseudoConstUse(yypos, PseudoConstUse.Types.File); }
        return;
      case 427: // scalar -> T_DIR 
{ yyval.Node = _astFactory.PseudoConstUse(yypos, PseudoConstUse.Types.Dir); }
        return;
      case 428: // scalar -> T_TRAIT_C 
{ yyval.Node = _astFactory.PseudoConstUse(yypos, PseudoConstUse.Types.Trait); }
        return;
      case 429: // scalar -> T_METHOD_C 
{ yyval.Node = _astFactory.PseudoConstUse(yypos, PseudoConstUse.Types.Method); }
        return;
      case 430: // scalar -> T_FUNC_C 
{ yyval.Node = _astFactory.PseudoConstUse(yypos, PseudoConstUse.Types.Function); }
        return;
      case 431: // scalar -> T_NS_C 
{ yyval.Node = _astFactory.PseudoConstUse(yypos, PseudoConstUse.Types.Namespace); }
        return;
      case 432: // scalar -> T_CLASS_C 
{ yyval.Node = _astFactory.PseudoConstUse(yypos, PseudoConstUse.Types.Class); }
        return;
      case 433: // scalar -> '"' encaps_list '"' 
{ yyval.Node = _astFactory.StringEncapsedExpression(yypos, _astFactory.Concat(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.NodeList), Tokens.T_DOUBLE_QUOTES); }
        return;
      case 434: // scalar -> T_START_HEREDOC T_END_HEREDOC 
{ yyval.Node = _astFactory.HeredocExpression(yypos, _astFactory.Literal(new Span(value_stack.array[value_stack.top-2].yypos.End, 0), "", ""), value_stack.array[value_stack.top-2].yyval.QuoteToken, value_stack.array[value_stack.top-2].yyval.String); }
        return;
      case 435: // scalar -> T_START_HEREDOC T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC 
{ yyval.Node = _astFactory.HeredocExpression(yypos, _astFactory.Literal(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.Strings.Key, value_stack.array[value_stack.top-2].yyval.Strings.Value), value_stack.array[value_stack.top-3].yyval.QuoteToken, value_stack.array[value_stack.top-3].yyval.String); }
        return;
      case 436: // scalar -> T_START_HEREDOC encaps_list T_END_HEREDOC 
{ yyval.Node = _astFactory.HeredocExpression(yypos, _astFactory.Concat(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.NodeList), value_stack.array[value_stack.top-3].yyval.QuoteToken, value_stack.array[value_stack.top-3].yyval.String); }
        return;
      case 437: // scalar -> dereferencable_scalar 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 438: // scalar -> constant 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 439: // constant -> name 
{ yyval.Node = _astFactory.ConstUse(yypos, TranslateQNRConstant(value_stack.array[value_stack.top-1].yyval.QualifiedNameReference)); }
        return;
      case 440: // constant -> class_name T_DOUBLE_COLON identifier 
{ yyval.Node = _astFactory.ClassConstUse(yypos, value_stack.array[value_stack.top-3].yyval.TypeReference, new Name(value_stack.array[value_stack.top-1].yyval.String), value_stack.array[value_stack.top-1].yypos); }
        return;
      case 441: // constant -> variable_class_name T_DOUBLE_COLON identifier 
{ yyval.Node = _astFactory.ClassConstUse(yypos, _astFactory.TypeReference(value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-3].yyval.Node), new Name(value_stack.array[value_stack.top-1].yyval.String), value_stack.array[value_stack.top-1].yypos); }
        return;
      case 442: // expr -> variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 443: // expr -> expr_without_variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 444: // optional_expr -> 
{ yyval.Node = null; }
        return;
      case 445: // optional_expr -> expr 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 446: // variable_class_name -> dereferencable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; /* TODO if (!($1 is VarLikeConstructUse)) _errors.Error(@$, FatalErrors.CheckVarUseFault); */ }
        return;
      case 447: // dereferencable -> variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 448: // dereferencable -> '(' expr ')' 
{ yyval.Node = _astFactory.EncapsedExpression(yypos, value_stack.array[value_stack.top-2].yyval.Node, Tokens.T_LPAREN); }
        return;
      case 449: // dereferencable -> dereferencable_scalar 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 450: // callable_expr -> callable_variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 451: // callable_expr -> '(' expr ')' 
{ yyval.Node = _astFactory.EncapsedExpression(yypos, value_stack.array[value_stack.top-2].yyval.Node, Tokens.T_LPAREN); }
        return;
      case 452: // callable_expr -> dereferencable_scalar 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 453: // callable_variable -> simple_variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 454: // callable_variable -> dereferencable '[' optional_expr ']' 
{ yyval.Node = _astFactory.ArrayItem(yypos, false, value_stack.array[value_stack.top-4].yyval.Node, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 455: // callable_variable -> constant '[' optional_expr ']' 
{ yyval.Node = _astFactory.ArrayItem(yypos, false, value_stack.array[value_stack.top-4].yyval.Node, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 456: // callable_variable -> dereferencable '{' expr '}' 
{ yyval.Node = _astFactory.ArrayItem(yypos, true, value_stack.array[value_stack.top-4].yyval.Node, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 457: // callable_variable -> dereferencable T_OBJECT_OPERATOR property_name argument_list 
{
			if(value_stack.array[value_stack.top-2].yyval.Object is Name)
			{
				var name = new QualifiedName((Name)value_stack.array[value_stack.top-2].yyval.Object);
				yyval.Node = _astFactory.Call(yypos, new TranslatedQualifiedName(name, value_stack.array[value_stack.top-2].yypos, name, null), new CallSignature(value_stack.array[value_stack.top-1].yyval.ParamList, value_stack.array[value_stack.top-1].yypos) { Position = value_stack.array[value_stack.top-1].yypos }, VerifyMemberOf(value_stack.array[value_stack.top-4].yyval.Node));
			}
			else
				yyval.Node = _astFactory.Call(yypos, (LangElement)value_stack.array[value_stack.top-2].yyval.Object, new CallSignature(value_stack.array[value_stack.top-1].yyval.ParamList, value_stack.array[value_stack.top-1].yypos) { Position = value_stack.array[value_stack.top-1].yypos }, VerifyMemberOf(value_stack.array[value_stack.top-4].yyval.Node));
		}
        return;
      case 458: // callable_variable -> function_call 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 459: // variable -> callable_variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 460: // variable -> static_member 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 461: // variable -> dereferencable T_OBJECT_OPERATOR property_name 
{ yyval.Node = CreateProperty(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Object); }
        return;
      case 462: // simple_variable -> T_VARIABLE 
{ yyval.Node = _astFactory.Variable(yypos, value_stack.array[value_stack.top-1].yyval.String,	NullLangElement, true); }
        return;
      case 463: // simple_variable -> '$' '{' expr '}' 
{ yyval.Node = _astFactory.Variable(yypos, _astFactory.EncapsedExpression(Span.Combine(value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-2].yyval.Node, Tokens.T_LBRACE), NullLangElement); }
        return;
      case 464: // simple_variable -> '$' simple_variable 
{ yyval.Node = _astFactory.Variable(yypos, value_stack.array[value_stack.top-1].yyval.Node, NullLangElement); }
        return;
      case 465: // static_member -> class_name T_DOUBLE_COLON simple_variable 
{ yyval.Node = CreateStaticProperty(yypos, value_stack.array[value_stack.top-3].yyval.TypeReference, value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 466: // static_member -> variable_class_name T_DOUBLE_COLON simple_variable 
{ yyval.Node = CreateStaticProperty(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 467: // new_variable -> simple_variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 468: // new_variable -> new_variable '[' optional_expr ']' 
{ yyval.Node = _astFactory.ArrayItem(yypos, false, value_stack.array[value_stack.top-4].yyval.Node, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 469: // new_variable -> new_variable '{' expr '}' 
{ yyval.Node = _astFactory.ArrayItem(yypos, true, value_stack.array[value_stack.top-4].yyval.Node, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 470: // new_variable -> new_variable T_OBJECT_OPERATOR property_name 
{ yyval.Node = CreateProperty(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Object); }
        return;
      case 471: // new_variable -> class_name T_DOUBLE_COLON simple_variable 
{ yyval.Node = CreateStaticProperty(yypos, value_stack.array[value_stack.top-3].yyval.TypeReference, value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 472: // new_variable -> new_variable T_DOUBLE_COLON simple_variable 
{ yyval.Node = CreateStaticProperty(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 473: // member_name -> identifier 
{ yyval.Object = new Name(value_stack.array[value_stack.top-1].yyval.String); }
        return;
      case 474: // member_name -> '{' expr '}' 
{ yyval.Object = _astFactory.EncapsedExpression(yypos, value_stack.array[value_stack.top-2].yyval.Node, Tokens.T_LBRACE); }
        return;
      case 475: // member_name -> simple_variable 
{ yyval.Object = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 476: // property_name -> T_STRING 
{ yyval.Object = new Name(value_stack.array[value_stack.top-1].yyval.String); }
        return;
      case 477: // property_name -> '{' expr '}' 
{ yyval.Object = _astFactory.EncapsedExpression(yypos, value_stack.array[value_stack.top-2].yyval.Node, Tokens.T_LBRACE); }
        return;
      case 478: // property_name -> simple_variable 
{ yyval.Object = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 479: // array_pair_list -> non_empty_array_pair_list 
{ yyval.ItemList = value_stack.array[value_stack.top-1].yyval.ItemList;  }
        return;
      case 480: // possible_array_pair -> 
{ yyval.Item = null; }
        return;
      case 481: // possible_array_pair -> array_pair 
{ yyval.Item = value_stack.array[value_stack.top-1].yyval.Item; }
        return;
      case 482: // non_empty_array_pair_list -> non_empty_array_pair_list ',' possible_array_pair 
{ yyval.ItemList = AddToList<Item>(value_stack.array[value_stack.top-3].yyval.ItemList, value_stack.array[value_stack.top-1].yyval.Item); }
        return;
      case 483: // non_empty_array_pair_list -> possible_array_pair 
{ yyval.ItemList = new List<Item>() { value_stack.array[value_stack.top-1].yyval.Item }; }
        return;
      case 484: // array_pair -> expr T_DOUBLE_ARROW expr 
{ yyval.Item = _astFactory.ArrayItemValue(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 485: // array_pair -> expr 
{ yyval.Item = _astFactory.ArrayItemValue(yypos, null, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 486: // array_pair -> expr T_DOUBLE_ARROW '&' variable 
{ yyval.Item = _astFactory.ArrayItemRef(yypos, value_stack.array[value_stack.top-4].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 487: // array_pair -> '&' variable 
{ yyval.Item = _astFactory.ArrayItemRef(yypos, null, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 488: // array_pair -> T_ELLIPSIS expr 
{ yyval.Item = _astFactory.ArrayItemSpread(yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 489: // array_pair -> expr T_DOUBLE_ARROW T_LIST '(' array_pair_list ')' 
{ yyval.Item = _astFactory.ArrayItemValue(yypos, value_stack.array[value_stack.top-6].yyval.Node, _astFactory.List(Span.Combine(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-2].yyval.ItemList, true)); }
        return;
      case 490: // array_pair -> T_LIST '(' array_pair_list ')' 
{ yyval.Item = _astFactory.ArrayItemValue(yypos, null, _astFactory.List(Span.Combine(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-2].yyval.ItemList, true)); }
        return;
      case 491: // encaps_list -> encaps_list encaps_var 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-2].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 492: // encaps_list -> encaps_list T_ENCAPSED_AND_WHITESPACE 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-2].yyval.NodeList, _astFactory.Literal(value_stack.array[value_stack.top-1].yypos, value_stack.array[value_stack.top-1].yyval.Strings.Key, _lexer.TokenText)); }
        return;
      case 493: // encaps_list -> encaps_var 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 494: // encaps_list -> T_ENCAPSED_AND_WHITESPACE encaps_var 
{ yyval.NodeList = new List<LangElement>() { _astFactory.Literal(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.Strings.Key, value_stack.array[value_stack.top-2].yyval.Strings.Value), value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 495: // encaps_var -> T_VARIABLE 
{ yyval.Node = _astFactory.Variable(yypos, value_stack.array[value_stack.top-1].yyval.String, NullLangElement, true); }
        return;
      case 496: // encaps_var -> T_VARIABLE '[' encaps_var_offset ']' 
{ yyval.Node = _astFactory.ArrayItem(yypos, false,
					_astFactory.Variable(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-4].yyval.String, NullLangElement, true), value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 497: // encaps_var -> T_VARIABLE T_OBJECT_OPERATOR T_STRING 
{ yyval.Node = CreateProperty(yypos, _astFactory.Variable(value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-3].yyval.String, NullLangElement, true), new Name(value_stack.array[value_stack.top-1].yyval.String)); }
        return;
      case 498: // encaps_var -> T_DOLLAR_OPEN_CURLY_BRACES expr '}' 
{ yyval.Node = _astFactory.EncapsedExpression(yypos, _astFactory.Variable(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.Node, NullLangElement), Tokens.T_DOLLAR_OPEN_CURLY_BRACES); }
        return;
      case 499: // encaps_var -> T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '}' 
{ yyval.Node = _astFactory.EncapsedExpression(yypos, _astFactory.Variable(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.String, NullLangElement, false), Tokens.T_DOLLAR_OPEN_CURLY_BRACES); }
        return;
      case 500: // encaps_var -> T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' expr ']' '}' 
{ yyval.Node = _astFactory.EncapsedExpression(yypos, _astFactory.ArrayItem(Span.Combine(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-2].yypos), false,
					_astFactory.Variable(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-5].yyval.String, NullLangElement, false), value_stack.array[value_stack.top-3].yyval.Node), Tokens.T_DOLLAR_OPEN_CURLY_BRACES); }
        return;
      case 501: // encaps_var -> T_CURLY_OPEN variable '}' 
{ yyval.Node = _astFactory.EncapsedExpression(yypos, value_stack.array[value_stack.top-2].yyval.Node, Tokens.T_LBRACE); }
        return;
      case 502: // encaps_var_offset -> T_STRING 
{ yyval.Node = _astFactory.Literal(yypos, value_stack.array[value_stack.top-1].yyval.String, _lexer.TokenText); }
        return;
      case 503: // encaps_var_offset -> T_NUM_STRING 
{ yyval.Node = _astFactory.Literal(yypos, value_stack.array[value_stack.top-1].yyval.Long, _lexer.TokenText); }
        return;
      case 504: // encaps_var_offset -> T_VARIABLE 
{ yyval.Node = _astFactory.Variable(yypos, value_stack.array[value_stack.top-1].yyval.String, NullLangElement, true); }
        return;
      case 505: // internal_functions_in_yacc -> T_ISSET '(' isset_variables possible_comma ')' 
{ yyval.Node = _astFactory.Isset(yypos, AddTrailingComma(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-2].yyval.Bool)); }
        return;
      case 506: // internal_functions_in_yacc -> T_EMPTY '(' expr ')' 
{ yyval.Node = _astFactory.Empty(yypos, value_stack.array[value_stack.top-2].yyval.Node);}
        return;
      case 507: // internal_functions_in_yacc -> T_INCLUDE expr 
{ yyval.Node = _astFactory.Inclusion(yypos, isConditional, InclusionTypes.Include, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 508: // internal_functions_in_yacc -> T_INCLUDE_ONCE expr 
{ yyval.Node = _astFactory.Inclusion(yypos, isConditional, InclusionTypes.IncludeOnce, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 509: // internal_functions_in_yacc -> T_EVAL '(' expr ')' 
{ yyval.Node = _astFactory.Eval(yypos, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 510: // internal_functions_in_yacc -> T_REQUIRE expr 
{ yyval.Node = _astFactory.Inclusion(yypos, isConditional, InclusionTypes.Require, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 511: // internal_functions_in_yacc -> T_REQUIRE_ONCE expr 
{ yyval.Node = _astFactory.Inclusion(yypos, isConditional, InclusionTypes.RequireOnce, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 512: // isset_variables -> isset_variable 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 513: // isset_variables -> isset_variables ',' isset_variable 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 514: // isset_variable -> expr 
{ yyval.Node = CreateIssetVar(value_stack.array[value_stack.top-1].yyval.Node); }
        return;
    }
  }

  protected override string TerminalToString(int terminal)
  {
    if (((Tokens)terminal).ToString() != terminal.ToString())
      return ((Tokens)terminal).ToString();
    else
      return CharToString((char)terminal);
  }


}
}
