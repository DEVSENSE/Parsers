using System;
using System.Text;
using System.Collections.Generic;

// Copyright(c) DEVSENSE s.r.o.
// All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the License); you may not use
// this file except in compliance with the License. You may obtain a copy of the
// License at http://www.apache.org/licenses/LICENSE-2.0
//
// THIS CODE IS PROVIDED ON AN  *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS
// OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY
// IMPLIED WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
// MERCHANTABILITY OR NON-INFRINGEMENT.
//
// See the Apache Version 2.0 License for specific language governing
// permissions and limitations under the License.

using System.Linq;
using System.Runtime.InteropServices;
using Devsense.PHP.Syntax.Ast;
using Devsense.PHP.Text;
using Devsense.PHP.Errors;

using CompleteAlias = System.Tuple<Devsense.PHP.Syntax.QualifiedNameRef, Devsense.PHP.Syntax.NameRef>;
using ContextAlias = System.Tuple<Devsense.PHP.Text.Span, Devsense.PHP.Syntax.QualifiedNameRef, Devsense.PHP.Syntax.NameRef, Devsense.PHP.Syntax.AliasKind>;
using AnonymousClass = System.Tuple<Devsense.PHP.Syntax.Ast.TypeRef, System.Collections.Generic.List<Devsense.PHP.Syntax.Ast.ActualParam>, Devsense.PHP.Text.Span>;
using StringPair = System.Collections.Generic.KeyValuePair<string, string>;


namespace Devsense.PHP.Syntax
{
public enum Tokens {
/// <summary>&quot;include (T_INCLUDE)&quot;</summary>
T_INCLUDE=262,
/// <summary>&quot;include_once (T_INCLUDE_ONCE)&quot;</summary>
T_INCLUDE_ONCE=261,
/// <summary>&quot;eval (T_EVAL)&quot;</summary>
T_EVAL=260,
/// <summary>&quot;require (T_REQUIRE)&quot;</summary>
T_REQUIRE=259,
/// <summary>&quot;require_once (T_REQUIRE_ONCE)&quot;</summary>
T_REQUIRE_ONCE=258,
/// <summary>&quot;or (T_LOGICAL_OR)&quot;</summary>
T_LOGICAL_OR=263,
/// <summary>&quot;xor (T_LOGICAL_XOR)&quot;</summary>
T_LOGICAL_XOR=264,
/// <summary>&quot;and (T_LOGICAL_AND)&quot;</summary>
T_LOGICAL_AND=265,
/// <summary>&quot;print (T_PRINT)&quot;</summary>
T_PRINT=266,
/// <summary>&quot;yield (T_YIELD)&quot;</summary>
T_YIELD=267,
/// <summary>&quot;=&gt; (T_DOUBLE_ARROW)&quot;</summary>
T_DOUBLE_ARROW=268,
/// <summary>&quot;yield from (T_YIELD_FROM)&quot;</summary>
T_YIELD_FROM=269,
/// <summary>&quot;+= (T_PLUS_EQUAL)&quot;</summary>
T_PLUS_EQUAL=281,
/// <summary>&quot;-= (T_MINUS_EQUAL)&quot;</summary>
T_MINUS_EQUAL=280,
/// <summary>&quot;*= (T_MUL_EQUAL)&quot;</summary>
T_MUL_EQUAL=279,
/// <summary>&quot;/= (T_DIV_EQUAL)&quot;</summary>
T_DIV_EQUAL=278,
/// <summary>&quot;.= (T_CONCAT_EQUAL)&quot;</summary>
T_CONCAT_EQUAL=277,
/// <summary>&quot;%= (T_MOD_EQUAL)&quot;</summary>
T_MOD_EQUAL=276,
/// <summary>&quot;&amp;= (T_AND_EQUAL)&quot;</summary>
T_AND_EQUAL=275,
/// <summary>&quot;|= (T_OR_EQUAL)&quot;</summary>
T_OR_EQUAL=274,
/// <summary>&quot;^= (T_XOR_EQUAL)&quot;</summary>
T_XOR_EQUAL=273,
/// <summary>&quot;&lt;&lt;= (T_SL_EQUAL)&quot;</summary>
T_SL_EQUAL=272,
/// <summary>&quot;&gt;&gt;= (T_SR_EQUAL)&quot;</summary>
T_SR_EQUAL=271,
/// <summary>&quot;**= (T_POW_EQUAL)&quot;</summary>
T_POW_EQUAL=270,
/// <summary>&quot;?? (T_COALESCE)&quot;</summary>
T_COALESCE=282,
/// <summary>&quot;|| (T_BOOLEAN_OR)&quot;</summary>
T_BOOLEAN_OR=283,
/// <summary>&quot;&amp;&amp; (T_BOOLEAN_AND)&quot;</summary>
T_BOOLEAN_AND=284,
/// <summary>&quot;== (T_IS_EQUAL)&quot;</summary>
T_IS_EQUAL=289,
/// <summary>&quot;!= (T_IS_NOT_EQUAL)&quot;</summary>
T_IS_NOT_EQUAL=288,
/// <summary>&quot;=== (T_IS_IDENTICAL)&quot;</summary>
T_IS_IDENTICAL=287,
/// <summary>&quot;!== (T_IS_NOT_IDENTICAL)&quot;</summary>
T_IS_NOT_IDENTICAL=286,
/// <summary>&quot;&lt;=&gt; (T_SPACESHIP)&quot;</summary>
T_SPACESHIP=285,
/// <summary>&quot;&lt;= (T_IS_SMALLER_OR_EQUAL)&quot;</summary>
T_IS_SMALLER_OR_EQUAL=291,
/// <summary>&quot;&gt;= (T_IS_GREATER_OR_EQUAL)&quot;</summary>
T_IS_GREATER_OR_EQUAL=290,
/// <summary>&quot;&lt;&lt; (T_SL)&quot;</summary>
T_SL=293,
/// <summary>&quot;&gt;&gt; (T_SR)&quot;</summary>
T_SR=292,
/// <summary>&quot;instanceof (T_INSTANCEOF)&quot;</summary>
T_INSTANCEOF=294,
/// <summary>&quot;++ (T_INC)&quot;</summary>
T_INC=303,
/// <summary>&quot;-- (T_DEC)&quot;</summary>
T_DEC=302,
/// <summary>&quot;(int) (T_INT_CAST)&quot;</summary>
T_INT_CAST=301,
/// <summary>&quot;(double) (T_DOUBLE_CAST)&quot;</summary>
T_DOUBLE_CAST=300,
/// <summary>&quot; (T_STRING_CAST)&quot;</summary>
T_STRING_CAST=299,
/// <summary>&quot;(array) (T_ARRAY_CAST)&quot;</summary>
T_ARRAY_CAST=298,
/// <summary>&quot;(object) (T_OBJECT_CAST)&quot;</summary>
T_OBJECT_CAST=297,
/// <summary>&quot;(bool) (T_BOOL_CAST)&quot;</summary>
T_BOOL_CAST=296,
/// <summary>&quot;(unset) (T_UNSET_CAST)&quot;</summary>
T_UNSET_CAST=295,
/// <summary>&quot;** (T_POW)&quot;</summary>
T_POW=304,
/// <summary>&quot;new (T_NEW)&quot;</summary>
T_NEW=306,
/// <summary>&quot;clone (T_CLONE)&quot;</summary>
T_CLONE=305,
T_NOELSE=176,
/// <summary>&quot;elseif (T_ELSEIF)&quot;</summary>
T_ELSEIF=308,
/// <summary>&quot;else (T_ELSE)&quot;</summary>
T_ELSE=309,
/// <summary>&quot;endif (T_ENDIF)&quot;</summary>
T_ENDIF=310,
/// <summary>&quot;static (T_STATIC)&quot;</summary>
T_STATIC=316,
/// <summary>&quot;abstract (T_ABSTRACT)&quot;</summary>
T_ABSTRACT=315,
/// <summary>&quot;final (T_FINAL)&quot;</summary>
T_FINAL=314,
/// <summary>&quot;private (T_PRIVATE)&quot;</summary>
T_PRIVATE=313,
/// <summary>&quot;protected (T_PROTECTED)&quot;</summary>
T_PROTECTED=312,
/// <summary>&quot;public (T_PUBLIC)&quot;</summary>
T_PUBLIC=311,
/// <summary>&quot;integer number (T_LNUMBER)&quot;</summary>
T_LNUMBER=317,
/// <summary>&quot;floating-point number (T_DNUMBER)&quot;</summary>
T_DNUMBER=318,
/// <summary>&quot;identifier (T_STRING)&quot;</summary>
T_STRING=319,
/// <summary>&quot;variable (T_VARIABLE)&quot;</summary>
T_VARIABLE=320,
T_INLINE_HTML=321,
/// <summary>&quot;quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)&quot;</summary>
T_ENCAPSED_AND_WHITESPACE=322,
/// <summary>&quot;quoted-string (T_CONSTANT_ENCAPSED_STRING)&quot;</summary>
T_CONSTANT_ENCAPSED_STRING=323,
/// <summary>&quot;variable name (T_STRING_VARNAME)&quot;</summary>
T_STRING_VARNAME=324,
/// <summary>&quot;number (T_NUM_STRING)&quot;</summary>
T_NUM_STRING=325,
/// <summary>&#39;!&#39;</summary>
T_EXCLAM=33,
/// <summary>&#39;&quot;&#39;</summary>
T_DOUBLE_QUOTES=34,
/// <summary>&#39;$&#39;</summary>
T_DOLLAR=36,
/// <summary>&#39;%&#39;</summary>
T_PERCENT=37,
/// <summary>&#39;&amp;&#39;</summary>
T_AMP=38,
/// <summary>&#39;\&#39;&#39;</summary>
T_SINGLE_QUOTES=39,
/// <summary>&#39;(&#39;</summary>
T_LPAREN=40,
/// <summary>&#39;)&#39;</summary>
T_RPAREN=41,
/// <summary>&#39;*&#39;</summary>
T_MUL=42,
/// <summary>&#39;+&#39;</summary>
T_PLUS=43,
/// <summary>&#39;,&#39;</summary>
T_COMMA=44,
/// <summary>&#39;-&#39;</summary>
T_MINUS=45,
/// <summary>&#39;.&#39;</summary>
T_DOT=46,
/// <summary>&#39;/&#39;</summary>
T_SLASH=47,
/// <summary>&#39;:&#39;</summary>
T_COLON=58,
/// <summary>&#39;;&#39;</summary>
T_SEMI=59,
/// <summary>&#39;&lt;&#39;</summary>
T_LT=60,
/// <summary>&#39;=&#39;</summary>
T_EQ=61,
/// <summary>&#39;&gt;&#39;</summary>
T_GT=62,
/// <summary>&#39;?&#39;</summary>
T_QUESTION=63,
/// <summary>&#39;@&#39;</summary>
T_AT=64,
/// <summary>&#39;[&#39;</summary>
T_LBRACKET=91,
/// <summary>&#39;]&#39;</summary>
T_RBRACKET=93,
/// <summary>&#39;^&#39;</summary>
T_CARET=94,
/// <summary>&#39;`&#39;</summary>
T_BACKQUOTE=96,
/// <summary>&#39;{&#39;</summary>
T_LBRACE=123,
/// <summary>&#39;|&#39;</summary>
T_PIPE=124,
/// <summary>&#39;}&#39;</summary>
T_RBRACE=125,
/// <summary>&#39;~&#39;</summary>
T_TILDE=126,
/// <summary>&quot;end of file&quot;</summary>
END=0,
/// <summary>&quot;exit (T_EXIT)&quot;</summary>
T_EXIT=326,
/// <summary>&quot;if (T_IF)&quot;</summary>
T_IF=327,
/// <summary>&quot;echo (T_ECHO)&quot;</summary>
T_ECHO=328,
/// <summary>&quot;do (T_DO)&quot;</summary>
T_DO=329,
/// <summary>&quot;while (T_WHILE)&quot;</summary>
T_WHILE=330,
/// <summary>&quot;endwhile (T_ENDWHILE)&quot;</summary>
T_ENDWHILE=331,
/// <summary>&quot;for (T_FOR)&quot;</summary>
T_FOR=332,
/// <summary>&quot;endfor (T_ENDFOR)&quot;</summary>
T_ENDFOR=333,
/// <summary>&quot;foreach (T_FOREACH)&quot;</summary>
T_FOREACH=334,
/// <summary>&quot;endforeach (T_ENDFOREACH)&quot;</summary>
T_ENDFOREACH=335,
/// <summary>&quot;declare (T_DECLARE)&quot;</summary>
T_DECLARE=336,
/// <summary>&quot;enddeclare (T_ENDDECLARE)&quot;</summary>
T_ENDDECLARE=337,
/// <summary>&quot;as (T_AS)&quot;</summary>
T_AS=338,
/// <summary>&quot;switch (T_SWITCH)&quot;</summary>
T_SWITCH=339,
/// <summary>&quot;endswitch (T_ENDSWITCH)&quot;</summary>
T_ENDSWITCH=340,
/// <summary>&quot;case (T_CASE)&quot;</summary>
T_CASE=341,
/// <summary>&quot;default (T_DEFAULT)&quot;</summary>
T_DEFAULT=342,
/// <summary>&quot;break (T_BREAK)&quot;</summary>
T_BREAK=343,
/// <summary>&quot;continue (T_CONTINUE)&quot;</summary>
T_CONTINUE=344,
/// <summary>&quot;goto (T_GOTO)&quot;</summary>
T_GOTO=345,
/// <summary>&quot;function (T_FUNCTION)&quot;</summary>
T_FUNCTION=346,
/// <summary>&quot;const (T_CONST)&quot;</summary>
T_CONST=347,
/// <summary>&quot;return (T_RETURN)&quot;</summary>
T_RETURN=348,
/// <summary>&quot;try (T_TRY)&quot;</summary>
T_TRY=349,
/// <summary>&quot;catch (T_CATCH)&quot;</summary>
T_CATCH=350,
/// <summary>&quot;finally (T_FINALLY)&quot;</summary>
T_FINALLY=351,
/// <summary>&quot;throw (T_THROW)&quot;</summary>
T_THROW=352,
/// <summary>&quot;use (T_USE)&quot;</summary>
T_USE=353,
/// <summary>&quot;insteadof (T_INSTEADOF)&quot;</summary>
T_INSTEADOF=354,
/// <summary>&quot;exit_scope (T_GLOBAL)&quot;</summary>
T_GLOBAL=355,
/// <summary>&quot;var (T_VAR)&quot;</summary>
T_VAR=356,
/// <summary>&quot;unset (T_UNSET)&quot;</summary>
T_UNSET=357,
/// <summary>&quot;isset (T_ISSET)&quot;</summary>
T_ISSET=358,
/// <summary>&quot;empty (T_EMPTY)&quot;</summary>
T_EMPTY=359,
/// <summary>&quot;__halt_compiler (T_HALT_COMPILER)&quot;</summary>
T_HALT_COMPILER=360,
/// <summary>&quot;class (T_CLASS)&quot;</summary>
T_CLASS=361,
/// <summary>&quot;trait (T_TRAIT)&quot;</summary>
T_TRAIT=362,
/// <summary>&quot;interface (T_INTERFACE)&quot;</summary>
T_INTERFACE=363,
/// <summary>&quot;extends (T_EXTENDS)&quot;</summary>
T_EXTENDS=364,
/// <summary>&quot;implements (T_IMPLEMENTS)&quot;</summary>
T_IMPLEMENTS=365,
/// <summary>&quot;-&gt; (T_OBJECT_OPERATOR)&quot;</summary>
T_OBJECT_OPERATOR=366,
/// <summary>&quot;list (T_LIST)&quot;</summary>
T_LIST=367,
/// <summary>&quot;array (T_ARRAY)&quot;</summary>
T_ARRAY=368,
/// <summary>&quot;callable (T_CALLABLE)&quot;</summary>
T_CALLABLE=369,
/// <summary>&quot;__LINE__ (T_LINE)&quot;</summary>
T_LINE=370,
/// <summary>&quot;__FILE__ (T_FILE)&quot;</summary>
T_FILE=371,
/// <summary>&quot;__DIR__ (T_DIR)&quot;</summary>
T_DIR=372,
/// <summary>&quot;__CLASS__ (T_CLASS_C)&quot;</summary>
T_CLASS_C=373,
/// <summary>&quot;__TRAIT__ (T_TRAIT_C)&quot;</summary>
T_TRAIT_C=374,
/// <summary>&quot;__METHOD__ (T_METHOD_C)&quot;</summary>
T_METHOD_C=375,
/// <summary>&quot;__FUNCTION__ (T_FUNC_C)&quot;</summary>
T_FUNC_C=376,
/// <summary>&quot;comment (T_COMMENT)&quot;</summary>
T_COMMENT=377,
/// <summary>&quot;doc comment (T_DOC_COMMENT)&quot;</summary>
T_DOC_COMMENT=378,
/// <summary>&quot;open tag (T_OPEN_TAG)&quot;</summary>
T_OPEN_TAG=379,
/// <summary>&quot;open tag with echo (T_OPEN_TAG_WITH_ECHO)&quot;</summary>
T_OPEN_TAG_WITH_ECHO=380,
/// <summary>&quot;close tag (T_CLOSE_TAG)&quot;</summary>
T_CLOSE_TAG=381,
/// <summary>&quot;whitespace (T_WHITESPACE)&quot;</summary>
T_WHITESPACE=382,
/// <summary>&quot;heredoc start (T_START_HEREDOC)&quot;</summary>
T_START_HEREDOC=383,
/// <summary>&quot;heredoc end (T_END_HEREDOC)&quot;</summary>
T_END_HEREDOC=384,
/// <summary>&quot;${ (T_DOLLAR_OPEN_CURLY_BRACES)&quot;</summary>
T_DOLLAR_OPEN_CURLY_BRACES=385,
/// <summary>&quot;{$ (T_CURLY_OPEN)&quot;</summary>
T_CURLY_OPEN=386,
/// <summary>&quot;:: (T_DOUBLE_COLON)&quot;</summary>
T_DOUBLE_COLON=387,
/// <summary>&quot;namespace (T_NAMESPACE)&quot;</summary>
T_NAMESPACE=388,
/// <summary>&quot;__NAMESPACE__ (T_NS_C)&quot;</summary>
T_NS_C=389,
/// <summary>&quot;\\ (T_NS_SEPARATOR)&quot;</summary>
T_NS_SEPARATOR=390,
/// <summary>&quot;... (T_ELLIPSIS)&quot;</summary>
T_ELLIPSIS=391,
/// <summary> type safe declaration</summary>
T_ERROR=257,
EOF=0
};

[StructLayout(LayoutKind.Explicit)]
public partial struct SemanticValueType
{
	// Integer and Offset are both used when generating code for string 
	// with 'inline' variables. Other fields are not combined.
	
	[FieldOffset(0)]		
	public bool Bool;
	[FieldOffset(0)]		
	public int Integer;
	[FieldOffset(0)]
	public double Double;
	[FieldOffset(0)]
	public long Long;
	[FieldOffset(0)]
	public QualifiedNameRef QualifiedNameReference;
	[FieldOffset(0)]
	public AliasKind Kind;
	/// <summary>Token that encapsulates the string literal.</summary>
	[FieldOffset(0)]
	public Tokens QuoteToken;

	[FieldOffset(8)]
	public object Object;

	public TypeRef TypeReference						{ get { return (TypeRef)Object; }					set { Object = value; } }
	public IList<TypeRef> TypeRefList					{ get { return (IList<TypeRef>)Object; }			set { Object = value; } }
	public LangElement Node								{ get { return (LangElement)Object; }				set { Object = value; } }
	public List<LangElement> NodeList					{ get { return (List<LangElement>)Object; }			set { Object = value; } }
	public string String								{ get { return (string)Object; }					set { Object = value; } }
	public StringPair Strings							{ get { return (StringPair)Object; }				set { Object = value; } }
	public List<string> StringList						{ get { return (List<string>)Object; }				set { Object = value; } }
	public CompleteAlias Alias							{ get { return (CompleteAlias)Object; }				set { Object = value; } }
	public List<CompleteAlias> AliasList				{ get { return (List<CompleteAlias>)Object; }		set { Object = value; } }
	public ContextAlias ContextAlias					{ get { return (ContextAlias)Object; }				set { Object = value; } }
	public List<ContextAlias> ContextAliasList			{ get { return (List<ContextAlias>)Object; }		set { Object = value; } }
	public ActualParam Param							{ get { return (ActualParam)Object; }				set { Object = value; } }
	public List<ActualParam> ParamList					{ get { return (List<ActualParam>)Object; }			set { Object = value; } }
	public FormalParam FormalParam						{ get { return (FormalParam)Object; }				set { Object = value; } }
	public List<FormalParam> FormalParamList			{ get { return (List<FormalParam>)Object; }			set { Object = value; } }
	public Item Item									{ get { return (Item)Object; }						set { Object = value; } }
	public List<Item> ItemList							{ get { return (List<Item>)Object; }				set { Object = value; } }
	internal List<IfStatement> IfItemList				{ get { return (List<IfStatement>)Object; }			set { Object = value; } }
	public ForeachVar ForeachVar						{ get { return (ForeachVar)Object; }				set { Object = value; } }
	public AnonymousClass AnonymousClass				{ get { return (AnonymousClass)Object; }			set { Object = value; } }
	public UseBase Use									{ get { return (UseBase)Object; }					set { Object = value; } }
	public List<UseBase> UseList						{ get { return (List<UseBase>)Object; }				set { Object = value; } }
}

public partial class Parser: ShiftReduceParser<SemanticValueType,Span>
{

  protected override string[] NonTerminals { get { return nonTerminals; } }
  private static string[] nonTerminals;

  protected override State[] States { get { return states; } }
  private static readonly State[] states;

  protected override Rule[] Rules { get { return rules; } }
  private static readonly Rule[] rules;


  #region Construction

  static Parser()
  {

    #region states
    states = new State[]
    {
      new State(0, -2, new int[] {-131,1,-133,3}),
      new State(1, new int[] {0,2}),
      new State(2, -1),
      new State(3, -81, new int[] {-81,4}),
      new State(4, new int[] {123,7,330,23,329,31,332,152,339,164,343,178,344,474,348,478,355,481,316,488,328,497,321,504,320,97,36,98,319,507,388,895,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477,357,524,334,534,336,544,59,550,349,551,352,567,345,570,315,637,314,638,362,640,363,685,360,907,353,911,347,967,0,-3,327,-378,361,-173}, new int[] {-30,5,-31,6,-16,12,-39,505,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,509,-32,903,-33,904,-12,575,-11,635,-34,905,-36,906}),
      new State(5, -80),
      new State(6, -87),
      new State(7, -126, new int[] {-84,8}),
      new State(8, new int[] {125,9,123,7,330,23,329,31,332,152,339,164,343,178,344,474,348,478,355,481,316,488,328,497,321,504,320,97,36,98,319,507,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477,357,524,334,534,336,544,59,550,349,551,352,567,345,570,315,637,314,638,362,640,363,685,360,696,327,-378,361,-173}, new int[] {-79,10,-31,11,-16,12,-39,505,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,509,-32,573,-33,574,-12,575,-11,635,-34,639,-36,684}),
      new State(9, -133),
      new State(10, -125),
      new State(11, -127),
      new State(12, new int[] {327,874}, new int[] {-51,13,-52,15,-124,17,-125,881}),
      new State(13, -379, new int[] {-17,14}),
      new State(14, -134),
      new State(15, -379, new int[] {-17,16}),
      new State(16, -135),
      new State(17, new int[] {308,18,309,872,123,-209,330,-209,329,-209,332,-209,339,-209,343,-209,344,-209,348,-209,355,-209,316,-209,328,-209,321,-209,320,-209,36,-209,319,-209,388,-209,390,-209,40,-209,368,-209,91,-209,323,-209,367,-209,305,-209,303,-209,302,-209,43,-209,45,-209,33,-209,126,-209,306,-209,358,-209,359,-209,262,-209,261,-209,260,-209,259,-209,258,-209,301,-209,300,-209,299,-209,298,-209,297,-209,296,-209,295,-209,326,-209,64,-209,317,-209,318,-209,370,-209,371,-209,372,-209,374,-209,375,-209,376,-209,389,-209,373,-209,34,-209,383,-209,96,-209,266,-209,267,-209,269,-209,346,-209,357,-209,334,-209,336,-209,59,-209,349,-209,352,-209,345,-209,315,-209,314,-209,362,-209,363,-209,360,-209,353,-209,347,-209,327,-209,361,-209,0,-209,125,-209,341,-209,342,-209,340,-209,337,-209,335,-209,333,-209,331,-209,310,-209}),
      new State(18, new int[] {40,19}),
      new State(19, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,20,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(20, new int[] {41,21,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(21, new int[] {123,7,330,23,329,31,332,152,339,164,343,178,344,474,348,478,355,481,316,488,328,497,321,504,320,97,36,98,319,507,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477,357,524,334,534,336,544,59,550,349,551,352,567,345,570,327,-378}, new int[] {-31,22,-16,12,-39,505,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(22, -208),
      new State(23, new int[] {40,24}),
      new State(24, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,25,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(25, new int[] {41,26,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(26, -378, new int[] {-16,27}),
      new State(27, new int[] {123,7,330,23,329,31,332,152,339,164,343,178,344,474,348,478,355,481,316,488,328,497,321,504,320,97,36,98,319,507,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477,357,524,334,534,336,544,59,550,349,551,352,567,345,570,58,868,327,-378}, new int[] {-70,28,-31,30,-16,12,-39,505,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(28, -379, new int[] {-17,29}),
      new State(29, -136),
      new State(30, -205),
      new State(31, -378, new int[] {-16,32}),
      new State(32, new int[] {123,7,330,23,329,31,332,152,339,164,343,178,344,474,348,478,355,481,316,488,328,497,321,504,320,97,36,98,319,507,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477,357,524,334,534,336,544,59,550,349,551,352,567,345,570,327,-378}, new int[] {-31,33,-16,12,-39,505,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(33, new int[] {330,34}),
      new State(34, new int[] {40,35}),
      new State(35, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,36,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(36, new int[] {41,37,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(37, new int[] {59,38}),
      new State(38, -379, new int[] {-17,39}),
      new State(39, -137),
      new State(40, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,41,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(41, new int[] {283,-321,284,42,263,-321,265,-321,264,-321,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,-321,282,-321,59,-321,41,-321,125,-321,58,-321,93,-321,44,-321,268,-321,338,-321}),
      new State(42, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,43,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(43, new int[] {283,-322,284,-322,263,-322,265,-322,264,-322,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,-322,282,-322,59,-322,41,-322,125,-322,58,-322,93,-322,44,-322,268,-322,338,-322}),
      new State(44, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,45,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(45, new int[] {283,40,284,42,263,-323,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-323,41,-323,125,-323,58,-323,93,-323,44,-323,268,-323,338,-323}),
      new State(46, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,47,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(47, new int[] {283,40,284,42,263,-324,265,-324,264,-324,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-324,41,-324,125,-324,58,-324,93,-324,44,-324,268,-324,338,-324}),
      new State(48, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,49,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(49, new int[] {283,40,284,42,263,-325,265,46,264,-325,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-325,41,-325,125,-325,58,-325,93,-325,44,-325,268,-325,338,-325}),
      new State(50, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,51,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(51, new int[] {283,-326,284,-326,263,-326,265,-326,264,-326,124,-326,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,-326,282,-326,59,-326,41,-326,125,-326,58,-326,93,-326,44,-326,268,-326,338,-326}),
      new State(52, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,53,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(53, new int[] {283,-327,284,-327,263,-327,265,-327,264,-327,124,-327,38,-327,94,-327,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,-327,282,-327,59,-327,41,-327,125,-327,58,-327,93,-327,44,-327,268,-327,338,-327}),
      new State(54, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,55,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(55, new int[] {283,-328,284,-328,263,-328,265,-328,264,-328,124,-328,38,52,94,-328,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,-328,282,-328,59,-328,41,-328,125,-328,58,-328,93,-328,44,-328,268,-328,338,-328}),
      new State(56, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,57,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(57, new int[] {283,-329,284,-329,263,-329,265,-329,264,-329,124,-329,38,-329,94,-329,46,-329,43,-329,45,-329,42,62,304,64,47,66,37,68,293,-329,292,-329,287,-329,286,-329,289,-329,288,-329,60,-329,291,-329,62,-329,290,-329,285,-329,294,92,63,-329,282,-329,59,-329,41,-329,125,-329,58,-329,93,-329,44,-329,268,-329,338,-329}),
      new State(58, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,59,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(59, new int[] {283,-330,284,-330,263,-330,265,-330,264,-330,124,-330,38,-330,94,-330,46,-330,43,-330,45,-330,42,62,304,64,47,66,37,68,293,-330,292,-330,287,-330,286,-330,289,-330,288,-330,60,-330,291,-330,62,-330,290,-330,285,-330,294,92,63,-330,282,-330,59,-330,41,-330,125,-330,58,-330,93,-330,44,-330,268,-330,338,-330}),
      new State(60, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,61,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(61, new int[] {283,-331,284,-331,263,-331,265,-331,264,-331,124,-331,38,-331,94,-331,46,-331,43,-331,45,-331,42,62,304,64,47,66,37,68,293,-331,292,-331,287,-331,286,-331,289,-331,288,-331,60,-331,291,-331,62,-331,290,-331,285,-331,294,92,63,-331,282,-331,59,-331,41,-331,125,-331,58,-331,93,-331,44,-331,268,-331,338,-331}),
      new State(62, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,63,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(63, new int[] {283,-332,284,-332,263,-332,265,-332,264,-332,124,-332,38,-332,94,-332,46,-332,43,-332,45,-332,42,-332,304,64,47,-332,37,-332,293,-332,292,-332,287,-332,286,-332,289,-332,288,-332,60,-332,291,-332,62,-332,290,-332,285,-332,294,92,63,-332,282,-332,59,-332,41,-332,125,-332,58,-332,93,-332,44,-332,268,-332,338,-332}),
      new State(64, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,65,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(65, new int[] {283,-333,284,-333,263,-333,265,-333,264,-333,124,-333,38,-333,94,-333,46,-333,43,-333,45,-333,42,-333,304,64,47,-333,37,-333,293,-333,292,-333,287,-333,286,-333,289,-333,288,-333,60,-333,291,-333,62,-333,290,-333,285,-333,294,-333,63,-333,282,-333,59,-333,41,-333,125,-333,58,-333,93,-333,44,-333,268,-333,338,-333}),
      new State(66, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,67,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(67, new int[] {283,-334,284,-334,263,-334,265,-334,264,-334,124,-334,38,-334,94,-334,46,-334,43,-334,45,-334,42,-334,304,64,47,-334,37,-334,293,-334,292,-334,287,-334,286,-334,289,-334,288,-334,60,-334,291,-334,62,-334,290,-334,285,-334,294,92,63,-334,282,-334,59,-334,41,-334,125,-334,58,-334,93,-334,44,-334,268,-334,338,-334}),
      new State(68, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,69,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(69, new int[] {283,-335,284,-335,263,-335,265,-335,264,-335,124,-335,38,-335,94,-335,46,-335,43,-335,45,-335,42,-335,304,64,47,-335,37,-335,293,-335,292,-335,287,-335,286,-335,289,-335,288,-335,60,-335,291,-335,62,-335,290,-335,285,-335,294,92,63,-335,282,-335,59,-335,41,-335,125,-335,58,-335,93,-335,44,-335,268,-335,338,-335}),
      new State(70, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,71,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(71, new int[] {283,-336,284,-336,263,-336,265,-336,264,-336,124,-336,38,-336,94,-336,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,-336,292,-336,287,-336,286,-336,289,-336,288,-336,60,-336,291,-336,62,-336,290,-336,285,-336,294,92,63,-336,282,-336,59,-336,41,-336,125,-336,58,-336,93,-336,44,-336,268,-336,338,-336}),
      new State(72, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,73,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(73, new int[] {283,-337,284,-337,263,-337,265,-337,264,-337,124,-337,38,-337,94,-337,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,-337,292,-337,287,-337,286,-337,289,-337,288,-337,60,-337,291,-337,62,-337,290,-337,285,-337,294,92,63,-337,282,-337,59,-337,41,-337,125,-337,58,-337,93,-337,44,-337,268,-337,338,-337}),
      new State(74, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,75,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(75, new int[] {283,-342,284,-342,263,-342,265,-342,264,-342,124,-342,38,-342,94,-342,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,-342,282,-342,59,-342,41,-342,125,-342,58,-342,93,-342,44,-342,268,-342,338,-342}),
      new State(76, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,77,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(77, new int[] {283,-343,284,-343,263,-343,265,-343,264,-343,124,-343,38,-343,94,-343,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,-343,282,-343,59,-343,41,-343,125,-343,58,-343,93,-343,44,-343,268,-343,338,-343}),
      new State(78, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,79,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(79, new int[] {283,-344,284,-344,263,-344,265,-344,264,-344,124,-344,38,-344,94,-344,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,-344,282,-344,59,-344,41,-344,125,-344,58,-344,93,-344,44,-344,268,-344,338,-344}),
      new State(80, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,81,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(81, new int[] {283,-345,284,-345,263,-345,265,-345,264,-345,124,-345,38,-345,94,-345,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,-345,282,-345,59,-345,41,-345,125,-345,58,-345,93,-345,44,-345,268,-345,338,-345}),
      new State(82, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,83,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(83, new int[] {283,-346,284,-346,263,-346,265,-346,264,-346,124,-346,38,-346,94,-346,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,-346,286,-346,289,-346,288,-346,60,82,291,84,62,86,290,88,285,-346,294,92,63,-346,282,-346,59,-346,41,-346,125,-346,58,-346,93,-346,44,-346,268,-346,338,-346}),
      new State(84, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,85,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(85, new int[] {283,-347,284,-347,263,-347,265,-347,264,-347,124,-347,38,-347,94,-347,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,-347,286,-347,289,-347,288,-347,60,82,291,84,62,86,290,88,285,-347,294,92,63,-347,282,-347,59,-347,41,-347,125,-347,58,-347,93,-347,44,-347,268,-347,338,-347}),
      new State(86, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,87,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(87, new int[] {283,-348,284,-348,263,-348,265,-348,264,-348,124,-348,38,-348,94,-348,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,-348,286,-348,289,-348,288,-348,60,82,291,84,62,86,290,88,285,-348,294,92,63,-348,282,-348,59,-348,41,-348,125,-348,58,-348,93,-348,44,-348,268,-348,338,-348}),
      new State(88, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,89,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(89, new int[] {283,-349,284,-349,263,-349,265,-349,264,-349,124,-349,38,-349,94,-349,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,-349,286,-349,289,-349,288,-349,60,82,291,84,62,86,290,88,285,-349,294,92,63,-349,282,-349,59,-349,41,-349,125,-349,58,-349,93,-349,44,-349,268,-349,338,-349}),
      new State(90, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,91,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(91, new int[] {283,-350,284,-350,263,-350,265,-350,264,-350,124,-350,38,-350,94,-350,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,-350,282,-350,59,-350,41,-350,125,-350,58,-350,93,-350,44,-350,268,-350,338,-350}),
      new State(92, new int[] {316,294,319,186,388,187,390,190,320,97,36,98}, new int[] {-24,93,-25,94,-18,348,-102,183,-75,349,-45,790}),
      new State(93, -351),
      new State(94, new int[] {387,95,59,-395,283,-395,284,-395,263,-395,265,-395,264,-395,124,-395,38,-395,94,-395,46,-395,43,-395,45,-395,42,-395,304,-395,47,-395,37,-395,293,-395,292,-395,287,-395,286,-395,289,-395,288,-395,60,-395,291,-395,62,-395,290,-395,285,-395,294,-395,63,-395,282,-395,41,-395,125,-395,58,-395,93,-395,44,-395,268,-395,338,-395,40,-395}),
      new State(95, new int[] {320,97,36,98}, new int[] {-45,96}),
      new State(96, -455),
      new State(97, -446),
      new State(98, new int[] {123,99,320,97,36,98}, new int[] {-45,867}),
      new State(99, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,100,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(100, new int[] {125,101,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(101, -447),
      new State(102, new int[] {58,865,320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,103,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(103, new int[] {58,104,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(104, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,105,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(105, new int[] {283,40,284,42,263,-354,265,-354,264,-354,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,-354,282,106,59,-354,41,-354,125,-354,58,-354,93,-354,44,-354,268,-354,338,-354}),
      new State(106, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,107,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(107, new int[] {283,40,284,42,263,-356,265,-356,264,-356,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,-356,282,106,59,-356,41,-356,125,-356,58,-356,93,-356,44,-356,268,-356,338,-356}),
      new State(108, new int[] {61,109,281,839,280,841,279,843,270,845,278,847,277,849,276,851,275,853,274,855,273,857,272,859,271,861,303,863,302,864,59,-426,283,-426,284,-426,263,-426,265,-426,264,-426,124,-426,38,-426,94,-426,46,-426,43,-426,45,-426,42,-426,304,-426,47,-426,37,-426,293,-426,292,-426,287,-426,286,-426,289,-426,288,-426,60,-426,291,-426,62,-426,290,-426,285,-426,294,-426,63,-426,282,-426,41,-426,125,-426,58,-426,93,-426,44,-426,268,-426,338,-426,91,-431,366,-431,123,-431,387,-431}),
      new State(109, new int[] {38,111,320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,110,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(110, new int[] {283,40,284,42,263,-301,265,-301,264,-301,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-301,41,-301,125,-301,58,-301,93,-301,44,-301,268,-301,338,-301}),
      new State(111, new int[] {320,97,36,98,316,294,319,186,388,187,390,190,40,295,368,281,91,323,323,303,306,343}, new int[] {-40,112,-42,113,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,322,-47,333,-49,308,-76,309}),
      new State(112, new int[] {59,-302,283,-302,284,-302,263,-302,265,-302,264,-302,124,-302,38,-302,94,-302,46,-302,43,-302,45,-302,42,-302,304,-302,47,-302,37,-302,293,-302,292,-302,287,-302,286,-302,289,-302,288,-302,60,-302,291,-302,62,-302,290,-302,285,-302,294,-302,63,-302,282,-302,41,-302,125,-302,58,-302,93,-302,44,-302,268,-302,338,-302,91,-431,366,-431,123,-431,387,-431}),
      new State(113, -303),
      new State(114, new int[] {61,-443,281,-443,280,-443,279,-443,270,-443,278,-443,277,-443,276,-443,275,-443,274,-443,273,-443,272,-443,271,-443,303,-443,302,-443,59,-443,283,-443,284,-443,263,-443,265,-443,264,-443,124,-443,38,-443,94,-443,46,-443,43,-443,45,-443,42,-443,304,-443,47,-443,37,-443,293,-443,292,-443,287,-443,286,-443,289,-443,288,-443,60,-443,291,-443,62,-443,290,-443,285,-443,294,-443,63,-443,282,-443,91,-443,366,-443,123,-443,387,-443,41,-443,125,-443,58,-443,93,-443,44,-443,268,-443,338,-443,40,-434}),
      new State(115, -437),
      new State(116, new int[] {91,117,366,833,123,836,387,-430}),
      new State(117, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477,93,-428}, new int[] {-58,118,-39,120,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(118, new int[] {93,119}),
      new State(119, -438),
      new State(120, new int[] {283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,93,-429,59,-429,41,-429}),
      new State(121, -444),
      new State(122, new int[] {387,123}),
      new State(123, new int[] {320,97,36,98,319,198,262,201,261,202,260,203,259,204,258,205,263,206,264,207,265,208,294,209,306,210,305,211,326,212,327,213,308,214,309,215,310,216,328,217,329,218,330,219,331,220,332,221,333,222,334,223,335,224,336,225,337,226,338,227,349,228,350,229,351,230,352,231,353,232,354,233,355,234,356,235,357,236,358,237,359,238,344,239,345,240,346,241,347,242,348,243,266,244,267,245,367,246,339,247,340,248,341,249,342,250,343,251,368,252,369,253,364,254,365,255,388,256,362,257,363,258,361,259,373,260,374,261,376,262,375,263,370,264,371,265,372,266,389,267,316,268,315,269,314,270,313,271,312,272,311,273,123,274}, new int[] {-45,124,-99,125,-2,126,-100,199,-101,200}),
      new State(124, new int[] {61,-449,281,-449,280,-449,279,-449,270,-449,278,-449,277,-449,276,-449,275,-449,274,-449,273,-449,272,-449,271,-449,303,-449,302,-449,59,-449,283,-449,284,-449,263,-449,265,-449,264,-449,124,-449,38,-449,94,-449,46,-449,43,-449,45,-449,42,-449,304,-449,47,-449,37,-449,293,-449,292,-449,287,-449,286,-449,289,-449,288,-449,60,-449,291,-449,62,-449,290,-449,285,-449,294,-449,63,-449,282,-449,91,-449,366,-449,123,-449,387,-449,41,-449,125,-449,58,-449,93,-449,44,-449,268,-449,338,-449,40,-459}),
      new State(125, new int[] {91,-424,59,-424,283,-424,284,-424,263,-424,265,-424,264,-424,124,-424,38,-424,94,-424,46,-424,43,-424,45,-424,42,-424,304,-424,47,-424,37,-424,293,-424,292,-424,287,-424,286,-424,289,-424,288,-424,60,-424,291,-424,62,-424,290,-424,285,-424,294,-424,63,-424,282,-424,41,-424,125,-424,58,-424,93,-424,44,-424,268,-424,338,-424,40,-457}),
      new State(126, new int[] {40,128}, new int[] {-112,127}),
      new State(127, -390),
      new State(128, new int[] {41,129,320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477,391,830}, new int[] {-113,130,-110,832,-39,135,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(129, -230),
      new State(130, new int[] {44,133,41,-109}, new int[] {-3,131}),
      new State(131, new int[] {41,132}),
      new State(132, -231),
      new State(133, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477,391,830,41,-110}, new int[] {-110,134,-39,135,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(134, -233),
      new State(135, new int[] {283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,44,-234,41,-234}),
      new State(136, new int[] {346,477,387,-393}, new int[] {-13,137}),
      new State(137, new int[] {38,721,40,-381}, new int[] {-4,138}),
      new State(138, -377, new int[] {-15,139}),
      new State(139, new int[] {40,140}),
      new State(140, new int[] {368,703,369,704,319,186,388,187,390,190,63,706,38,-221,391,-221,320,-221,41,-216}, new int[] {-116,141,-117,708,-114,720,-22,711,-21,719,-19,702,-18,705,-102,183}),
      new State(141, new int[] {41,142}),
      new State(142, new int[] {353,766,58,-383,123,-383}, new int[] {-118,143}),
      new State(143, new int[] {58,700,123,-228}, new int[] {-20,144}),
      new State(144, -380, new int[] {-136,145}),
      new State(145, -378, new int[] {-16,146}),
      new State(146, new int[] {123,147}),
      new State(147, -126, new int[] {-84,148}),
      new State(148, new int[] {125,149,123,7,330,23,329,31,332,152,339,164,343,178,344,474,348,478,355,481,316,488,328,497,321,504,320,97,36,98,319,507,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477,357,524,334,534,336,544,59,550,349,551,352,567,345,570,315,637,314,638,362,640,363,685,360,696,327,-378,361,-173}, new int[] {-79,10,-31,11,-16,12,-39,505,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,509,-32,573,-33,574,-12,575,-11,635,-34,639,-36,684}),
      new State(149, -379, new int[] {-17,150}),
      new State(150, -380, new int[] {-136,151}),
      new State(151, -375),
      new State(152, new int[] {40,153}),
      new State(153, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477,59,-291}, new int[] {-86,154,-97,826,-39,829,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(154, new int[] {59,155}),
      new State(155, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477,59,-291}, new int[] {-86,156,-97,826,-39,829,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(156, new int[] {59,157}),
      new State(157, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477,41,-291}, new int[] {-86,158,-97,826,-39,829,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(158, new int[] {41,159}),
      new State(159, -378, new int[] {-16,160}),
      new State(160, new int[] {123,7,330,23,329,31,332,152,339,164,343,178,344,474,348,478,355,481,316,488,328,497,321,504,320,97,36,98,319,507,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477,357,524,334,534,336,544,59,550,349,551,352,567,345,570,58,822,327,-378}, new int[] {-68,161,-31,163,-16,12,-39,505,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(161, -379, new int[] {-17,162}),
      new State(162, -138),
      new State(163, -190),
      new State(164, new int[] {40,165}),
      new State(165, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,166,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(166, new int[] {41,167,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(167, -378, new int[] {-16,168}),
      new State(168, new int[] {123,171,58,814}, new int[] {-96,169}),
      new State(169, -379, new int[] {-17,170}),
      new State(170, -139),
      new State(171, new int[] {59,811,125,-200,341,-200,342,-200}, new int[] {-95,172}),
      new State(172, new int[] {125,173,341,174,342,808}),
      new State(173, -196),
      new State(174, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,175,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(175, new int[] {283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,58,806,59,807}, new int[] {-139,176}),
      new State(176, -126, new int[] {-84,177}),
      new State(177, new int[] {123,7,330,23,329,31,332,152,339,164,343,178,344,474,348,478,355,481,316,488,328,497,321,504,320,97,36,98,319,507,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477,357,524,334,534,336,544,59,550,349,551,352,567,345,570,315,637,314,638,362,640,363,685,360,696,125,-201,341,-201,342,-201,340,-201,327,-378,361,-173}, new int[] {-79,10,-31,11,-16,12,-39,505,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,509,-32,573,-33,574,-12,575,-11,635,-34,639,-36,684}),
      new State(178, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477,59,-428}, new int[] {-58,179,-39,120,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(179, new int[] {59,180}),
      new State(180, -140),
      new State(181, new int[] {40,128,387,-394,91,-423,59,-423,283,-423,284,-423,263,-423,265,-423,264,-423,124,-423,38,-423,94,-423,46,-423,43,-423,45,-423,42,-423,304,-423,47,-423,37,-423,293,-423,292,-423,287,-423,286,-423,289,-423,288,-423,60,-423,291,-423,62,-423,290,-423,285,-423,294,-423,63,-423,282,-423,41,-423,125,-423,58,-423,93,-423,44,-423,268,-423,338,-423}, new int[] {-112,182}),
      new State(182, -389),
      new State(183, new int[] {390,184,40,-84,387,-84,91,-84,59,-84,283,-84,284,-84,263,-84,265,-84,264,-84,124,-84,38,-84,94,-84,46,-84,43,-84,45,-84,42,-84,304,-84,47,-84,37,-84,293,-84,292,-84,287,-84,286,-84,289,-84,288,-84,60,-84,291,-84,62,-84,290,-84,285,-84,294,-84,63,-84,282,-84,41,-84,125,-84,58,-84,93,-84,44,-84,268,-84,338,-84,391,-84,320,-84,123,-84,365,-84}),
      new State(184, new int[] {319,185}),
      new State(185, -83),
      new State(186, -82),
      new State(187, new int[] {390,188}),
      new State(188, new int[] {319,186}, new int[] {-102,189}),
      new State(189, new int[] {390,184,40,-85,387,-85,91,-85,59,-85,283,-85,284,-85,263,-85,265,-85,264,-85,124,-85,38,-85,94,-85,46,-85,43,-85,45,-85,42,-85,304,-85,47,-85,37,-85,293,-85,292,-85,287,-85,286,-85,289,-85,288,-85,60,-85,291,-85,62,-85,290,-85,285,-85,294,-85,63,-85,282,-85,41,-85,125,-85,58,-85,93,-85,44,-85,268,-85,338,-85,391,-85,320,-85,123,-85,365,-85}),
      new State(190, new int[] {319,186}, new int[] {-102,191}),
      new State(191, new int[] {390,184,40,-86,387,-86,91,-86,59,-86,283,-86,284,-86,263,-86,265,-86,264,-86,124,-86,38,-86,94,-86,46,-86,43,-86,45,-86,42,-86,304,-86,47,-86,37,-86,293,-86,292,-86,287,-86,286,-86,289,-86,288,-86,60,-86,291,-86,62,-86,290,-86,285,-86,294,-86,63,-86,282,-86,41,-86,125,-86,58,-86,93,-86,44,-86,268,-86,338,-86,391,-86,320,-86,123,-86,365,-86}),
      new State(192, new int[] {387,193}),
      new State(193, new int[] {320,97,36,98,319,198,262,201,261,202,260,203,259,204,258,205,263,206,264,207,265,208,294,209,306,210,305,211,326,212,327,213,308,214,309,215,310,216,328,217,329,218,330,219,331,220,332,221,333,222,334,223,335,224,336,225,337,226,338,227,349,228,350,229,351,230,352,231,353,232,354,233,355,234,356,235,357,236,358,237,359,238,344,239,345,240,346,241,347,242,348,243,266,244,267,245,367,246,339,247,340,248,341,249,342,250,343,251,368,252,369,253,364,254,365,255,388,256,362,257,363,258,361,259,373,260,374,261,376,262,375,263,370,264,371,265,372,266,389,267,316,268,315,269,314,270,313,271,312,272,311,273,123,274}, new int[] {-45,194,-99,195,-2,196,-100,199,-101,200}),
      new State(194, new int[] {61,-450,281,-450,280,-450,279,-450,270,-450,278,-450,277,-450,276,-450,275,-450,274,-450,273,-450,272,-450,271,-450,303,-450,302,-450,59,-450,283,-450,284,-450,263,-450,265,-450,264,-450,124,-450,38,-450,94,-450,46,-450,43,-450,45,-450,42,-450,304,-450,47,-450,37,-450,293,-450,292,-450,287,-450,286,-450,289,-450,288,-450,60,-450,291,-450,62,-450,290,-450,285,-450,294,-450,63,-450,282,-450,91,-450,366,-450,123,-450,387,-450,41,-450,125,-450,58,-450,93,-450,44,-450,268,-450,338,-450,40,-459}),
      new State(195, new int[] {91,-425,59,-425,283,-425,284,-425,263,-425,265,-425,264,-425,124,-425,38,-425,94,-425,46,-425,43,-425,45,-425,42,-425,304,-425,47,-425,37,-425,293,-425,292,-425,287,-425,286,-425,289,-425,288,-425,60,-425,291,-425,62,-425,290,-425,285,-425,294,-425,63,-425,282,-425,41,-425,125,-425,58,-425,93,-425,44,-425,268,-425,338,-425,40,-457}),
      new State(196, new int[] {40,128}, new int[] {-112,197}),
      new State(197, -391),
      new State(198, -78),
      new State(199, -79),
      new State(200, -71),
      new State(201, -4),
      new State(202, -5),
      new State(203, -6),
      new State(204, -7),
      new State(205, -8),
      new State(206, -9),
      new State(207, -10),
      new State(208, -11),
      new State(209, -12),
      new State(210, -13),
      new State(211, -14),
      new State(212, -15),
      new State(213, -16),
      new State(214, -17),
      new State(215, -18),
      new State(216, -19),
      new State(217, -20),
      new State(218, -21),
      new State(219, -22),
      new State(220, -23),
      new State(221, -24),
      new State(222, -25),
      new State(223, -26),
      new State(224, -27),
      new State(225, -28),
      new State(226, -29),
      new State(227, -30),
      new State(228, -31),
      new State(229, -32),
      new State(230, -33),
      new State(231, -34),
      new State(232, -35),
      new State(233, -36),
      new State(234, -37),
      new State(235, -38),
      new State(236, -39),
      new State(237, -40),
      new State(238, -41),
      new State(239, -42),
      new State(240, -43),
      new State(241, -44),
      new State(242, -45),
      new State(243, -46),
      new State(244, -47),
      new State(245, -48),
      new State(246, -49),
      new State(247, -50),
      new State(248, -51),
      new State(249, -52),
      new State(250, -53),
      new State(251, -54),
      new State(252, -55),
      new State(253, -56),
      new State(254, -57),
      new State(255, -58),
      new State(256, -59),
      new State(257, -60),
      new State(258, -61),
      new State(259, -62),
      new State(260, -63),
      new State(261, -64),
      new State(262, -65),
      new State(263, -66),
      new State(264, -67),
      new State(265, -68),
      new State(266, -69),
      new State(267, -70),
      new State(268, -72),
      new State(269, -73),
      new State(270, -74),
      new State(271, -75),
      new State(272, -76),
      new State(273, -77),
      new State(274, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,275,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(275, new int[] {125,276,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(276, -458),
      new State(277, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,278,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(278, new int[] {41,279,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(279, new int[] {91,-432,366,-432,123,-432,387,-432,40,-435,59,-352,283,-352,284,-352,263,-352,265,-352,264,-352,124,-352,38,-352,94,-352,46,-352,43,-352,45,-352,42,-352,304,-352,47,-352,37,-352,293,-352,292,-352,287,-352,286,-352,289,-352,288,-352,60,-352,291,-352,62,-352,290,-352,285,-352,294,-352,63,-352,282,-352,41,-352,125,-352,58,-352,93,-352,44,-352,268,-352,338,-352}),
      new State(280, new int[] {91,-433,366,-433,123,-433,387,-433,40,-436,59,-421,283,-421,284,-421,263,-421,265,-421,264,-421,124,-421,38,-421,94,-421,46,-421,43,-421,45,-421,42,-421,304,-421,47,-421,37,-421,293,-421,292,-421,287,-421,286,-421,289,-421,288,-421,60,-421,291,-421,62,-421,290,-421,285,-421,294,-421,63,-421,282,-421,41,-421,125,-421,58,-421,93,-421,44,-421,268,-421,338,-421}),
      new State(281, new int[] {40,282}),
      new State(282, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,327,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477,38,758,44,-464,41,-464}, new int[] {-123,283,-122,285,-120,326,-121,288,-39,289,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(283, new int[] {41,284}),
      new State(284, -404),
      new State(285, new int[] {44,286,41,-463,93,-463}),
      new State(286, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,327,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477,38,758,44,-464,41,-464,93,-464}, new int[] {-120,287,-121,288,-39,289,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(287, -466),
      new State(288, -465),
      new State(289, new int[] {268,290,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,44,-469,41,-469,93,-469}),
      new State(290, new int[] {38,292,367,802,320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,291,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(291, new int[] {283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,44,-468,41,-468,93,-468}),
      new State(292, new int[] {320,97,36,98,316,294,319,186,388,187,390,190,40,295,368,281,91,323,323,303}, new int[] {-40,293,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,322,-47,333,-49,308,-76,309}),
      new State(293, new int[] {44,-470,41,-470,93,-470,91,-431,366,-431,123,-431,387,-431}),
      new State(294, -393),
      new State(295, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,296,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(296, new int[] {41,297,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(297, new int[] {91,-432,366,-432,123,-432,387,-432,40,-435}),
      new State(298, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,327,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477,38,758,44,-464,93,-464}, new int[] {-123,299,-122,285,-120,326,-121,288,-39,289,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(299, new int[] {93,300}),
      new State(300, new int[] {61,301,91,-405,366,-405,123,-405,387,-405,40,-405,59,-405,283,-405,284,-405,263,-405,265,-405,264,-405,124,-405,38,-405,94,-405,46,-405,43,-405,45,-405,42,-405,304,-405,47,-405,37,-405,293,-405,292,-405,287,-405,286,-405,289,-405,288,-405,60,-405,291,-405,62,-405,290,-405,285,-405,294,-405,63,-405,282,-405,41,-405,125,-405,58,-405,93,-405,44,-405,268,-405,338,-405}),
      new State(301, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,302,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(302, new int[] {283,40,284,42,263,-300,265,-300,264,-300,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-300,41,-300,125,-300,58,-300,93,-300,44,-300,268,-300,338,-300}),
      new State(303, -406),
      new State(304, new int[] {91,305,59,-422,283,-422,284,-422,263,-422,265,-422,264,-422,124,-422,38,-422,94,-422,46,-422,43,-422,45,-422,42,-422,304,-422,47,-422,37,-422,293,-422,292,-422,287,-422,286,-422,289,-422,288,-422,60,-422,291,-422,62,-422,290,-422,285,-422,294,-422,63,-422,282,-422,41,-422,125,-422,58,-422,93,-422,44,-422,268,-422,338,-422}),
      new State(305, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477,93,-428}, new int[] {-58,306,-39,120,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(306, new int[] {93,307}),
      new State(307, -439),
      new State(308, -442),
      new State(309, new int[] {40,128}, new int[] {-112,310}),
      new State(310, -392),
      new State(311, -427),
      new State(312, new int[] {40,313}),
      new State(313, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,327,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477,38,758,44,-464,41,-464}, new int[] {-123,314,-122,285,-120,326,-121,288,-39,289,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(314, new int[] {41,315}),
      new State(315, new int[] {61,316}),
      new State(316, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,317,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(317, new int[] {283,40,284,42,263,-299,265,-299,264,-299,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-299,41,-299,125,-299,58,-299,93,-299,44,-299,268,-299,338,-299}),
      new State(318, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,319,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(319, -304),
      new State(320, new int[] {320,97,36,98,316,294,319,186,388,187,390,190,40,295,368,281,91,323,323,303}, new int[] {-40,321,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,322,-47,333,-49,308,-76,309}),
      new State(321, new int[] {59,-318,283,-318,284,-318,263,-318,265,-318,264,-318,124,-318,38,-318,94,-318,46,-318,43,-318,45,-318,42,-318,304,-318,47,-318,37,-318,293,-318,292,-318,287,-318,286,-318,289,-318,288,-318,60,-318,291,-318,62,-318,290,-318,285,-318,294,-318,63,-318,282,-318,41,-318,125,-318,58,-318,93,-318,44,-318,268,-318,338,-318,91,-431,366,-431,123,-431,387,-431}),
      new State(322, new int[] {91,-433,366,-433,123,-433,387,-433,40,-436}),
      new State(323, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,327,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477,38,758,44,-464,93,-464}, new int[] {-123,324,-122,285,-120,326,-121,288,-39,289,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(324, new int[] {93,325}),
      new State(325, -405),
      new State(326, -467),
      new State(327, new int[] {40,328}),
      new State(328, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,327,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477,38,758,44,-464,41,-464}, new int[] {-123,329,-122,285,-120,326,-121,288,-39,289,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(329, new int[] {41,330}),
      new State(330, new int[] {61,316,44,-473,41,-473,93,-473}),
      new State(331, new int[] {320,97,36,98,316,294,319,186,388,187,390,190,40,295,368,281,91,323,323,303}, new int[] {-40,332,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,322,-47,333,-49,308,-76,309}),
      new State(332, new int[] {59,-320,283,-320,284,-320,263,-320,265,-320,264,-320,124,-320,38,-320,94,-320,46,-320,43,-320,45,-320,42,-320,304,-320,47,-320,37,-320,293,-320,292,-320,287,-320,286,-320,289,-320,288,-320,60,-320,291,-320,62,-320,290,-320,285,-320,294,-320,63,-320,282,-320,41,-320,125,-320,58,-320,93,-320,44,-320,268,-320,338,-320,91,-431,366,-431,123,-431,387,-431}),
      new State(333, new int[] {91,305}),
      new State(334, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,335,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(335, new int[] {283,-338,284,-338,263,-338,265,-338,264,-338,124,-338,38,-338,94,-338,46,-338,43,-338,45,-338,42,-338,304,64,47,-338,37,-338,293,-338,292,-338,287,-338,286,-338,289,-338,288,-338,60,-338,291,-338,62,-338,290,-338,285,-338,294,-338,63,-338,282,-338,59,-338,41,-338,125,-338,58,-338,93,-338,44,-338,268,-338,338,-338}),
      new State(336, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,337,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(337, new int[] {283,-339,284,-339,263,-339,265,-339,264,-339,124,-339,38,-339,94,-339,46,-339,43,-339,45,-339,42,-339,304,64,47,-339,37,-339,293,-339,292,-339,287,-339,286,-339,289,-339,288,-339,60,-339,291,-339,62,-339,290,-339,285,-339,294,-339,63,-339,282,-339,59,-339,41,-339,125,-339,58,-339,93,-339,44,-339,268,-339,338,-339}),
      new State(338, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,339,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(339, new int[] {283,-340,284,-340,263,-340,265,-340,264,-340,124,-340,38,-340,94,-340,46,-340,43,-340,45,-340,42,-340,304,64,47,-340,37,-340,293,-340,292,-340,287,-340,286,-340,289,-340,288,-340,60,-340,291,-340,62,-340,290,-340,285,-340,294,92,63,-340,282,-340,59,-340,41,-340,125,-340,58,-340,93,-340,44,-340,268,-340,338,-340}),
      new State(340, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,341,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(341, new int[] {283,-341,284,-341,263,-341,265,-341,264,-341,124,-341,38,-341,94,-341,46,-341,43,-341,45,-341,42,-341,304,64,47,-341,37,-341,293,-341,292,-341,287,-341,286,-341,289,-341,288,-341,60,-341,291,-341,62,-341,290,-341,285,-341,294,-341,63,-341,282,-341,59,-341,41,-341,125,-341,58,-341,93,-341,44,-341,268,-341,338,-341}),
      new State(342, -353),
      new State(343, new int[] {316,294,319,186,388,187,390,190,320,97,36,98,361,791}, new int[] {-24,344,-127,347,-25,94,-18,348,-102,183,-75,349,-45,790}),
      new State(344, new int[] {40,128,59,-402,283,-402,284,-402,263,-402,265,-402,264,-402,124,-402,38,-402,94,-402,46,-402,43,-402,45,-402,42,-402,304,-402,47,-402,37,-402,293,-402,292,-402,287,-402,286,-402,289,-402,288,-402,60,-402,291,-402,62,-402,290,-402,285,-402,294,-402,63,-402,282,-402,41,-402,125,-402,58,-402,93,-402,44,-402,268,-402,338,-402}, new int[] {-111,345,-112,346}),
      new State(345, -297),
      new State(346, -403),
      new State(347, -298),
      new State(348, -394),
      new State(349, new int[] {91,350,123,778,366,781,387,788,59,-396,283,-396,284,-396,263,-396,265,-396,264,-396,124,-396,38,-396,94,-396,46,-396,43,-396,45,-396,42,-396,304,-396,47,-396,37,-396,293,-396,292,-396,287,-396,286,-396,289,-396,288,-396,60,-396,291,-396,62,-396,290,-396,285,-396,294,-396,63,-396,282,-396,41,-396,125,-396,58,-396,93,-396,44,-396,268,-396,338,-396,40,-396}),
      new State(350, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477,93,-428}, new int[] {-58,351,-39,120,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(351, new int[] {93,352}),
      new State(352, -452),
      new State(353, -357),
      new State(354, new int[] {40,355}),
      new State(355, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-93,356,-38,777,-39,361,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(356, new int[] {44,359,41,-109}, new int[] {-3,357}),
      new State(357, new int[] {41,358}),
      new State(358, -488),
      new State(359, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477,41,-110}, new int[] {-38,360,-39,361,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(360, -496),
      new State(361, new int[] {283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,44,-497,41,-497}),
      new State(362, new int[] {40,363}),
      new State(363, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,364,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(364, new int[] {41,365,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(365, -489),
      new State(366, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,367,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(367, new int[] {283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-490,41,-490,125,-490,58,-490,93,-490,44,-490,268,-490,338,-490}),
      new State(368, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,369,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(369, new int[] {283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-491,41,-491,125,-491,58,-491,93,-491,44,-491,268,-491,338,-491}),
      new State(370, new int[] {40,371}),
      new State(371, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,372,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(372, new int[] {41,373,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(373, -492),
      new State(374, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,375,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(375, new int[] {283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-493,41,-493,125,-493,58,-493,93,-493,44,-493,268,-493,338,-493}),
      new State(376, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,377,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(377, new int[] {283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-494,41,-494,125,-494,58,-494,93,-494,44,-494,268,-494,338,-494}),
      new State(378, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,379,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(379, new int[] {283,-358,284,-358,263,-358,265,-358,264,-358,124,-358,38,-358,94,-358,46,-358,43,-358,45,-358,42,-358,304,64,47,-358,37,-358,293,-358,292,-358,287,-358,286,-358,289,-358,288,-358,60,-358,291,-358,62,-358,290,-358,285,-358,294,-358,63,-358,282,-358,59,-358,41,-358,125,-358,58,-358,93,-358,44,-358,268,-358,338,-358}),
      new State(380, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,381,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(381, new int[] {283,-359,284,-359,263,-359,265,-359,264,-359,124,-359,38,-359,94,-359,46,-359,43,-359,45,-359,42,-359,304,64,47,-359,37,-359,293,-359,292,-359,287,-359,286,-359,289,-359,288,-359,60,-359,291,-359,62,-359,290,-359,285,-359,294,-359,63,-359,282,-359,59,-359,41,-359,125,-359,58,-359,93,-359,44,-359,268,-359,338,-359}),
      new State(382, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,383,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(383, new int[] {283,-360,284,-360,263,-360,265,-360,264,-360,124,-360,38,-360,94,-360,46,-360,43,-360,45,-360,42,-360,304,64,47,-360,37,-360,293,-360,292,-360,287,-360,286,-360,289,-360,288,-360,60,-360,291,-360,62,-360,290,-360,285,-360,294,-360,63,-360,282,-360,59,-360,41,-360,125,-360,58,-360,93,-360,44,-360,268,-360,338,-360}),
      new State(384, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,385,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(385, new int[] {283,-361,284,-361,263,-361,265,-361,264,-361,124,-361,38,-361,94,-361,46,-361,43,-361,45,-361,42,-361,304,64,47,-361,37,-361,293,-361,292,-361,287,-361,286,-361,289,-361,288,-361,60,-361,291,-361,62,-361,290,-361,285,-361,294,-361,63,-361,282,-361,59,-361,41,-361,125,-361,58,-361,93,-361,44,-361,268,-361,338,-361}),
      new State(386, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,387,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(387, new int[] {283,-362,284,-362,263,-362,265,-362,264,-362,124,-362,38,-362,94,-362,46,-362,43,-362,45,-362,42,-362,304,64,47,-362,37,-362,293,-362,292,-362,287,-362,286,-362,289,-362,288,-362,60,-362,291,-362,62,-362,290,-362,285,-362,294,-362,63,-362,282,-362,59,-362,41,-362,125,-362,58,-362,93,-362,44,-362,268,-362,338,-362}),
      new State(388, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,389,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(389, new int[] {283,-363,284,-363,263,-363,265,-363,264,-363,124,-363,38,-363,94,-363,46,-363,43,-363,45,-363,42,-363,304,64,47,-363,37,-363,293,-363,292,-363,287,-363,286,-363,289,-363,288,-363,60,-363,291,-363,62,-363,290,-363,285,-363,294,-363,63,-363,282,-363,59,-363,41,-363,125,-363,58,-363,93,-363,44,-363,268,-363,338,-363}),
      new State(390, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,391,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(391, new int[] {283,-364,284,-364,263,-364,265,-364,264,-364,124,-364,38,-364,94,-364,46,-364,43,-364,45,-364,42,-364,304,64,47,-364,37,-364,293,-364,292,-364,287,-364,286,-364,289,-364,288,-364,60,-364,291,-364,62,-364,290,-364,285,-364,294,-364,63,-364,282,-364,59,-364,41,-364,125,-364,58,-364,93,-364,44,-364,268,-364,338,-364}),
      new State(392, new int[] {40,394,59,-397,283,-397,284,-397,263,-397,265,-397,264,-397,124,-397,38,-397,94,-397,46,-397,43,-397,45,-397,42,-397,304,-397,47,-397,37,-397,293,-397,292,-397,287,-397,286,-397,289,-397,288,-397,60,-397,291,-397,62,-397,290,-397,285,-397,294,-397,63,-397,282,-397,41,-397,125,-397,58,-397,93,-397,44,-397,268,-397,338,-397}, new int[] {-73,393}),
      new State(393, -365),
      new State(394, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477,41,-428}, new int[] {-58,395,-39,120,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(395, new int[] {41,396}),
      new State(396, -398),
      new State(397, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,398,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(398, new int[] {283,-366,284,-366,263,-366,265,-366,264,-366,124,-366,38,-366,94,-366,46,-366,43,-366,45,-366,42,-366,304,64,47,-366,37,-366,293,-366,292,-366,287,-366,286,-366,289,-366,288,-366,60,-366,291,-366,62,-366,290,-366,285,-366,294,-366,63,-366,282,-366,59,-366,41,-366,125,-366,58,-366,93,-366,44,-366,268,-366,338,-366}),
      new State(399, -367),
      new State(400, -407),
      new State(401, -408),
      new State(402, -409),
      new State(403, -410),
      new State(404, -411),
      new State(405, -412),
      new State(406, -413),
      new State(407, -414),
      new State(408, -415),
      new State(409, -416),
      new State(410, new int[] {320,415,385,424,386,438,322,776}, new int[] {-92,411,-60,443}),
      new State(411, new int[] {34,412,322,414,320,415,385,424,386,438}, new int[] {-60,413}),
      new State(412, -417),
      new State(413, -474),
      new State(414, -475),
      new State(415, new int[] {91,416,366,422,34,-478,322,-478,320,-478,385,-478,386,-478,384,-478,96,-478}),
      new State(416, new int[] {319,419,325,420,320,421}, new int[] {-61,417}),
      new State(417, new int[] {93,418}),
      new State(418, -479),
      new State(419, -485),
      new State(420, -486),
      new State(421, -487),
      new State(422, new int[] {319,423}),
      new State(423, -480),
      new State(424, new int[] {324,427,320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,425,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(425, new int[] {125,426,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(426, -481),
      new State(427, new int[] {125,428,91,429}),
      new State(428, -482),
      new State(429, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,430,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(430, new int[] {93,431,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(431, new int[] {125,432}),
      new State(432, -483),
      new State(433, new int[] {384,434,322,435,320,415,385,424,386,438}, new int[] {-92,441,-60,443}),
      new State(434, -418),
      new State(435, new int[] {384,436,320,415,385,424,386,438}, new int[] {-60,437}),
      new State(436, -419),
      new State(437, -477),
      new State(438, new int[] {320,97,36,98,316,294,319,186,388,187,390,190,40,295,368,281,91,323,323,303}, new int[] {-40,439,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,322,-47,333,-49,308,-76,309}),
      new State(439, new int[] {125,440,91,-431,366,-431,123,-431,387,-431}),
      new State(440, -484),
      new State(441, new int[] {384,442,322,414,320,415,385,424,386,438}, new int[] {-60,413}),
      new State(442, -420),
      new State(443, -476),
      new State(444, -368),
      new State(445, new int[] {96,446,322,447,320,415,385,424,386,438}, new int[] {-92,449,-60,443}),
      new State(446, -399),
      new State(447, new int[] {96,448,320,415,385,424,386,438}, new int[] {-60,437}),
      new State(448, -400),
      new State(449, new int[] {96,450,322,414,320,415,385,424,386,438}, new int[] {-60,413}),
      new State(450, -401),
      new State(451, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,452,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(452, new int[] {283,40,284,42,263,-369,265,-369,264,-369,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-369,41,-369,125,-369,58,-369,93,-369,44,-369,268,-369,338,-369}),
      new State(453, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477,59,-370,283,-370,284,-370,263,-370,265,-370,264,-370,124,-370,38,-370,94,-370,46,-370,42,-370,304,-370,47,-370,37,-370,293,-370,292,-370,287,-370,286,-370,289,-370,288,-370,60,-370,291,-370,62,-370,290,-370,285,-370,294,-370,63,-370,282,-370,41,-370,125,-370,58,-370,93,-370,44,-370,268,-370,338,-370}, new int[] {-39,454,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(454, new int[] {268,455,283,40,284,42,263,-371,265,-371,264,-371,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-371,41,-371,125,-371,58,-371,93,-371,44,-371,338,-371}),
      new State(455, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,456,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(456, new int[] {283,40,284,42,263,-372,265,-372,264,-372,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-372,41,-372,125,-372,58,-372,93,-372,44,-372,268,-372,338,-372}),
      new State(457, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,458,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(458, new int[] {283,40,284,42,263,-373,265,-373,264,-373,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-373,41,-373,125,-373,58,-373,93,-373,44,-373,268,-373,338,-373}),
      new State(459, new int[] {38,721,40,-381}, new int[] {-4,460}),
      new State(460, -377, new int[] {-15,461}),
      new State(461, new int[] {40,462}),
      new State(462, new int[] {368,703,369,704,319,186,388,187,390,190,63,706,38,-221,391,-221,320,-221,41,-216}, new int[] {-116,463,-117,708,-114,720,-22,711,-21,719,-19,702,-18,705,-102,183}),
      new State(463, new int[] {41,464}),
      new State(464, new int[] {353,766,58,-383,123,-383}, new int[] {-118,465}),
      new State(465, new int[] {58,700,123,-228}, new int[] {-20,466}),
      new State(466, -380, new int[] {-136,467}),
      new State(467, -378, new int[] {-16,468}),
      new State(468, new int[] {123,469}),
      new State(469, -126, new int[] {-84,470}),
      new State(470, new int[] {125,471,123,7,330,23,329,31,332,152,339,164,343,178,344,474,348,478,355,481,316,488,328,497,321,504,320,97,36,98,319,507,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477,357,524,334,534,336,544,59,550,349,551,352,567,345,570,315,637,314,638,362,640,363,685,360,696,327,-378,361,-173}, new int[] {-79,10,-31,11,-16,12,-39,505,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,509,-32,573,-33,574,-12,575,-11,635,-34,639,-36,684}),
      new State(471, -379, new int[] {-17,472}),
      new State(472, -380, new int[] {-136,473}),
      new State(473, -374),
      new State(474, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477,59,-428}, new int[] {-58,475,-39,120,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(475, new int[] {59,476}),
      new State(476, -141),
      new State(477, -376),
      new State(478, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477,59,-428}, new int[] {-58,479,-39,120,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(479, new int[] {59,480}),
      new State(480, -142),
      new State(481, new int[] {320,97,36,98}, new int[] {-87,482,-55,487,-45,486}),
      new State(482, new int[] {59,483,44,484}),
      new State(483, -143),
      new State(484, new int[] {320,97,36,98}, new int[] {-55,485,-45,486}),
      new State(485, -236),
      new State(486, -238),
      new State(487, -237),
      new State(488, new int[] {320,493,346,477,387,-393}, new int[] {-88,489,-13,137,-56,496}),
      new State(489, new int[] {59,490,44,491}),
      new State(490, -144),
      new State(491, new int[] {320,493}, new int[] {-56,492}),
      new State(492, -239),
      new State(493, new int[] {61,494,59,-241,44,-241}),
      new State(494, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,495,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(495, new int[] {283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-242,44,-242}),
      new State(496, -240),
      new State(497, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-89,498,-57,503,-39,502,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(498, new int[] {59,499,44,500}),
      new State(499, -145),
      new State(500, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-57,501,-39,502,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(501, -288),
      new State(502, new int[] {283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-290,44,-290}),
      new State(503, -289),
      new State(504, -146),
      new State(505, new int[] {59,506,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(506, -147),
      new State(507, new int[] {58,508,390,-82,40,-82,387,-82,91,-82,59,-82,283,-82,284,-82,263,-82,265,-82,264,-82,124,-82,38,-82,94,-82,46,-82,43,-82,45,-82,42,-82,304,-82,47,-82,37,-82,293,-82,292,-82,287,-82,286,-82,289,-82,288,-82,60,-82,291,-82,62,-82,290,-82,285,-82,294,-82,63,-82,282,-82}),
      new State(508, -156),
      new State(509, new int[] {38,721,319,-381,40,-381}, new int[] {-4,510}),
      new State(510, new int[] {319,511,40,-377}, new int[] {-15,461}),
      new State(511, -377, new int[] {-15,512}),
      new State(512, new int[] {40,513}),
      new State(513, new int[] {368,703,369,704,319,186,388,187,390,190,63,706,38,-221,391,-221,320,-221,41,-216}, new int[] {-116,514,-117,708,-114,720,-22,711,-21,719,-19,702,-18,705,-102,183}),
      new State(514, new int[] {41,515}),
      new State(515, new int[] {58,700,123,-228}, new int[] {-20,516}),
      new State(516, -380, new int[] {-136,517}),
      new State(517, -378, new int[] {-16,518}),
      new State(518, new int[] {123,519}),
      new State(519, -126, new int[] {-84,520}),
      new State(520, new int[] {125,521,123,7,330,23,329,31,332,152,339,164,343,178,344,474,348,478,355,481,316,488,328,497,321,504,320,97,36,98,319,507,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477,357,524,334,534,336,544,59,550,349,551,352,567,345,570,315,637,314,638,362,640,363,685,360,696,327,-378,361,-173}, new int[] {-79,10,-31,11,-16,12,-39,505,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,509,-32,573,-33,574,-12,575,-11,635,-34,639,-36,684}),
      new State(521, -379, new int[] {-17,522}),
      new State(522, -380, new int[] {-136,523}),
      new State(523, -166),
      new State(524, new int[] {40,525}),
      new State(525, new int[] {320,97,36,98,316,294,319,186,388,187,390,190,40,295,368,281,91,323,323,303}, new int[] {-90,526,-54,533,-40,532,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,322,-47,333,-49,308,-76,309}),
      new State(526, new int[] {44,530,41,-109}, new int[] {-3,527}),
      new State(527, new int[] {41,528}),
      new State(528, new int[] {59,529}),
      new State(529, -148),
      new State(530, new int[] {320,97,36,98,316,294,319,186,388,187,390,190,40,295,368,281,91,323,323,303,41,-110}, new int[] {-54,531,-40,532,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,322,-47,333,-49,308,-76,309}),
      new State(531, -164),
      new State(532, new int[] {44,-165,41,-165,91,-431,366,-431,123,-431,387,-431}),
      new State(533, -163),
      new State(534, new int[] {40,535}),
      new State(535, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,536,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(536, new int[] {338,537,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(537, new int[] {320,97,36,98,316,294,319,186,388,187,390,190,40,295,368,281,91,755,323,303,38,760,367,762}, new int[] {-126,538,-40,754,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,322,-47,333,-49,308,-76,309}),
      new State(538, new int[] {41,539,268,748}),
      new State(539, -378, new int[] {-16,540}),
      new State(540, new int[] {123,7,330,23,329,31,332,152,339,164,343,178,344,474,348,478,355,481,316,488,328,497,321,504,320,97,36,98,319,507,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477,357,524,334,534,336,544,59,550,349,551,352,567,345,570,58,744,327,-378}, new int[] {-69,541,-31,543,-16,12,-39,505,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(541, -379, new int[] {-17,542}),
      new State(542, -149),
      new State(543, -192),
      new State(544, new int[] {40,545}),
      new State(545, new int[] {319,739}, new int[] {-82,546,-53,743}),
      new State(546, new int[] {41,547,44,737}),
      new State(547, new int[] {123,7,330,23,329,31,332,152,339,164,343,178,344,474,348,478,355,481,316,488,328,497,321,504,320,97,36,98,319,507,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477,357,524,334,534,336,544,59,550,349,551,352,567,345,570,58,733,327,-378}, new int[] {-62,548,-31,549,-16,12,-39,505,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(548, -151),
      new State(549, -194),
      new State(550, -152),
      new State(551, new int[] {123,552}),
      new State(552, -126, new int[] {-84,553}),
      new State(553, new int[] {125,554,123,7,330,23,329,31,332,152,339,164,343,178,344,474,348,478,355,481,316,488,328,497,321,504,320,97,36,98,319,507,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477,357,524,334,534,336,544,59,550,349,551,352,567,345,570,315,637,314,638,362,640,363,685,360,696,327,-378,361,-173}, new int[] {-79,10,-31,11,-16,12,-39,505,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,509,-32,573,-33,574,-12,575,-11,635,-34,639,-36,684}),
      new State(554, -378, new int[] {-16,555}),
      new State(555, -157, new int[] {-98,556}),
      new State(556, new int[] {350,559,351,729,123,-161,330,-161,329,-161,332,-161,339,-161,343,-161,344,-161,348,-161,355,-161,316,-161,328,-161,321,-161,320,-161,36,-161,319,-161,388,-161,390,-161,40,-161,368,-161,91,-161,323,-161,367,-161,305,-161,303,-161,302,-161,43,-161,45,-161,33,-161,126,-161,306,-161,358,-161,359,-161,262,-161,261,-161,260,-161,259,-161,258,-161,301,-161,300,-161,299,-161,298,-161,297,-161,296,-161,295,-161,326,-161,64,-161,317,-161,318,-161,370,-161,371,-161,372,-161,374,-161,375,-161,376,-161,389,-161,373,-161,34,-161,383,-161,96,-161,266,-161,267,-161,269,-161,346,-161,357,-161,334,-161,336,-161,59,-161,349,-161,352,-161,345,-161,315,-161,314,-161,362,-161,363,-161,360,-161,353,-161,347,-161,327,-161,361,-161,0,-161,125,-161,308,-161,309,-161,341,-161,342,-161,340,-161,337,-161,335,-161,333,-161,331,-161,310,-161}, new int[] {-74,557}),
      new State(557, -379, new int[] {-17,558}),
      new State(558, -153),
      new State(559, new int[] {40,560}),
      new State(560, new int[] {319,186,388,187,390,190}, new int[] {-27,561,-18,728,-102,183}),
      new State(561, new int[] {320,562,124,726}),
      new State(562, new int[] {41,563}),
      new State(563, new int[] {123,564}),
      new State(564, -126, new int[] {-84,565}),
      new State(565, new int[] {125,566,123,7,330,23,329,31,332,152,339,164,343,178,344,474,348,478,355,481,316,488,328,497,321,504,320,97,36,98,319,507,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477,357,524,334,534,336,544,59,550,349,551,352,567,345,570,315,637,314,638,362,640,363,685,360,696,327,-378,361,-173}, new int[] {-79,10,-31,11,-16,12,-39,505,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,509,-32,573,-33,574,-12,575,-11,635,-34,639,-36,684}),
      new State(566, -158),
      new State(567, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,568,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(568, new int[] {59,569,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(569, -154),
      new State(570, new int[] {319,571}),
      new State(571, new int[] {59,572}),
      new State(572, -155),
      new State(573, -128),
      new State(574, -129),
      new State(575, new int[] {361,576}),
      new State(576, new int[] {319,577}),
      new State(577, new int[] {364,724,365,-180,123,-180}, new int[] {-23,578}),
      new State(578, -171, new int[] {-137,579}),
      new State(579, new int[] {365,722,123,-184}, new int[] {-28,580}),
      new State(580, -377, new int[] {-15,581}),
      new State(581, -378, new int[] {-16,582}),
      new State(582, new int[] {123,583}),
      new State(583, -244, new int[] {-85,584}),
      new State(584, new int[] {125,585,311,601,312,602,313,603,316,604,315,605,314,606,356,608,353,649,347,-270,346,-270}, new int[] {-80,587,-7,588,-9,599,-10,607,-8,609}),
      new State(585, -379, new int[] {-17,586}),
      new State(586, -172),
      new State(587, -243),
      new State(588, new int[] {320,593}, new int[] {-94,589,-59,598}),
      new State(589, new int[] {59,590,44,591}),
      new State(590, -245),
      new State(591, new int[] {320,593}, new int[] {-59,592}),
      new State(592, -280),
      new State(593, new int[] {61,595,59,-377,44,-377}, new int[] {-15,594}),
      new State(594, -282),
      new State(595, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,596,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(596, new int[] {283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-377,44,-377}, new int[] {-15,597}),
      new State(597, -283),
      new State(598, -281),
      new State(599, new int[] {311,601,312,602,313,603,316,604,315,605,314,606,320,-268,347,-271,346,-271}, new int[] {-10,600}),
      new State(600, -273),
      new State(601, -274),
      new State(602, -275),
      new State(603, -276),
      new State(604, -277),
      new State(605, -278),
      new State(606, -279),
      new State(607, -272),
      new State(608, -269),
      new State(609, new int[] {347,610,346,477}, new int[] {-13,620}),
      new State(610, new int[] {319,198,262,201,261,202,260,203,259,204,258,205,263,206,264,207,265,208,294,209,306,210,305,211,326,212,327,213,308,214,309,215,310,216,328,217,329,218,330,219,331,220,332,221,333,222,334,223,335,224,336,225,337,226,338,227,349,228,350,229,351,230,352,231,353,232,354,233,355,234,356,235,357,236,358,237,359,238,344,239,345,240,346,241,347,242,348,243,266,244,267,245,367,246,339,247,340,248,341,249,342,250,343,251,368,252,369,253,364,254,365,255,388,256,362,257,363,258,361,259,373,260,374,261,376,262,375,263,370,264,371,265,372,266,389,267,316,268,315,269,314,270,313,271,312,272,311,273}, new int[] {-83,611,-66,619,-99,615,-100,199,-101,200}),
      new State(611, new int[] {59,612,44,613}),
      new State(612, -246),
      new State(613, new int[] {319,198,262,201,261,202,260,203,259,204,258,205,263,206,264,207,265,208,294,209,306,210,305,211,326,212,327,213,308,214,309,215,310,216,328,217,329,218,330,219,331,220,332,221,333,222,334,223,335,224,336,225,337,226,338,227,349,228,350,229,351,230,352,231,353,232,354,233,355,234,356,235,357,236,358,237,359,238,344,239,345,240,346,241,347,242,348,243,266,244,267,245,367,246,339,247,340,248,341,249,342,250,343,251,368,252,369,253,364,254,365,255,388,256,362,257,363,258,361,259,373,260,374,261,376,262,375,263,370,264,371,265,372,266,389,267,316,268,315,269,314,270,313,271,312,272,311,273}, new int[] {-66,614,-99,615,-100,199,-101,200}),
      new State(614, -284),
      new State(615, new int[] {61,616}),
      new State(616, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,617,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(617, new int[] {283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-377,44,-377}, new int[] {-15,618}),
      new State(618, -286),
      new State(619, -285),
      new State(620, new int[] {38,721,319,-381,262,-381,261,-381,260,-381,259,-381,258,-381,263,-381,264,-381,265,-381,294,-381,306,-381,305,-381,326,-381,327,-381,308,-381,309,-381,310,-381,328,-381,329,-381,330,-381,331,-381,332,-381,333,-381,334,-381,335,-381,336,-381,337,-381,338,-381,349,-381,350,-381,351,-381,352,-381,353,-381,354,-381,355,-381,356,-381,357,-381,358,-381,359,-381,344,-381,345,-381,346,-381,347,-381,348,-381,266,-381,267,-381,367,-381,339,-381,340,-381,341,-381,342,-381,343,-381,368,-381,369,-381,364,-381,365,-381,388,-381,362,-381,363,-381,361,-381,373,-381,374,-381,376,-381,375,-381,370,-381,371,-381,372,-381,389,-381,316,-381,315,-381,314,-381,313,-381,312,-381,311,-381}, new int[] {-4,621}),
      new State(621, new int[] {319,198,262,201,261,202,260,203,259,204,258,205,263,206,264,207,265,208,294,209,306,210,305,211,326,212,327,213,308,214,309,215,310,216,328,217,329,218,330,219,331,220,332,221,333,222,334,223,335,224,336,225,337,226,338,227,349,228,350,229,351,230,352,231,353,232,354,233,355,234,356,235,357,236,358,237,359,238,344,239,345,240,346,241,347,242,348,243,266,244,267,245,367,246,339,247,340,248,341,249,342,250,343,251,368,252,369,253,364,254,365,255,388,256,362,257,363,258,361,259,373,260,374,261,376,262,375,263,370,264,371,265,372,266,389,267,316,268,315,269,314,270,313,271,312,272,311,273}, new int[] {-99,622,-100,199,-101,200}),
      new State(622, -377, new int[] {-15,623}),
      new State(623, new int[] {40,624}),
      new State(624, new int[] {368,703,369,704,319,186,388,187,390,190,63,706,38,-221,391,-221,320,-221,41,-216}, new int[] {-116,625,-117,708,-114,720,-22,711,-21,719,-19,702,-18,705,-102,183}),
      new State(625, new int[] {41,626}),
      new State(626, new int[] {58,700,59,-228,123,-228}, new int[] {-20,627}),
      new State(627, -380, new int[] {-136,628}),
      new State(628, new int[] {59,631,123,632}, new int[] {-72,629}),
      new State(629, -380, new int[] {-136,630}),
      new State(630, -248),
      new State(631, -266),
      new State(632, -126, new int[] {-84,633}),
      new State(633, new int[] {125,634,123,7,330,23,329,31,332,152,339,164,343,178,344,474,348,478,355,481,316,488,328,497,321,504,320,97,36,98,319,507,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477,357,524,334,534,336,544,59,550,349,551,352,567,345,570,315,637,314,638,362,640,363,685,360,696,327,-378,361,-173}, new int[] {-79,10,-31,11,-16,12,-39,505,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,509,-32,573,-33,574,-12,575,-11,635,-34,639,-36,684}),
      new State(634, -267),
      new State(635, new int[] {315,637,314,638,361,-173}, new int[] {-12,636,-11,635}),
      new State(636, -174),
      new State(637, -175),
      new State(638, -176),
      new State(639, -130),
      new State(640, new int[] {319,641}),
      new State(641, -177, new int[] {-138,642}),
      new State(642, -377, new int[] {-15,643}),
      new State(643, -378, new int[] {-16,644}),
      new State(644, new int[] {123,645}),
      new State(645, -244, new int[] {-85,646}),
      new State(646, new int[] {125,647,311,601,312,602,313,603,316,604,315,605,314,606,356,608,353,649,347,-270,346,-270}, new int[] {-80,587,-7,588,-9,599,-10,607,-8,609}),
      new State(647, -379, new int[] {-17,648}),
      new State(648, -178),
      new State(649, new int[] {319,186,388,187,390,190}, new int[] {-26,650,-18,665,-102,183}),
      new State(650, new int[] {44,652,59,654,123,655}, new int[] {-77,651}),
      new State(651, -247),
      new State(652, new int[] {319,186,388,187,390,190}, new int[] {-18,653,-102,183}),
      new State(653, -250),
      new State(654, -251),
      new State(655, new int[] {125,656,319,669,388,670,390,190,262,201,261,202,260,203,259,204,258,205,263,206,264,207,265,208,294,209,306,210,305,211,326,212,327,213,308,214,309,215,310,216,328,217,329,218,330,219,331,220,332,221,333,222,334,223,335,224,336,225,337,226,338,227,349,228,350,229,351,230,352,231,353,232,354,233,355,234,356,235,357,236,358,237,359,238,344,239,345,240,346,241,347,242,348,243,266,244,267,245,367,246,339,247,340,248,341,249,342,250,343,251,368,252,369,253,364,254,365,255,362,257,363,258,361,259,373,260,374,261,376,262,375,263,370,264,371,265,372,266,389,267,316,268,315,269,314,270,313,271,312,272,311,273}, new int[] {-91,657,-63,683,-64,660,-105,661,-18,666,-102,183,-65,671,-104,672,-99,682,-100,199,-101,200}),
      new State(656, -252),
      new State(657, new int[] {125,658,319,669,388,670,390,190,262,201,261,202,260,203,259,204,258,205,263,206,264,207,265,208,294,209,306,210,305,211,326,212,327,213,308,214,309,215,310,216,328,217,329,218,330,219,331,220,332,221,333,222,334,223,335,224,336,225,337,226,338,227,349,228,350,229,351,230,352,231,353,232,354,233,355,234,356,235,357,236,358,237,359,238,344,239,345,240,346,241,347,242,348,243,266,244,267,245,367,246,339,247,340,248,341,249,342,250,343,251,368,252,369,253,364,254,365,255,362,257,363,258,361,259,373,260,374,261,376,262,375,263,370,264,371,265,372,266,389,267,316,268,315,269,314,270,313,271,312,272,311,273}, new int[] {-63,659,-64,660,-105,661,-18,666,-102,183,-65,671,-104,672,-99,682,-100,199,-101,200}),
      new State(658, -253),
      new State(659, -255),
      new State(660, -256),
      new State(661, new int[] {354,662,338,-264}),
      new State(662, new int[] {319,186,388,187,390,190}, new int[] {-26,663,-18,665,-102,183}),
      new State(663, new int[] {59,664,44,652}),
      new State(664, -258),
      new State(665, -249),
      new State(666, new int[] {387,667}),
      new State(667, new int[] {319,198,262,201,261,202,260,203,259,204,258,205,263,206,264,207,265,208,294,209,306,210,305,211,326,212,327,213,308,214,309,215,310,216,328,217,329,218,330,219,331,220,332,221,333,222,334,223,335,224,336,225,337,226,338,227,349,228,350,229,351,230,352,231,353,232,354,233,355,234,356,235,357,236,358,237,359,238,344,239,345,240,346,241,347,242,348,243,266,244,267,245,367,246,339,247,340,248,341,249,342,250,343,251,368,252,369,253,364,254,365,255,388,256,362,257,363,258,361,259,373,260,374,261,376,262,375,263,370,264,371,265,372,266,389,267,316,268,315,269,314,270,313,271,312,272,311,273}, new int[] {-99,668,-100,199,-101,200}),
      new State(668, -265),
      new State(669, new int[] {390,-82,387,-82,338,-78}),
      new State(670, new int[] {390,188,338,-59}),
      new State(671, -257),
      new State(672, new int[] {338,673}),
      new State(673, new int[] {319,674,262,201,261,202,260,203,259,204,258,205,263,206,264,207,265,208,294,209,306,210,305,211,326,212,327,213,308,214,309,215,310,216,328,217,329,218,330,219,331,220,332,221,333,222,334,223,335,224,336,225,337,226,338,227,349,228,350,229,351,230,352,231,353,232,354,233,355,234,356,235,357,236,358,237,359,238,344,239,345,240,346,241,347,242,348,243,266,244,267,245,367,246,339,247,340,248,341,249,342,250,343,251,368,252,369,253,364,254,365,255,388,256,362,257,363,258,361,259,373,260,374,261,376,262,375,263,370,264,371,265,372,266,389,267,311,601,312,602,313,603,316,604,315,605,314,606}, new int[] {-101,676,-10,678}),
      new State(674, new int[] {59,675}),
      new State(675, -259),
      new State(676, new int[] {59,677}),
      new State(677, -260),
      new State(678, new int[] {59,681,319,198,262,201,261,202,260,203,259,204,258,205,263,206,264,207,265,208,294,209,306,210,305,211,326,212,327,213,308,214,309,215,310,216,328,217,329,218,330,219,331,220,332,221,333,222,334,223,335,224,336,225,337,226,338,227,349,228,350,229,351,230,352,231,353,232,354,233,355,234,356,235,357,236,358,237,359,238,344,239,345,240,346,241,347,242,348,243,266,244,267,245,367,246,339,247,340,248,341,249,342,250,343,251,368,252,369,253,364,254,365,255,388,256,362,257,363,258,361,259,373,260,374,261,376,262,375,263,370,264,371,265,372,266,389,267,316,268,315,269,314,270,313,271,312,272,311,273}, new int[] {-99,679,-100,199,-101,200}),
      new State(679, new int[] {59,680}),
      new State(680, -261),
      new State(681, -262),
      new State(682, -263),
      new State(683, -254),
      new State(684, -131),
      new State(685, new int[] {319,686}),
      new State(686, new int[] {364,694,123,-182}, new int[] {-29,687}),
      new State(687, -377, new int[] {-15,688}),
      new State(688, -378, new int[] {-16,689}),
      new State(689, new int[] {123,690}),
      new State(690, -244, new int[] {-85,691}),
      new State(691, new int[] {125,692,311,601,312,602,313,603,316,604,315,605,314,606,356,608,353,649,347,-270,346,-270}, new int[] {-80,587,-7,588,-9,599,-10,607,-8,609}),
      new State(692, -379, new int[] {-17,693}),
      new State(693, -179),
      new State(694, new int[] {319,186,388,187,390,190}, new int[] {-26,695,-18,665,-102,183}),
      new State(695, new int[] {44,652,123,-183}),
      new State(696, new int[] {40,697}),
      new State(697, new int[] {41,698}),
      new State(698, new int[] {59,699}),
      new State(699, -132),
      new State(700, new int[] {368,703,369,704,319,186,388,187,390,190,63,706}, new int[] {-21,701,-19,702,-18,705,-102,183}),
      new State(701, -229),
      new State(702, -223),
      new State(703, -225),
      new State(704, -226),
      new State(705, -227),
      new State(706, new int[] {368,703,369,704,319,186,388,187,390,190}, new int[] {-19,707,-18,705,-102,183}),
      new State(707, -224),
      new State(708, new int[] {44,709,41,-215}),
      new State(709, new int[] {368,703,369,704,319,186,388,187,390,190,63,706,38,-221,391,-221,320,-221}, new int[] {-114,710,-22,711,-21,719,-19,702,-18,705,-102,183}),
      new State(710, -218),
      new State(711, new int[] {38,718,391,-167,320,-167}, new int[] {-5,712}),
      new State(712, new int[] {391,717,320,-169}, new int[] {-6,713}),
      new State(713, new int[] {320,714}),
      new State(714, new int[] {61,715,44,-219,41,-219}),
      new State(715, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,716,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(716, new int[] {283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,44,-220,41,-220}),
      new State(717, -170),
      new State(718, -168),
      new State(719, -222),
      new State(720, -217),
      new State(721, -382),
      new State(722, new int[] {319,186,388,187,390,190}, new int[] {-26,723,-18,665,-102,183}),
      new State(723, new int[] {44,652,123,-185}),
      new State(724, new int[] {319,186,388,187,390,190}, new int[] {-18,725,-102,183}),
      new State(725, -181),
      new State(726, new int[] {319,186,388,187,390,190}, new int[] {-18,727,-102,183}),
      new State(727, -160),
      new State(728, -159),
      new State(729, new int[] {123,730}),
      new State(730, -126, new int[] {-84,731}),
      new State(731, new int[] {125,732,123,7,330,23,329,31,332,152,339,164,343,178,344,474,348,478,355,481,316,488,328,497,321,504,320,97,36,98,319,507,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477,357,524,334,534,336,544,59,550,349,551,352,567,345,570,315,637,314,638,362,640,363,685,360,696,327,-378,361,-173}, new int[] {-79,10,-31,11,-16,12,-39,505,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,509,-32,573,-33,574,-12,575,-11,635,-34,639,-36,684}),
      new State(732, -162),
      new State(733, -126, new int[] {-84,734}),
      new State(734, new int[] {337,735,123,7,330,23,329,31,332,152,339,164,343,178,344,474,348,478,355,481,316,488,328,497,321,504,320,97,36,98,319,507,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477,357,524,334,534,336,544,59,550,349,551,352,567,345,570,315,637,314,638,362,640,363,685,360,696,327,-378,361,-173}, new int[] {-79,10,-31,11,-16,12,-39,505,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,509,-32,573,-33,574,-12,575,-11,635,-34,639,-36,684}),
      new State(735, new int[] {59,736}),
      new State(736, -195),
      new State(737, new int[] {319,739}, new int[] {-53,738}),
      new State(738, -123),
      new State(739, new int[] {61,740}),
      new State(740, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,741,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(741, new int[] {283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,41,-377,44,-377,59,-377}, new int[] {-15,742}),
      new State(742, -287),
      new State(743, -124),
      new State(744, -126, new int[] {-84,745}),
      new State(745, new int[] {335,746,123,7,330,23,329,31,332,152,339,164,343,178,344,474,348,478,355,481,316,488,328,497,321,504,320,97,36,98,319,507,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477,357,524,334,534,336,544,59,550,349,551,352,567,345,570,315,637,314,638,362,640,363,685,360,696,327,-378,361,-173}, new int[] {-79,10,-31,11,-16,12,-39,505,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,509,-32,573,-33,574,-12,575,-11,635,-34,639,-36,684}),
      new State(746, new int[] {59,747}),
      new State(747, -193),
      new State(748, new int[] {320,97,36,98,316,294,319,186,388,187,390,190,40,295,368,281,91,755,323,303,38,760,367,762}, new int[] {-126,749,-40,754,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,322,-47,333,-49,308,-76,309}),
      new State(749, new int[] {41,750}),
      new State(750, -378, new int[] {-16,751}),
      new State(751, new int[] {123,7,330,23,329,31,332,152,339,164,343,178,344,474,348,478,355,481,316,488,328,497,321,504,320,97,36,98,319,507,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477,357,524,334,534,336,544,59,550,349,551,352,567,345,570,58,744,327,-378}, new int[] {-69,752,-31,543,-16,12,-39,505,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(752, -379, new int[] {-17,753}),
      new State(753, -150),
      new State(754, new int[] {41,-186,268,-186,91,-431,366,-431,123,-431,387,-431}),
      new State(755, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,327,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477,38,758,44,-464,93,-464}, new int[] {-123,756,-122,285,-120,326,-121,288,-39,289,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(756, new int[] {93,757}),
      new State(757, new int[] {91,-405,366,-405,123,-405,387,-405,40,-405,41,-189,268,-189}),
      new State(758, new int[] {320,97,36,98,316,294,319,186,388,187,390,190,40,295,368,281,91,323,323,303}, new int[] {-40,759,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,322,-47,333,-49,308,-76,309}),
      new State(759, new int[] {44,-471,41,-471,93,-471,91,-431,366,-431,123,-431,387,-431}),
      new State(760, new int[] {320,97,36,98,316,294,319,186,388,187,390,190,40,295,368,281,91,323,323,303}, new int[] {-40,761,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,322,-47,333,-49,308,-76,309}),
      new State(761, new int[] {41,-187,268,-187,91,-431,366,-431,123,-431,387,-431}),
      new State(762, new int[] {40,763}),
      new State(763, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,327,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477,38,758,44,-464,41,-464}, new int[] {-123,764,-122,285,-120,326,-121,288,-39,289,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(764, new int[] {41,765}),
      new State(765, -188),
      new State(766, new int[] {40,767}),
      new State(767, new int[] {320,772,38,773}, new int[] {-119,768,-115,775}),
      new State(768, new int[] {41,769,44,770}),
      new State(769, -384),
      new State(770, new int[] {320,772,38,773}, new int[] {-115,771}),
      new State(771, -385),
      new State(772, -387),
      new State(773, new int[] {320,774}),
      new State(774, -388),
      new State(775, -386),
      new State(776, new int[] {320,415,385,424,386,438}, new int[] {-60,437}),
      new State(777, -495),
      new State(778, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,779,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(779, new int[] {125,780,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(780, -453),
      new State(781, new int[] {319,783,123,784,320,97,36,98}, new int[] {-1,782,-45,787}),
      new State(782, -454),
      new State(783, -460),
      new State(784, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,785,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(785, new int[] {125,786,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(786, -461),
      new State(787, -462),
      new State(788, new int[] {320,97,36,98}, new int[] {-45,789}),
      new State(789, -456),
      new State(790, -451),
      new State(791, new int[] {40,128,364,-402,365,-402,123,-402}, new int[] {-111,792,-112,346}),
      new State(792, new int[] {364,724,365,-180,123,-180}, new int[] {-23,793}),
      new State(793, -295, new int[] {-140,794}),
      new State(794, new int[] {365,722,123,-184}, new int[] {-28,795}),
      new State(795, -377, new int[] {-15,796}),
      new State(796, -378, new int[] {-16,797}),
      new State(797, new int[] {123,798}),
      new State(798, -244, new int[] {-85,799}),
      new State(799, new int[] {125,800,311,601,312,602,313,603,316,604,315,605,314,606,356,608,353,649,347,-270,346,-270}, new int[] {-80,587,-7,588,-9,599,-10,607,-8,609}),
      new State(800, -379, new int[] {-17,801}),
      new State(801, -296),
      new State(802, new int[] {40,803}),
      new State(803, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,327,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477,38,758,44,-464,41,-464}, new int[] {-123,804,-122,285,-120,326,-121,288,-39,289,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(804, new int[] {41,805}),
      new State(805, new int[] {61,316,44,-472,41,-472,93,-472}),
      new State(806, -203),
      new State(807, -204),
      new State(808, new int[] {58,806,59,807}, new int[] {-139,809}),
      new State(809, -126, new int[] {-84,810}),
      new State(810, new int[] {123,7,330,23,329,31,332,152,339,164,343,178,344,474,348,478,355,481,316,488,328,497,321,504,320,97,36,98,319,507,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477,357,524,334,534,336,544,59,550,349,551,352,567,345,570,315,637,314,638,362,640,363,685,360,696,125,-202,341,-202,342,-202,340,-202,327,-378,361,-173}, new int[] {-79,10,-31,11,-16,12,-39,505,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,509,-32,573,-33,574,-12,575,-11,635,-34,639,-36,684}),
      new State(811, -200, new int[] {-95,812}),
      new State(812, new int[] {125,813,341,174,342,808}),
      new State(813, -197),
      new State(814, new int[] {59,818,340,-200,341,-200,342,-200}, new int[] {-95,815}),
      new State(815, new int[] {340,816,341,174,342,808}),
      new State(816, new int[] {59,817}),
      new State(817, -198),
      new State(818, -200, new int[] {-95,819}),
      new State(819, new int[] {340,820,341,174,342,808}),
      new State(820, new int[] {59,821}),
      new State(821, -199),
      new State(822, -126, new int[] {-84,823}),
      new State(823, new int[] {333,824,123,7,330,23,329,31,332,152,339,164,343,178,344,474,348,478,355,481,316,488,328,497,321,504,320,97,36,98,319,507,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477,357,524,334,534,336,544,59,550,349,551,352,567,345,570,315,637,314,638,362,640,363,685,360,696,327,-378,361,-173}, new int[] {-79,10,-31,11,-16,12,-39,505,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,509,-32,573,-33,574,-12,575,-11,635,-34,639,-36,684}),
      new State(824, new int[] {59,825}),
      new State(825, -191),
      new State(826, new int[] {44,827,59,-292,41,-292}),
      new State(827, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,828,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(828, new int[] {283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,44,-293,59,-293,41,-293}),
      new State(829, new int[] {283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,44,-294,59,-294,41,-294}),
      new State(830, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,831,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(831, new int[] {283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,44,-235,41,-235}),
      new State(832, -232),
      new State(833, new int[] {319,783,123,784,320,97,36,98}, new int[] {-1,834,-45,787}),
      new State(834, new int[] {40,128,61,-445,281,-445,280,-445,279,-445,270,-445,278,-445,277,-445,276,-445,275,-445,274,-445,273,-445,272,-445,271,-445,303,-445,302,-445,59,-445,283,-445,284,-445,263,-445,265,-445,264,-445,124,-445,38,-445,94,-445,46,-445,43,-445,45,-445,42,-445,304,-445,47,-445,37,-445,293,-445,292,-445,287,-445,286,-445,289,-445,288,-445,60,-445,291,-445,62,-445,290,-445,285,-445,294,-445,63,-445,282,-445,91,-445,366,-445,123,-445,387,-445,41,-445,125,-445,58,-445,93,-445,44,-445,268,-445,338,-445}, new int[] {-112,835}),
      new State(835, -441),
      new State(836, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,837,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(837, new int[] {125,838,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(838, -440),
      new State(839, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,840,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(840, new int[] {283,40,284,42,263,-305,265,-305,264,-305,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-305,41,-305,125,-305,58,-305,93,-305,44,-305,268,-305,338,-305}),
      new State(841, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,842,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(842, new int[] {283,40,284,42,263,-306,265,-306,264,-306,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-306,41,-306,125,-306,58,-306,93,-306,44,-306,268,-306,338,-306}),
      new State(843, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,844,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(844, new int[] {283,40,284,42,263,-307,265,-307,264,-307,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-307,41,-307,125,-307,58,-307,93,-307,44,-307,268,-307,338,-307}),
      new State(845, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,846,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(846, new int[] {283,40,284,42,263,-308,265,-308,264,-308,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-308,41,-308,125,-308,58,-308,93,-308,44,-308,268,-308,338,-308}),
      new State(847, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,848,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(848, new int[] {283,40,284,42,263,-309,265,-309,264,-309,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-309,41,-309,125,-309,58,-309,93,-309,44,-309,268,-309,338,-309}),
      new State(849, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,850,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(850, new int[] {283,40,284,42,263,-310,265,-310,264,-310,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-310,41,-310,125,-310,58,-310,93,-310,44,-310,268,-310,338,-310}),
      new State(851, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,852,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(852, new int[] {283,40,284,42,263,-311,265,-311,264,-311,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-311,41,-311,125,-311,58,-311,93,-311,44,-311,268,-311,338,-311}),
      new State(853, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,854,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(854, new int[] {283,40,284,42,263,-312,265,-312,264,-312,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-312,41,-312,125,-312,58,-312,93,-312,44,-312,268,-312,338,-312}),
      new State(855, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,856,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(856, new int[] {283,40,284,42,263,-313,265,-313,264,-313,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-313,41,-313,125,-313,58,-313,93,-313,44,-313,268,-313,338,-313}),
      new State(857, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,858,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(858, new int[] {283,40,284,42,263,-314,265,-314,264,-314,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-314,41,-314,125,-314,58,-314,93,-314,44,-314,268,-314,338,-314}),
      new State(859, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,860,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(860, new int[] {283,40,284,42,263,-315,265,-315,264,-315,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-315,41,-315,125,-315,58,-315,93,-315,44,-315,268,-315,338,-315}),
      new State(861, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,862,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(862, new int[] {283,40,284,42,263,-316,265,-316,264,-316,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106,59,-316,41,-316,125,-316,58,-316,93,-316,44,-316,268,-316,338,-316}),
      new State(863, -317),
      new State(864, -319),
      new State(865, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,866,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(866, new int[] {283,40,284,42,263,-355,265,-355,264,-355,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,-355,282,106,59,-355,41,-355,125,-355,58,-355,93,-355,44,-355,268,-355,338,-355}),
      new State(867, -448),
      new State(868, -126, new int[] {-84,869}),
      new State(869, new int[] {331,870,123,7,330,23,329,31,332,152,339,164,343,178,344,474,348,478,355,481,316,488,328,497,321,504,320,97,36,98,319,507,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477,357,524,334,534,336,544,59,550,349,551,352,567,345,570,315,637,314,638,362,640,363,685,360,696,327,-378,361,-173}, new int[] {-79,10,-31,11,-16,12,-39,505,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,509,-32,573,-33,574,-12,575,-11,635,-34,639,-36,684}),
      new State(870, new int[] {59,871}),
      new State(871, -206),
      new State(872, new int[] {123,7,330,23,329,31,332,152,339,164,343,178,344,474,348,478,355,481,316,488,328,497,321,504,320,97,36,98,319,507,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477,357,524,334,534,336,544,59,550,349,551,352,567,345,570,327,-378}, new int[] {-31,873,-16,12,-39,505,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(873, -210),
      new State(874, new int[] {40,875}),
      new State(875, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,876,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(876, new int[] {41,877,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(877, new int[] {58,879,123,7,330,23,329,31,332,152,339,164,343,178,344,474,348,478,355,481,316,488,328,497,321,504,320,97,36,98,319,507,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477,357,524,334,534,336,544,59,550,349,551,352,567,345,570,327,-378}, new int[] {-31,878,-16,12,-39,505,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(878, -207),
      new State(879, -126, new int[] {-84,880}),
      new State(880, new int[] {123,7,330,23,329,31,332,152,339,164,343,178,344,474,348,478,355,481,316,488,328,497,321,504,320,97,36,98,319,507,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477,357,524,334,534,336,544,59,550,349,551,352,567,345,570,315,637,314,638,362,640,363,685,360,696,310,-211,308,-211,309,-211,327,-378,361,-173}, new int[] {-79,10,-31,11,-16,12,-39,505,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,509,-32,573,-33,574,-12,575,-11,635,-34,639,-36,684}),
      new State(881, new int[] {310,882,308,884,309,890}),
      new State(882, new int[] {59,883}),
      new State(883, -213),
      new State(884, new int[] {40,885}),
      new State(885, new int[] {320,97,36,98,316,136,319,186,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477}, new int[] {-39,886,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,459}),
      new State(886, new int[] {41,887,283,40,284,42,263,44,265,46,264,48,124,50,38,52,94,54,46,56,43,58,45,60,42,62,304,64,47,66,37,68,293,70,292,72,287,74,286,76,289,78,288,80,60,82,291,84,62,86,290,88,285,90,294,92,63,102,282,106}),
      new State(887, new int[] {58,888}),
      new State(888, -126, new int[] {-84,889}),
      new State(889, new int[] {123,7,330,23,329,31,332,152,339,164,343,178,344,474,348,478,355,481,316,488,328,497,321,504,320,97,36,98,319,507,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477,357,524,334,534,336,544,59,550,349,551,352,567,345,570,315,637,314,638,362,640,363,685,360,696,310,-212,308,-212,309,-212,327,-378,361,-173}, new int[] {-79,10,-31,11,-16,12,-39,505,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,509,-32,573,-33,574,-12,575,-11,635,-34,639,-36,684}),
      new State(890, new int[] {58,891}),
      new State(891, -126, new int[] {-84,892}),
      new State(892, new int[] {310,893,123,7,330,23,329,31,332,152,339,164,343,178,344,474,348,478,355,481,316,488,328,497,321,504,320,97,36,98,319,507,388,187,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477,357,524,334,534,336,544,59,550,349,551,352,567,345,570,315,637,314,638,362,640,363,685,360,696,327,-378,361,-173}, new int[] {-79,10,-31,11,-16,12,-39,505,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,509,-32,573,-33,574,-12,575,-11,635,-34,639,-36,684}),
      new State(893, new int[] {59,894}),
      new State(894, -214),
      new State(895, new int[] {390,188,319,186,123,-377}, new int[] {-102,896,-15,970}),
      new State(896, new int[] {59,897,390,184,123,-377}, new int[] {-15,898}),
      new State(897, -93),
      new State(898, -94, new int[] {-134,899}),
      new State(899, new int[] {123,900}),
      new State(900, -81, new int[] {-81,901}),
      new State(901, new int[] {125,902,123,7,330,23,329,31,332,152,339,164,343,178,344,474,348,478,355,481,316,488,328,497,321,504,320,97,36,98,319,507,388,895,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477,357,524,334,534,336,544,59,550,349,551,352,567,345,570,315,637,314,638,362,640,363,685,360,907,353,911,347,967,327,-378,361,-173}, new int[] {-30,5,-31,6,-16,12,-39,505,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,509,-32,903,-33,904,-12,575,-11,635,-34,905,-36,906}),
      new State(902, -95),
      new State(903, -88),
      new State(904, -89),
      new State(905, -90),
      new State(906, -91),
      new State(907, new int[] {40,908}),
      new State(908, new int[] {41,909}),
      new State(909, new int[] {59,910}),
      new State(910, -92),
      new State(911, new int[] {319,186,390,960,346,957,347,958}, new int[] {-130,912,-14,914,-128,944,-102,946,-106,943,-103,921}),
      new State(912, new int[] {59,913}),
      new State(913, -98),
      new State(914, new int[] {319,186,390,936}, new int[] {-129,915,-128,917,-102,927,-106,943,-103,921}),
      new State(915, new int[] {59,916}),
      new State(916, -99),
      new State(917, new int[] {59,918,44,919}),
      new State(918, -101),
      new State(919, new int[] {319,186,390,925}, new int[] {-106,920,-103,921,-102,922}),
      new State(920, -115),
      new State(921, -121),
      new State(922, new int[] {390,184,338,923,59,-119,44,-119,125,-119}),
      new State(923, new int[] {319,924}),
      new State(924, -120),
      new State(925, new int[] {319,186}, new int[] {-103,926,-102,922}),
      new State(926, -122),
      new State(927, new int[] {390,928,338,923,59,-119,44,-119}),
      new State(928, new int[] {123,929,319,185}),
      new State(929, new int[] {319,186}, new int[] {-107,930,-103,935,-102,922}),
      new State(930, new int[] {44,933,125,-109}, new int[] {-3,931}),
      new State(931, new int[] {125,932}),
      new State(932, -105),
      new State(933, new int[] {319,186,125,-110}, new int[] {-103,934,-102,922}),
      new State(934, -113),
      new State(935, -114),
      new State(936, new int[] {319,186}, new int[] {-102,937,-103,926}),
      new State(937, new int[] {390,938,338,923,59,-119,44,-119}),
      new State(938, new int[] {123,939,319,185}),
      new State(939, new int[] {319,186}, new int[] {-107,940,-103,935,-102,922}),
      new State(940, new int[] {44,933,125,-109}, new int[] {-3,941}),
      new State(941, new int[] {125,942}),
      new State(942, -106),
      new State(943, -116),
      new State(944, new int[] {59,945,44,919}),
      new State(945, -100),
      new State(946, new int[] {390,947,338,923,59,-119,44,-119}),
      new State(947, new int[] {123,948,319,185}),
      new State(948, new int[] {319,186,346,957,347,958}, new int[] {-109,949,-108,959,-103,954,-102,922,-14,955}),
      new State(949, new int[] {44,952,125,-109}, new int[] {-3,950}),
      new State(950, new int[] {125,951}),
      new State(951, -107),
      new State(952, new int[] {319,186,346,957,347,958,125,-110}, new int[] {-108,953,-103,954,-102,922,-14,955}),
      new State(953, -111),
      new State(954, -117),
      new State(955, new int[] {319,186}, new int[] {-103,956,-102,922}),
      new State(956, -118),
      new State(957, -103),
      new State(958, -104),
      new State(959, -112),
      new State(960, new int[] {319,186}, new int[] {-102,961,-103,926}),
      new State(961, new int[] {390,962,338,923,59,-119,44,-119}),
      new State(962, new int[] {123,963,319,185}),
      new State(963, new int[] {319,186,346,957,347,958}, new int[] {-109,964,-108,959,-103,954,-102,922,-14,955}),
      new State(964, new int[] {44,952,125,-109}, new int[] {-3,965}),
      new State(965, new int[] {125,966}),
      new State(966, -108),
      new State(967, new int[] {319,739}, new int[] {-82,968,-53,743}),
      new State(968, new int[] {59,969,44,737}),
      new State(969, -102),
      new State(970, -96, new int[] {-135,971}),
      new State(971, new int[] {123,972}),
      new State(972, -81, new int[] {-81,973}),
      new State(973, new int[] {125,974,123,7,330,23,329,31,332,152,339,164,343,178,344,474,348,478,355,481,316,488,328,497,321,504,320,97,36,98,319,507,388,895,390,190,40,277,368,281,91,298,323,303,367,312,305,318,303,320,302,331,43,334,45,336,33,338,126,340,306,343,358,354,359,362,262,366,261,368,260,370,259,374,258,376,301,378,300,380,299,382,298,384,297,386,296,388,295,390,326,392,64,397,317,400,318,401,370,402,371,403,372,404,374,405,375,406,376,407,389,408,373,409,34,410,383,433,96,445,266,451,267,453,269,457,346,477,357,524,334,534,336,544,59,550,349,551,352,567,345,570,315,637,314,638,362,640,363,685,360,907,353,911,347,967,327,-378,361,-173}, new int[] {-30,5,-31,6,-16,12,-39,505,-40,108,-44,114,-45,115,-67,116,-50,121,-25,122,-18,181,-102,183,-78,192,-48,280,-47,304,-49,308,-76,309,-41,311,-42,342,-43,353,-46,399,-71,444,-13,509,-32,903,-33,904,-12,575,-11,635,-34,905,-36,906}),
      new State(974, -97),
    };
    #endregion

    #region rules
    rules = new Rule[]
    {
    default(Rule),
    new Rule(-132, new int[]{-131,0}),
    new Rule(-133, new int[]{}),
    new Rule(-131, new int[]{-133,-81}),
    new Rule(-101, new int[]{262}),
    new Rule(-101, new int[]{261}),
    new Rule(-101, new int[]{260}),
    new Rule(-101, new int[]{259}),
    new Rule(-101, new int[]{258}),
    new Rule(-101, new int[]{263}),
    new Rule(-101, new int[]{264}),
    new Rule(-101, new int[]{265}),
    new Rule(-101, new int[]{294}),
    new Rule(-101, new int[]{306}),
    new Rule(-101, new int[]{305}),
    new Rule(-101, new int[]{326}),
    new Rule(-101, new int[]{327}),
    new Rule(-101, new int[]{308}),
    new Rule(-101, new int[]{309}),
    new Rule(-101, new int[]{310}),
    new Rule(-101, new int[]{328}),
    new Rule(-101, new int[]{329}),
    new Rule(-101, new int[]{330}),
    new Rule(-101, new int[]{331}),
    new Rule(-101, new int[]{332}),
    new Rule(-101, new int[]{333}),
    new Rule(-101, new int[]{334}),
    new Rule(-101, new int[]{335}),
    new Rule(-101, new int[]{336}),
    new Rule(-101, new int[]{337}),
    new Rule(-101, new int[]{338}),
    new Rule(-101, new int[]{349}),
    new Rule(-101, new int[]{350}),
    new Rule(-101, new int[]{351}),
    new Rule(-101, new int[]{352}),
    new Rule(-101, new int[]{353}),
    new Rule(-101, new int[]{354}),
    new Rule(-101, new int[]{355}),
    new Rule(-101, new int[]{356}),
    new Rule(-101, new int[]{357}),
    new Rule(-101, new int[]{358}),
    new Rule(-101, new int[]{359}),
    new Rule(-101, new int[]{344}),
    new Rule(-101, new int[]{345}),
    new Rule(-101, new int[]{346}),
    new Rule(-101, new int[]{347}),
    new Rule(-101, new int[]{348}),
    new Rule(-101, new int[]{266}),
    new Rule(-101, new int[]{267}),
    new Rule(-101, new int[]{367}),
    new Rule(-101, new int[]{339}),
    new Rule(-101, new int[]{340}),
    new Rule(-101, new int[]{341}),
    new Rule(-101, new int[]{342}),
    new Rule(-101, new int[]{343}),
    new Rule(-101, new int[]{368}),
    new Rule(-101, new int[]{369}),
    new Rule(-101, new int[]{364}),
    new Rule(-101, new int[]{365}),
    new Rule(-101, new int[]{388}),
    new Rule(-101, new int[]{362}),
    new Rule(-101, new int[]{363}),
    new Rule(-101, new int[]{361}),
    new Rule(-101, new int[]{373}),
    new Rule(-101, new int[]{374}),
    new Rule(-101, new int[]{376}),
    new Rule(-101, new int[]{375}),
    new Rule(-101, new int[]{370}),
    new Rule(-101, new int[]{371}),
    new Rule(-101, new int[]{372}),
    new Rule(-101, new int[]{389}),
    new Rule(-100, new int[]{-101}),
    new Rule(-100, new int[]{316}),
    new Rule(-100, new int[]{315}),
    new Rule(-100, new int[]{314}),
    new Rule(-100, new int[]{313}),
    new Rule(-100, new int[]{312}),
    new Rule(-100, new int[]{311}),
    new Rule(-99, new int[]{319}),
    new Rule(-99, new int[]{-100}),
    new Rule(-81, new int[]{-81,-30}),
    new Rule(-81, new int[]{}),
    new Rule(-102, new int[]{319}),
    new Rule(-102, new int[]{-102,390,319}),
    new Rule(-18, new int[]{-102}),
    new Rule(-18, new int[]{388,390,-102}),
    new Rule(-18, new int[]{390,-102}),
    new Rule(-30, new int[]{-31}),
    new Rule(-30, new int[]{-32}),
    new Rule(-30, new int[]{-33}),
    new Rule(-30, new int[]{-34}),
    new Rule(-30, new int[]{-36}),
    new Rule(-30, new int[]{360,40,41,59}),
    new Rule(-30, new int[]{388,-102,59}),
    new Rule(-134, new int[]{}),
    new Rule(-30, new int[]{388,-102,-15,-134,123,-81,125}),
    new Rule(-135, new int[]{}),
    new Rule(-30, new int[]{388,-15,-135,123,-81,125}),
    new Rule(-30, new int[]{353,-130,59}),
    new Rule(-30, new int[]{353,-14,-129,59}),
    new Rule(-30, new int[]{353,-128,59}),
    new Rule(-30, new int[]{353,-14,-128,59}),
    new Rule(-30, new int[]{347,-82,59}),
    new Rule(-14, new int[]{346}),
    new Rule(-14, new int[]{347}),
    new Rule(-129, new int[]{-102,390,123,-107,-3,125}),
    new Rule(-129, new int[]{390,-102,390,123,-107,-3,125}),
    new Rule(-130, new int[]{-102,390,123,-109,-3,125}),
    new Rule(-130, new int[]{390,-102,390,123,-109,-3,125}),
    new Rule(-3, new int[]{}),
    new Rule(-3, new int[]{44}),
    new Rule(-109, new int[]{-109,44,-108}),
    new Rule(-109, new int[]{-108}),
    new Rule(-107, new int[]{-107,44,-103}),
    new Rule(-107, new int[]{-103}),
    new Rule(-128, new int[]{-128,44,-106}),
    new Rule(-128, new int[]{-106}),
    new Rule(-108, new int[]{-103}),
    new Rule(-108, new int[]{-14,-103}),
    new Rule(-103, new int[]{-102}),
    new Rule(-103, new int[]{-102,338,319}),
    new Rule(-106, new int[]{-103}),
    new Rule(-106, new int[]{390,-103}),
    new Rule(-82, new int[]{-82,44,-53}),
    new Rule(-82, new int[]{-53}),
    new Rule(-84, new int[]{-84,-79}),
    new Rule(-84, new int[]{}),
    new Rule(-79, new int[]{-31}),
    new Rule(-79, new int[]{-32}),
    new Rule(-79, new int[]{-33}),
    new Rule(-79, new int[]{-34}),
    new Rule(-79, new int[]{-36}),
    new Rule(-79, new int[]{360,40,41,59}),
    new Rule(-31, new int[]{123,-84,125}),
    new Rule(-31, new int[]{-16,-51,-17}),
    new Rule(-31, new int[]{-16,-52,-17}),
    new Rule(-31, new int[]{330,40,-39,41,-16,-70,-17}),
    new Rule(-31, new int[]{329,-16,-31,330,40,-39,41,59,-17}),
    new Rule(-31, new int[]{332,40,-86,59,-86,59,-86,41,-16,-68,-17}),
    new Rule(-31, new int[]{339,40,-39,41,-16,-96,-17}),
    new Rule(-31, new int[]{343,-58,59}),
    new Rule(-31, new int[]{344,-58,59}),
    new Rule(-31, new int[]{348,-58,59}),
    new Rule(-31, new int[]{355,-87,59}),
    new Rule(-31, new int[]{316,-88,59}),
    new Rule(-31, new int[]{328,-89,59}),
    new Rule(-31, new int[]{321}),
    new Rule(-31, new int[]{-39,59}),
    new Rule(-31, new int[]{357,40,-90,-3,41,59}),
    new Rule(-31, new int[]{334,40,-39,338,-126,41,-16,-69,-17}),
    new Rule(-31, new int[]{334,40,-39,338,-126,268,-126,41,-16,-69,-17}),
    new Rule(-31, new int[]{336,40,-82,41,-62}),
    new Rule(-31, new int[]{59}),
    new Rule(-31, new int[]{349,123,-84,125,-16,-98,-74,-17}),
    new Rule(-31, new int[]{352,-39,59}),
    new Rule(-31, new int[]{345,319,59}),
    new Rule(-31, new int[]{319,58}),
    new Rule(-98, new int[]{}),
    new Rule(-98, new int[]{-98,350,40,-27,320,41,123,-84,125}),
    new Rule(-27, new int[]{-18}),
    new Rule(-27, new int[]{-27,124,-18}),
    new Rule(-74, new int[]{}),
    new Rule(-74, new int[]{351,123,-84,125}),
    new Rule(-90, new int[]{-54}),
    new Rule(-90, new int[]{-90,44,-54}),
    new Rule(-54, new int[]{-40}),
    new Rule(-32, new int[]{-13,-4,319,-15,40,-116,41,-20,-136,-16,123,-84,125,-17,-136}),
    new Rule(-5, new int[]{}),
    new Rule(-5, new int[]{38}),
    new Rule(-6, new int[]{}),
    new Rule(-6, new int[]{391}),
    new Rule(-137, new int[]{}),
    new Rule(-33, new int[]{-12,361,319,-23,-137,-28,-15,-16,123,-85,125,-17}),
    new Rule(-12, new int[]{}),
    new Rule(-12, new int[]{-11,-12}),
    new Rule(-11, new int[]{315}),
    new Rule(-11, new int[]{314}),
    new Rule(-138, new int[]{}),
    new Rule(-34, new int[]{362,319,-138,-15,-16,123,-85,125,-17}),
    new Rule(-36, new int[]{363,319,-29,-15,-16,123,-85,125,-17}),
    new Rule(-23, new int[]{}),
    new Rule(-23, new int[]{364,-18}),
    new Rule(-29, new int[]{}),
    new Rule(-29, new int[]{364,-26}),
    new Rule(-28, new int[]{}),
    new Rule(-28, new int[]{365,-26}),
    new Rule(-126, new int[]{-40}),
    new Rule(-126, new int[]{38,-40}),
    new Rule(-126, new int[]{367,40,-123,41}),
    new Rule(-126, new int[]{91,-123,93}),
    new Rule(-68, new int[]{-31}),
    new Rule(-68, new int[]{58,-84,333,59}),
    new Rule(-69, new int[]{-31}),
    new Rule(-69, new int[]{58,-84,335,59}),
    new Rule(-62, new int[]{-31}),
    new Rule(-62, new int[]{58,-84,337,59}),
    new Rule(-96, new int[]{123,-95,125}),
    new Rule(-96, new int[]{123,59,-95,125}),
    new Rule(-96, new int[]{58,-95,340,59}),
    new Rule(-96, new int[]{58,59,-95,340,59}),
    new Rule(-95, new int[]{}),
    new Rule(-95, new int[]{-95,341,-39,-139,-84}),
    new Rule(-95, new int[]{-95,342,-139,-84}),
    new Rule(-139, new int[]{58}),
    new Rule(-139, new int[]{59}),
    new Rule(-70, new int[]{-31}),
    new Rule(-70, new int[]{58,-84,331,59}),
    new Rule(-124, new int[]{327,40,-39,41,-31}),
    new Rule(-124, new int[]{-124,308,40,-39,41,-31}),
    new Rule(-51, new int[]{-124}),
    new Rule(-51, new int[]{-124,309,-31}),
    new Rule(-125, new int[]{327,40,-39,41,58,-84}),
    new Rule(-125, new int[]{-125,308,40,-39,41,58,-84}),
    new Rule(-52, new int[]{-125,310,59}),
    new Rule(-52, new int[]{-125,309,58,-84,310,59}),
    new Rule(-116, new int[]{-117}),
    new Rule(-116, new int[]{}),
    new Rule(-117, new int[]{-114}),
    new Rule(-117, new int[]{-117,44,-114}),
    new Rule(-114, new int[]{-22,-5,-6,320}),
    new Rule(-114, new int[]{-22,-5,-6,320,61,-39}),
    new Rule(-22, new int[]{}),
    new Rule(-22, new int[]{-21}),
    new Rule(-21, new int[]{-19}),
    new Rule(-21, new int[]{63,-19}),
    new Rule(-19, new int[]{368}),
    new Rule(-19, new int[]{369}),
    new Rule(-19, new int[]{-18}),
    new Rule(-20, new int[]{}),
    new Rule(-20, new int[]{58,-21}),
    new Rule(-112, new int[]{40,41}),
    new Rule(-112, new int[]{40,-113,-3,41}),
    new Rule(-113, new int[]{-110}),
    new Rule(-113, new int[]{-113,44,-110}),
    new Rule(-110, new int[]{-39}),
    new Rule(-110, new int[]{391,-39}),
    new Rule(-87, new int[]{-87,44,-55}),
    new Rule(-87, new int[]{-55}),
    new Rule(-55, new int[]{-45}),
    new Rule(-88, new int[]{-88,44,-56}),
    new Rule(-88, new int[]{-56}),
    new Rule(-56, new int[]{320}),
    new Rule(-56, new int[]{320,61,-39}),
    new Rule(-85, new int[]{-85,-80}),
    new Rule(-85, new int[]{}),
    new Rule(-80, new int[]{-7,-94,59}),
    new Rule(-80, new int[]{-8,347,-83,59}),
    new Rule(-80, new int[]{353,-26,-77}),
    new Rule(-80, new int[]{-8,-13,-4,-99,-15,40,-116,41,-20,-136,-72,-136}),
    new Rule(-26, new int[]{-18}),
    new Rule(-26, new int[]{-26,44,-18}),
    new Rule(-77, new int[]{59}),
    new Rule(-77, new int[]{123,125}),
    new Rule(-77, new int[]{123,-91,125}),
    new Rule(-91, new int[]{-63}),
    new Rule(-91, new int[]{-91,-63}),
    new Rule(-63, new int[]{-64}),
    new Rule(-63, new int[]{-65}),
    new Rule(-64, new int[]{-105,354,-26,59}),
    new Rule(-65, new int[]{-104,338,319,59}),
    new Rule(-65, new int[]{-104,338,-101,59}),
    new Rule(-65, new int[]{-104,338,-10,-99,59}),
    new Rule(-65, new int[]{-104,338,-10,59}),
    new Rule(-104, new int[]{-99}),
    new Rule(-104, new int[]{-105}),
    new Rule(-105, new int[]{-18,387,-99}),
    new Rule(-72, new int[]{59}),
    new Rule(-72, new int[]{123,-84,125}),
    new Rule(-7, new int[]{-9}),
    new Rule(-7, new int[]{356}),
    new Rule(-8, new int[]{}),
    new Rule(-8, new int[]{-9}),
    new Rule(-9, new int[]{-10}),
    new Rule(-9, new int[]{-9,-10}),
    new Rule(-10, new int[]{311}),
    new Rule(-10, new int[]{312}),
    new Rule(-10, new int[]{313}),
    new Rule(-10, new int[]{316}),
    new Rule(-10, new int[]{315}),
    new Rule(-10, new int[]{314}),
    new Rule(-94, new int[]{-94,44,-59}),
    new Rule(-94, new int[]{-59}),
    new Rule(-59, new int[]{320,-15}),
    new Rule(-59, new int[]{320,61,-39,-15}),
    new Rule(-83, new int[]{-83,44,-66}),
    new Rule(-83, new int[]{-66}),
    new Rule(-66, new int[]{-99,61,-39,-15}),
    new Rule(-53, new int[]{319,61,-39,-15}),
    new Rule(-89, new int[]{-89,44,-57}),
    new Rule(-89, new int[]{-57}),
    new Rule(-57, new int[]{-39}),
    new Rule(-86, new int[]{}),
    new Rule(-86, new int[]{-97}),
    new Rule(-97, new int[]{-97,44,-39}),
    new Rule(-97, new int[]{-39}),
    new Rule(-140, new int[]{}),
    new Rule(-127, new int[]{361,-111,-23,-140,-28,-15,-16,123,-85,125,-17}),
    new Rule(-42, new int[]{306,-24,-111}),
    new Rule(-42, new int[]{306,-127}),
    new Rule(-41, new int[]{367,40,-123,41,61,-39}),
    new Rule(-41, new int[]{91,-123,93,61,-39}),
    new Rule(-41, new int[]{-40,61,-39}),
    new Rule(-41, new int[]{-40,61,38,-40}),
    new Rule(-41, new int[]{-40,61,38,-42}),
    new Rule(-41, new int[]{305,-39}),
    new Rule(-41, new int[]{-40,281,-39}),
    new Rule(-41, new int[]{-40,280,-39}),
    new Rule(-41, new int[]{-40,279,-39}),
    new Rule(-41, new int[]{-40,270,-39}),
    new Rule(-41, new int[]{-40,278,-39}),
    new Rule(-41, new int[]{-40,277,-39}),
    new Rule(-41, new int[]{-40,276,-39}),
    new Rule(-41, new int[]{-40,275,-39}),
    new Rule(-41, new int[]{-40,274,-39}),
    new Rule(-41, new int[]{-40,273,-39}),
    new Rule(-41, new int[]{-40,272,-39}),
    new Rule(-41, new int[]{-40,271,-39}),
    new Rule(-41, new int[]{-40,303}),
    new Rule(-41, new int[]{303,-40}),
    new Rule(-41, new int[]{-40,302}),
    new Rule(-41, new int[]{302,-40}),
    new Rule(-41, new int[]{-39,283,-39}),
    new Rule(-41, new int[]{-39,284,-39}),
    new Rule(-41, new int[]{-39,263,-39}),
    new Rule(-41, new int[]{-39,265,-39}),
    new Rule(-41, new int[]{-39,264,-39}),
    new Rule(-41, new int[]{-39,124,-39}),
    new Rule(-41, new int[]{-39,38,-39}),
    new Rule(-41, new int[]{-39,94,-39}),
    new Rule(-41, new int[]{-39,46,-39}),
    new Rule(-41, new int[]{-39,43,-39}),
    new Rule(-41, new int[]{-39,45,-39}),
    new Rule(-41, new int[]{-39,42,-39}),
    new Rule(-41, new int[]{-39,304,-39}),
    new Rule(-41, new int[]{-39,47,-39}),
    new Rule(-41, new int[]{-39,37,-39}),
    new Rule(-41, new int[]{-39,293,-39}),
    new Rule(-41, new int[]{-39,292,-39}),
    new Rule(-41, new int[]{43,-39}),
    new Rule(-41, new int[]{45,-39}),
    new Rule(-41, new int[]{33,-39}),
    new Rule(-41, new int[]{126,-39}),
    new Rule(-41, new int[]{-39,287,-39}),
    new Rule(-41, new int[]{-39,286,-39}),
    new Rule(-41, new int[]{-39,289,-39}),
    new Rule(-41, new int[]{-39,288,-39}),
    new Rule(-41, new int[]{-39,60,-39}),
    new Rule(-41, new int[]{-39,291,-39}),
    new Rule(-41, new int[]{-39,62,-39}),
    new Rule(-41, new int[]{-39,290,-39}),
    new Rule(-41, new int[]{-39,285,-39}),
    new Rule(-41, new int[]{-39,294,-24}),
    new Rule(-41, new int[]{40,-39,41}),
    new Rule(-41, new int[]{-42}),
    new Rule(-41, new int[]{-39,63,-39,58,-39}),
    new Rule(-41, new int[]{-39,63,58,-39}),
    new Rule(-41, new int[]{-39,282,-39}),
    new Rule(-41, new int[]{-43}),
    new Rule(-41, new int[]{301,-39}),
    new Rule(-41, new int[]{300,-39}),
    new Rule(-41, new int[]{299,-39}),
    new Rule(-41, new int[]{298,-39}),
    new Rule(-41, new int[]{297,-39}),
    new Rule(-41, new int[]{296,-39}),
    new Rule(-41, new int[]{295,-39}),
    new Rule(-41, new int[]{326,-73}),
    new Rule(-41, new int[]{64,-39}),
    new Rule(-41, new int[]{-46}),
    new Rule(-41, new int[]{-71}),
    new Rule(-41, new int[]{266,-39}),
    new Rule(-41, new int[]{267}),
    new Rule(-41, new int[]{267,-39}),
    new Rule(-41, new int[]{267,-39,268,-39}),
    new Rule(-41, new int[]{269,-39}),
    new Rule(-41, new int[]{-13,-4,-15,40,-116,41,-118,-20,-136,-16,123,-84,125,-17,-136}),
    new Rule(-41, new int[]{316,-13,-4,-15,40,-116,41,-118,-20,-136,-16,123,-84,125,-17,-136}),
    new Rule(-13, new int[]{346}),
    new Rule(-15, new int[]{}),
    new Rule(-16, new int[]{}),
    new Rule(-17, new int[]{}),
    new Rule(-136, new int[]{}),
    new Rule(-4, new int[]{}),
    new Rule(-4, new int[]{38}),
    new Rule(-118, new int[]{}),
    new Rule(-118, new int[]{353,40,-119,41}),
    new Rule(-119, new int[]{-119,44,-115}),
    new Rule(-119, new int[]{-115}),
    new Rule(-115, new int[]{320}),
    new Rule(-115, new int[]{38,320}),
    new Rule(-49, new int[]{-18,-112}),
    new Rule(-49, new int[]{-25,387,-2,-112}),
    new Rule(-49, new int[]{-78,387,-2,-112}),
    new Rule(-49, new int[]{-76,-112}),
    new Rule(-25, new int[]{316}),
    new Rule(-25, new int[]{-18}),
    new Rule(-24, new int[]{-25}),
    new Rule(-24, new int[]{-75}),
    new Rule(-73, new int[]{}),
    new Rule(-73, new int[]{40,-58,41}),
    new Rule(-71, new int[]{96,96}),
    new Rule(-71, new int[]{96,322,96}),
    new Rule(-71, new int[]{96,-92,96}),
    new Rule(-111, new int[]{}),
    new Rule(-111, new int[]{-112}),
    new Rule(-48, new int[]{368,40,-123,41}),
    new Rule(-48, new int[]{91,-123,93}),
    new Rule(-48, new int[]{323}),
    new Rule(-46, new int[]{317}),
    new Rule(-46, new int[]{318}),
    new Rule(-46, new int[]{370}),
    new Rule(-46, new int[]{371}),
    new Rule(-46, new int[]{372}),
    new Rule(-46, new int[]{374}),
    new Rule(-46, new int[]{375}),
    new Rule(-46, new int[]{376}),
    new Rule(-46, new int[]{389}),
    new Rule(-46, new int[]{373}),
    new Rule(-46, new int[]{34,-92,34}),
    new Rule(-46, new int[]{383,384}),
    new Rule(-46, new int[]{383,322,384}),
    new Rule(-46, new int[]{383,-92,384}),
    new Rule(-46, new int[]{-48}),
    new Rule(-46, new int[]{-47}),
    new Rule(-47, new int[]{-18}),
    new Rule(-47, new int[]{-25,387,-99}),
    new Rule(-47, new int[]{-78,387,-99}),
    new Rule(-39, new int[]{-40}),
    new Rule(-39, new int[]{-41}),
    new Rule(-58, new int[]{}),
    new Rule(-58, new int[]{-39}),
    new Rule(-78, new int[]{-67}),
    new Rule(-67, new int[]{-40}),
    new Rule(-67, new int[]{40,-39,41}),
    new Rule(-67, new int[]{-48}),
    new Rule(-76, new int[]{-44}),
    new Rule(-76, new int[]{40,-39,41}),
    new Rule(-76, new int[]{-48}),
    new Rule(-44, new int[]{-45}),
    new Rule(-44, new int[]{-67,91,-58,93}),
    new Rule(-44, new int[]{-47,91,-58,93}),
    new Rule(-44, new int[]{-67,123,-39,125}),
    new Rule(-44, new int[]{-67,366,-1,-112}),
    new Rule(-44, new int[]{-49}),
    new Rule(-40, new int[]{-44}),
    new Rule(-40, new int[]{-50}),
    new Rule(-40, new int[]{-67,366,-1}),
    new Rule(-45, new int[]{320}),
    new Rule(-45, new int[]{36,123,-39,125}),
    new Rule(-45, new int[]{36,-45}),
    new Rule(-50, new int[]{-25,387,-45}),
    new Rule(-50, new int[]{-78,387,-45}),
    new Rule(-75, new int[]{-45}),
    new Rule(-75, new int[]{-75,91,-58,93}),
    new Rule(-75, new int[]{-75,123,-39,125}),
    new Rule(-75, new int[]{-75,366,-1}),
    new Rule(-75, new int[]{-25,387,-45}),
    new Rule(-75, new int[]{-75,387,-45}),
    new Rule(-2, new int[]{-99}),
    new Rule(-2, new int[]{123,-39,125}),
    new Rule(-2, new int[]{-45}),
    new Rule(-1, new int[]{319}),
    new Rule(-1, new int[]{123,-39,125}),
    new Rule(-1, new int[]{-45}),
    new Rule(-123, new int[]{-122}),
    new Rule(-120, new int[]{}),
    new Rule(-120, new int[]{-121}),
    new Rule(-122, new int[]{-122,44,-120}),
    new Rule(-122, new int[]{-120}),
    new Rule(-121, new int[]{-39,268,-39}),
    new Rule(-121, new int[]{-39}),
    new Rule(-121, new int[]{-39,268,38,-40}),
    new Rule(-121, new int[]{38,-40}),
    new Rule(-121, new int[]{-39,268,367,40,-123,41}),
    new Rule(-121, new int[]{367,40,-123,41}),
    new Rule(-92, new int[]{-92,-60}),
    new Rule(-92, new int[]{-92,322}),
    new Rule(-92, new int[]{-60}),
    new Rule(-92, new int[]{322,-60}),
    new Rule(-60, new int[]{320}),
    new Rule(-60, new int[]{320,91,-61,93}),
    new Rule(-60, new int[]{320,366,319}),
    new Rule(-60, new int[]{385,-39,125}),
    new Rule(-60, new int[]{385,324,125}),
    new Rule(-60, new int[]{385,324,91,-39,93,125}),
    new Rule(-60, new int[]{386,-40,125}),
    new Rule(-61, new int[]{319}),
    new Rule(-61, new int[]{325}),
    new Rule(-61, new int[]{320}),
    new Rule(-43, new int[]{358,40,-93,-3,41}),
    new Rule(-43, new int[]{359,40,-39,41}),
    new Rule(-43, new int[]{262,-39}),
    new Rule(-43, new int[]{261,-39}),
    new Rule(-43, new int[]{260,40,-39,41}),
    new Rule(-43, new int[]{259,-39}),
    new Rule(-43, new int[]{258,-39}),
    new Rule(-93, new int[]{-38}),
    new Rule(-93, new int[]{-93,44,-38}),
    new Rule(-38, new int[]{-39}),
    };
    #endregion

    nonTerminals = new string[] {"", "property_name", "member_name", "possible_comma", 
      "returns_ref", "is_reference", "is_variadic", "variable_modifiers", "method_modifiers", 
      "non_empty_member_modifiers", "member_modifier", "class_modifier", "class_modifiers", 
      "function", "use_type", "backup_doc_comment", "enter_scope", "exit_scope", 
      "name", "type", "return_type", "type_expr", "optional_type", "extends_from", 
      "class_name_reference", "class_name", "name_list", "catch_name_list", "implements_list", 
      "interface_extends_list", "top_statement", "statement", "function_declaration_statement", 
      "class_declaration_statement", "trait_declaration_statement", "interface_declaratioimplements_listn_statement", 
      "interface_declaration_statement", "inline_html", "isset_variable", "expr", 
      "variable", "expr_without_variable", "new_expr", "internal_functions_in_yacc", 
      "callable_variable", "simple_variable", "scalar", "constant", "dereferencable_scalar", 
      "function_call", "static_member", "if_stmt", "alt_if_stmt", "const_decl", 
      "unset_variable", "global_var", "static_var", "echo_expr", "optional_expr", 
      "property", "encaps_var", "encaps_var_offset", "declare_statement", "trait_adaptation", 
      "trait_precedence", "trait_alias", "class_const_decl", "dereferencable", 
      "for_statement", "foreach_statement", "while_statement", "backticks_expr", 
      "method_body", "exit_expr", "finally_statement", "new_variable", "callable_expr", 
      "trait_adaptations", "variable_class_name", "inner_statement", "class_statement", 
      "top_statement_list", "const_list", "class_const_list", "inner_statement_list", 
      "class_statement_list", "for_exprs", "global_var_list", "static_var_list", 
      "echo_expr_list", "unset_variables", "trait_adaptation_list", "encaps_list", 
      "isset_variables", "property_list", "case_list", "switch_case_list", "non_empty_for_exprs", 
      "catch_list", "identifier", "semi_reserved", "reserved_non_modifiers", 
      "namespace_name", "unprefixed_use_declaration", "trait_method_reference", 
      "absolute_trait_method_reference", "use_declaration", "unprefixed_use_declarations", 
      "inline_use_declaration", "inline_use_declarations", "argument", "ctor_arguments", 
      "argument_list", "non_empty_argument_list", "parameter", "lexical_var", 
      "parameter_list", "non_empty_parameter_list", "lexical_vars", "lexical_var_list", 
      "possible_array_pair", "array_pair", "non_empty_array_pair_list", "array_pair_list", 
      "if_stmt_without_else", "alt_if_stmt_without_else", "foreach_variable", 
      "anonymous_class", "use_declarations", "group_use_declaration", "mixed_group_use_declaration", 
      "start", "$accept", "@1", "@2", "@3", "backup_fn_flags", "@4", "@5", "case_separator", 
      "@6", };
  }

  #endregion

  protected override void DoAction(int action)
  {
    switch (action)
    {
      case 2: // @1 -> 
{ SetNamingContext(null); }
        return;
      case 3: // start -> @1 top_statement_list 
{ 
		AssignNamingContext(); 
        _lexer.DocBlockList.Merge(new Span(0, int.MaxValue), value_stack.array[value_stack.top-1].yyval.NodeList, _astFactory);
		AssignStatements(value_stack.array[value_stack.top-1].yyval.NodeList);
		_astRoot = _astFactory.GlobalCode(yypos, value_stack.array[value_stack.top-1].yyval.NodeList, namingContext);
	}
        return;
      case 71: // semi_reserved -> reserved_non_modifiers 
{ yyval.String = value_stack.array[value_stack.top-1].yyval.String; }
        return;
      case 78: // identifier -> T_STRING 
{ yyval.String = value_stack.array[value_stack.top-1].yyval.String; }
        return;
      case 79: // identifier -> semi_reserved 
{ yyval.String = value_stack.array[value_stack.top-1].yyval.String; }
        return;
      case 80: // top_statement_list -> top_statement_list top_statement 
{ yyval.NodeList = AddToTopStatementList<LangElement>(value_stack.array[value_stack.top-2].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 81: // top_statement_list -> 
{ yyval.NodeList = new List<LangElement>(); }
        return;
      case 82: // namespace_name -> T_STRING 
{ yyval.StringList = new List<string>() { value_stack.array[value_stack.top-1].yyval.String }; }
        return;
      case 83: // namespace_name -> namespace_name T_NS_SEPARATOR T_STRING 
{ yyval.StringList = AddToList<string>(value_stack.array[value_stack.top-3].yyval.StringList, value_stack.array[value_stack.top-1].yyval.String); }
        return;
      case 84: // name -> namespace_name 
{ yyval.QualifiedNameReference = new QualifiedNameRef(yypos, new QualifiedName(value_stack.array[value_stack.top-1].yyval.StringList, true, false)); }
        return;
      case 85: // name -> T_NAMESPACE T_NS_SEPARATOR namespace_name 
{ yyval.QualifiedNameReference = new QualifiedNameRef(yypos, MergeWithCurrentNamespace(namingContext.CurrentNamespace, value_stack.array[value_stack.top-1].yyval.StringList)); }
        return;
      case 86: // name -> T_NS_SEPARATOR namespace_name 
{ yyval.QualifiedNameReference = new QualifiedNameRef(yypos, new QualifiedName(value_stack.array[value_stack.top-1].yyval.StringList, true,  true)); }
        return;
      case 87: // top_statement -> statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 88: // top_statement -> function_declaration_statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 89: // top_statement -> class_declaration_statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 90: // top_statement -> trait_declaration_statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 91: // top_statement -> interface_declaration_statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 92: // top_statement -> T_HALT_COMPILER '(' ')' ';' 
{ yyval.Node = _astFactory.HaltCompiler(yypos); }
        return;
      case 93: // top_statement -> T_NAMESPACE namespace_name ';' 
{
			AssignNamingContext();
            SetNamingContext(value_stack.array[value_stack.top-2].yyval.StringList);
            SetDoc(yyval.Node = _currentNamespace = (NamespaceDecl)_astFactory.Namespace(yypos, namingContext.CurrentNamespace, value_stack.array[value_stack.top-2].yypos, namingContext));
		}
        return;
      case 94: // @2 -> 
{ SetNamingContext(value_stack.array[value_stack.top-2].yyval.StringList); }
        return;
      case 95: // top_statement -> T_NAMESPACE namespace_name backup_doc_comment @2 '{' top_statement_list '}' 
{ 
			yyval.Node = _astFactory.Namespace(yypos, namingContext.CurrentNamespace, value_stack.array[value_stack.top-6].yypos, CreateBlock(CombineSpans(value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-2].yyval.NodeList), namingContext);
			SetDoc(yyval.Node);
			ResetNamingContext(); 
		}
        return;
      case 96: // @3 -> 
{ SetNamingContext(null); }
        return;
      case 97: // top_statement -> T_NAMESPACE backup_doc_comment @3 '{' top_statement_list '}' 
{ 
			yyval.Node = _astFactory.Namespace(yypos, null, yypos, CreateBlock(CombineSpans(value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-2].yyval.NodeList), namingContext);
			SetDoc(yyval.Node);
			ResetNamingContext(); 
		}
        return;
      case 98: // top_statement -> T_USE mixed_group_use_declaration ';' 
{ yyval.Node = _astFactory.Use(yypos, value_stack.array[value_stack.top-2].yyval.UseList, AliasKind.Type); _contextType = AliasKind.Type;	/* TODO: Error - must contain only a single group use */	}
        return;
      case 99: // top_statement -> T_USE use_type group_use_declaration ';' 
{ yyval.Node = _astFactory.Use(yypos, value_stack.array[value_stack.top-2].yyval.UseList, value_stack.array[value_stack.top-3].yyval.Kind); _contextType = AliasKind.Type;				/* TODO: Error - must contain only a single group use */	}
        return;
      case 100: // top_statement -> T_USE use_declarations ';' 
{ yyval.Node = _astFactory.Use(yypos, value_stack.array[value_stack.top-2].yyval.UseList, AliasKind.Type); _contextType = AliasKind.Type;	/* TODO: Error - must contain only simple uses		  */	}
        return;
      case 101: // top_statement -> T_USE use_type use_declarations ';' 
{ yyval.Node = _astFactory.Use(yypos, value_stack.array[value_stack.top-2].yyval.UseList, value_stack.array[value_stack.top-3].yyval.Kind); _contextType = AliasKind.Type;				/* TODO: Error - must contain only simple uses		  */	}
        return;
      case 102: // top_statement -> T_CONST const_list ';' 
{
			SetDoc(yyval.Node = _astFactory.DeclList(yypos, PhpMemberAttributes.None, value_stack.array[value_stack.top-2].yyval.NodeList));
		}
        return;
      case 103: // use_type -> T_FUNCTION 
{ yyval.Kind = _contextType = AliasKind.Function; }
        return;
      case 104: // use_type -> T_CONST 
{ yyval.Kind = _contextType = AliasKind.Constant; }
        return;
      case 105: // group_use_declaration -> namespace_name T_NS_SEPARATOR '{' unprefixed_use_declarations possible_comma '}' 
{ yyval.UseList = new List<UseBase>() { AddAliases(yypos, value_stack.array[value_stack.top-6].yyval.StringList, CombineSpans(value_stack.array[value_stack.top-6].yypos, value_stack.array[value_stack.top-5].yypos), AddTrailingComma(value_stack.array[value_stack.top-3].yyval.AliasList, value_stack.array[value_stack.top-2].yyval.Bool), false) }; }
        return;
      case 106: // group_use_declaration -> T_NS_SEPARATOR namespace_name T_NS_SEPARATOR '{' unprefixed_use_declarations possible_comma '}' 
{ yyval.UseList = new List<UseBase>() { AddAliases(yypos, value_stack.array[value_stack.top-6].yyval.StringList, CombineSpans(value_stack.array[value_stack.top-7].yypos, value_stack.array[value_stack.top-6].yypos, value_stack.array[value_stack.top-5].yypos), AddTrailingComma(value_stack.array[value_stack.top-3].yyval.AliasList, value_stack.array[value_stack.top-2].yyval.Bool), true) }; }
        return;
      case 107: // mixed_group_use_declaration -> namespace_name T_NS_SEPARATOR '{' inline_use_declarations possible_comma '}' 
{  yyval.UseList = new List<UseBase>() { AddAliases(yypos, value_stack.array[value_stack.top-6].yyval.StringList, CombineSpans(value_stack.array[value_stack.top-6].yypos, value_stack.array[value_stack.top-5].yypos), AddTrailingComma(value_stack.array[value_stack.top-3].yyval.ContextAliasList, value_stack.array[value_stack.top-2].yyval.Bool), false) }; }
        return;
      case 108: // mixed_group_use_declaration -> T_NS_SEPARATOR namespace_name T_NS_SEPARATOR '{' inline_use_declarations possible_comma '}' 
{ yyval.UseList = new List<UseBase>() { AddAliases(yypos, value_stack.array[value_stack.top-6].yyval.StringList, CombineSpans(value_stack.array[value_stack.top-7].yypos, value_stack.array[value_stack.top-6].yypos, value_stack.array[value_stack.top-5].yypos), AddTrailingComma(value_stack.array[value_stack.top-3].yyval.ContextAliasList, value_stack.array[value_stack.top-2].yyval.Bool), true) }; }
        return;
      case 109: // possible_comma -> 
{ yyval.Bool = false; }
        return;
      case 110: // possible_comma -> ',' 
{ yyval.Bool = true;  }
        return;
      case 111: // inline_use_declarations -> inline_use_declarations ',' inline_use_declaration 
{ yyval.ContextAliasList = AddToList<ContextAlias>(value_stack.array[value_stack.top-3].yyval.ContextAliasList, value_stack.array[value_stack.top-1].yyval.ContextAlias); }
        return;
      case 112: // inline_use_declarations -> inline_use_declaration 
{ yyval.ContextAliasList = new List<ContextAlias>() { value_stack.array[value_stack.top-1].yyval.ContextAlias }; }
        return;
      case 113: // unprefixed_use_declarations -> unprefixed_use_declarations ',' unprefixed_use_declaration 
{ yyval.AliasList = AddToList<CompleteAlias>(value_stack.array[value_stack.top-3].yyval.AliasList, value_stack.array[value_stack.top-1].yyval.Alias); }
        return;
      case 114: // unprefixed_use_declarations -> unprefixed_use_declaration 
{ yyval.AliasList = new List<CompleteAlias>() { value_stack.array[value_stack.top-1].yyval.Alias }; }
        return;
      case 115: // use_declarations -> use_declarations ',' use_declaration 
{ yyval.UseList = AddToList<UseBase>(value_stack.array[value_stack.top-3].yyval.UseList, AddAlias(value_stack.array[value_stack.top-1].yyval.Alias)); }
        return;
      case 116: // use_declarations -> use_declaration 
{ yyval.UseList = new List<UseBase>() { AddAlias(value_stack.array[value_stack.top-1].yyval.Alias) }; }
        return;
      case 117: // inline_use_declaration -> unprefixed_use_declaration 
{ yyval.ContextAlias = JoinTuples(yypos, value_stack.array[value_stack.top-1].yyval.Alias, AliasKind.Type); }
        return;
      case 118: // inline_use_declaration -> use_type unprefixed_use_declaration 
{ yyval.ContextAlias = JoinTuples(yypos, value_stack.array[value_stack.top-1].yyval.Alias, (AliasKind)value_stack.array[value_stack.top-2].yyval.Kind);  }
        return;
      case 119: // unprefixed_use_declaration -> namespace_name 
{ yyval.Alias = new CompleteAlias(new QualifiedNameRef(yypos, new QualifiedName(value_stack.array[value_stack.top-1].yyval.StringList, true, false)), NameRef.Invalid); }
        return;
      case 120: // unprefixed_use_declaration -> namespace_name T_AS T_STRING 
{ yyval.Alias = new CompleteAlias(new QualifiedNameRef(value_stack.array[value_stack.top-3].yypos, new QualifiedName(value_stack.array[value_stack.top-3].yyval.StringList, true, false)), new NameRef(value_stack.array[value_stack.top-1].yypos, value_stack.array[value_stack.top-1].yyval.String)); }
        return;
      case 121: // use_declaration -> unprefixed_use_declaration 
{ yyval.Alias = value_stack.array[value_stack.top-1].yyval.Alias; }
        return;
      case 122: // use_declaration -> T_NS_SEPARATOR unprefixed_use_declaration 
{ 
				var src = value_stack.array[value_stack.top-1].yyval.Alias;
				yyval.Alias = new CompleteAlias(new QualifiedNameRef(CombineSpans(value_stack.array[value_stack.top-2].yypos, src.Item1.Span), 
					new QualifiedName(src.Item1.QualifiedName.Name, src.Item1.QualifiedName.Namespaces, true)), src.Item2); 
			}
        return;
      case 123: // const_list -> const_list ',' const_decl 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 124: // const_list -> const_decl 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 125: // inner_statement_list -> inner_statement_list inner_statement 
{ yyval.NodeList = AddToTopStatementList<LangElement>(value_stack.array[value_stack.top-2].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 126: // inner_statement_list -> 
{ yyval.NodeList = new List<LangElement>(); }
        return;
      case 127: // inner_statement -> statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 128: // inner_statement -> function_declaration_statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 129: // inner_statement -> class_declaration_statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 130: // inner_statement -> trait_declaration_statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 131: // inner_statement -> interface_declaration_statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 132: // inner_statement -> T_HALT_COMPILER '(' ')' ';' 
{ 
				yyval.Node = _astFactory.HaltCompiler(yypos); 
				_errors.Error(yypos, FatalErrors.InvalidHaltCompiler); 
			}
        return;
      case 133: // statement -> '{' inner_statement_list '}' 
{ yyval.Node = CreateBlock(yypos, value_stack.array[value_stack.top-2].yyval.NodeList); }
        return;
      case 134: // statement -> enter_scope if_stmt exit_scope 
{ yyval.Node = value_stack.array[value_stack.top-2].yyval.Node; }
        return;
      case 135: // statement -> enter_scope alt_if_stmt exit_scope 
{ yyval.Node = value_stack.array[value_stack.top-2].yyval.Node; }
        return;
      case 136: // statement -> T_WHILE '(' expr ')' enter_scope while_statement exit_scope 
{ yyval.Node = _astFactory.While(yypos, value_stack.array[value_stack.top-5].yyval.Node, CombineSpans(value_stack.array[value_stack.top-6].yypos, value_stack.array[value_stack.top-4].yypos), value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 137: // statement -> T_DO enter_scope statement T_WHILE '(' expr ')' ';' exit_scope 
{ yyval.Node = _astFactory.Do(yypos, value_stack.array[value_stack.top-7].yyval.Node, value_stack.array[value_stack.top-4].yyval.Node, CombineSpans(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-3].yypos)); }
        return;
      case 138: // statement -> T_FOR '(' for_exprs ';' for_exprs ';' for_exprs ')' enter_scope for_statement exit_scope 
{ yyval.Node = _astFactory.For(yypos, value_stack.array[value_stack.top-9].yyval.NodeList, value_stack.array[value_stack.top-7].yyval.NodeList, value_stack.array[value_stack.top-5].yyval.NodeList, CombineSpans(value_stack.array[value_stack.top-10].yypos, value_stack.array[value_stack.top-4].yypos), value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 139: // statement -> T_SWITCH '(' expr ')' enter_scope switch_case_list exit_scope 
{ yyval.Node = _astFactory.Switch(yypos, value_stack.array[value_stack.top-5].yyval.Node, value_stack.array[value_stack.top-2].yyval.NodeList); }
        return;
      case 140: // statement -> T_BREAK optional_expr ';' 
{ yyval.Node = _astFactory.Jump(yypos, JumpStmt.Types.Break, value_stack.array[value_stack.top-2].yyval.Node);}
        return;
      case 141: // statement -> T_CONTINUE optional_expr ';' 
{ yyval.Node = _astFactory.Jump(yypos, JumpStmt.Types.Continue, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 142: // statement -> T_RETURN optional_expr ';' 
{ yyval.Node = _astFactory.Jump(yypos, JumpStmt.Types.Return, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 143: // statement -> T_GLOBAL global_var_list ';' 
{ yyval.Node = _astFactory.Global(yypos, value_stack.array[value_stack.top-2].yyval.NodeList); }
        return;
      case 144: // statement -> T_STATIC static_var_list ';' 
{ yyval.Node = _astFactory.Static(yypos, value_stack.array[value_stack.top-2].yyval.NodeList); }
        return;
      case 145: // statement -> T_ECHO echo_expr_list ';' 
{ yyval.Node = _astFactory.Echo(yypos, value_stack.array[value_stack.top-2].yyval.NodeList); }
        return;
      case 146: // statement -> T_INLINE_HTML 
{ yyval.Node = _astFactory.InlineHtml(yypos, value_stack.array[value_stack.top-1].yyval.String); }
        return;
      case 147: // statement -> expr ';' 
{ yyval.Node = _astFactory.ExpressionStmt(yypos, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 148: // statement -> T_UNSET '(' unset_variables possible_comma ')' ';' 
{ yyval.Node = _astFactory.Unset(yypos, AddTrailingComma(value_stack.array[value_stack.top-4].yyval.NodeList, value_stack.array[value_stack.top-3].yyval.Bool)); }
        return;
      case 149: // statement -> T_FOREACH '(' expr T_AS foreach_variable ')' enter_scope foreach_statement exit_scope 
{ yyval.Node = _astFactory.Foreach(yypos, value_stack.array[value_stack.top-7].yyval.Node, null, value_stack.array[value_stack.top-5].yyval.ForeachVar, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 150: // statement -> T_FOREACH '(' expr T_AS foreach_variable T_DOUBLE_ARROW foreach_variable ')' enter_scope foreach_statement exit_scope 
{ yyval.Node = _astFactory.Foreach(yypos, value_stack.array[value_stack.top-9].yyval.Node, value_stack.array[value_stack.top-7].yyval.ForeachVar, value_stack.array[value_stack.top-5].yyval.ForeachVar, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 151: // statement -> T_DECLARE '(' const_list ')' declare_statement 
{ yyval.Node = _astFactory.Declare(yypos, value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 152: // statement -> ';' 
{ yyval.Node = _astFactory.EmptyStmt(yypos); }
        return;
      case 153: // statement -> T_TRY '{' inner_statement_list '}' enter_scope catch_list finally_statement exit_scope 
{ yyval.Node = _astFactory.TryCatch(yypos, CreateBlock(CombineSpans(value_stack.array[value_stack.top-7].yypos, value_stack.array[value_stack.top-5].yypos), value_stack.array[value_stack.top-6].yyval.NodeList), value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 154: // statement -> T_THROW expr ';' 
{ yyval.Node = _astFactory.Throw(yypos, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 155: // statement -> T_GOTO T_STRING ';' 
{ yyval.Node = _astFactory.Goto(yypos, value_stack.array[value_stack.top-2].yyval.String, value_stack.array[value_stack.top-2].yypos); }
        return;
      case 156: // statement -> T_STRING ':' 
{ yyval.Node = _astFactory.Label(yypos, value_stack.array[value_stack.top-2].yyval.String, value_stack.array[value_stack.top-2].yypos); }
        return;
      case 157: // catch_list -> 
{ yyval.NodeList = new List<LangElement>(); }
        return;
      case 158: // catch_list -> catch_list T_CATCH '(' catch_name_list T_VARIABLE ')' '{' inner_statement_list '}' 
{ 
				yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-9].yyval.NodeList, _astFactory.Catch(CombineSpans(value_stack.array[value_stack.top-8].yypos, value_stack.array[value_stack.top-1].yypos), _astFactory.TypeReference(value_stack.array[value_stack.top-6].yypos, value_stack.array[value_stack.top-6].yyval.TypeRefList), 
					(DirectVarUse)_astFactory.Variable(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-5].yyval.String, NullLangElement, true), CreateBlock(CombineSpans(value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-2].yyval.NodeList))); 
			}
        return;
      case 159: // catch_name_list -> name 
{ yyval.TypeRefList = new List<TypeRef>() { CreateTypeRef(value_stack.array[value_stack.top-1].yyval.QualifiedNameReference) }; }
        return;
      case 160: // catch_name_list -> catch_name_list '|' name 
{ yyval.TypeRefList = AddToList<TypeRef>(value_stack.array[value_stack.top-3].yyval.TypeRefList, CreateTypeRef(value_stack.array[value_stack.top-1].yyval.QualifiedNameReference)); }
        return;
      case 161: // finally_statement -> 
{ yyval.Node = null; }
        return;
      case 162: // finally_statement -> T_FINALLY '{' inner_statement_list '}' 
{ yyval.Node =_astFactory.Finally(yypos, CreateBlock(CombineSpans(value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-2].yyval.NodeList)); }
        return;
      case 163: // unset_variables -> unset_variable 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 164: // unset_variables -> unset_variables ',' unset_variable 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 165: // unset_variable -> variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 166: // function_declaration_statement -> function returns_ref T_STRING backup_doc_comment '(' parameter_list ')' return_type backup_fn_flags enter_scope '{' inner_statement_list '}' exit_scope backup_fn_flags 
{ 
			yyval.Node = _astFactory.Function(yypos, isConditional, value_stack.array[value_stack.top-14].yyval.Long == (long)FormalParam.Flags.IsByRef, PhpMemberAttributes.None, value_stack.array[value_stack.top-8].yyval.TypeReference, 
			new Name(value_stack.array[value_stack.top-13].yyval.String), value_stack.array[value_stack.top-13].yypos, null, value_stack.array[value_stack.top-10].yyval.FormalParamList, CombineSpans(value_stack.array[value_stack.top-11].yypos, value_stack.array[value_stack.top-9].yypos), 
			CreateBlock(CombineSpans(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-3].yypos), value_stack.array[value_stack.top-4].yyval.NodeList)); 
			SetDoc(yyval.Node);
		}
        return;
      case 167: // is_reference -> 
{ yyval.Long = 0; }
        return;
      case 168: // is_reference -> '&' 
{ yyval.Long = (long)FormalParam.Flags.IsByRef; }
        return;
      case 169: // is_variadic -> 
{ yyval.Long = 0; }
        return;
      case 170: // is_variadic -> T_ELLIPSIS 
{ yyval.Long = (long)FormalParam.Flags.IsVariadic; }
        return;
      case 171: // @4 -> 
{PushClassContext(value_stack.array[value_stack.top-2].yyval.String, value_stack.array[value_stack.top-1].yyval.TypeReference, (PhpMemberAttributes)value_stack.array[value_stack.top-4].yyval.Long);}
        return;
      case 172: // class_declaration_statement -> class_modifiers T_CLASS T_STRING extends_from @4 implements_list backup_doc_comment enter_scope '{' class_statement_list '}' exit_scope 
{ 
			yyval.Node = _astFactory.Type(yypos, CombineSpans(value_stack.array[value_stack.top-12].yypos, value_stack.array[value_stack.top-11].yypos, value_stack.array[value_stack.top-10].yypos, value_stack.array[value_stack.top-9].yypos, value_stack.array[value_stack.top-7].yypos), isConditional, (PhpMemberAttributes)value_stack.array[value_stack.top-12].yyval.Long, new Name(value_stack.array[value_stack.top-10].yyval.String), value_stack.array[value_stack.top-10].yypos, null, 
				ConvertToNamedTypeRef(value_stack.array[value_stack.top-9].yyval.TypeReference), value_stack.array[value_stack.top-7].yyval.TypeRefList.Select(ConvertToNamedTypeRef), value_stack.array[value_stack.top-3].yyval.NodeList, CombineSpans(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos)); 
			SetDoc(yyval.Node);
			PopClassContext();
		}
        return;
      case 173: // class_modifiers -> 
{ yyval.Long = (long)PhpMemberAttributes.None; }
        return;
      case 174: // class_modifiers -> class_modifier class_modifiers 
{ yyval.Long = value_stack.array[value_stack.top-2].yyval.Long | value_stack.array[value_stack.top-1].yyval.Long; }
        return;
      case 175: // class_modifier -> T_ABSTRACT 
{ yyval.Long = (long)PhpMemberAttributes.Abstract; }
        return;
      case 176: // class_modifier -> T_FINAL 
{ yyval.Long = (long)PhpMemberAttributes.Final; }
        return;
      case 177: // @5 -> 
{PushClassContext(value_stack.array[value_stack.top-1].yyval.String, null, PhpMemberAttributes.Trait);}
        return;
      case 178: // trait_declaration_statement -> T_TRAIT T_STRING @5 backup_doc_comment enter_scope '{' class_statement_list '}' exit_scope 
{ 
			yyval.Node = _astFactory.Type(yypos, CombineSpans(value_stack.array[value_stack.top-9].yypos, value_stack.array[value_stack.top-8].yypos), isConditional, PhpMemberAttributes.Trait, 
				new Name(value_stack.array[value_stack.top-8].yyval.String), value_stack.array[value_stack.top-8].yypos, null, null, new List<INamedTypeRef>(), value_stack.array[value_stack.top-3].yyval.NodeList, CombineSpans(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos)); 
			SetDoc(yyval.Node);
			PopClassContext();
		}
        return;
      case 179: // interface_declaration_statement -> T_INTERFACE T_STRING interface_extends_list backup_doc_comment enter_scope '{' class_statement_list '}' exit_scope 
{ 
			yyval.Node = _astFactory.Type(yypos, CombineSpans(value_stack.array[value_stack.top-9].yypos, value_stack.array[value_stack.top-8].yypos, value_stack.array[value_stack.top-7].yypos), isConditional, PhpMemberAttributes.Interface, 
				new Name(value_stack.array[value_stack.top-8].yyval.String), value_stack.array[value_stack.top-8].yypos, null, null, value_stack.array[value_stack.top-7].yyval.TypeRefList.Select(ConvertToNamedTypeRef), value_stack.array[value_stack.top-3].yyval.NodeList, CombineSpans(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos)); 
			SetDoc(yyval.Node);
		}
        return;
      case 180: // extends_from -> 
{ yyval.TypeReference = null; }
        return;
      case 181: // extends_from -> T_EXTENDS name 
{ yyval.TypeReference = CreateTypeRef(value_stack.array[value_stack.top-1].yyval.QualifiedNameReference); }
        return;
      case 182: // interface_extends_list -> 
{ yyval.TypeRefList = TypeRef.EmptyList; }
        return;
      case 183: // interface_extends_list -> T_EXTENDS name_list 
{ yyval.TypeRefList = value_stack.array[value_stack.top-1].yyval.TypeRefList; }
        return;
      case 184: // implements_list -> 
{ yyval.TypeRefList = TypeRef.EmptyList; }
        return;
      case 185: // implements_list -> T_IMPLEMENTS name_list 
{ yyval.TypeRefList = value_stack.array[value_stack.top-1].yyval.TypeRefList; }
        return;
      case 186: // foreach_variable -> variable 
{ yyval.ForeachVar = _astFactory.ForeachVariable(yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 187: // foreach_variable -> '&' variable 
{ yyval.ForeachVar = _astFactory.ForeachVariable(yypos, value_stack.array[value_stack.top-1].yyval.Node, true); }
        return;
      case 188: // foreach_variable -> T_LIST '(' array_pair_list ')' 
{ yyval.ForeachVar = _astFactory.ForeachVariable(yypos, _astFactory.List(yypos, value_stack.array[value_stack.top-2].yyval.ItemList, true)); }
        return;
      case 189: // foreach_variable -> '[' array_pair_list ']' 
{ yyval.ForeachVar = _astFactory.ForeachVariable(yypos, _astFactory.List(yypos, value_stack.array[value_stack.top-2].yyval.ItemList, false)); }
        return;
      case 190: // for_statement -> statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 191: // for_statement -> ':' inner_statement_list T_ENDFOR ';' 
{ yyval.Node = StatementsToBlock(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-3].yyval.NodeList, Tokens.T_ENDFOR); }
        return;
      case 192: // foreach_statement -> statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 193: // foreach_statement -> ':' inner_statement_list T_ENDFOREACH ';' 
{ yyval.Node = StatementsToBlock(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-3].yyval.NodeList, Tokens.T_ENDFOREACH); }
        return;
      case 194: // declare_statement -> statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 195: // declare_statement -> ':' inner_statement_list T_ENDDECLARE ';' 
{ yyval.Node = StatementsToBlock(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-3].yyval.NodeList, Tokens.T_ENDDECLARE); }
        return;
      case 196: // switch_case_list -> '{' case_list '}' 
{ yyval.NodeList = value_stack.array[value_stack.top-2].yyval.NodeList; }
        return;
      case 197: // switch_case_list -> '{' ';' case_list '}' 
{ yyval.NodeList = value_stack.array[value_stack.top-2].yyval.NodeList; }
        return;
      case 198: // switch_case_list -> ':' case_list T_ENDSWITCH ';' 
{ yyval.NodeList = value_stack.array[value_stack.top-3].yyval.NodeList; }
        return;
      case 199: // switch_case_list -> ':' ';' case_list T_ENDSWITCH ';' 
{ yyval.NodeList = value_stack.array[value_stack.top-3].yyval.NodeList; }
        return;
      case 200: // case_list -> 
{ yyval.NodeList = new List<LangElement>(); }
        return;
      case 201: // case_list -> case_list T_CASE expr case_separator inner_statement_list 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-5].yyval.NodeList, _astFactory.Case(CombineSpans(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yypos), 
				value_stack.array[value_stack.top-3].yyval.Node, CreateCaseBlock(CombineSpans(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-1].yyval.NodeList))); }
        return;
      case 202: // case_list -> case_list T_DEFAULT case_separator inner_statement_list 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-4].yyval.NodeList, _astFactory.Case(CombineSpans(value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yypos), 
				null, CreateCaseBlock(CombineSpans(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-1].yyval.NodeList))); }
        return;
      case 205: // while_statement -> statement 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 206: // while_statement -> ':' inner_statement_list T_ENDWHILE ';' 
{ yyval.Node = StatementsToBlock(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-3].yyval.NodeList, Tokens.T_ENDWHILE); }
        return;
      case 207: // if_stmt_without_else -> T_IF '(' expr ')' statement 
{ yyval.IfItemList = new List<IfStatement>() { 
				new IfStatement(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node) }; 
			}
        return;
      case 208: // if_stmt_without_else -> if_stmt_without_else T_ELSEIF '(' expr ')' statement 
{ yyval.IfItemList = AddToList<IfStatement>(value_stack.array[value_stack.top-6].yyval.IfItemList, 
				new IfStatement(CombineSpans(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node)); 
			}
        return;
      case 209: // if_stmt -> if_stmt_without_else 
{ ((List<IfStatement>)value_stack.array[value_stack.top-1].yyval.IfItemList).Reverse(); yyval.Node = null; 
			foreach (var item in (List<IfStatement>)value_stack.array[value_stack.top-1].yyval.IfItemList) 
				yyval.Node = _astFactory.If(yyval.Node != null? CombineSpans(item.Span, (yyval.Node).Span): item.Span, item.Condition, item.Body, yyval.Node); }
        return;
      case 210: // if_stmt -> if_stmt_without_else T_ELSE statement 
{ ((List<IfStatement>)value_stack.array[value_stack.top-3].yyval.IfItemList).Reverse(); yyval.Node = _astFactory.If(CombineSpans(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yypos), null, value_stack.array[value_stack.top-1].yyval.Node, null); 
			foreach (var item in (List<IfStatement>)value_stack.array[value_stack.top-3].yyval.IfItemList) yyval.Node = _astFactory.If(CombineSpans(item.Span, (yyval.Node).Span), item.Condition, item.Body, yyval.Node); }
        return;
      case 211: // alt_if_stmt_without_else -> T_IF '(' expr ')' ':' inner_statement_list 
{ 
				yyval.IfItemList = new List<IfStatement>() { new IfStatement(yypos, value_stack.array[value_stack.top-4].yyval.Node, StatementsToBlock(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yyval.NodeList, Tokens.END)) }; 
			}
        return;
      case 212: // alt_if_stmt_without_else -> alt_if_stmt_without_else T_ELSEIF '(' expr ')' ':' inner_statement_list 
{ 
				RebuildLast(value_stack.array[value_stack.top-7].yyval.IfItemList, value_stack.array[value_stack.top-6].yypos, Tokens.T_ELSEIF);
				yyval.IfItemList = AddToList<IfStatement>(value_stack.array[value_stack.top-7].yyval.IfItemList, 
					new IfStatement(CombineSpans(value_stack.array[value_stack.top-6].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-4].yyval.Node, StatementsToBlock(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yyval.NodeList, Tokens.END))); 
			}
        return;
      case 213: // alt_if_stmt -> alt_if_stmt_without_else T_ENDIF ';' 
{ RebuildLast(value_stack.array[value_stack.top-3].yyval.IfItemList, value_stack.array[value_stack.top-2].yypos, Tokens.T_ENDIF);
			 ((List<IfStatement>)value_stack.array[value_stack.top-3].yyval.IfItemList).Reverse(); yyval.Node = null; 
			foreach (var item in (List<IfStatement>)value_stack.array[value_stack.top-3].yyval.IfItemList) 
				yyval.Node = _astFactory.If(yyval.Node != null? CombineSpans(item.Span, (yyval.Node).Span): item.Span, item.Condition, item.Body, yyval.Node); }
        return;
      case 214: // alt_if_stmt -> alt_if_stmt_without_else T_ELSE ':' inner_statement_list T_ENDIF ';' 
{ RebuildLast(value_stack.array[value_stack.top-6].yyval.IfItemList, value_stack.array[value_stack.top-5].yypos, Tokens.T_ELSE);
			((List<IfStatement>)value_stack.array[value_stack.top-6].yyval.IfItemList).Reverse(); yyval.Node = _astFactory.If(CombineSpans(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-1].yypos), null, StatementsToBlock(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-3].yyval.NodeList, Tokens.T_ENDIF), null); 
			foreach (var item in (List<IfStatement>)value_stack.array[value_stack.top-6].yyval.IfItemList) yyval.Node = _astFactory.If(CombineSpans(item.Span, (yyval.Node).Span), item.Condition, item.Body, yyval.Node); }
        return;
      case 215: // parameter_list -> non_empty_parameter_list 
{ yyval.FormalParamList = value_stack.array[value_stack.top-1].yyval.FormalParamList; }
        return;
      case 216: // parameter_list -> 
{ yyval.FormalParamList = new List<FormalParam>(); }
        return;
      case 217: // non_empty_parameter_list -> parameter 
{ yyval.FormalParamList = new List<FormalParam>() { (FormalParam)value_stack.array[value_stack.top-1].yyval.FormalParam }; }
        return;
      case 218: // non_empty_parameter_list -> non_empty_parameter_list ',' parameter 
{ yyval.FormalParamList = AddToList<FormalParam>(value_stack.array[value_stack.top-3].yyval.FormalParamList, value_stack.array[value_stack.top-1].yyval.FormalParam); }
        return;
      case 219: // parameter -> optional_type is_reference is_variadic T_VARIABLE 
{ yyval.FormalParam = _astFactory.Parameter(CombineSpans(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-1].yyval.String, value_stack.array[value_stack.top-1].yypos, value_stack.array[value_stack.top-4].yyval.TypeReference, (FormalParam.Flags)value_stack.array[value_stack.top-3].yyval.Long|(FormalParam.Flags)value_stack.array[value_stack.top-2].yyval.Long, null); /* Important - @$ is invalid when optional_type is empty */ }
        return;
      case 220: // parameter -> optional_type is_reference is_variadic T_VARIABLE '=' expr 
{ yyval.FormalParam = _astFactory.Parameter(CombineSpans(value_stack.array[value_stack.top-6].yypos, value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-3].yyval.String, value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-6].yyval.TypeReference, (FormalParam.Flags)value_stack.array[value_stack.top-5].yyval.Long|(FormalParam.Flags)value_stack.array[value_stack.top-4].yyval.Long|FormalParam.Flags.Default, (Expression)value_stack.array[value_stack.top-1].yyval.Node); /* Important - @$ is invalid when optional_type is empty */ }
        return;
      case 221: // optional_type -> 
{ yyval.TypeReference = null; }
        return;
      case 222: // optional_type -> type_expr 
{ yyval.TypeReference = value_stack.array[value_stack.top-1].yyval.TypeReference; }
        return;
      case 223: // type_expr -> type 
{ yyval.TypeReference = value_stack.array[value_stack.top-1].yyval.TypeReference; }
        return;
      case 224: // type_expr -> '?' type 
{ yyval.TypeReference = _astFactory.NullableTypeReference(yypos, value_stack.array[value_stack.top-1].yyval.TypeReference); }
        return;
      case 225: // type -> T_ARRAY 
{ yyval.TypeReference = _astFactory.PrimitiveTypeReference(yypos, PrimitiveTypeRef.PrimitiveType.array); }
        return;
      case 226: // type -> T_CALLABLE 
{ yyval.TypeReference = _astFactory.PrimitiveTypeReference(yypos, PrimitiveTypeRef.PrimitiveType.callable); }
        return;
      case 227: // type -> name 
{ yyval.TypeReference = CreateTypeRef(value_stack.array[value_stack.top-1].yyval.QualifiedNameReference, true); }
        return;
      case 228: // return_type -> 
{ yyval.TypeReference = null; }
        return;
      case 229: // return_type -> ':' type_expr 
{ yyval.TypeReference = value_stack.array[value_stack.top-1].yyval.TypeReference; }
        return;
      case 230: // argument_list -> '(' ')' 
{ yyval.ParamList = new List<ActualParam>(); }
        return;
      case 231: // argument_list -> '(' non_empty_argument_list possible_comma ')' 
{ yyval.ParamList = AddTrailingComma(value_stack.array[value_stack.top-3].yyval.ParamList, value_stack.array[value_stack.top-2].yyval.Bool); }
        return;
      case 232: // non_empty_argument_list -> argument 
{ yyval.ParamList = new List<ActualParam>() { value_stack.array[value_stack.top-1].yyval.Param }; }
        return;
      case 233: // non_empty_argument_list -> non_empty_argument_list ',' argument 
{ yyval.ParamList = AddToList<ActualParam>(value_stack.array[value_stack.top-3].yyval.ParamList, value_stack.array[value_stack.top-1].yyval.Param); }
        return;
      case 234: // argument -> expr 
{ yyval.Param = _astFactory.ActualParameter(yypos, value_stack.array[value_stack.top-1].yyval.Node, ActualParam.Flags.Default); }
        return;
      case 235: // argument -> T_ELLIPSIS expr 
{ yyval.Param = _astFactory.ActualParameter(yypos, value_stack.array[value_stack.top-1].yyval.Node, ActualParam.Flags.IsUnpack); }
        return;
      case 236: // global_var_list -> global_var_list ',' global_var 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 237: // global_var_list -> global_var 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 238: // global_var -> simple_variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 239: // static_var_list -> static_var_list ',' static_var 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 240: // static_var_list -> static_var 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 241: // static_var -> T_VARIABLE 
{ yyval.Node = _astFactory.StaticVarDecl(yypos, new VariableName(value_stack.array[value_stack.top-1].yyval.String), null); }
        return;
      case 242: // static_var -> T_VARIABLE '=' expr 
{ yyval.Node = _astFactory.StaticVarDecl(yypos, new VariableName(value_stack.array[value_stack.top-3].yyval.String), value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 243: // class_statement_list -> class_statement_list class_statement 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-2].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 244: // class_statement_list -> 
{ yyval.NodeList = new List<LangElement>(); }
        return;
      case 245: // class_statement -> variable_modifiers property_list ';' 
{ 
				yyval.Node = _astFactory.DeclList(yypos, (PhpMemberAttributes)value_stack.array[value_stack.top-3].yyval.Long, value_stack.array[value_stack.top-2].yyval.NodeList); 
				SetDoc(yyval.Node);
			}
        return;
      case 246: // class_statement -> method_modifiers T_CONST class_const_list ';' 
{ 
				yyval.Node = _astFactory.DeclList(yypos, (PhpMemberAttributes)value_stack.array[value_stack.top-4].yyval.Long, value_stack.array[value_stack.top-2].yyval.NodeList); 
				SetDoc(yyval.Node);
			}
        return;
      case 247: // class_statement -> T_USE name_list trait_adaptations 
{ yyval.Node = _astFactory.TraitUse(yypos, value_stack.array[value_stack.top-2].yyval.TypeRefList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 248: // class_statement -> method_modifiers function returns_ref identifier backup_doc_comment '(' parameter_list ')' return_type backup_fn_flags method_body backup_fn_flags 
{	
				yyval.Node = _astFactory.Method(yypos, value_stack.array[value_stack.top-10].yyval.Long == (long)FormalParam.Flags.IsByRef, (PhpMemberAttributes)value_stack.array[value_stack.top-12].yyval.Long, 
					value_stack.array[value_stack.top-4].yyval.TypeReference, value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-9].yyval.String, value_stack.array[value_stack.top-9].yypos, null, value_stack.array[value_stack.top-6].yyval.FormalParamList, CombineSpans(value_stack.array[value_stack.top-7].yypos, value_stack.array[value_stack.top-5].yypos), null, value_stack.array[value_stack.top-2].yyval.Node);
				SetDoc(yyval.Node);
			}
        return;
      case 249: // name_list -> name 
{ yyval.TypeRefList = new List<TypeRef>() { CreateTypeRef(value_stack.array[value_stack.top-1].yyval.QualifiedNameReference) }; }
        return;
      case 250: // name_list -> name_list ',' name 
{ yyval.TypeRefList = AddToList<TypeRef>(value_stack.array[value_stack.top-3].yyval.TypeRefList, CreateTypeRef(value_stack.array[value_stack.top-1].yyval.QualifiedNameReference)); }
        return;
      case 251: // trait_adaptations -> ';' 
{ yyval.Node = null; }
        return;
      case 252: // trait_adaptations -> '{' '}' 
{ yyval.Node = _astFactory.TraitAdaptationBlock(yypos, new List<LangElement>()); }
        return;
      case 253: // trait_adaptations -> '{' trait_adaptation_list '}' 
{ yyval.Node = _astFactory.TraitAdaptationBlock(yypos, value_stack.array[value_stack.top-2].yyval.NodeList); }
        return;
      case 254: // trait_adaptation_list -> trait_adaptation 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node };
 }
        return;
      case 255: // trait_adaptation_list -> trait_adaptation_list trait_adaptation 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-2].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 256: // trait_adaptation -> trait_precedence 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 257: // trait_adaptation -> trait_alias 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 258: // trait_precedence -> absolute_trait_method_reference T_INSTEADOF name_list ';' 
{ yyval.Node = _astFactory.TraitAdaptationPrecedence(yypos, (Tuple<TypeRef,NameRef>)value_stack.array[value_stack.top-4].yyval.Object, value_stack.array[value_stack.top-2].yyval.TypeRefList); }
        return;
      case 259: // trait_alias -> trait_method_reference T_AS T_STRING ';' 
{ yyval.Node = _astFactory.TraitAdaptationAlias(yypos, (Tuple<TypeRef,NameRef>)value_stack.array[value_stack.top-4].yyval.Object, new NameRef(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.String), null); }
        return;
      case 260: // trait_alias -> trait_method_reference T_AS reserved_non_modifiers ';' 
{ yyval.Node = _astFactory.TraitAdaptationAlias(yypos, (Tuple<TypeRef,NameRef>)value_stack.array[value_stack.top-4].yyval.Object, new NameRef(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.String), null); }
        return;
      case 261: // trait_alias -> trait_method_reference T_AS member_modifier identifier ';' 
{ 
				yyval.Node = _astFactory.TraitAdaptationAlias(yypos, (Tuple<TypeRef,NameRef>)value_stack.array[value_stack.top-5].yyval.Object, new NameRef(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.String), (PhpMemberAttributes)value_stack.array[value_stack.top-3].yyval.Long); 
			}
        return;
      case 262: // trait_alias -> trait_method_reference T_AS member_modifier ';' 
{ 
				yyval.Node = _astFactory.TraitAdaptationAlias(yypos, (Tuple<TypeRef,NameRef>)value_stack.array[value_stack.top-4].yyval.Object, NameRef.Invalid, (PhpMemberAttributes)value_stack.array[value_stack.top-2].yyval.Long); 
			}
        return;
      case 263: // trait_method_reference -> identifier 
{ yyval.Object = new Tuple<TypeRef,NameRef>(null, new NameRef(value_stack.array[value_stack.top-1].yypos, value_stack.array[value_stack.top-1].yyval.String)); }
        return;
      case 264: // trait_method_reference -> absolute_trait_method_reference 
{ yyval.Object = value_stack.array[value_stack.top-1].yyval.Object; }
        return;
      case 265: // absolute_trait_method_reference -> name T_DOUBLE_COLON identifier 
{ yyval.Object = new Tuple<TypeRef,NameRef>(CreateTypeRef(value_stack.array[value_stack.top-3].yyval.QualifiedNameReference), new NameRef(value_stack.array[value_stack.top-1].yypos, value_stack.array[value_stack.top-1].yyval.String)); }
        return;
      case 266: // method_body -> ';' 
{ yyval.Node = null; }
        return;
      case 267: // method_body -> '{' inner_statement_list '}' 
{ yyval.Node = CreateBlock(CombineSpans(value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-2].yyval.NodeList); }
        return;
      case 268: // variable_modifiers -> non_empty_member_modifiers 
{ yyval.Long = value_stack.array[value_stack.top-1].yyval.Long; }
        return;
      case 269: // variable_modifiers -> T_VAR 
{ yyval.Long = (long)PhpMemberAttributes.None; }
        return;
      case 270: // method_modifiers -> 
{ yyval.Long = (long)PhpMemberAttributes.None; }
        return;
      case 271: // method_modifiers -> non_empty_member_modifiers 
{ yyval.Long = value_stack.array[value_stack.top-1].yyval.Long; }
        return;
      case 272: // non_empty_member_modifiers -> member_modifier 
{ yyval.Long = value_stack.array[value_stack.top-1].yyval.Long; }
        return;
      case 273: // non_empty_member_modifiers -> non_empty_member_modifiers member_modifier 
{ yyval.Long = value_stack.array[value_stack.top-2].yyval.Long | value_stack.array[value_stack.top-1].yyval.Long; }
        return;
      case 274: // member_modifier -> T_PUBLIC 
{ yyval.Long = (long)PhpMemberAttributes.Public; }
        return;
      case 275: // member_modifier -> T_PROTECTED 
{ yyval.Long = (long)PhpMemberAttributes.Protected; }
        return;
      case 276: // member_modifier -> T_PRIVATE 
{ yyval.Long = (long)PhpMemberAttributes.Private; }
        return;
      case 277: // member_modifier -> T_STATIC 
{ yyval.Long = (long)PhpMemberAttributes.Static; }
        return;
      case 278: // member_modifier -> T_ABSTRACT 
{ yyval.Long = (long)PhpMemberAttributes.Abstract; }
        return;
      case 279: // member_modifier -> T_FINAL 
{ yyval.Long = (long)PhpMemberAttributes.Final; }
        return;
      case 280: // property_list -> property_list ',' property 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 281: // property_list -> property 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 282: // property -> T_VARIABLE backup_doc_comment 
{ SetMemberDoc(yyval.Node = _astFactory.FieldDecl(yypos, new VariableName(value_stack.array[value_stack.top-2].yyval.String), null)); }
        return;
      case 283: // property -> T_VARIABLE '=' expr backup_doc_comment 
{ SetMemberDoc(yyval.Node = _astFactory.FieldDecl(yypos, new VariableName(value_stack.array[value_stack.top-4].yyval.String), (Expression)value_stack.array[value_stack.top-2].yyval.Node)); }
        return;
      case 284: // class_const_list -> class_const_list ',' class_const_decl 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 285: // class_const_list -> class_const_decl 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 286: // class_const_decl -> identifier '=' expr backup_doc_comment 
{
		yyval.Node = _astFactory.ClassConstDecl(yypos, new VariableName(value_stack.array[value_stack.top-4].yyval.String), value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yyval.Node); 
		SetMemberDoc(yyval.Node);
	}
        return;
      case 287: // const_decl -> T_STRING '=' expr backup_doc_comment 
{ yyval.Node = _astFactory.GlobalConstDecl(yypos, false, new VariableName(value_stack.array[value_stack.top-4].yyval.String), value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yyval.Node); 
		SetMemberDoc(yyval.Node);
	}
        return;
      case 288: // echo_expr_list -> echo_expr_list ',' echo_expr 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 289: // echo_expr_list -> echo_expr 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 290: // echo_expr -> expr 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 291: // for_exprs -> 
{ yyval.NodeList = LangElement.EmptyList; }
        return;
      case 292: // for_exprs -> non_empty_for_exprs 
{ yyval.NodeList = value_stack.array[value_stack.top-1].yyval.NodeList; }
        return;
      case 293: // non_empty_for_exprs -> non_empty_for_exprs ',' expr 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 294: // non_empty_for_exprs -> expr 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 295: // @6 -> 
{ PushAnonymousClassContext(value_stack.array[value_stack.top-1].yyval.TypeReference); }
        return;
      case 296: // anonymous_class -> T_CLASS ctor_arguments extends_from @6 implements_list backup_doc_comment enter_scope '{' class_statement_list '}' exit_scope 
{
			var typeRef = _astFactory.AnonymousTypeReference(yypos, CombineSpans(value_stack.array[value_stack.top-11].yypos, value_stack.array[value_stack.top-10].yypos, value_stack.array[value_stack.top-9].yypos, value_stack.array[value_stack.top-7].yypos), isConditional, PhpMemberAttributes.None, null, ConvertToNamedTypeRef(value_stack.array[value_stack.top-9].yyval.TypeReference), value_stack.array[value_stack.top-7].yyval.TypeRefList.Select(ConvertToNamedTypeRef), value_stack.array[value_stack.top-3].yyval.NodeList, CombineSpans(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-2].yypos));
			SetDoc(((AnonymousTypeRef)typeRef).TypeDeclaration);
			yyval.AnonymousClass = new AnonymousClass(typeRef, value_stack.array[value_stack.top-10].yyval.ParamList, value_stack.array[value_stack.top-10].yypos); 
			PopClassContext();
		}
        return;
      case 297: // new_expr -> T_NEW class_name_reference ctor_arguments 
{ yyval.Node = _astFactory.New(yypos, value_stack.array[value_stack.top-2].yyval.TypeReference, value_stack.array[value_stack.top-1].yyval.ParamList, value_stack.array[value_stack.top-1].yypos); }
        return;
      case 298: // new_expr -> T_NEW anonymous_class 
{ yyval.Node = _astFactory.New(yypos, ((AnonymousClass)value_stack.array[value_stack.top-1].yyval.AnonymousClass).Item1, ((AnonymousClass)value_stack.array[value_stack.top-1].yyval.AnonymousClass).Item2, ((AnonymousClass)value_stack.array[value_stack.top-1].yyval.AnonymousClass).Item3); }
        return;
      case 299: // expr_without_variable -> T_LIST '(' array_pair_list ')' '=' expr 
{ yyval.Node = _astFactory.Assignment(yypos, _astFactory.List(Span.Combine(value_stack.array[value_stack.top-6].yypos, value_stack.array[value_stack.top-3].yypos), value_stack.array[value_stack.top-4].yyval.ItemList, true), value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignValue); }
        return;
      case 300: // expr_without_variable -> '[' array_pair_list ']' '=' expr 
{ yyval.Node = _astFactory.Assignment(yypos, _astFactory.List(CombineSpans(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-3].yypos), value_stack.array[value_stack.top-4].yyval.ItemList, false), value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignValue); }
        return;
      case 301: // expr_without_variable -> variable '=' expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignValue); }
        return;
      case 302: // expr_without_variable -> variable '=' '&' variable 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-4].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignRef); }
        return;
      case 303: // expr_without_variable -> variable '=' '&' new_expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-4].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignRef); _errors.Error(yypos, Warnings.AssignNewByRefDeprecated); }
        return;
      case 304: // expr_without_variable -> T_CLONE expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.Clone,   (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 305: // expr_without_variable -> variable T_PLUS_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignAdd); }
        return;
      case 306: // expr_without_variable -> variable T_MINUS_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignSub); }
        return;
      case 307: // expr_without_variable -> variable T_MUL_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignMul); }
        return;
      case 308: // expr_without_variable -> variable T_POW_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignPow); }
        return;
      case 309: // expr_without_variable -> variable T_DIV_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignDiv); }
        return;
      case 310: // expr_without_variable -> variable T_CONCAT_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignAppend); }
        return;
      case 311: // expr_without_variable -> variable T_MOD_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignMod); }
        return;
      case 312: // expr_without_variable -> variable T_AND_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignAnd); }
        return;
      case 313: // expr_without_variable -> variable T_OR_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignOr); }
        return;
      case 314: // expr_without_variable -> variable T_XOR_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignXor); }
        return;
      case 315: // expr_without_variable -> variable T_SL_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignShiftLeft); }
        return;
      case 316: // expr_without_variable -> variable T_SR_EQUAL expr 
{ yyval.Node = _astFactory.Assignment(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node, Operations.AssignShiftRight); }
        return;
      case 317: // expr_without_variable -> variable T_INC 
{ yyval.Node = CreateIncDec(yypos, value_stack.array[value_stack.top-2].yyval.Node, true, true); }
        return;
      case 318: // expr_without_variable -> T_INC variable 
{ yyval.Node = CreateIncDec(yypos, value_stack.array[value_stack.top-1].yyval.Node, true,  false); }
        return;
      case 319: // expr_without_variable -> variable T_DEC 
{ yyval.Node = CreateIncDec(yypos, value_stack.array[value_stack.top-2].yyval.Node, false, true); }
        return;
      case 320: // expr_without_variable -> T_DEC variable 
{ yyval.Node = CreateIncDec(yypos, value_stack.array[value_stack.top-1].yyval.Node, false, false); }
        return;
      case 321: // expr_without_variable -> expr T_BOOLEAN_OR expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Or,   value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 322: // expr_without_variable -> expr T_BOOLEAN_AND expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.And,  value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 323: // expr_without_variable -> expr T_LOGICAL_OR expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Or,   value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 324: // expr_without_variable -> expr T_LOGICAL_AND expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.And,  value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 325: // expr_without_variable -> expr T_LOGICAL_XOR expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Xor,  value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 326: // expr_without_variable -> expr '|' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.BitOr,  value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 327: // expr_without_variable -> expr '&' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.BitAnd, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 328: // expr_without_variable -> expr '^' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.BitXor, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 329: // expr_without_variable -> expr '.' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Concat, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 330: // expr_without_variable -> expr '+' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Add,    value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 331: // expr_without_variable -> expr '-' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Sub,    value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 332: // expr_without_variable -> expr '*' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Mul,    value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 333: // expr_without_variable -> expr T_POW expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Pow,    value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 334: // expr_without_variable -> expr '/' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Div,    value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 335: // expr_without_variable -> expr '%' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Mod,    value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 336: // expr_without_variable -> expr T_SL expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.ShiftLeft,  value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 337: // expr_without_variable -> expr T_SR expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.ShiftRight, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 338: // expr_without_variable -> '+' expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.Plus,   (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 339: // expr_without_variable -> '-' expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.Minus,   (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 340: // expr_without_variable -> '!' expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.LogicNegation, (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 341: // expr_without_variable -> '~' expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.BitNegation,   (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 342: // expr_without_variable -> expr T_IS_IDENTICAL expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Identical, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 343: // expr_without_variable -> expr T_IS_NOT_IDENTICAL expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.NotIdentical, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 344: // expr_without_variable -> expr T_IS_EQUAL expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Equal, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 345: // expr_without_variable -> expr T_IS_NOT_EQUAL expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.NotEqual, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 346: // expr_without_variable -> expr '<' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.LessThan, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 347: // expr_without_variable -> expr T_IS_SMALLER_OR_EQUAL expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.LessThanOrEqual, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 348: // expr_without_variable -> expr '>' expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.GreaterThan, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 349: // expr_without_variable -> expr T_IS_GREATER_OR_EQUAL expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.GreaterThanOrEqual, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 350: // expr_without_variable -> expr T_SPACESHIP expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Spaceship, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 351: // expr_without_variable -> expr T_INSTANCEOF class_name_reference 
{ yyval.Node = _astFactory.InstanceOf(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.TypeReference); }
        return;
      case 352: // expr_without_variable -> '(' expr ')' 
{ yyval.Node = _astFactory.EncapsedExpression(yypos, value_stack.array[value_stack.top-2].yyval.Node, Tokens.T_LPAREN); }
        return;
      case 353: // expr_without_variable -> new_expr 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 354: // expr_without_variable -> expr '?' expr ':' expr 
{ yyval.Node = _astFactory.ConditionalEx(yypos, value_stack.array[value_stack.top-5].yyval.Node, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 355: // expr_without_variable -> expr '?' ':' expr 
{ yyval.Node = _astFactory.ConditionalEx(yypos, value_stack.array[value_stack.top-4].yyval.Node, null, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 356: // expr_without_variable -> expr T_COALESCE expr 
{ yyval.Node = _astFactory.BinaryOperation(yypos, Operations.Coalesce, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 357: // expr_without_variable -> internal_functions_in_yacc 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 358: // expr_without_variable -> T_INT_CAST expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.Int64Cast,   (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 359: // expr_without_variable -> T_DOUBLE_CAST expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.DoubleCast, (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 360: // expr_without_variable -> T_STRING_CAST expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.StringCast, (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 361: // expr_without_variable -> T_ARRAY_CAST expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.ArrayCast,  (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 362: // expr_without_variable -> T_OBJECT_CAST expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.ObjectCast, (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 363: // expr_without_variable -> T_BOOL_CAST expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.BoolCast,   (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 364: // expr_without_variable -> T_UNSET_CAST expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.UnsetCast,  (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 365: // expr_without_variable -> T_EXIT exit_expr 
{ yyval.Node = _astFactory.Exit(yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 366: // expr_without_variable -> '@' expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.AtSign,     (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 367: // expr_without_variable -> scalar 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 368: // expr_without_variable -> backticks_expr 
{ yyval.Node = _astFactory.Shell(yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 369: // expr_without_variable -> T_PRINT expr 
{ yyval.Node = _astFactory.UnaryOperation(yypos, Operations.Print, (Expression)value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 370: // expr_without_variable -> T_YIELD 
{ yyval.Node = _astFactory.Yield(yypos, null, null); }
        return;
      case 371: // expr_without_variable -> T_YIELD expr 
{ yyval.Node = _astFactory.Yield(yypos, null, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 372: // expr_without_variable -> T_YIELD expr T_DOUBLE_ARROW expr 
{ yyval.Node = _astFactory.Yield(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 373: // expr_without_variable -> T_YIELD_FROM expr 
{ yyval.Node = _astFactory.YieldFrom(yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 374: // expr_without_variable -> function returns_ref backup_doc_comment '(' parameter_list ')' lexical_vars return_type backup_fn_flags enter_scope '{' inner_statement_list '}' exit_scope backup_fn_flags 
{ 
				yyval.Node = _astFactory.Lambda(yypos, CombineSpans(value_stack.array[value_stack.top-15].yypos, value_stack.array[value_stack.top-10].yypos, value_stack.array[value_stack.top-9].yypos, value_stack.array[value_stack.top-8].yypos), value_stack.array[value_stack.top-14].yyval.Long == (long)FormalParam.Flags.IsByRef, PhpMemberAttributes.None, value_stack.array[value_stack.top-8].yyval.TypeReference, 
				value_stack.array[value_stack.top-11].yyval.FormalParamList, CombineSpans(value_stack.array[value_stack.top-12].yypos, value_stack.array[value_stack.top-10].yypos), value_stack.array[value_stack.top-9].yyval.FormalParamList, CreateBlock(CombineSpans(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-3].yypos), value_stack.array[value_stack.top-4].yyval.NodeList)); 
				SetDoc(yyval.Node);
			}
        return;
      case 375: // expr_without_variable -> T_STATIC function returns_ref backup_doc_comment '(' parameter_list ')' lexical_vars return_type backup_fn_flags enter_scope '{' inner_statement_list '}' exit_scope backup_fn_flags 
{ 
				yyval.Node = _astFactory.Lambda(yypos, CombineSpans(value_stack.array[value_stack.top-16].yypos, value_stack.array[value_stack.top-10].yypos, value_stack.array[value_stack.top-9].yypos, value_stack.array[value_stack.top-8].yypos), value_stack.array[value_stack.top-14].yyval.Long == (long)FormalParam.Flags.IsByRef, PhpMemberAttributes.Static, value_stack.array[value_stack.top-8].yyval.TypeReference, 
				value_stack.array[value_stack.top-11].yyval.FormalParamList, CombineSpans(value_stack.array[value_stack.top-12].yypos, value_stack.array[value_stack.top-10].yypos), value_stack.array[value_stack.top-9].yyval.FormalParamList, CreateBlock(CombineSpans(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-3].yypos), value_stack.array[value_stack.top-4].yyval.NodeList)); 
				SetDoc(yyval.Node);
			}
        return;
      case 377: // backup_doc_comment -> 
{ }
        return;
      case 378: // enter_scope -> 
{ _currentScope.Increment(); }
        return;
      case 379: // exit_scope -> 
{ _currentScope.Decrement(); }
        return;
      case 380: // backup_fn_flags -> 
{  }
        return;
      case 381: // returns_ref -> 
{ yyval.Long = 0; }
        return;
      case 382: // returns_ref -> '&' 
{ yyval.Long = (long)FormalParam.Flags.IsByRef; }
        return;
      case 383: // lexical_vars -> 
{ yyval.FormalParamList = new List<FormalParam>(); }
        return;
      case 384: // lexical_vars -> T_USE '(' lexical_var_list ')' 
{ yyval.FormalParamList = value_stack.array[value_stack.top-2].yyval.FormalParamList; }
        return;
      case 385: // lexical_var_list -> lexical_var_list ',' lexical_var 
{ yyval.FormalParamList = AddToList<FormalParam>(value_stack.array[value_stack.top-3].yyval.FormalParamList, value_stack.array[value_stack.top-1].yyval.FormalParam); }
        return;
      case 386: // lexical_var_list -> lexical_var 
{ yyval.FormalParamList = new List<FormalParam>() { (FormalParam)value_stack.array[value_stack.top-1].yyval.FormalParam }; }
        return;
      case 387: // lexical_var -> T_VARIABLE 
{ yyval.FormalParam = _astFactory.Parameter(yypos, value_stack.array[value_stack.top-1].yyval.String, value_stack.array[value_stack.top-1].yypos, null, FormalParam.Flags.Default, null); }
        return;
      case 388: // lexical_var -> '&' T_VARIABLE 
{ yyval.FormalParam = _astFactory.Parameter(yypos, value_stack.array[value_stack.top-1].yyval.String, value_stack.array[value_stack.top-1].yypos, null, FormalParam.Flags.IsByRef, null); }
        return;
      case 389: // function_call -> name argument_list 
{ yyval.Node = _astFactory.Call(yypos, TranslateQNRFunction(value_stack.array[value_stack.top-2].yyval.QualifiedNameReference), new CallSignature(value_stack.array[value_stack.top-1].yyval.ParamList, value_stack.array[value_stack.top-1].yypos) { Position = value_stack.array[value_stack.top-1].yypos }, null); }
        return;
      case 390: // function_call -> class_name T_DOUBLE_COLON member_name argument_list 
{
				if(value_stack.array[value_stack.top-2].yyval.Object is Name)
					yyval.Node = _astFactory.Call(yypos, (Name)value_stack.array[value_stack.top-2].yyval.Object, value_stack.array[value_stack.top-2].yypos, new CallSignature(value_stack.array[value_stack.top-1].yyval.ParamList, value_stack.array[value_stack.top-1].yypos) { Position = value_stack.array[value_stack.top-1].yypos }, value_stack.array[value_stack.top-4].yyval.TypeReference); 
				else
					yyval.Node = _astFactory.Call(yypos, (LangElement)value_stack.array[value_stack.top-2].yyval.Object, new CallSignature(value_stack.array[value_stack.top-1].yyval.ParamList, value_stack.array[value_stack.top-1].yypos) { Position = value_stack.array[value_stack.top-1].yypos }, value_stack.array[value_stack.top-4].yyval.TypeReference); 
			}
        return;
      case 391: // function_call -> variable_class_name T_DOUBLE_COLON member_name argument_list 
{
				if(value_stack.array[value_stack.top-2].yyval.Object is Name)
					yyval.Node = _astFactory.Call(yypos, (Name)value_stack.array[value_stack.top-2].yyval.Object, value_stack.array[value_stack.top-2].yypos, new CallSignature(value_stack.array[value_stack.top-1].yyval.ParamList, value_stack.array[value_stack.top-1].yypos) { Position = value_stack.array[value_stack.top-1].yypos }, _astFactory.TypeReference(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-4].yyval.Node)); 
				else
					yyval.Node = _astFactory.Call(yypos, (LangElement)value_stack.array[value_stack.top-2].yyval.Object, new CallSignature(value_stack.array[value_stack.top-1].yyval.ParamList, value_stack.array[value_stack.top-1].yypos) { Position = value_stack.array[value_stack.top-1].yypos }, _astFactory.TypeReference(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-4].yyval.Node)); 
			}
        return;
      case 392: // function_call -> callable_expr argument_list 
{ yyval.Node = _astFactory.Call(yypos, value_stack.array[value_stack.top-2].yyval.Node, new CallSignature(value_stack.array[value_stack.top-1].yyval.ParamList, value_stack.array[value_stack.top-1].yypos) { Position = value_stack.array[value_stack.top-1].yypos }, NullLangElement);}
        return;
      case 393: // class_name -> T_STATIC 
{ yyval.TypeReference = _astFactory.ReservedTypeReference(yypos, _reservedTypeStatic); }
        return;
      case 394: // class_name -> name 
{ yyval.TypeReference = CreateTypeRef(value_stack.array[value_stack.top-1].yyval.QualifiedNameReference); }
        return;
      case 395: // class_name_reference -> class_name 
{ yyval.TypeReference = value_stack.array[value_stack.top-1].yyval.TypeReference; }
        return;
      case 396: // class_name_reference -> new_variable 
{ yyval.TypeReference = _astFactory.TypeReference(yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 397: // exit_expr -> 
{ yyval.Node = null; }
        return;
      case 398: // exit_expr -> '(' optional_expr ')' 
{ yyval.Node = value_stack.array[value_stack.top-2].yyval.Node == null? null: _astFactory.EncapsedExpression(yypos, value_stack.array[value_stack.top-2].yyval.Node, Tokens.T_LPAREN); }
        return;
      case 399: // backticks_expr -> '`' '`' 
{ yyval.Node = _astFactory.Literal(yypos, string.Empty, "``"); }
        return;
      case 400: // backticks_expr -> '`' T_ENCAPSED_AND_WHITESPACE '`' 
{ yyval.Node = _astFactory.Literal(yypos, value_stack.array[value_stack.top-2].yyval.Strings.Key, string.Format("`{0}`", value_stack.array[value_stack.top-2].yyval.Strings.Value)); }
        return;
      case 401: // backticks_expr -> '`' encaps_list '`' 
{ yyval.Node = _astFactory.StringEncapsedExpression(yypos, _astFactory.Concat(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.NodeList), Tokens.T_BACKQUOTE); }
        return;
      case 402: // ctor_arguments -> 
{ yyval.ParamList = new List<ActualParam>(); }
        return;
      case 403: // ctor_arguments -> argument_list 
{ yyval.ParamList = value_stack.array[value_stack.top-1].yyval.ParamList; }
        return;
      case 404: // dereferencable_scalar -> T_ARRAY '(' array_pair_list ')' 
{ yyval.Node = _astFactory.NewArray(yypos, value_stack.array[value_stack.top-2].yyval.ItemList, true); }
        return;
      case 405: // dereferencable_scalar -> '[' array_pair_list ']' 
{ yyval.Node = _astFactory.NewArray(yypos, value_stack.array[value_stack.top-2].yyval.ItemList, false); }
        return;
      case 406: // dereferencable_scalar -> T_CONSTANT_ENCAPSED_STRING 
{ yyval.Node = _astFactory.Literal(yypos, value_stack.array[value_stack.top-1].yyval.String, _lexer.TokenText); }
        return;
      case 407: // scalar -> T_LNUMBER 
{ yyval.Node = _astFactory.Literal(yypos, value_stack.array[value_stack.top-1].yyval.Long, _lexer.TokenText); }
        return;
      case 408: // scalar -> T_DNUMBER 
{ yyval.Node = _astFactory.Literal(yypos, value_stack.array[value_stack.top-1].yyval.Double, _lexer.TokenText); }
        return;
      case 409: // scalar -> T_LINE 
{ yyval.Node = _astFactory.PseudoConstUse(yypos, PseudoConstUse.Types.Line); }
        return;
      case 410: // scalar -> T_FILE 
{ yyval.Node = _astFactory.PseudoConstUse(yypos, PseudoConstUse.Types.File); }
        return;
      case 411: // scalar -> T_DIR 
{ yyval.Node = _astFactory.PseudoConstUse(yypos, PseudoConstUse.Types.Dir); }
        return;
      case 412: // scalar -> T_TRAIT_C 
{ yyval.Node = _astFactory.PseudoConstUse(yypos, PseudoConstUse.Types.Trait); }
        return;
      case 413: // scalar -> T_METHOD_C 
{ yyval.Node = _astFactory.PseudoConstUse(yypos, PseudoConstUse.Types.Method); }
        return;
      case 414: // scalar -> T_FUNC_C 
{ yyval.Node = _astFactory.PseudoConstUse(yypos, PseudoConstUse.Types.Function); }
        return;
      case 415: // scalar -> T_NS_C 
{ yyval.Node = _astFactory.PseudoConstUse(yypos, PseudoConstUse.Types.Namespace); }
        return;
      case 416: // scalar -> T_CLASS_C 
{ yyval.Node = _astFactory.PseudoConstUse(yypos, PseudoConstUse.Types.Class); }
        return;
      case 417: // scalar -> '"' encaps_list '"' 
{ yyval.Node = _astFactory.StringEncapsedExpression(yypos, _astFactory.Concat(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.NodeList), Tokens.T_DOUBLE_QUOTES); }
        return;
      case 418: // scalar -> T_START_HEREDOC T_END_HEREDOC 
{ yyval.Node = _astFactory.HeredocExpression(yypos, _astFactory.Literal(new Span(value_stack.array[value_stack.top-2].yypos.End, 0), "", ""), value_stack.array[value_stack.top-2].yyval.QuoteToken, value_stack.array[value_stack.top-2].yyval.String); }
        return;
      case 419: // scalar -> T_START_HEREDOC T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC 
{ yyval.Node = _astFactory.HeredocExpression(yypos, _astFactory.Literal(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.Strings.Key, value_stack.array[value_stack.top-2].yyval.Strings.Value), value_stack.array[value_stack.top-3].yyval.QuoteToken, value_stack.array[value_stack.top-3].yyval.String); }
        return;
      case 420: // scalar -> T_START_HEREDOC encaps_list T_END_HEREDOC 
{ yyval.Node = _astFactory.HeredocExpression(yypos, _astFactory.Concat(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.NodeList), value_stack.array[value_stack.top-3].yyval.QuoteToken, value_stack.array[value_stack.top-3].yyval.String); }
        return;
      case 421: // scalar -> dereferencable_scalar 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 422: // scalar -> constant 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 423: // constant -> name 
{ yyval.Node = _astFactory.ConstUse(yypos, TranslateQNRConstant(value_stack.array[value_stack.top-1].yyval.QualifiedNameReference)); }
        return;
      case 424: // constant -> class_name T_DOUBLE_COLON identifier 
{ yyval.Node = _astFactory.ClassConstUse(yypos, value_stack.array[value_stack.top-3].yyval.TypeReference, new Name(value_stack.array[value_stack.top-1].yyval.String), value_stack.array[value_stack.top-1].yypos); }
        return;
      case 425: // constant -> variable_class_name T_DOUBLE_COLON identifier 
{ yyval.Node = _astFactory.ClassConstUse(yypos, _astFactory.TypeReference(value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-3].yyval.Node), new Name(value_stack.array[value_stack.top-1].yyval.String), value_stack.array[value_stack.top-1].yypos); }
        return;
      case 426: // expr -> variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 427: // expr -> expr_without_variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 428: // optional_expr -> 
{ yyval.Node = null; }
        return;
      case 429: // optional_expr -> expr 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 430: // variable_class_name -> dereferencable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; /* TODO if (!($1 is VarLikeConstructUse)) _errors.Error(@$, FatalErrors.CheckVarUseFault); */ }
        return;
      case 431: // dereferencable -> variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 432: // dereferencable -> '(' expr ')' 
{ yyval.Node = _astFactory.EncapsedExpression(yypos, value_stack.array[value_stack.top-2].yyval.Node, Tokens.T_LPAREN); }
        return;
      case 433: // dereferencable -> dereferencable_scalar 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 434: // callable_expr -> callable_variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 435: // callable_expr -> '(' expr ')' 
{ yyval.Node = _astFactory.EncapsedExpression(yypos, value_stack.array[value_stack.top-2].yyval.Node, Tokens.T_LPAREN); }
        return;
      case 436: // callable_expr -> dereferencable_scalar 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 437: // callable_variable -> simple_variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 438: // callable_variable -> dereferencable '[' optional_expr ']' 
{ yyval.Node = _astFactory.ArrayItem(yypos, false, value_stack.array[value_stack.top-4].yyval.Node, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 439: // callable_variable -> constant '[' optional_expr ']' 
{ yyval.Node = _astFactory.ArrayItem(yypos, false, value_stack.array[value_stack.top-4].yyval.Node, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 440: // callable_variable -> dereferencable '{' expr '}' 
{ yyval.Node = _astFactory.ArrayItem(yypos, true, value_stack.array[value_stack.top-4].yyval.Node, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 441: // callable_variable -> dereferencable T_OBJECT_OPERATOR property_name argument_list 
{
			if(value_stack.array[value_stack.top-2].yyval.Object is Name)
			{
				var name = new QualifiedName((Name)value_stack.array[value_stack.top-2].yyval.Object);
				yyval.Node = _astFactory.Call(yypos, new TranslatedQualifiedName(name, value_stack.array[value_stack.top-2].yypos, name, null), new CallSignature(value_stack.array[value_stack.top-1].yyval.ParamList, value_stack.array[value_stack.top-1].yypos) { Position = value_stack.array[value_stack.top-1].yypos }, VerifyMemberOf(value_stack.array[value_stack.top-4].yyval.Node));
			}
			else
				yyval.Node = _astFactory.Call(yypos, (LangElement)value_stack.array[value_stack.top-2].yyval.Object, new CallSignature(value_stack.array[value_stack.top-1].yyval.ParamList, value_stack.array[value_stack.top-1].yypos) { Position = value_stack.array[value_stack.top-1].yypos }, VerifyMemberOf(value_stack.array[value_stack.top-4].yyval.Node));
		}
        return;
      case 442: // callable_variable -> function_call 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 443: // variable -> callable_variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 444: // variable -> static_member 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 445: // variable -> dereferencable T_OBJECT_OPERATOR property_name 
{ yyval.Node = CreateProperty(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Object); }
        return;
      case 446: // simple_variable -> T_VARIABLE 
{ yyval.Node = _astFactory.Variable(yypos, value_stack.array[value_stack.top-1].yyval.String,	NullLangElement, true); }
        return;
      case 447: // simple_variable -> '$' '{' expr '}' 
{ yyval.Node = _astFactory.Variable(yypos, _astFactory.EncapsedExpression(Span.Combine(value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-2].yyval.Node, Tokens.T_LBRACE), NullLangElement); }
        return;
      case 448: // simple_variable -> '$' simple_variable 
{ yyval.Node = _astFactory.Variable(yypos, value_stack.array[value_stack.top-1].yyval.Node, NullLangElement); }
        return;
      case 449: // static_member -> class_name T_DOUBLE_COLON simple_variable 
{ yyval.Node = CreateStaticProperty(yypos, value_stack.array[value_stack.top-3].yyval.TypeReference, value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 450: // static_member -> variable_class_name T_DOUBLE_COLON simple_variable 
{ yyval.Node = CreateStaticProperty(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 451: // new_variable -> simple_variable 
{ yyval.Node = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 452: // new_variable -> new_variable '[' optional_expr ']' 
{ yyval.Node = _astFactory.ArrayItem(yypos, false, value_stack.array[value_stack.top-4].yyval.Node, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 453: // new_variable -> new_variable '{' expr '}' 
{ yyval.Node = _astFactory.ArrayItem(yypos, true, value_stack.array[value_stack.top-4].yyval.Node, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 454: // new_variable -> new_variable T_OBJECT_OPERATOR property_name 
{ yyval.Node = CreateProperty(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Object); }
        return;
      case 455: // new_variable -> class_name T_DOUBLE_COLON simple_variable 
{ yyval.Node = CreateStaticProperty(yypos, value_stack.array[value_stack.top-3].yyval.TypeReference, value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 456: // new_variable -> new_variable T_DOUBLE_COLON simple_variable 
{ yyval.Node = CreateStaticProperty(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 457: // member_name -> identifier 
{ yyval.Object = new Name(value_stack.array[value_stack.top-1].yyval.String); }
        return;
      case 458: // member_name -> '{' expr '}' 
{ yyval.Object = _astFactory.EncapsedExpression(yypos, value_stack.array[value_stack.top-2].yyval.Node, Tokens.T_LBRACE); }
        return;
      case 459: // member_name -> simple_variable 
{ yyval.Object = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 460: // property_name -> T_STRING 
{ yyval.Object = new Name(value_stack.array[value_stack.top-1].yyval.String); }
        return;
      case 461: // property_name -> '{' expr '}' 
{ yyval.Object = _astFactory.EncapsedExpression(yypos, value_stack.array[value_stack.top-2].yyval.Node, Tokens.T_LBRACE); }
        return;
      case 462: // property_name -> simple_variable 
{ yyval.Object = value_stack.array[value_stack.top-1].yyval.Node; }
        return;
      case 463: // array_pair_list -> non_empty_array_pair_list 
{ yyval.ItemList = value_stack.array[value_stack.top-1].yyval.ItemList;  }
        return;
      case 464: // possible_array_pair -> 
{ yyval.Item = null; }
        return;
      case 465: // possible_array_pair -> array_pair 
{ yyval.Item = value_stack.array[value_stack.top-1].yyval.Item; }
        return;
      case 466: // non_empty_array_pair_list -> non_empty_array_pair_list ',' possible_array_pair 
{ yyval.ItemList = AddToList<Item>(value_stack.array[value_stack.top-3].yyval.ItemList, value_stack.array[value_stack.top-1].yyval.Item); }
        return;
      case 467: // non_empty_array_pair_list -> possible_array_pair 
{ yyval.ItemList = new List<Item>() { value_stack.array[value_stack.top-1].yyval.Item }; }
        return;
      case 468: // array_pair -> expr T_DOUBLE_ARROW expr 
{ yyval.Item = _astFactory.ArrayItemValue(yypos, value_stack.array[value_stack.top-3].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 469: // array_pair -> expr 
{ yyval.Item = _astFactory.ArrayItemValue(yypos, null, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 470: // array_pair -> expr T_DOUBLE_ARROW '&' variable 
{ yyval.Item = _astFactory.ArrayItemRef(yypos, value_stack.array[value_stack.top-4].yyval.Node, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 471: // array_pair -> '&' variable 
{ yyval.Item = _astFactory.ArrayItemRef(yypos, null, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 472: // array_pair -> expr T_DOUBLE_ARROW T_LIST '(' array_pair_list ')' 
{ yyval.Item = _astFactory.ArrayItemValue(yypos, value_stack.array[value_stack.top-6].yyval.Node, _astFactory.List(Span.Combine(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-2].yyval.ItemList, true)); }
        return;
      case 473: // array_pair -> T_LIST '(' array_pair_list ')' 
{ yyval.Item = _astFactory.ArrayItemValue(yypos, null, _astFactory.List(Span.Combine(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-1].yypos), value_stack.array[value_stack.top-2].yyval.ItemList, true)); }
        return;
      case 474: // encaps_list -> encaps_list encaps_var 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-2].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 475: // encaps_list -> encaps_list T_ENCAPSED_AND_WHITESPACE 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-2].yyval.NodeList, _astFactory.Literal(value_stack.array[value_stack.top-1].yypos, value_stack.array[value_stack.top-1].yyval.Strings.Key, _lexer.TokenText)); }
        return;
      case 476: // encaps_list -> encaps_var 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 477: // encaps_list -> T_ENCAPSED_AND_WHITESPACE encaps_var 
{ yyval.NodeList = new List<LangElement>() { _astFactory.Literal(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.Strings.Key, value_stack.array[value_stack.top-2].yyval.Strings.Value), value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 478: // encaps_var -> T_VARIABLE 
{ yyval.Node = _astFactory.Variable(yypos, value_stack.array[value_stack.top-1].yyval.String, NullLangElement, true); }
        return;
      case 479: // encaps_var -> T_VARIABLE '[' encaps_var_offset ']' 
{ yyval.Node = _astFactory.ArrayItem(yypos, false,
					_astFactory.Variable(value_stack.array[value_stack.top-4].yypos, value_stack.array[value_stack.top-4].yyval.String, NullLangElement, true), value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 480: // encaps_var -> T_VARIABLE T_OBJECT_OPERATOR T_STRING 
{ yyval.Node = CreateProperty(yypos, _astFactory.Variable(value_stack.array[value_stack.top-3].yypos, value_stack.array[value_stack.top-3].yyval.String, NullLangElement, true), new Name(value_stack.array[value_stack.top-1].yyval.String)); }
        return;
      case 481: // encaps_var -> T_DOLLAR_OPEN_CURLY_BRACES expr '}' 
{ yyval.Node = _astFactory.EncapsedExpression(yypos, _astFactory.Variable(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.Node, NullLangElement), Tokens.T_DOLLAR_OPEN_CURLY_BRACES); }
        return;
      case 482: // encaps_var -> T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '}' 
{ yyval.Node = _astFactory.EncapsedExpression(yypos, _astFactory.Variable(value_stack.array[value_stack.top-2].yypos, value_stack.array[value_stack.top-2].yyval.String, NullLangElement, false), Tokens.T_DOLLAR_OPEN_CURLY_BRACES); }
        return;
      case 483: // encaps_var -> T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' expr ']' '}' 
{ yyval.Node = _astFactory.EncapsedExpression(yypos, _astFactory.ArrayItem(Span.Combine(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-2].yypos), false,
					_astFactory.Variable(value_stack.array[value_stack.top-5].yypos, value_stack.array[value_stack.top-5].yyval.String, NullLangElement, false), value_stack.array[value_stack.top-3].yyval.Node), Tokens.T_DOLLAR_OPEN_CURLY_BRACES); }
        return;
      case 484: // encaps_var -> T_CURLY_OPEN variable '}' 
{ yyval.Node = _astFactory.EncapsedExpression(yypos, value_stack.array[value_stack.top-2].yyval.Node, Tokens.T_LBRACE); }
        return;
      case 485: // encaps_var_offset -> T_STRING 
{ yyval.Node = _astFactory.Literal(yypos, value_stack.array[value_stack.top-1].yyval.String, _lexer.TokenText); }
        return;
      case 486: // encaps_var_offset -> T_NUM_STRING 
{ yyval.Node = _astFactory.Literal(yypos, value_stack.array[value_stack.top-1].yyval.Long, _lexer.TokenText); }
        return;
      case 487: // encaps_var_offset -> T_VARIABLE 
{ yyval.Node = _astFactory.Variable(yypos, value_stack.array[value_stack.top-1].yyval.String, NullLangElement, true); }
        return;
      case 488: // internal_functions_in_yacc -> T_ISSET '(' isset_variables possible_comma ')' 
{ yyval.Node = _astFactory.Isset(yypos, AddTrailingComma(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-2].yyval.Bool)); }
        return;
      case 489: // internal_functions_in_yacc -> T_EMPTY '(' expr ')' 
{ yyval.Node = _astFactory.Empty(yypos, value_stack.array[value_stack.top-2].yyval.Node);}
        return;
      case 490: // internal_functions_in_yacc -> T_INCLUDE expr 
{ yyval.Node = _astFactory.Inclusion(yypos, isConditional, InclusionTypes.Include, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 491: // internal_functions_in_yacc -> T_INCLUDE_ONCE expr 
{ yyval.Node = _astFactory.Inclusion(yypos, isConditional, InclusionTypes.IncludeOnce, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 492: // internal_functions_in_yacc -> T_EVAL '(' expr ')' 
{ yyval.Node = _astFactory.Eval(yypos, value_stack.array[value_stack.top-2].yyval.Node); }
        return;
      case 493: // internal_functions_in_yacc -> T_REQUIRE expr 
{ yyval.Node = _astFactory.Inclusion(yypos, isConditional, InclusionTypes.Require, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 494: // internal_functions_in_yacc -> T_REQUIRE_ONCE expr 
{ yyval.Node = _astFactory.Inclusion(yypos, isConditional, InclusionTypes.RequireOnce, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 495: // isset_variables -> isset_variable 
{ yyval.NodeList = new List<LangElement>() { value_stack.array[value_stack.top-1].yyval.Node }; }
        return;
      case 496: // isset_variables -> isset_variables ',' isset_variable 
{ yyval.NodeList = AddToList<LangElement>(value_stack.array[value_stack.top-3].yyval.NodeList, value_stack.array[value_stack.top-1].yyval.Node); }
        return;
      case 497: // isset_variable -> expr 
{ yyval.Node = CreateIssetVar(value_stack.array[value_stack.top-1].yyval.Node); }
        return;
    }
  }

  protected override string TerminalToString(int terminal)
  {
    if (((Tokens)terminal).ToString() != terminal.ToString())
      return ((Tokens)terminal).ToString();
    else
      return CharToString((char)terminal);
  }


}
}
